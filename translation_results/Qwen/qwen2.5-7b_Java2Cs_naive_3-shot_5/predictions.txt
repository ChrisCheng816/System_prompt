public void Serialize(LittleEndianOutput @out) {@out.WriteShort(field_1_vcenter);}
public void AddAll(BlockList<T> src){if (src.size == 0)return;int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++)AddAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);if (src.tailBlkIdx != 0)AddAll(src.tailBlock, 0, src.tailBlkIdx);}
public void WriteByte(byte b){if (upto == blockSize){if (currentBlock != null){AddBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}currentBlock[upto++] = b;}
public ObjectId GetObjectId() { return objectId; }
public virtual DeleteDomainEntryResponse DeleteDomainEntry(DeleteDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDomainEntryResponseUnmarshaller.Instance;return Invoke<DeleteDomainEntryResponse>(request, options);}
public long RamBytesUsed(){return ((termOffsets!=null)? termOffsets.RamBytesUsed() : 0) +((termsDictOffsets!=null)? termsDictOffsets.RamBytesUsed() : 0);}
public string GetFullMessage(){byte[] raw = buffer;int msgB = RawParseUtils.tagMessage(raw, 0); if (msgB < 0) { return ""; } return RawParseUtils.decode(guessEncoding(), raw, msgB, raw.Length);}
public POIFSFileSystem() : this(true){_header.SetBATCount(1);_header.SetBATArray(new int[] { 1 });BATBlock bb = BATBlock.CreateEmptyBATBlock(bigBlockSize, false);bb.SetOurBlockIndex(1);_bat_blocks.Add(bb);SetNextBlock(0, POIFSConstants.END_OF_CHAIN);SetNextBlock(1, POIFSConstants.FAT_SECTOR_BLOCK);_property_table.SetStartBlock(0);}
public void Init(int address) {贱价 = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];Debug.Assert(贱价 != null);upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;Debug.Assert(upto < slice.Length);}
public SubmoduleAddCommand SetPath(string path) {this.path = path;return this;}
public virtual ListIngestionsResponse ListIngestions(ListIngestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;return Invoke<ListIngestionsResponse>(request, options);}
public QueryParserTokenManager(CharStream stream, int lexState) : base(stream) { SwitchTo(lexState); }
public virtual GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetShardIteratorRequestMarshaller.Instance;options.ResponseUnmarshaller = GetShardIteratorResponseUnmarshaller.Instance;return Invoke<GetShardIteratorResponse>(request, options);}
public ModifyStrategyRequest() : base("aegis", "2016-11-11", "ModifyStrategy", "vipaegis"){Method = MethodType.POST;}
public bool Ready() {lock (lockObject) {if (inputStream == null) {throw new IOException("InputStreamReader is closed");}try {return bytes.HasRemaining || inputStream.Available > 0;} catch (IOException e) {return false;}}}
public EscherOptRecord GetOptRecord() {return _optRecord;}
public int Read(byte[] buffer, int offset, int length) {if (buffer == null) {throw new NullReferenceException("buffer == null");}System.Array.Copy(buffer, 0, buffer, offset, length);if (length == 0) {return 0;}int copylen = this.count - this.pos < length ? this.count - this.pos : length;for (int i = 0; i < copylen; i++) {buffer[offset + i] = (byte) this.buffer[i + this.pos];}this.pos += copylen;return copylen;}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}
public void Print(string str) {Write(str != null ? str : String.Empty);}
public class NotImplementedFunctionException : Exception{private string functionName;public NotImplementedFunctionException(string functionName, Exception cause): base(functionName, cause){this.functionName = functionName;}}
public object Next(){return base.NextEntry().Value;}
public final void ReadBytes(byte[] b, int offset, int len, bool useBuffer) throws IOException {int available = bufferLength - bufferPosition;if (len <= available) {if (len > 0) {Array.Copy(buffer, bufferPosition, b, offset, len);}bufferPosition += len;} else {if (available > 0) {Array.Copy(buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize) {Refill();if (bufferLength < len) {Array.Copy(buffer, 0, b, offset, bufferLength);throw new EOFException("read past EOF: " + this);} else {Array.Copy(buffer, 0, b, offset, len);bufferPosition = len;}} else {long after = bufferStart + bufferPosition + len;if (after > length()) {throw new EOFException("read past EOF: " + this);}ReadInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;}}}
public virtual TagQueueResponse TagQueue(TagQueueRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance;return Invoke<TagQueueResponse>(request, options);}
public void Remove(){throw new NotSupportedException();}
public CacheSubnetGroup ModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {request = BeforeClientExecution(request);return ExecuteModifyCacheSubnetGroup(request);}
public void SetParams(string params) {base.SetParams(params); language = country = variant = string.Empty; Stringtokenizer st = new Stringtokenizer(params,","); if (st.HasMoreTokens()) language = st.NextToken(); if (st.HasMoreTokens()) country = st.NextToken(); if (st.HasMoreTokens()) variant = st.NextToken();}
public virtual DeleteDocumentationVersionResponse DeleteDocumentationVersion(DeleteDocumentationVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationVersionResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationVersionResponse>(request, options);}
public bool Equals(object obj){if (!(obj is FacetLabel other)){return false;}if (length != other.length){return false;}for (int i = length - 1; i >= 0; i--){if (!components[i].Equals(other.components[i])){return false;}}return true;}
public GetInstanceAccessDetailsResponse GetInstanceAccessDetails(GetInstanceAccessDetailsRequest request){request = BeforeClientExecution(request);return ExecuteGetInstanceAccessDetails(request);}
public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.SetParent(this);shape.SetAnchor(anchor);shapes.Add(shape);OnCreate(shape);return shape;}
public string GetSheetName(int sheetIndex) {return GetBoundSheetRec(sheetIndex).Sheetname;}
public virtual GetDashboardResponse GetDashboard(GetDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDashboardResponseUnmarshaller.Instance;return Invoke<GetDashboardResponse>(request, options);}
public virtual AssociateSigninDelegateGroupsWithAccountResponse AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return Invoke<AssociateSigninDelegateGroupsWithAccountResponse>(request, options);}
public void AddMultipleBlanks(MulBlankRecord mbr){for (int j = 0; j < mbr.GetNumColumns(); j++){BlankRecord br = new BlankRecord();br.SetColumn((short)(j + mbr.GetFirstColumn()));br.SetRow(mbr.GetRow());br.SetXFIndex(mbr.GetXFAt(j));InsertCell(br);}}
public static string Quote(string input) {string sb = "\\Q";int apos = 0;int k;while ((k = input.IndexOf("\\E", apos)) >= 0) {sb += input.Substring(apos, k + 2) + "\\\\E\\Q";apos = k + 2;}return sb + input.Substring(apos) + "\\E";}
public void PutInt(int value) {throw new ReadOnlyBufferException();}
public ArrayPtg(object[,] values2d) {int nColumns = values2d.GetLength(1);int nRows = values2d.GetLength(0);_nColumns = (short) nColumns;_nRows = (short) nRows;object[] vv = new object[_nColumns * _nRows];for (int r=0; r<nRows; r++) {object[] rowData = values2d[r];for (int c=0; c<nColumns; c++) {vv[getValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public虚拟 GetIceServerConfigResponse GetIceServerConfig(GetIceServerConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetIceServerConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIceServerConfigResponseUnmarshaller.Instance;return Invoke<GetIceServerConfigResponse>(request, options);}
public string ToString() { return GetType().Name + " [" + getValueAsString() + "]"; }
public string ToString(string field) {return "ToChildBlockJoinQuery ("+parentQuery.ToString()+")"; }
public void IncRef() {refCount.IncrementAndGet();}
public virtual UpdateConfigurationSetSendingEnabledResponse UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationSetSendingEnabledResponse>(request, options);}
public int GetNextXBATChainOffset() {return GetXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}
public void MultiplyByPowerOfTen(int pow10){TenPower tp = TenPower.GetInstance(Math.Abs(pow10));if (pow10 < 0){MulShift(tp._divisor, tp._divisorShift);} else {MulShift(tp._multiplicand, tp._multiplierShift);}}
public string ToString(){StringBuilder b = new StringBuilder();int l = Length;b.Append(Path.DirectorySeparatorChar);for (int i = 0; i < l; i++){b.Append(GetComponent(i));if (i < l - 1){b.Append(Path.DirectorySeparatorChar);}}return b.ToString();}
public InstanceProfileCredentialsProvider WithFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.SetRoleName(roleName);return this;}
public void SetProgressMonitor(ProgressMonitor pm) {progressMonitor = pm;}
public void Reset() {if (!First()) {ptr = 0;if (!Eof())ParseEntry();}}
public E Previous(){if (iterator.PreviousIndex() >= start){return iterator.Previous();}throw new NoSuchElementException();}
public string GetNewPrefix() { return this.newPrefix; }
public int IndexOfValue(int value) {for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;return -1;}
public List<CharsRef> uniqueStems(char word[], int length) {List<CharsRef> stems = stem(word, length);if (stems.Count < 2) {return stems;}CharArraySet terms = new CharArraySet(8, dictionary.ignoreCase);List<CharsRef> deduped = new List<CharsRef>();foreach (CharsRef s in stems) {if (!terms.Contains(s)) {deduped.Add(s);terms.Add(s);}}return deduped;}
public virtual GetGatewayResponsesResponse GetGatewayResponses(GetGatewayResponsesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance;return Invoke<GetGatewayResponsesResponse>(request, options);}
public void SetPosition(long pos){currentBlockIndex = (int)(pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int)(pos & blockMask);}
public long Skip(long n) {int s = (int)Math.Min(Available(), Math.Max(0, n));ptr += s;return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {SetBootstrapActionConfig(bootstrapActionConfig);}
public void Serialize(LittleEndianOutput output) {output.WriteShort(field_1_row);output.WriteShort(field_2_col);output.WriteShort(field_3_flags);output.WriteShort(field_4_shapeid);output.WriteShort((short)field_6_author.Length);output.WriteByte(field_5_hasMultibyte ? (byte)0x01 : (byte)0x00);if (field_5_hasMultibyte) {StringUtil.PutUnicodeLE(field_6_author, output);} else {StringUtil.PutCompressedUnicode(field_6_author, output);}if (field_7_padding != null) {output.WriteByte((byte)field_7_padding.Value);}}
public int LastIndexOf(string String) {return LastIndexOf(String, Count);}
public bool Add(E obj) { return AddLastImpl(obj); }
public void UnsetSection(string section, string subsection){ConfigSnapshot src, res;do{src = state.Get();res = unsetSection(src, section, subsection);} while (!state.CompareAndSet(src, res));}
public string GetTagName() {return tagName;}
public void AddSubRecord(int index, SubRecord element) {subrecords.Insert(index, element);}
public bool Remove(object o) {lock (mutex) {return delegate().Remove(o);}}
public ICSharpCode.NRefactory.CSharp.Name create(TokenStream input) { return new DoubleMetaphoneFilter(input, maxCodeLength, inject); }
public long Length() { return InCoreLength(); }
public void SetValue(bool newValue) {value = newValue;}
public Pair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}
public int Get(int i) { if (count <= i) throw new IndexOutOfRangeException(i); return entries[i]; }
public CreateRepoRequest() : base("cr", "2016-06-07", "CreateRepo", "cr") {setUriPattern("/repos");setMethod(MethodType.PUT);}
public bool IsDeltaBaseAsOffset(){return this.deltaBaseAsOffset;}
public void Remove() {if (expectedModCount == list.modCount) {if (lastLink != null) {Link<ET> next = lastLink.next;Link<ET> previous = lastLink.previous;next.previous = previous;previous.next = next;if (lastLink == link) {pos--;}link = previous;lastLink = null;expectedModCount++;list.size--;list.modCount++;} else {throw new InvalidOperationException();}} else {throw new InvalidOperationException();}}
public virtual MergeShardsResponse MergeShards(MergeShardsRequest request){var options = new InvokeOptions();options.RequestMarshaller = MergeShardsRequestMarshaller.Instance;options.ResponseUnmarshaller = MergeShardsResponseUnmarshaller.Instance;return Invoke<MergeShardsResponse>(request, options);}
public virtual AllocateHostedConnectionResponse AllocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;return Invoke<AllocateHostedConnectionResponse>(request, options);}
public int BeginIndex { get { return start; } }
public static WeightedTerm[] GetTerms(Query query){return GetTerms(query, false);}
public ReadOnlyMemory<byte> Compact() => throw new ReadOnlyBufferException();
public void Decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {var byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >> 2;var byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >> 4);var byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >> 6);values[valuesOffset++] = byte2 & 63;}}
public string GetHumanishName() {string s = GetPath();if ("/".Equals(s) || "".Equals(s)) s = GetHost();if (s == null) throw new ArgumentException();string[] elements;if ("file".Equals(Scheme) || LOCAL_FILE.IsMatch(s)) elements = s.Split(new char[] { Path.DirectorySeparatorChar, '/' }, StringSplitOptions.RemoveEmptyEntries); else elements = s.Split(new string[] { "/" }, StringSplitOptions.RemoveEmptyEntries); if (elements.Length == 0) throw new ArgumentException();string result = elements[elements.Length - 1];if (Constants.DOT_GIT.Equals(result)) result = elements[elements.Length - 2]; else if (result.EndsWith(Constants.DOT_GIT_EXT)) result = result.Substring(0, result.Length - Constants.DOT_GIT_EXT.Length()); return result;}
public virtual DescribeNotebookInstanceLifecycleConfigResponse DescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance;return Invoke<DescribeNotebookInstanceLifecycleConfigResponse>(request, options);}
public string GetAccessKeySecret() { return this.accessKeySecret; }
public virtual CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpnConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnConnectionResponseUnmarshaller.Instance;return Invoke<CreateVpnConnectionResponse>(request, options);}
public virtual DescribeVoicesResponse DescribeVoices(DescribeVoicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVoicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVoicesResponseUnmarshaller.Instance;return Invoke<DescribeVoicesResponse>(request, options);}
public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance;return Invoke<ListMonitoringExecutionsResponse>(request, options);}
public DescribeJobRequest(string vaultName, string jobId) {SetVaultName(vaultName);SetJobId(jobId);}
public EscherRecord GetEscherRecord(int index){return escherRecords[index];}
public virtual GetApisResponse GetApis(GetApisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApisResponseUnmarshaller.Instance;return Invoke<GetApisResponse>(request, options);}
public virtual DeleteSmsChannelResponse DeleteSmsChannel(DeleteSmsChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteSmsChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteSmsChannelResponseUnmarshaller.Instance;return Invoke<DeleteSmsChannelResponse>(request, options);}
public TrackingRefUpdate GetTrackingRefUpdate() { return trackingRefUpdate; }
public void Print(bool b) { Print(b.ToString()); }
public QueryNode getChild() {return Children[0];}
public NotIgnoredFilter(int workdirTreeIndex) {this.index = workdirTreeIndex;}
public AreaRecord(RecordInputStream in) {field_1_formatFlags = in.readShort();}
public GetThumbnailRequest() : base("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
public virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTransitGatewayVpcAttachmentsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.Instance;return Invoke<DescribeTransitGatewayVpcAttachmentsResponse>(request, options);}
public virtual PutVoiceConnectorStreamingConfigurationResponse PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;return Invoke<PutVoiceConnectorStreamingConfigurationResponse>(request, options);}
public OrdRange GetOrdRange(string dim) {return prefixToOrdRange[dim];}
public string ToString() { string symbol = ""; if (startIndex >= 0 && startIndex < GetInputStream().Size) { symbol = GetInputStream().GetText(new Interval(startIndex, startIndex)); symbol = Utils.EscapeWhitespace(symbol, false); } return string.Format(CultureInfo.CurrentCulture, "{0}('{1}')", LexerNoViableAltException.GetType().getSimpleName(), symbol);}
public E Peek() { return PeekFirstImpl(); }
public virtual CreateWorkspacesResponse CreateWorkspaces(CreateWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance;return Invoke<CreateWorkspacesResponse>(request, options);}
public NumberFormatIndexRecord Clone() {return Copy();}
public virtual DescribeRepositoriesResponse DescribeRepositories(DescribeRepositoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.Instance;return Invoke<DescribeRepositoriesResponse>(request, options);}
public SparseIntArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}
public HyphenatedWordsFilter Create(TokenStream input) { return new HyphenatedWordsFilter(input); }
public virtual CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateDistributionWithTagsResponse>(request, options);}
public RandomAccessFile(string fileName, string mode) : this(new FileInfo(fileName), mode) { }
public DeleteWorkspaceImageResponse DeleteWorkspaceImage(DeleteWorkspaceImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteWorkspaceImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteWorkspaceImageResponseUnmarshaller.Instance;return Invoke<DeleteWorkspaceImageResponse>(request, options);}
public static string ToHex(long value) {StringBuilder sb = new StringBuilder(16);WriteHex(sb, value, 16, "");return sb.ToString();}
public virtual UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDistributionResponseUnmarshaller.Instance;return Invoke<UpdateDistributionResponse>(request, options);}
public HSSFColor getColor(short index){if (index == HSSFColorPredefined.AUTOMATIC.Index) {return HSSFColorPredefined.AUTOMATIC.Color;}byte[] b = _palette.getColor(index);return (b == null) ? null : new CustomColor(index, b);}
public virtual ValueEval Evaluate(ValueEval[] operands, int srcRow, int srcCol) {throw new NotImplementedFunctionException(_functionName);}
public void Serialize(LittleEndianOutput out) {out.WriteShort((short)field_1_number_crn_records);out.WriteShort((short)field_2_sheet_table_index);}
public DescribeDBEngineVersionsResponse DescribeDBEngineVersions(){return DescribeDBEngineVersions(new DescribeDBEngineVersionsRequest());}
public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}
public static byte[] ToBigEndianUtf16Bytes(char[] chars, int offset, int length){byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i){char ch = chars[i];result[resultIndex++] = (byte)(ch >> 8);result[resultIndex++] = (byte)ch;}return result;}
public virtual UploadArchiveResponse UploadArchive(UploadArchiveRequest request){var options = new InvokeOptions();options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;return Invoke<UploadArchiveResponse>(request, options);}
public virtual List<Token> GetHiddenTokensToLeft(int tokenIndex) {return GetHiddenTokensToLeft(tokenIndex, -1);}
public override bool Equals(object obj) {if (this == obj)return true;if (!base.Equals(obj))return false;if (GetType() != obj.GetType())return false;AutomatonQuery other = (AutomatonQuery) obj;if (!compiled.Equals(other.compiled))return false;if (term == null) {if (other.term != null)return false;} else if (!term.Equals(other.term))return false;return true;}
public SpanQuery MakeSpanClause() {SpanQuery[] spanQueries = new SpanQuery[size()];IEnumerator<SpanQuery> sqi = weightBySpanQuery.Keys.GetEnumerator();int i = 0;while (sqi.MoveNext()) {SpanQuery sq = sqi.Current;float boost = weightBySpanQuery[sq];if (boost != 1f) {sq = new SpanBoostQuery(sq, boost);}spanQueries[i++] = sq;}if (spanQueries.Length == 1)return spanQueries[0];elsereturn new SpanOrQuery(spanQueries);}
public StashCreateCommand StashCreate() {return new StashCreateCommand(repo);}
public FieldInfo FieldInfo(string fieldName) { return byName[fieldName]; }
public virtual DescribeEventSourceResponse DescribeEventSource(DescribeEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeEventSourceResponseUnmarshaller.Instance;return Invoke<DescribeEventSourceResponse>(request, options);}
public GetDocumentAnalysisResponse GetDocumentAnalysis(GetDocumentAnalysisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentAnalysisResponseUnmarshaller.Instance;return Invoke<GetDocumentAnalysisResponse>(request, options);}
public virtual CancelUpdateStackResponse CancelUpdateStack(CancelUpdateStackRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CancelUpdateStackRequestMarshaller.Instance;options.ResponseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;return Invoke<CancelUpdateStackResponse>(request, options);}
public virtual ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;return Invoke<ModifyLoadBalancerAttributesResponse>(request, options);}
public void SetInstanceProtection(SetInstanceProtectionRequest request){request = BeforeClientExecution(request);ExecuteSetInstanceProtection(request);}
public virtual ModifyDBProxyResponse ModifyDBProxy(ModifyDBProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBProxyResponseUnmarshaller.Instance;return Invoke<ModifyDBProxyResponse>(request, options);}
public void Add(char[] output, int offset, int len, int endOffset, int posLength){if (count == outputs.Length){outputs = ArrayUtil.Grow(outputs, count + 1);}if (count == endOffsets.Length){var next = new int[ArrayUtil.Oversize(1 + count, sizeof(int))];Array.Copy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.Length){var next = new int[ArrayUtil.Oversize(1 + count, sizeof(int))];Array.Copy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null){outputs[count] = new CharsRefBuilder();}outputs[count].CopyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}
public FetchLibrariesRequest () {this("CloudPhoto", "2017-07-11", "FetchLibraries", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public bool Exists() {return fs.Exists(objects);}
public FilterOutputStream(OutputStream out){this.out = out;}
public ScaleClusterRequest() : base("CS", "2015-12-15", "ScaleCluster", "csk") {SetUriPattern("/clusters/[ClusterId]");SetMethod(MethodType.PUT);}
public TimeConstraint CreateTimeConstraint(int operatorType, string formula1, string formula2) { return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2); }
public virtual ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectParentPathsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectParentPathsResponseUnmarshaller.Instance;return Invoke<ListObjectParentPathsResponse>(request, options);}
public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeCacheSubnetGroupsResponse>(request, options);}
public void SetSharedFormula(bool flag){field_5_options = flags.setShortBoolean(field_5_options, flag);}
public bool IsReuseObjects() { return reuseObjects; }
public ErrorNode AddErrorNode(Token badToken) {ErrorNodeImpl t = new ErrorNodeImpl(badToken);AddAnyChild(t);t.SetParent(this);return t;}
public LatvianStemFilterFactory(IDictionary<string, string> args) : base(args){if (!args.IsNullOrEmpty()){throw new ArgumentException("Unknown parameters: " + string.Join(", ", args));}}
public virtual EventSubscription RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){throw new NotImplementedException();}
public static TokenFilterFactory ForName(string name, Dictionary<string, string> args) { return loader.NewInstance(name, args); }
public AddAlbumPhotosRequest() : base("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto") {setProtocol(ProtocolType.HTTPS);}
public virtual GetThreatIntelSetResponse GetThreatIntelSet(GetThreatIntelSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;return Invoke<GetThreatIntelSetResponse>(request, options);}
public RevFilter clone(){return new Binary(a.clone(), b.clone());}
public bool Equals( object o ) {return o is ArmenianStemmer;}
public virtual bool HasArray(){return ProtectedHasArray();}
public virtual UpdateContributorInsightsResponse UpdateContributorInsights(UpdateContributorInsightsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.Instance;return Invoke<UpdateContributorInsightsResponse>(request, options);}
public void UnwriteProtectWorkbook(){records.Remove(fileShare);records.Remove(writeProtect);fileShare = null;writeProtect = null;}
public SolrSynonymParser(bool dedup, bool expand, Analyzer analyzer) : base(dedup, analyzer) {this.expand = expand; }
public virtual RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return Invoke<RequestSpotInstancesResponse>(request, options);}
public byte[] GetObjectData() {return FindObjectRecord().GetObjectData();}
public virtual GetContactAttributesResponse GetContactAttributes(GetContactAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;return Invoke<GetContactAttributesResponse>(request, options);}
public override string ToString() { return GetKey() + ": " + GetValue(); }
public virtual ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTextTranslationJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTextTranslationJobsResponseUnmarshaller.Instance;return Invoke<ListTextTranslationJobsResponse>(request, options);}
public virtual GetContactMethodsResponse GetContactMethods(GetContactMethodsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactMethodsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactMethodsResponseUnmarshaller.Instance;return Invoke<GetContactMethodsResponse>(request, options);}
public static short LookupIndexByName(string name){FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);if (fd == null){fd = GetInstanceCetab().GetFunctionByNameInternal(name);if (fd == null){return -1;}}return (short)fd.GetIndex();}
public virtual DescribeAnomalyDetectorsResponse DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAnomalyDetectorsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAnomalyDetectorsResponseUnmarshaller.Instance;return Invoke<DescribeAnomalyDetectorsResponse>(request, options);}
public static string InsertId(string message, ObjectId changeId) {return InsertId(message, changeId, false);}
public long GetObjectSize(AnyObjectId objectId, int typeHint) { long sz = db.GetObjectSize(this, objectId); if (sz < 0) { if (typeHint == OBJ_ANY) throw new MissingObjectException(objectId.Copy(), JGitText.Get().UnknownObjectType2); throw new MissingObjectException(objectId.Copy(), typeHint); } return sz; }
public virtual ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request){var options = new InvokeOptions();options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance;options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance;return Invoke<ImportInstallationMediaResponse>(request, options);}
public virtual PutLifecycleEventHookExecutionStatusResponse PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResponseUnmarshaller.Instance;return Invoke<PutLifecycleEventHookExecutionStatusResponse>(request, options);}
public NumberPtg(LittleEndianInput input) : base(input.ReadDouble()) { }
public virtual GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFieldLevelEncryptionConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFieldLevelEncryptionConfigResponseUnmarshaller.Instance;return Invoke<GetFieldLevelEncryptionConfigResponse>(request, options);}
public virtual DescribeDetectorResponse DescribeDetector(DescribeDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDetectorResponseUnmarshaller.Instance;return Invoke<DescribeDetectorResponse>(request, options);}
public virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance;return Invoke<ReportInstanceStatusResponse>(request, options);}
public virtual DeleteAlarmResponse DeleteAlarm(DeleteAlarmRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAlarmRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAlarmResponseUnmarshaller.Instance;return Invoke<DeleteAlarmResponse>(request, options);}
public TokenStream Create(TokenStream input) { return new PortugueseStemFilter(input); }
public FtCblsSubRecord() {reserved = new byte[ENCODED_SIZE];}
public override bool Remove(object obj) {lock (mutex) {return c.Remove(obj);}}
public virtual GetDedicatedIpResponse GetDedicatedIp(GetDedicatedIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDedicatedIpRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDedicatedIpResponseUnmarshaller.Instance;return Invoke<GetDedicatedIpResponse>(request, options);}
public override string ToString() {return precedence + " >= _p";}
public virtual ListStreamProcessorsResponse ListStreamProcessors(ListStreamProcessorsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ListStreamProcessorsRequestMarshaller.Instance; options.ResponseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.Instance; return Invoke<ListStreamProcessorsResponse>(request, options); }
public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName) {setLoadBalancerName(loadBalancerName);setPolicyName(policyName);}
public WindowProtectRecord(int options) {_options = options;}
public UnbufferedCharStream(int bufferSize) {ResizeBuffer(bufferSize);}
public virtual GetOperationsResponse GetOperations(GetOperationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOperationsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationsResponseUnmarshaller.Instance;return Invoke<GetOperationsResponse>(request, options);}
public void CopyRawTo(byte[] b, int o) {NB.encodeInt32(b, o, w1);NB.encodeInt32(b, o + 4, w2);NB.encodeInt32(b, o + 8, w3);NB.encodeInt32(b, o + 12, w4);NB.encodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in) {field_1_h_hold = in.ReadShort();field_2_v_hold = in.ReadShort();field_3_width = in.ReadShort();field_4_height = in.ReadShort();field_5_options = in.ReadShort();field_6_active_sheet = in.ReadShort();field_7_first_visible_tab = in.ReadShort();field_8_num_selected_tabs = in.ReadShort();field_9_tab_width_ratio = in.ReadShort();}
public virtual StopWorkspacesResponse StopWorkspaces(StopWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;return Invoke<StopWorkspacesResponse>(request, options);}
public void Close() {if (isOpen) {isOpen = false;try {Dump();} finally {try {channel.Truncate(fileLength);} finally {try {channel.Close();} finally {fos.Close();}}}}}}
public virtual DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);}
public string GetPronunciation(int wordId, char[] surface, int off, int len) { return null; }
public string GetPath() {return pathStr;}
public static double Devsq(double[] v){double r = double.NaN;if (v != null && v.Length >= 1){double m = 0;double s = 0;int n = v.Length;for (int i = 0; i < n; i++){s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++){s += (v[i] - m) * (v[i] - m);}r = (n == 1) ? 0 : s;}return r;}
public virtual DescribeResizeResponse DescribeResize(DescribeResizeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResizeRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResizeResponseUnmarshaller.Instance;return Invoke<DescribeResizeResponse>(request, options);}
public final bool HasPassedThroughNonGreedyDecision() {return passedThroughNonGreedyDecision;}
public int End() {return End(0);}
public void Traverse(CellHandler handler){int firstRow = range.GetFirstRow();int lastRow = range.GetLastRow();int firstColumn = range.GetFirstColumn();int lastColumn = range.GetLastColumn();var width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();Row currentRow = null;Cell currentCell = null;for (ctx.RowNumber = firstRow; ctx.RowNumber <= lastRow; ++ctx.RowNumber){currentRow = sheet.GetRow(ctx.RowNumber);if (currentRow == null){continue;}for (ctx.ColNumber = firstColumn; ctx.ColNumber <= lastColumn; ++ctx.ColNumber){currentCell = currentRow.GetCell(ctx.ColNumber);if (currentCell == null){continue;}if (IsEmpty(currentCell) && !traverseEmptyCells){continue;}long rowSize = ArithmeticUtils.MulAndCheck((long)ArithmeticUtils.SubAndCheck(ctx.RowNumber, firstRow), (long)width);ctx.OrdinalNumber = ArithmeticUtils.AddAndCheck(rowSize, (ctx.ColNumber - firstColumn + 1));handler.OnCell(currentCell, ctx);}}}
public int GetReadIndex() {return pos;}
public int CompareTo(ScoreTerm other) {if (this.boost == other.boost)return other.bytes.CompareTo(this.bytes);elsereturn this.boost.CompareTo(other.boost);}
public int Normalize(char[] s, int len) { for (int i = 0; i < len; i++) { switch (s[i]) { case '۰': case '۱': case '۲': case '۳': case '۴': case '۵': case '۶': case '۷': case '۸': case '۹': s[i] = (char)(s[i] - '۶'.ToString().charAt(0) + '₀'.ToString().charAt(0)); break; default: break; } } return len; }
public void Serialize(LittleEndianOutput out){out.WriteShort(_options);}
public DiagnosticErrorListener(bool exactOnly){this.exactOnly = exactOnly;}
public KeySchemaElement(string attributeName, KeyType keyType) { SetAttributeName(attributeName); SetKeyType(keyType.ToString()); }
public virtual GetAssignmentResponse GetAssignment(GetAssignmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;return Invoke<GetAssignmentResponse>(request, options);}
public bool HasObject(AnyObjectId id) {return FindOffset(id) != -1;}
public GroupingSearch SetAllGroups(bool allGroups) { this.allGroups = allGroups; return this; }
public void SetMultiValued(string dimName, bool v){DimConfig ft = fieldTypes[dimName];if (ft == null){ft = new DimConfig();fieldTypes[dimName] = ft;}ft.multiValued = v;}
public int GetCellsVal() {var enumerator = cells.Keys.GetEnumerator();int size = 0;while (enumerator.MoveNext()) {Character c = enumerator.Current;Cell e = At(c);if (e.cmd >= 0) {size++;}}return size;}
public virtual DeleteVoiceConnectorResponse DeleteVoiceConnector(DeleteVoiceConnectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorResponse>(request, options);}
public virtual DeleteLifecyclePolicyResponse DeleteLifecyclePolicy(DeleteLifecyclePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLifecyclePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLifecyclePolicyResponseUnmarshaller.Instance;return Invoke<DeleteLifecyclePolicyResponse>(request, options);}
public void Write(byte[] b){int len = b.Length;CheckPosition(len);Buffer.BlockCopy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}
public RebaseResult GetRebaseResult() {return this.rebaseResult;}
public static int GetNearestSetSize(int maxNumberOfValuesExpected, float desiredSaturation){for (int i = 0; i < usableBitSetSizes.Length; i++){int numSetBitsAtDesiredSaturation = (int)(usableBitSetSizes[i] * desiredSaturation);int estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(usableBitSetSizes[i], numSetBitsAtDesiredSaturation);if (estimatedNumUniqueValues > maxNumberOfValuesExpected){return usableBitSetSizes[i];}}return -1;}
public virtual DescribeDashboardResponse DescribeDashboard(DescribeDashboardRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return Invoke<DescribeDashboardResponse>(request, options);}
public virtual CreateSegmentResponse CreateSegment(CreateSegmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSegmentResponseUnmarshaller.Instance;return Invoke<CreateSegmentResponse>(request, options);}
public override string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[DBCELL]\n");buffer.Append("    .rowoffset = ").Append(HexDump.IntToHex(field_1_row_offset)).Append("\n");for (int k = 0; k < field_2_cell_offsets.Length; k++){buffer.Append("    .cell_").Append(k).Append(" = ").Append(HexDump.ShortToHex(field_2_cell_offsets[k])).Append("\n");}buffer.Append("[/DBCELL]\n");return buffer.ToString();}
public List<string> GetUndeletedList() { return undeletedList; }
public string ToString() => "[INTERFACEEND/]\n";
public Cloneable Clone() {return this;}
public PlainTextDictionary(TextReader reader){this.in = new StreamReader(reader);}
public StringBuilder Append(CharSequence csq) {if (csq == null) {AppendNull();} else {Append0(csq, 0, csq.Length());}return this;}
public virtual ListAssociatedStacksResponse ListAssociatedStacks(ListAssociatedStacksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance;return Invoke<ListAssociatedStacksResponse>(request, options);}
public static double Avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++) {s += v[i];}m = s / v.Length;s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++) {s += Math.Abs(v[i] - m);}r = s / v.Length;return r;}
public virtual DescribeByoipCidrsResponse DescribeByoipCidrs(DescribeByoipCidrsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeByoipCidrsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.Instance;return Invoke<DescribeByoipCidrsResponse>(request, options);}
public virtual GetDiskResponse GetDisk(GetDiskRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDiskRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDiskResponseUnmarshaller.Instance;return Invoke<GetDiskResponse>(request, options);}
public virtual DBClusterParameterGroupResponse CreateDBClusterParameterGroup(DBClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DBClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DBClusterParameterGroupResponseUnmarshaller.Instance;return Invoke<DBClusterParameterGroupResponse>(request, options);}
public static CharBuffer Wrap(char[] array, int start, int charCount){if ((start < 0) || (charCount < 0) || (start + charCount > array.Length)){throw new ArgumentException("Invalid offsets or length for the given array.");}CharBuffer buf = new ReadWriteCharArrayBuffer(array);buf.Position = start;buf.Limit = start + charCount;return buf;}
public SubmoduleStatusType GetType() { return type; }
public virtual DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;return Invoke<DescribeGameServerGroupResponse>(request, options);}
public Pattern Pattern { get; }
public V setValue(V object) {throw new System.NotImplementedException();}
public StringBuilder Stem(CharSequence word){CharSequence cmd = stemmer.GetLastOnPath(word);if (cmd == null){return null;}buffer.Clear();buffer.Append(word);Diff.Apply(buffer, cmd);if (buffer.Length > 0){return buffer;}else{return null;}}
public RenameFaceRequest() : base("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto") { Protocol = ProtocolType.HTTPS; }
public char requireChar(Dictionary<string,string> args, string name) {return require(args, name)[0];}
public static string ToStringTree(Tree t) {return ToStringTree(t, (List<string>)null);}
public override string ToString() {return "<deleted/>";}
public GetRepoWebhookLogListRequest() : base("cr", "2016-06-07", "GetRepoWebhookLogList", "cr") {setUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs");setMethod(MethodType.GET);}
public virtual GetJobUnlockCodeResponse GetJobUnlockCode(GetJobUnlockCodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobUnlockCodeRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobUnlockCodeResponseUnmarshaller.Instance;return Invoke<GetJobUnlockCodeResponse>(request, options);}
public RemoveTagsRequest(string resourceId) {SetResourceId(resourceId);}
public short GetGB2312Id(char ch){try{byte[] buffer = Encoding.GetEncoding("GB2312").GetBytes(ch.ToString());if (buffer.Length != 2){return -1;}int b0 = (buffer[0] & 0x0FF) - 161;int b1 = (buffer[1] & 0x0FF) - 161;return (short)(b0 * 94 + b1);}catch (UnsupportedEncodingException e){throw new RuntimeException(e);}}
public BatchRefUpdate AddCommand(IEnumerable<ReceiveCommand> cmd){commands.AddRange(cmd);return this;}
public short CheckExternSheet(int sheetNumber){return (short)getOrCreateLinkTable().CheckExternSheet(sheetNumber);}
override public bool Equals(object obj) {return c.Equals(obj);}
public BooleanQuery Build(QueryNode queryNode) { var andNode = queryNode as AnyQueryNode; var bQuery = new BooleanQuery.Builder(); var children = andNode?.Children; if (children != null) { foreach (var child in children) { var obj = child.Tag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID); if (obj != null) { var query = obj as Query; try { bQuery.Add(query, BooleanClause.Occur.SHOULD); } catch (TooManyClauses ex) { throw new QueryNodeException(new MessageImpl(QueryParserMessages.EMPTY_MESSAGE), ex); } } } } bQuery.MinimumNumberShouldMatch = andNode.MinimumMatchingElements; return bQuery.Build(); }
public virtual DescribeStreamProcessorResponse DescribeStreamProcessor(DescribeStreamProcessorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStreamProcessorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.Instance;return Invoke<DescribeStreamProcessorResponse>(request, options);}
public virtual DescribeDashboardPermissionsResult DescribeDashboardPermissions(DescribeDashboardPermissionsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeDashboardPermissionsRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeDashboardPermissionsResponseUnmarshaller.Instance; return Invoke<DescribeDashboardPermissionsResult>(request, options); }
public Ref Peel(Ref @ref) {try{return GetRefDatabase().Peel(@ref);}catch (IOException e){return @ref;}}
public long RamBytesUsed() {return RamUsageEstimator.AlignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + 2 * sizeof(int) + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.SizeOf(blocks);}
public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDomainSuggestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDomainSuggestionsResponseUnmarshaller.Instance;return Invoke<GetDomainSuggestionsResponse>(request, options);}
public virtual DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance;return Invoke<DescribeStackEventsResponse>(request, options);}
public void SetRule(int idx, ConditionalFormattingRule cfRule){SetRule(idx, (HSSFConditionalFormattingRule)cfRule);}
public virtual CreateResolverRuleResponse CreateResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverRuleResponseUnmarshaller.Instance;return Invoke<CreateResolverRuleResponse>(request, options);}
public SeriesIndexRecord(RecordInputStream in) {field_1_index = in.ReadShort();}
public GetStylesRequest() : base("lubancloud", "2018-05-09", "GetStyles", "luban") { SetMethod(MethodType.POST); }
public void Serialize(LittleEndianOutput out){out.WriteShort(field_1_gridset_flag);}
public bool Equals(object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (GetType() != obj.GetType()) {return false;}Toffs other = (Toffs) obj;if (GetStartOffset() != other.GetStartOffset()) {return false;}if (GetEndOffset() != other.GetEndOffset()) {return false;}return true;}
public virtual CreateGatewayGroupResponse CreateGatewayGroup(CreateGatewayGroupRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateGatewayGroupResponseUnmarshaller.Instance;return Invoke<CreateGatewayGroupResponse>(request, options);}
public virtual CreateParticipantConnectionResponse CreateParticipantConnection(CreateParticipantConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance;return Invoke<CreateParticipantConnectionResponse>(request, options);}
public static double IRR(double[] income) { return IRR(income, 0.1); }
public virtual RegisterWorkspaceDirectoryResponse RegisterWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<RegisterWorkspaceDirectoryResponse>(request, options);}
public RevertCommand Include(AnyObjectId commit) {return Include(commit.Name, commit);}
public abstract ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, IStaticValueEval inumberVE){ValueEval veText1;try{veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);}catch (EvaluationException e){return e.GetErrorEval();}string iNumber = OperandResolver.CoerceValueToString(veText1);Matcher m = COMPLEX_NUMBER_PATTERN.Matcher(iNumber);bool result = m.Matches();string imaginary = "";if (result){string imaginaryGroup = m.Group(5);bool hasImaginaryPart = imaginaryGroup.Equals("i") || imaginaryGroup.Equals("j");if (imaginaryGroup.Length == 0){return new StringEval("0");}if (hasImaginaryPart){string sign = "";string imaginarySign = m.Group(GROUP3_IMAGINARY_SIGN);if (imaginarySign.Length != 0 && !(imaginarySign.Equals("+"))){sign = imaginarySign;}string groupImaginaryNumber = m.Group(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE);if (groupImaginaryNumber.Length != 0){imaginary = sign + groupImaginaryNumber;}else{imaginary = sign + "1";}}else{return ErrorEval.NumError;}}else{return ErrorEval.NumError;}return new StringEval(imaginary);}
public E PollLast(){DictionaryEntry<E, object> entry = backingMap.PollLastEntry();return (entry == null) ? null : entry.Key;}
public ushort ReadUShort(){int ch1 = ReadUByte();int ch2 = ReadUByte();return (ushort)(((ch2 << 8) + (ch1 << 0)) & 0xFFFF);}
public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType) {SetSnapshotId(snapshotId);SetAttribute(attribute.ToString());SetOperationType(operationType.ToString());}
public virtual ListBonusPaymentsResponse ListBonusPayments(ListBonusPaymentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListBonusPaymentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListBonusPaymentsResponseUnmarshaller.Instance;return Invoke<ListBonusPaymentsResponse>(request, options);}
public V Get(CharSequence cs) {if (cs == null)throw new NullReferenceException();return default(V);}
public TokenFilter Create(TokenStream input) {CommonGramsFilter commonGrams = (CommonGramsFilter)base.Create(input);return new CommonGramsQueryFilter(commonGrams);}
public string GetPath(){return path;}
public virtual InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = InitiateMultipartUploadResponseUnmarshaller.Instance;return Invoke<InitiateMultipartUploadResponse>(request, options);}
public StringBuilder Insert(int offset, int i){Insert0(offset, i.ToString());return this;}
public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int) ((block >> shift) & 3);}}}
public TokenStream Create(TokenStream input) {return new ElisionFilter(input, articles);}
public bool Eat(Row in, int[] remap){int sum = 0;foreach (var c in in.Cells.Values){sum += c.Cnt;if (c.Ref >= 0){if (remap[c.Ref] == 0){c.Ref = -1;}}}int frame = sum / 10;bool live = false;foreach (var c in in.Cells.Values){if (c.Cnt < frame && c.Cmd >= 0){c.Cnt = 0;c.Cmd = -1;}if (c.Cmd >= 0 || c.Ref >= 0){live |= true;}}return !live;}
public Token GetToken(int index) {Token t = jj_lookingAhead ? jj_scanpos : token;for (int i = 0; i < index; i++) {if (t.next != null) t = t.next;else t = t.next = token_source.GetNextToken();}return t;}
public string ToString() {var sb = new StringBuilder();sb.Append(GetType().Name).Append(" [ARRAY]\n");sb.Append(" range=").Append(GetRange()).Append("\n");sb.Append(" options=").Append(HexDump.ShortToHex((short)_options)).Append("\n");sb.Append(" notUsed=").Append(HexDump.IntToHex(_field3notUsed)).Append("\n");sb.Append(" formula:").Append("\n");Ptg[] ptgs = _formula.GetTokens();for (int i = 0; i < ptgs.Length; i++) {Ptg ptg = ptgs[i];sb.Append(ptg).Append(ptg.GetRVAType()).Append("\n");}sb.Append("]");return sb.ToString();}
public virtual GetFolderResponse GetFolder(GetFolderRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFolderRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance;return Invoke<GetFolderResponse>(request, options);}
public override void Add(int location, E obj) {throw new NotSupportedException();}
public PositiveScoresOnlyCollector(Collector in) : base(in){}
public CreateRepoBuildRuleRequest() : base("cr", "2016-06-07", "CreateRepoBuildRule", "cr"){SetUriPattern("/repos/{RepoNamespace}/{RepoName}/rules");SetMethod(MethodType.PUT);}
public BaseRef(AreaEval ae) { _refEval = null; _areaEval = ae; _firstRowIndex = ae.FirstRow; _firstColumnIndex = ae.FirstColumn; _height = ae.LastRow - ae.FirstRow + 1; _width = ae.LastColumn - ae.FirstColumn + 1; }
public DrawingManager2(EscherDggRecord dgg) {this.dgg = dgg;}
public void Reset(){if (!First())Reset(raw);}
public virtual System.Text.Encoding Reset(){status = INIT;implReset();return this;}
public class BufferedReader : Reader{private Reader in;private char[] buf;public BufferedReader(Reader @in, int size){if (size <= 0){throw new ArgumentException("size <= 0");}this.in = @in;buf = new char[size];}}
public virtual DescribeCodeRepositoryResponse DescribeCodeRepository(DescribeCodeRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance;return Invoke<DescribeCodeRepositoryResponse>(request, options);}
public DBSubnetGroup CreateDBSubnetGroup(CreateDBSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBSubnetGroupResponseUnmarshaller.Instance;return Invoke<DBSubnetGroup>(request, options);}
public RenameBranchCommand SetOldName(string oldName) {CheckCallable(); this.oldName = oldName; return this;}
public DeleteBranchCommand SetForce(bool force) { CheckCallable(); this.force = force; return this; }
public virtual StopCompilationJobResponse StopCompilationJob(StopCompilationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopCompilationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopCompilationJobResponseUnmarshaller.Instance;return Invoke<StopCompilationJobResponse>(request, options);}
public final void IncrementSecondaryProgressBy(int diff) {mSecondaryProgress += diff;}
public byte[] Clear(){bytesStart = null;return bytesStart;}
public string GetRawPath() {return path;}
public GetUserSourceAccountRequest() : base("cr", "2016-06-07", "GetUserSourceAccount", "cr"){this.UrivityPattern = "/users/sourceAccount";this.Method = MethodType.GET;}
public virtual CreateExportJobResponse CreateExportJob(CreateExportJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExportJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.Instance;return Invoke<CreateExportJobResponse>(request, options);}
public virtual CreateDedicatedIpPoolResponse CreateDedicatedIpPool(CreateDedicatedIpPoolRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;return Invoke<CreateDedicatedIpPoolResponse>(request, options);}
public override bool Equals(object obj) { if (ReferenceEquals(this, obj)) { return true; } if (obj == null) { return false; } if (obj is HSSFCellStyle other) { if (_format == null) { if (other._format != null) { return false; } } else if (!_format.Equals(other._format)) { return false; } if (_index != other._index) { return false; } return true; } return false; }
public virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReleaseHostsRequestMarshaller.Instance;options.ResponseUnmarshaller = ReleaseHostsResponseUnmarshaller.Instance;return Invoke<ReleaseHostsResponse>(request, options);}
public override bool Equals(object obj) {if (this == obj) {return true;}if (obj is Set) {Set<object> s = (Set<object>) obj;try {return Size() == s.Size() && ContainsAll(s);} catch (NullReferenceException ignored) {return false;} catch (InvalidCastException ignored) {return false;}}return false;}
public void SetRefLogMessage(string msg, bool appendStatus) { customRefLog = true; if (msg == null && !appendStatus) { DisableRefLog(); } else if (msg == null && appendStatus) { refLogMessage = ""; refLogIncludeResult = true; } else { refLogMessage = msg; refLogIncludeResult = appendStatus; } }
public StreamIDRecord(RecordInputStream in) { idstm = in.ReadShort(); }
public RecognizeCarRequest() : base("visionai-poc", "2020-04-08", "RecognizeCar") { Method = MethodType.POST; }
public byte[] Order() { return BitConverter.GetBytes(BitConverter.IsLittleEndian); }
public int GetAheadCount() { return aheadCount; }
public bool IsNewFragment(){return false;}
public virtual GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.Instance;return Invoke<GetCloudFrontOriginAccessIdentityConfigResponse>(request, options);}
public bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return label == symbol;}
public virtual DeleteTransitGatewayResponse DeleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayResponseUnmarshaller.Instance;return Invoke<DeleteTransitGatewayResponse>(request, options);}
public static byte[] Grow(byte[] array, int minSize) {var size = array.Length;while (size < minSize) {size = Oversize(size, sizeof(byte));}Array.Resize(ref array, size);return array;}
public CreateTransactionRequest(): base("CloudPhoto", "2017-07-11", "CreateTransaction", "cloudphoto"){setProtocol(ProtocolType.HTTPS);}
public BatchRefUpdate SetRefLogIdent(PersonIdent pi){refLogIdent = pi;return this;}
public virtual GetLaunchTemplateDataResponse GetLaunchTemplateData(GetLaunchTemplateDataRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetLaunchTemplateDataRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLaunchTemplateDataResponseUnmarshaller.Instance;return Invoke<GetLaunchTemplateDataResponse>(request, options);}
public ParseInfo(ProfilingATNSimulator atnSimulator) {this.atnSimulator = atnSimulator;}
public SimpleQQParser(string[] qqNames, string indexField) {this.qqNames = qqNames;this.indexField = indexField;}
public DBCluster PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {request = BeforeClientExecution(request);return ExecutePromoteReadReplicaDBCluster(request);}
public virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCapacityReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCapacityReservationsResponseUnmarshaller.Instance;return Invoke<DescribeCapacityReservationsResponse>(request, options);}
public override string ToString() {return "IndexSearcher(" + reader + "; executor=" + executor + "; sliceExecutionControlPlane " + sliceExecutor + ")"; }
public final bool IncrementToken() { return false; }
public void Serialize(LittleEndianOutput @out){@out.WriteShort(main + 1);@out.WriteShort(subFrom);@out.WriteShort(subTo);}
public void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){if (bitsPerValue > 32){throw new NotSupportedException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i){long block = ReadLong(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}
public bool IsExpectedToken(int symbol){var atn = Interpreter.Atn;var ctx = _ctx;var s = atn.States[State];var following = atn.NextTokens(s);if (following.Contains(symbol)){return true;}if (!following.Contains(Token.Epsilon)){return false;}while (ctx != null && ctx.InvokingState >= 0 && following.Contains(Token.Epsilon)){var invokingState = atn.States[ctx.InvokingState];var rt = (RuleTransition)invokingState.Transitions[0];following = atn.NextTokens(rt.FollowState);if (following.Contains(symbol)){return true;}ctx = (ParserRuleContext)ctx.Parent;}if (following.Contains(Token.Epsilon) && symbol == Token.Eof){return true;}return false;}
public virtual UpdateStreamResponse UpdateStream(UpdateStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateStreamResponseUnmarshaller.Instance;return Invoke<UpdateStreamResponse>(request, options);}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0){try{ValueHelper.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;}catch(EvaluationException ex){int result = TranslateErrorCodeToErrorTypeValue(ex.GetErrorEval().GetErrorCode());return new NumberEval(result);}}
public override string ToString() { return GetType().Name + " [" + _index + " " + _name + "]"; }
public virtual ListAssignmentsForHITResponse ListAssignmentsForHIT(ListAssignmentsForHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<ListAssignmentsForHITResponse>(request, options);}
public virtual DeleteAccessControlRuleResponse DeleteAccessControlRule(DeleteAccessControlRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.Instance;return Invoke<DeleteAccessControlRuleResponse>(request, options);}
public Fst.Arc<Long> GetFirstArc(Fst.Arc<Long> arc) {return fst.GetFirstArc(arc);}
public void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {var block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (int)((block >> shift) & uint.MaxValue);}ائد
public long Skip(long charCount) {if (charCount < 0) {throw new ArgumentOutOfRangeException("charCount < 0: " + charCount);}lock (lock) {if (IsClosed) {throw new InvalidOperationException("The stream is closed.");}if (charCount == 0) {return 0;}long inSkipped;int availableFromBuffer = buf.Length - pos;if (availableFromBuffer > 0) {long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0) {pos += (int)charCount;return charCount;}pos += availableFromBuffer;inSkipped = in.Skip(requiredFromIn);} else {inSkipped = in.Skip(charCount);}return inSkipped + availableFromBuffer;}}
public Dictionary<string, Ref> GetRefsMap(){return advertisedRefs;}
public virtual UpdateApiKeyResponse UpdateApiKey(UpdateApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateApiKeyResponseUnmarshaller.Instance;return Invoke<UpdateApiKeyResponse>(request, options);}
public Stream OpenStream() {PackInputStream packIn;using (DfsReader ctx = db.NewReader()) {try {try {packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);ctx = null;} catch (IOException packGone) {ObjectId obj = pack.GetReverseIdx(ctx).FindObject(objectOffset);return ctx.Open(obj, type).OpenStream();}} finally {if (ctx != null) {ctx.Dispose();}}int bufsz = 8192;InputStream in = new BufferedInputStream(new InflaterInputStream(packIn, packIn.ctx.Inflater(), bufsz), bufsz);return new ObjectStream.Filter(type, size, in);}
public ArrayList() {array = EmptyArray.Object;}
public virtual UpdateDetectorVersionResponse UpdateDetectorVersion(UpdateDetectorVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDetectorVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.Instance;return Invoke<UpdateDetectorVersionResponse>(request, options);}
public void Resize() => Resize(Double.MaxValue);
public RevFlagSet(Collection<RevFlag> s) : this() {this.addAll(s);}
public int Size { get; private set; } = size;
public long GetLong(){int newPosition = position + SizeOf.LONG;if (newPosition > limit){throw new BufferUnderflowException();}long result = Memory.ReadLong(backingArray, offset + position, order);position = newPosition;return result;}
public StringBuilder Insert(int offset, long l) {Insert0(offset, l.ToString());return this;}
public TurkishLowerCaseFilter(TokenStream input) : base(input) { }
public ParseTreeMatch match(ParseTree tree, ParseTreePattern pattern){MultiMap<string, ParseTree> labels = new MultiMap<string, ParseTree>();ParseTree mismatchedNode = matchImpl(tree, pattern.GetPatternTree(), labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}
public void AddIfNoOverlap(WeightedPhraseInfo wpi){foreach (WeightedPhraseInfo existWpi in GetPhraseList()){if (existWpi.IsOffsetOverlap(wpi)){existWpi.GetTermsInfos().AddRange(wpi.GetTermsInfos());return;}}GetPhraseList().Add(wpi);}
public ThreeWayMerger NewMerger(Repository db) {return new InCoreMerger(db);}
public float DocScore(int docId, string field, int numPayloadsSeen, float payloadScore) {return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}
public IEnumerable<ParseTree> Evaluate(ParseTree t) {return Trees.FindAllRuleNodes(t, ruleIndex);}
public string ToString() {            var buffer = new StringBuilder();result += "[CFRULE]\n";result += "    .condition_type   =" + GetConditionType() + "\n";result += "    OPTION FLAGS=0x" + GetOptions().ToString("X") + "\n";if (ContainsFontFormattingBlock()) {                    result += _fontFormatting + "\n";                }if (ContainsBorderFormattingBlock()) {                    result += _borderFormatting + "\n";                }if (ContainsPatternFormattingBlock()) {                    result += _patternFormatting + "\n";                }result += "    Formula 1 =" + GetFormula1().GetTokens().GetRange(0, GetFormula1().GetTokens().Count).Aggregate("", (current, token) => current + (token + ",")) + "\n";result += "    Formula 2 =" + GetFormula2().GetTokens().GetRange(0, GetFormula2().GetTokens().Count).Aggregate("", (current, token) => current + (token + ",")) + "\n";result += "[/CFRULE]\n";return result;}
public virtual DescribeServiceUpdatesResponse DescribeServiceUpdates(DescribeServiceUpdatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance;return Invoke<DescribeServiceUpdatesResponse>(request, options);}
public string GetNameName(int index){return GetNameAt(index).GetNameName();}
public DescribeLocationsResponse DescribeLocations(){return DescribeLocations(new DescribeLocationsRequest());}
public string ToString() {return $"<phraseslop value='{GetValueString()}'>" + "\n" + getChild().ToString() + "\n</phraseslop>";}
public DirCacheEntry GetDirCacheEntry(){return currentSubtree == null ? currentEntry : null;}
public IntBuffer Put(int[] src, int srcOffset, int intCount) { Array.CheckOffsetAndCount(src.Length, srcOffset, intCount); if (intCount > Remaining()) { throw new BufferOverflowException(); } for (int i = srcOffset; i < srcOffset + intCount; ++i) { Put(src[i]); } return this;}
public void TrimToSize(){int s = Size;if (s == Array.Length){return;}if (s == 0){Array = EmptyArray.Object;} else {object[] newArray = new object[s];Array.Copy(Array, 0, newArray, 0, s);Array = newArray;}ModCount++;}
public virtual DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLocalGatewayVirtualInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeLocalGatewayVirtualInterfacesResponse>(request, options);}
public TokenStream Create(TokenStream input){return new RussianLightStemFilter(input);}
public int[] ToArray(final int[] a){int[] rval;if (a.Length == _limit){Array.Copy(_array, 0, a, 0, _limit);rval = a;}else{rval = ToArray();}return rval;}
public BasicSessionCredentials(string accessKeyId, string accessKeySecret, string sessionToken, long roleSessionDurationSeconds){if (accessKeyId == null){throw new ArgumentNullException("Access key ID cannot be null.");}if (accessKeySecret == null){throw new ArgumentNullException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = DateTimeOffset.UtcNow.ToUnixTimeMilliseconds();}
public sealed ShortBuffer Get(short[] dst, int dstOffset, int shortCount) {if (shortCount > Remaining()) {throw new BufferUnderflowException();}Array.Copy(backingArray, offset + position, dst, dstOffset, shortCount);position += shortCount;return this;}
public virtual ActivateEventSourceResponse ActivateEventSource(ActivateEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateEventSourceResponseUnmarshaller.Instance;return Invoke<ActivateEventSourceResponse>(request, options);}
public virtual DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReceiptRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReceiptRuleSetResponseUnmarshaller.Instance;return Invoke<DescribeReceiptRuleSetResponse>(request, options);}
public Filter(string name) { SetName(name); }
public DoubleBuffer Put(double c) {throw new ReadOnlyBufferException();}
public CreateTrafficPolicyInstanceResponse CreateTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyInstanceResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyInstanceResponse>(request, options);}
public JapaneseIterationMarkCharFilter(Reader input, bool normalizeKanji, bool normalizeKana) : base(input) {this.normalizeKanji = normalizeKanji; this.normalizeKana = normalizeKana; buffer.reset(input);}
public void WriteLong(long v){WriteInt((int)(v >>  0));WriteInt((int)(v >> 32));}
public FileResolver() {exports = new ConcurrentDictionary<string, object>();exportBase = new List<object>();}
public IValueEval GetRef3DEval(Ref3DPxg rptg) {SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.GetSheetName(), rptg.GetLastSheetName(), rptg.GetExternalWorkbookNumber());return new LazyRefEval(rptg.Row, rptg.Column, sre);}
public virtual DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDatasetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDatasetResponseUnmarshaller.Instance;return Invoke<DeleteDatasetResponse>(request, options);}
public virtual StartRelationalDatabaseResponse StartRelationalDatabase(StartRelationalDatabaseRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartRelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = StartRelationalDatabaseResponseUnmarshaller.Instance;return Invoke<StartRelationalDatabaseResponse>(request, options);}
public virtual DescribeReservedCacheNodesOfferingsResponse DescribeReservedCacheNodesOfferings(){return DescribeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}
static public double pmt(double r, int nper, double pv, double fv, int type) { return -r * (pv * Math.Pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.Pow(1 + r, nper) - 1)); }
public virtual DescribeDocumentVersionsResponse DescribeDocumentVersions(DescribeDocumentVersionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDocumentVersionsResponse>(request, options);}
public virtual ListPublishingDestinationsResponse ListPublishingDestinations(ListPublishingDestinationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListPublishingDestinationsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListPublishingDestinationsResponseUnmarshaller.Instance;return Invoke<ListPublishingDestinationsResponse>(request, options);}
public DeleteAccountAliasRequest(string accountAlias) {SetAccountAlias(accountAlias);}
public static long[] Grow(long[] array) { return Grow(array, 1 + array.Length); }
public string OutputToString(object output) {if (!(output is List)) {return Outputs.OutputToString((T) output);} else {List<T> outputList = (List<T>) output;StringBuilder b = new StringBuilder();b.Append('[');for(int i=0;i<outputList.Count;i++) {if (i > 0) {b.Append(", ");}b.Append(Outputs.OutputToString(outputList[i]));}b.Append(']');return b.ToString();}}
public void NotifyDeleteCell(Cell cell){_bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell((HSSFCell)cell));}
public StringBuilder Replace(int start, int end, string str) {Replace0(start, end, str);return this;}
public virtual SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;return Invoke<SetIdentityPoolConfigurationResponse>(request, options);}
public static double KthSmallest(double[] v, int k) {double r = double.NaN; int index = k - 1; if (v != null && v.Length > index && index >= 0) { Array.Sort(v); r = v[index]; } return r; }
public void Set(int index, long value){int o = index >> 5;int b = index & 31;int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}
public override string ToString() {if (this.Children == null || this.Children.Count == 0)return "<boolean operation='and'/>";StringBuilder sb = new StringBuilder();sb.Append("<boolean operation='and'>");foreach (QueryNode child in this.Children) {sb.Append("\n");sb.Append(child.ToString());}sb.Append("\n</boolean>");return sb.ToString();}
public int SumTokenSizes(int fromIx, int toIx){int result = 0;for (int i = fromIx; i < toIx; i++) {result += _ptgs[i].GetTokenSize();}return result;}
public void SetReadonly(bool readonly){if (this.readonly && !readonly) throw new InvalidOperationException("can't alter readonly IntervalSet");this.readonly = readonly;}
public void ClearConsumingCell(FormulaCellCacheEntry cce) {if (!_consumingCells.Remove(cce)) {throw new InvalidOperationException("Specified formula cell is not consumed by this cell");}}
public override IList<E> GetRange(int start, int end) {lock (mutex) {return new SynchronizedRandomAccessList<E>(list.GetRange(start, end), mutex);}}
public FileHeader GetFileHeader() {return file;}
public virtual AttachLoadBalancersResponse AttachLoadBalancers(AttachLoadBalancersRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachLoadBalancersResponseUnmarshaller.Instance;return Invoke<AttachLoadBalancersResponse>(request, options);}
public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters) {SetAccountId(accountId);SetVaultName(vaultName);SetJobParameters(jobParameters);}
public string ToString() {return "SPL";}
public ReplaceableAttribute(string name, string value, bool replace) {SetName(name);SetValue(value);SetReplace(replace);}
public void Add(IndexableField field) {fields.Add(field);}
public virtual DeleteStackSetResponse DeleteStackSet(DeleteStackSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteStackSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteStackSetResponseUnmarshaller.Instance;return Invoke<DeleteStackSetResponse>(request, options);}
public GetRepoBuildRuleListRequest() {base("cr", "2016-06-07", "GetRepoBuildRuleList", "cr");setUriPattern("/repos/{RepoNamespace}/{RepoName}/rules");setMethod(MethodEnum.GET);}
public SparseArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new object[initialCapacity];mSize = 0;}
public InvokeServiceRequest(): base("industry-brain", "2018-07-12", "InvokeService") { Method = MethodType.POST; }
public ListAlbumPhotosRequest() : base("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
public bool HasPrevious(){return link != list.voidLink;}
public virtual DeleteHsmConfigurationResponse DeleteHsmConfiguration(DeleteHsmConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteHsmConfigurationResponseUnmarshaller.Instance;return Invoke<DeleteHsmConfigurationResponse>(request, options);}
public CreateLoadBalancerRequest(string loadBalancerName) {SetLoadBalancerName(loadBalancerName);}
public string GetUserInfo(){return Decode(userInfo);}
public virtual TagAttendeeResponse TagAttendee(TagAttendeeRequest request) {var options = new InvokeOptions();options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance;options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance;return Invoke<TagAttendeeResponse>(request, options);}
public string GetRefName() {return name;}
public SpanNearQuery Build(){return new SpanNearQuery(clauses.ToArray(new SpanQuery[clauses.Count]), slop, ordered);}
public bool IsSubTotal(int rowIndex, int columnIndex) { return false; }
public virtual DescribeDBProxiesResponse DescribeDBProxies(DescribeDBProxiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBProxiesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBProxiesResponseUnmarshaller.Instance;return Invoke<DescribeDBProxiesResponse>(request, options);}
public virtual GetVoiceConnectorProxyResponse GetVoiceConnectorProxy(GetVoiceConnectorProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance;return Invoke<GetVoiceConnectorProxyResponse>(request, options);}
public WindowCacheConfig FromConfig(Config rc){setPackedGitUseStrongRefs(rc.GetBoolean(CONFIG_CORE_SECTION, CONFIG_KEY_PACKED_GIT_USE_STRONGREFS, isPackedGitUseStrongRefs()));setPackedGitOpenFiles(rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_OPENFILES, getPackedGitOpenFiles()));setPackedGitLimit(rc.GetLong(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_LIMIT, getPackedGitLimit()));setPackedGitWindowSize(rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_WINDOWSIZE, getPackedGitWindowSize()));setPackedGitMMAP(rc.GetBoolean(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_MMAP, isPackedGitMMAP()));setDeltaBaseCacheLimit(rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_DELTA_BASE_CACHE_LIMIT, getDeltaBaseCacheLimit()));long maxMem = Runtime.MaximumMemory;long sft = rc.GetLong(CONFIG_CORE_SECTION, null, CONFIG_KEY_STREAM_FILE_TRESHOLD, getStreamFileThreshold());sft = Math.Min(sft, maxMem / 4);sft = Math.Min(sft, (long)int.MaxValue);setStreamFileThreshold((int)sft);return this;}
public static DateTime GetJavaDate(double date) {return GetJavaDate(date, false, null, false);}
public virtual StartPersonTrackingResponse StartPersonTracking(StartPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = StartPersonTrackingResponseUnmarshaller.Instance;return Invoke<StartPersonTrackingResponse>(request, options);}
public override int Size { get { return totalSize; } }
public virtual GetRouteResponse GetRoute(GetRouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRouteResponseUnmarshaller.Instance;return Invoke<GetRouteResponse>(request, options);}
public virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance;return Invoke<DeleteClusterResponse>(request, options);}
public string ToString() {var buffer = new StringBuilder();buffer.Append("[MMS]\n");buffer.Append("    .addMenu        = ").Append(Integer.toHexString(GetAddMenuCount())).Append("\n");buffer.Append("    .delMenu        = ").Append(Integer.toHexString(GetDelMenuCount())).Append("\n");buffer.Append("[/MMS]\n");return buffer.ToString();}
public FileBasedConfig(Config base, FileSystemInfo cfgLocation, IFile fs) {base(base);configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.zeroId();}
public int Following(int pos){if (pos < text.BeginIndex || pos > text.EndIndex){throw new ArgumentException("offset out of bounds");}else if (sentenceStarts.Length == 0){text.Index = text.BeginIndex;return DONE;}else if (pos >= sentenceStarts[sentenceStarts.Length - 1]){text.Index = text.EndIndex;currentSentence = sentenceStarts.Length - 1;return DONE;}else{currentSentence = (sentenceStarts.Length - 1) / 2;MoveToSentenceAt(pos, 0, sentenceStarts.Length - 2);text.Index = sentenceStarts[++currentSentence];return Current();}}
public virtual UpdateParameterGroupResponse UpdateParameterGroup(UpdateParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.Instance;return Invoke<UpdateParameterGroupResponse>(request, options);}
public SeriesChartGroupIndexRecord Clone() {return Copy();}
public static double CalcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0.5) {throw new ArgumentException("distErrPct " + distErrPct + " must be between [0 to 0.5]");}if (distErrPct == 0 || shape is Point) {return 0;}Rectangle bbox = shape.GetBoundingBox();Point ctr = bbox.GetCenter();double y = (ctr.Y >= 0 ? bbox.MaxY : bbox.MinY);double diagonalDist = ctx.GetDistCalc().Distance(ctr, bbox.MaxX, y);return diagonalDist * distErrPct;}
public int CodePointAt(int index) {if (index < 0 || index >= count) {throw new IndexAndLength(index);}return char.ConvertToUtf32(value, index);}
public void SetPasswordVerifier(int passwordVerifier) {this.passwordVerifier = passwordVerifier;}
public ListVaultsRequest(string accountId) {setAccountId(accountId);}
public SquashMessageFormatter() {dateFormatter = new GitDateFormatter(Format.DEFAULT);}
public GetVideoCoverRequest() : base("CloudPhoto", "2017-07-11", "GetVideoCover", "cloudphoto") { SetProtocol(ProtocolType.HTTPS); }
public int LastIndexOf(object obj) {int pos = size;Link<E> link = voidLink.previous;if (obj != null) {while (link != voidLink) {pos--;if (obj.Equals(link.data)) {return pos;}link = link.previous;}} else {while (link != voidLink) {pos--;if (link.data == null) {return pos;}link = link.previous;}}return -1;}
public virtual DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSpotFleetRequestsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSpotFleetRequestsResponseUnmarshaller.Instance;return Invoke<DescribeSpotFleetRequestsResponse>(request, options);}
public virtual IndexFacesResponse IndexFaces(IndexFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = IndexFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;return Invoke<IndexFacesResponse>(request, options);}
public RuleBasedBreakIterator GetBreakIterator(int script){switch (script){case UScript.JAPANESE:return (RuleBasedBreakIterator)cjkBreakIterator.Clone();case UScript.MYANMAR:if (myanmarAsWords){return (RuleBasedBreakIterator)defaultBreakIterator.Clone();}else{return (RuleBasedBreakIterator)myanmarSyllableIterator.Clone();}default:return (RuleBasedBreakIterator)defaultBreakIterator.Clone();}}
public string ToString(){StringBuilder b = new StringBuilder();b.Append("[DCONREF]\n");b.Append("    .ref\n");b.Append("        .firstrow   = ").Append(firstRow).Append("\n");b.Append("        .lastrow    = ").Append(lastRow).Append("\n");b.Append("        .firstcol   = ").Append(firstCol).Append("\n");b.Append("        .lastcol    = ").Append(lastCol).Append("\n");b.Append("    .cch            = ").Append(charCount).Append("\n");b.Append("    .stFile\n");b.Append("        .h          = ").Append(charType).Append("\n");b.Append("        .rgb        = ").Append(GetReadablePath()).Append("\n");b.Append("[/DCONREF]\n");return b.ToString();}
public int GetPackedGitOpenFiles() { return packedGitOpenFiles;}
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[FEATURE HEADER]\n");buffer.Append("[/FEATURE HEADER]\n");return buffer.ToString();}
public static byte[] GetToUnicodeLE(string input) => Encoding.Unicode.GetBytes(input);
public virtual List<string> GetFooterLines(string keyName){return GetFooterLines(new FooterKey(keyName));}
public void Refresh(){base.Refresh();ClearReferences();}
public float Get(int index) {checkIndex(index);return byteBuffer.GetFloat(index * SizeOf.FLOAT);}
public virtual DeleteDetectorResponse DeleteDetector(DeleteDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDetectorResponseUnmarshaller.Instance;return Invoke<DeleteDetectorResponse>(request, options);}
public int[] Grow() {Debug.Assert(bytesStart != null);return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.Length + 1);}
public virtual ListExclusionsResponse ListExclusions(ListExclusionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListExclusionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListExclusionsResponseUnmarshaller.Instance;return Invoke<ListExclusionsResponse>(request, options);}
public static SpatialStrategy GetSpatialStrategy(int roundNumber){var result = spatialStrategyCache[roundNumber];if (result == null){throw new InvalidOperationException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}
public DBCluster RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){request = BeforeClientExecution(request);return ExecuteRestoreDBClusterToPointInTime(request);}
public void Serialize(LittleEndianOutput out){out.WriteShort(field_1_categoryDataType);out.WriteShort(field_2_valuesDataType);out.WriteShort(field_3_numCategories);out.WriteShort(field_4_numValues);out.WriteShort(field_5_bubbleSeriesType);out.WriteShort(field_6_numBubbleValues);}
public PostAgentProfileResponse PostAgentProfile(PostAgentProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = PostAgentProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = PostAgentProfileResponseUnmarshaller.Instance;return Invoke<PostAgentProfileResponse>(request, options);}
public ParseTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex) {if (GetTokenStream() != null) {var tokenSource = GetTokenStream().GetTokenSource();if (tokenSource is Lexer) {var lexer = (Lexer)tokenSource;return CompileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new System.NotSupportedException("Parser can't discover a lexer to use");}
public virtual BacktrackDBClusterResponse BacktrackDBCluster(BacktrackDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = BacktrackDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = BacktrackDBClusterResponseUnmarshaller.Instance;return Invoke<BacktrackDBClusterResponse>(request, options);}
public string GetStrategyName() {return strategyName;}
public void CopyTo(byte[] b, int o) {FormatHexByte(b, o + 0, w1);FormatHexByte(b, o + 8, w2);FormatHexByte(b, o + 16, w3);FormatHexByte(b, o + 24, w4);FormatHexByte(b, o + 32, w5);}
public static IntList lineMap(byte[] buf, int ptr, int end) {IntList map = new IntList((end - ptr) / 36);map.fillTo(1, int.MinValue);while (ptr < end) {ptr = nextLF(buf, ptr);map.add(ptr);}map.add(end);return map;}
public HashSet<ObjectId> GetAdditionalHaves(){return new HashSet<ObjectId>();}
public long RamBytesUsed(){long sizeInBytes = BASE_RAM_BYTES_USED + (long)fields.Count * 2 * RamUsageEstimator.NUM_BYTES_OBJECT_REF;foreach(SimpleTextTerms simpleTextTerms in termsCache.Values) {if(simpleTextTerms != null) {sizeInBytes += simpleTextTerms.RamBytesUsed();}}return sizeInBytes;}
public string ToXml(string tab) {StringBuilder builder = new StringBuilder();builder.Append(tab).Append("<").Append(GetRecordName()).Append(">\n");foreach (EscherRecord escherRecord in GetEscherRecords()) {builder.Append(escherRecord.ToXml(tab + "\t"));}builder.Append(tab).Append("</").Append(GetRecordName()).Append(">\n");return builder.ToString();}
public TokenStream Create(TokenStream input) { return new GalicianMinimalStemFilter(input); }
public virtual string ToString() {var r = new StringBuilder();r.Append("Commit");r.Append("={\n");r.Append("tree ");r.Append(treeId != null ? treeId.name() : "NOT_SET");r.Append("\n");foreach (var p in parentIds) {r.Append("parent ");r.Append(p.name());r.Append("\n");}r.Append("author ");r.Append(author != null ? author.ToString() : "NOT_SET");r.Append("\n");r.Append("committer ");r.Append(committer != null ? committer.ToString() : "NOT_SET");r.Append("\n");r.Append("gpgSignature ");r.Append(gpgSignature != null ? gpgSignature.ToString() : "NOT_SET");r.Append("\n");if (encoding != null && !References.isSameObject(encoding, UTF_8)) {r.Append("encoding ");r.Append(encoding.name());r.Append("\n");}r.Append("\n");r.Append(message != null ? message : "");r.Append("}");return r.ToString();}
public IndicNormalizationFilterFactory(Dictionary<string, string> args) {base(args);if (!args.isEmpty()) {throw new ArgumentException("Unknown parameters: " + string.Join(",", args));}}
public OptionGroup CreateOptionGroup(CreateOptionGroupRequest request) {request = BeforeClientExecution(request);return ExecuteCreateOptionGroup(request);}
public AssociateMemberAccountResponse AssociateMemberAccount(AssociateMemberAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.Instance;return Invoke<AssociateMemberAccountResponse>(request, options);}
public void Run(){doRefreshProgress(mId, mProgress, mFromUser, true);mRefreshProgressRunnable = this;}
public virtual SetTerminationProtectionResponse SetTerminationProtection(SetTerminationProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTerminationProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTerminationProtectionResponseUnmarshaller.Instance;return Invoke<SetTerminationProtectionResponse>(request, options);}
public string GetErrorHeader(RecognitionException e){int line = e.GetOffendingToken().GetLine();int charPositionInLine = e.GetOffendingToken().GetCharPositionInLine();return "line "+line+":"+charPositionInLine;}
public CharBuffer AsReadOnlyBuffer() {CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.AsReadOnlyBuffer());buf.limit = limit;buf.position = position;buf.mark = mark;buf.byteBuffer.Order = byteBuffer.Order;return buf;}
public virtual StopSentimentDetectionJobResponse StopSentimentDetectionJob(StopSentimentDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke<StopSentimentDetectionJobResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> GetNewObjectIds(){if (newObjectIds != null)return newObjectIds;return new ObjectIdSubclassMap<>();}
public void clear(){hash = hash(new byte[0]);base.clear();}
public void Reset(){lock (lock){CheckNotClosed();if (mark == -1){throw new IOException("Invalid mark");}pos = mark;}}
public class RefErrorPtg{private int field_1_reserved;public RefErrorPtg(LittleEndianInput in){field_1_reserved = in.readInt();}}
public virtual SuspendGameServerGroupResponse SuspendGameServerGroup(SuspendGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = SuspendGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = SuspendGameServerGroupResponseUnmarshaller.Instance;return Invoke<SuspendGameServerGroupResponse>(request, options);}
public sealed override ValueEval Evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.Length != 3) {return ErrorEval.ValueInvalid;}return Evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public GetRepoRequest() : base("cr", "2016-06-07", "GetRepo", "cr") {setUriPattern("/repos/[RepoNamespace]/[RepoName]");setMethod(MethodType.GET);}
public void SetDate(DateTime date) {if (date != null) {this.date = date.ToString("yyyy-MM-ddTHH:mm:ss.fffZ");} else {this.date = null;}}
public TokenStream Create(TokenStream input) {return new GermanMinimalStemFilter(input);}
public object[] ToArray() {return a.Clone();}
public void Write(char[] buffer, int offset, int len) {if (len < 0 || offset < 0 || offset > buffer.Length - len) throw new ArgumentException();lock (lock) {Expand(len);Array.Copy(buffer, offset, this.buf, this.count, len);this.count += len;}}
public static RevFilter After(DateTime ts) {return After(ts.ToUnixTimeMilliseconds());}
public DeleteGroupPolicyRequest(string groupName, string policyName) {SetGroupName(groupName);SetPolicyName(policyName);}
public virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual BatchDeleteScheduledActionResult BatchDeleteScheduledAction(BatchDeleteScheduledActionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = BatchDeleteScheduledActionRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDeleteScheduledActionResultUnmarshaller.Instance;return Invoke<BatchDeleteScheduledActionResult>(request, options);}
public virtual CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;return Invoke<CreateAlgorithmResponse>(request, options);}
public byte ReadUByte() {return (byte)(ReadByte() & 0x00FF);}
public void SetLength(int sz) { NB.EncodeInt32(info, infoOffset + P_SIZE, sz); }
public DescribeScalingProcessTypesResponse DescribeScalingProcessTypes() { return DescribeScalingProcessTypes(new DescribeScalingProcessTypesRequest()); }
public virtual ListResourceRecordSetsResponse ListResourceRecordSets(ListResourceRecordSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListResourceRecordSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.Instance;return Invoke<ListResourceRecordSetsResponse>(request, options);}
public Token RecoverInline(Parser recognizer) { InputMismatchException e = new InputMismatchException(recognizer); for (ParserRuleContext context = recognizer.Context; context != null; context = context.Parent) { context.Exception = e; } throw new ParseCancellationException(e); }
public virtual SetTagsForResourceResponse SetTagsForResource(SetTagsForResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance;return Invoke<SetTagsForResourceResponse>(request, options);}
public ModifyStrategyRequest() : base("CloudCallCenter", "2017-07-05", "ModifyStrategy", "CloudCallCenter", "innerAPI") { }
public virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcEndpointServicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcEndpointServicesResponseUnmarshaller.Instance;return Invoke<DescribeVpcEndpointServicesResponse>(request, options);}
public virtual EnableLoggingResponse EnableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableLoggingRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableLoggingResponseUnmarshaller.Instance;return Invoke<EnableLoggingResponse>(request, options);}
public bool Contains(object o) { return ConcurrentHashMap.this.ContainsValue(o); }
public class SheetRangeIdentifier : SheetIdentifier {private readonly NameIdentifier _lastSheetIdentifier;public SheetRangeIdentifier(string bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) : base(bookName, firstSheetIdentifier) {_lastSheetIdentifier = lastSheetIdentifier;}}
public DomainMetadataRequest(string domainName) {SetDomainName(domainName);}
public ParseException(Token currentTokenVal, int[][] expectedTokenSequencesVal, String[] tokenImageVal) : base(new MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal))) {this.currentToken = currentTokenVal;this.expectedTokenSequences = expectedTokenSequencesVal;this.tokenImage = tokenImageVal;}
public FetchPhotosRequest() : base("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto") { Protocol = ProtocolType.HTTPS; }
public PrintWriter Writer { get; set; }
public NGramTokenizerFactory(Dictionary<string, string> args) : base(args) {minGramSize = GetInt(args, "minGramSize", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = GetInt(args, "maxGramSize", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (!args.isEmpty()) {throw new ArgumentOutOfRangeException("Unknown parameters: " + args);}}
public bool IsDirectoryFileConflict(){return dfConflict != null;}
public IndonesianStemFilter(TokenStream input, bool stemDerivational) : base(input){this.stemDerivational = stemDerivational;}
public virtual CreateTrafficPolicyResponse CreateTrafficPolicy(CreateTrafficPolicyRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyResponse>(request, options);}
public void Serialize(LittleEndianOutput out){out.WriteInt(fSD);out.WriteInt(passwordVerifier);StringUtil.WriteUnicodeString(out, title);out.Write(securityDescriptor);}
public static double Floor(double n, double s) {if (s == 0 && n != 0) {return Double.NaN;} else {return (n == 0 || s == 0) ? 0 : Math.Floor(n / s) * s;}}
public class ByteArrayDataOutput{public ByteArrayDataOutput(byte[] bytes, int offset, int len){Reset(bytes, offset, len);}public void Reset(byte[] bytes, int offset, int len){// Implementation of Reset method}}
public static List<Tree> GetChildren(Tree t) {List<Tree> kids = new List<Tree>();for (int i=0; i<t.GetChildCount(); i++) {kids.Add(t.GetChild(i));}return kids;}
public void Clear(){this.Clear();}
public void RefreshAllRecord(bool refreshAll) {this(0);setRefreshAll(refreshAll);}
public virtual DeleteNamedQueryResponse DeleteNamedQuery(DeleteNamedQueryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNamedQueryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNamedQueryResponseUnmarshaller.Instance;return Invoke<DeleteNamedQueryResponse>(request, options);}
public GraphvizFormatter(ConnectionCosts costs) { this.costs = costs; this.bestPathMap = new Dictionary<decimal, decimal>(); sb.Append(formatHeader()); sb.Append("  init [style=invis]\n"); sb.Append("  init -> 0.0 [label=\"" + BOS_LABEL + "\"]\n"); }
public CheckMultiagentRequest() : base("visionai-poc", "2020-04-08", "CheckMultiagent") {MethodType = MethodType.POST;}
public virtual ListUserProfilesResponse ListUserProfiles(ListUserProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListUserProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListUserProfilesResponseUnmarshaller.Instance;return Invoke<ListUserProfilesResponse>(request, options);}
public virtual CreateRelationalDatabaseFromSnapshotResponse CreateRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance;return Invoke<CreateRelationalDatabaseFromSnapshotResponse>(request, options);}
public virtual StartTaskResponse StartTask(StartTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StartTaskResponseUnmarshaller.Instance;return Invoke<StartTaskResponse>(request, options);}
public HashSet<string> GetIgnoredPaths(){return ignoredPaths;}
public FeatSmartTag(RecordInputStream in) { data = in.readRemainder(); }
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {SetAction(action.ToString());SetResourceRecordSet(resourceRecordSet);}
public virtual DeleteImageResponse DeleteImage(DeleteImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteImageResponseUnmarshaller.Instance;return Invoke<DeleteImageResponse>(request, options);}
public virtual CreateConfigurationSetResponse CreateConfigurationSet(CreateConfigurationSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateConfigurationSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateConfigurationSetResponseUnmarshaller.Instance;return Invoke<CreateConfigurationSetResponse>(request, options);}
public IEnumerator<E> GetEnumerator() {object[] snapshot = elements;return new CowIterator<E>(snapshot, 0, snapshot.Length);}
public void VisitContainedRecords(RecordVisitor rv){if (_recs.Count == 0) { return; }rv.VisitRecord(_bofRec);for (int i = 0; i < _recs.Count; i++){RecordBase rb = _recs[i];if (rb is RecordAggregate){((RecordAggregate)rb).VisitContainedRecords(rv);}else{rv.VisitRecord((org.apache.poi.hssf.record.Record)rb);}}rv.VisitRecord(EOFRecord.Instance);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[FtCbls ]").Append("\n");buffer.Append("  size     = ").Append(GetDataSize()).Append("\n");buffer.Append("  reserved = ").Append(HexDump.ToHex(reserved)).Append("\n");buffer.Append("[/FtCbls ]").Append("\n");return buffer.ToString();}
using System;public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, bool isXBAT){BATBlock block = new BATBlock(bigBlockSize);if (isXBAT){int _entries_per_xbat_block = bigBlockSize.XBATEntriesPerBlock;block._values[_entries_per_xbat_block] = POIFSConstants.END_OF_CHAIN;}return block;}
public virtual TagResourceResponse TagResource(TagResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = TagResourceResponseUnmarshaller.Instance;return Invoke<TagResourceResponse>(request, options);}
public DeleteMailboxPermissionsResult DeleteMailboxPermissions(DeleteMailboxPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMailboxPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMailboxPermissionsResponseUnmarshaller.Instance;return Invoke<DeleteMailboxPermissionsResult>(request, options);}
public virtual ListDatasetGroupsResponse ListDatasetGroups(ListDatasetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;return Invoke<ListDatasetGroupsResponse>(request, options);}
public virtual ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResumeProcessesRequestMarshaller.Instance;options.ResponseUnmarshaller = ResumeProcessesResponseUnmarshaller.Instance;return Invoke<ResumeProcessesResponse>(request, options);}
public virtual GetPersonTrackingResponse GetPersonTracking(GetPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;return Invoke<GetPersonTrackingResponse>(request, options);}
public string ToFormulaString(string[] operands) {if (space.IsSet(_options)) {return operands[0];} else if (optiIf.IsSet(_options)) {return ToFormulaString() + "(" + operands[0] + ")";} else if (optiSkip.IsSet(_options)) {return ToFormulaString() + operands[0];   } else {return ToFormulaString() + "(" + operands[0] + ")";}}
public T Merge(T first, T second) {throw new NotImplementedException();}
public string ToString() => $"{this.message.Key}: {GetLocalizedMessage()}";
public XPath(Parser parser, string path) {this.parser = parser;this.path = path;elements = split(path);}
public CreateAccountAliasRequest(string accountAlias) {SetAccountAlias(accountAlias);}
public void Decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {byte block = blocks[blocksOffset++];values[valuesOffset++] = ((long)(block >> 7)) & 1;values[valuesOffset++] = ((long)(block >> 6)) & 1;values[valuesOffset++] = ((long)(block >> 5)) & 1;values[valuesOffset++] = ((long)(block >> 4)) & 1;values[valuesOffset++] = ((long)(block >> 3)) & 1;values[valuesOffset++] = ((long)(block >> 2)) & 1;values[valuesOffset++] = ((long)(block >> 1)) & 1;values[valuesOffset++] = ((long)block) & 1;}}
public PushConnection OpenPush() => new TcpPushConnection();
public static void strcpy(char[] dst, int di, char[] src, int si) {while (src[si] != 0) {dst[di++] = src[si++];}dst[di] = 0;}
public K getKey() => mapEntry.Key;
public static int numNonnull(Object[] data){int n = 0;if (data == null) return n;foreach (Object o in data){if (o != null) n++;}return n;}
public void Add(int location, E @object) {if (location >= 0 && location <= size) {Link<E> link = VoidLink;if (location < (size / 2)) {for (int i = 0; i <= location; i++) {link = link.Next;}} else {for (int i = size; i > location; i--) {link = link.Previous;}}Link<E> previous = link.Previous;Link<E> newLink = new Link<E>(@object, previous, link);previous.Next = newLink;link.Previous = newLink;size++;modCount++;} else {throw new IndexOutOfRangeException();}}
public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}
public override void Flush() {base.Flush();}
public PersianCharFilterFactory(Dictionary<string, string> args) : base(args){if (!args.isEmpty()){throw new ArgumentException("Unknown parameters: " + string.Join(", ", args));}}
public bool IncrementToken(){if (used) {return false;}ClearAttributes();termAttribute.Append(value);offsetAttribute.SetOffset(0, length);used = true;return true;}
public static FloatBuffer Allocate(int capacity){if (capacity < 0){throw new ArgumentException();}return new ReadWriteFloatArrayBuffer(capacity);}
public Edit After(Edit cut) { return new Edit(cut.EndA, endA, cut.EndB, endB); }
public virtual UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;return Invoke<UpdateRuleVersionResponse>(request, options);}
public virtual ListVoiceConnectorTerminationCredentialsResponse ListVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return Invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);}
public GetDeploymentTargetResponse GetDeploymentTarget(GetDeploymentTargetRequest request) { request = BeforeClientExecution(request); return ExecuteGetDeploymentTarget(request); }
public void SetNoChildReport(){letChildReport = false;foreach (var task in tasks){if (task is TaskSequence){((TaskSequence)task).SetNoChildReport();}}}
public E Get(int location) {try {return a[location];} catch (ArgumentOutOfRangeException e) {throw System.Collections.Generic.ArrayList.ThrowIndexOutOfRangeException(location, a.Length);}}
public virtual DescribeDataSetResponse DescribeDataSet(DescribeDataSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance;return Invoke<DescribeDataSetResponse>(request, options);}
public SkipWorkTreeFilter(int treeIdx) {this.treeIdx = treeIdx;}
public DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(){return DescribeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}
public bool Contains(int row, int col) { return _firstRow <= row && _lastRow >= row && _firstColumn <= col && _lastColumn >= col;}
public string ToString() {return string.Join("", this.chars);}
public PatchType GetPatchType() { return patchType; }
public IEnumerator<K> GetEnumerator() {return new KeyIterator();}
public virtual CreateScriptResponse CreateScript(CreateScriptRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateScriptResponseUnmarshaller.Instance;return Invoke<CreateScriptResponse>(request, options);}
public BytesRef Next() { termUpto++; if (termUpto >= info.terms.Count) { return null; } else { info.terms[info.sortedTerms[termUpto]] = br; return br; } }
public string outputToString(CharsRef output) {return output.ToString();}
public virtual AssociateWebsiteAuthorizationProviderResponse AssociateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateWebsiteAuthorizationProviderRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateWebsiteAuthorizationProviderResponseUnmarshaller.Instance;return Invoke<AssociateWebsiteAuthorizationProviderResponse>(request, options);}
public void Unpop(RevCommit c){Block b = head;if(b == null){b = free.NewBlock();b.ResetToMiddle();b.Add(c);head = b;tail = b;return;}else if(b.CanUnpop()){b.Unpop(c);return;}b = free.NewBlock();b.ResetToEnd();b.Unpop(c);b.Next = head;head = b;}
public EdgeNGramTokenizerFactory(Dictionary<string, string> args) : base(args){minGramSize = GetInt(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = GetInt(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);if (args.Count > 0){throw new ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public ModifyDBParameterGroupRequest(string dBParameterGroupName, List<Parameter> parameters) {setDBParameterGroupName(dBParameterGroupName);setParameters(parameters);}
public virtual GetHostedZoneLimitResponse GetHostedZoneLimit(GetHostedZoneLimitRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;return Invoke<GetHostedZoneLimitResponse>(request, options);}
public void Set(int index, long value) {int o = index >> 6;int b = index & 63;int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
public RevFilter Clone() {return new PatternSearch(pattern());}
public string ToString() { return $"spans({term.ToString()})@{(doc == -1 ? "START" : (doc == NO_MORE_DOCS) ? "ENDDOC" : $"{doc} - {position == NO_MORE_POSITIONS ? "ENDPOS" : position}")}"; }
public bool CanAppendMatch(){foreach (Head head in heads){if (head != LastHead.INSTANCE){return true;}}return false;}
public int LastIndexOf(string subString, int start) => base.LastIndexOf(subString, start);
public virtual DeleteNetworkAclEntryResponse DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNetworkAclEntryResponseUnmarshaller.Instance;return Invoke<DeleteNetworkAclEntryResponse>(request, options);}
public virtual AssociateMemberToGroupResponse AssociateMemberToGroup(AssociateMemberToGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberToGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.Instance;return Invoke<AssociateMemberToGroupResponse>(request, options);}
public static int Committer(byte[] b, int ptr) {int sz = b.Length;if (ptr == 0)ptr += 46; while (ptr < sz && b[ptr] == 'p')ptr += 48; if (ptr < sz && b[ptr] == 'a')ptr = NextLF(b, ptr);return Match(b, ptr, Committer);}
public int GetLineNumber() { return row; }
public SubmoduleUpdateCommand AddPath(string path) {paths.Add(path);return this;}
public virtual GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance;return Invoke<GetPushTemplateResponse>(request, options);}
public virtual DescribeVaultResponse DescribeVault(DescribeVaultRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;return Invoke<DescribeVaultResponse>(request, options);}
public virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections(){return DescribeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}
public byte[] PutLong(int index, long value) {throw new ReadOnlyBufferException();}
public virtual RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterDeviceRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterDeviceResponseUnmarshaller.Instance;return Invoke<RegisterDeviceResponse>(request, options);}
public static Format byId(int id) {foreach (Format format in Enum.GetValues(typeof(Format))) {if (format.getId() == id) {return format;}}throw new ArgumentException("Unknown format id: " + id);}
public virtual DeleteAppResponse DeleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;return Invoke<DeleteAppResponse>(request, options);}
public virtual GetBaiduChannelResponse GetBaiduChannel(GetBaiduChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBaiduChannelResponseUnmarshaller.Instance;return Invoke<GetBaiduChannelResponse>(request, options);}
public FST.BytesReader GetBytesReader(){return fst.GetBytesReader();}
public bool IsValidSchemeChar(int index, char c) {if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {return true;}return false;}
public virtual ListAppliedSchemaArnsResponse ListAppliedSchemaArns(ListAppliedSchemaArnsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAppliedSchemaArnsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.Instance;return Invoke<ListAppliedSchemaArnsResponse>(request, options);}
public string Name { get { return this.name; } }
public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec){if (args.Length < 1){return ErrorEval.VALUE_INVALID;}bool isA1style;string text;try{ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.RowIndex, ec.ColumnIndex);text = OperandResolver.CoerceValueToString(ve);switch (args.Length){case 1:isA1style = true;break;case 2:isA1style = EvaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}}catch (EvaluationException e){return e.ErrorEval;}return EvaluateIndirect(ec, text, isA1style);}
public final int CompareTo(int[] bs, int p) {int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0)return cmp;cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0)return cmp;cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0)return cmp;cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0)return cmp;return NB.CompareUInt32(w5, bs[p + 4]);}
public void RemoveName(int index){names.RemoveAt(index);workbook.RemoveName(index);}
public GetQueueAttributesRequest(string queueUrl, List<string> attributeNames) {SetQueueUrl(queueUrl);SetAttributeNames(attributeNames);}
public static bool[] CopyOf(bool[] original, int newLength){if (newLength < 0){throw new System.ArgumentOutOfRangeException("newLength");}return CopyOfRange(original, 0, newLength);}
public static void setEnabled(bool enabled) {ENABLED = enabled;}
public virtual DeleteLogPatternResponse DeleteLogPattern(DeleteLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;return Invoke<DeleteLogPatternResponse>(request, options);}
public bool Contains(char[] text, int off, int len){return map.ContainsKey(text, off, len);}
public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber) { return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber); }
public bool Handles(string commandLine) {return command.Length + 1 < commandLine.Length&& commandLine[command.Length] == ' '&& commandLine.StartsWith(command);}
public static void register(MergeStrategy imp) {register(imp.getName(), imp);}
public long RamBytesUsed(){return BASE_RAM_BYTES_USED + ((index != null) ? index.RamBytesUsed() : 0);}
public HostedZone(string id, string name, string callerReference) {setId(id);setName(name);setCallerReference(callerReference); }
public virtual GetFindingsResponse GetFindings(GetFindingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFindingsResponseUnmarshaller.Instance;return Invoke<GetFindingsResponse>(request, options);}
public virtual DescribeTopicsDetectionJobResponse DescribeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;return Invoke<DescribeTopicsDetectionJobResponse>(request, options);}
public bool ProcessMatch(ValueEval eval) {if(eval is NumericValueEval) {if(minimumValue == null) { minimumValue = eval;} else { double currentValue = ((NumericValueEval)eval).NumberValue;double oldValue = ((NumericValueEval)minimumValue).NumberValue;if(currentValue < oldValue) {minimumValue = eval;}}}return true;}
public void Write(LittleEndianOutput output) {output.WriteByte((byte)(sid + GetPtgClass()));output.WriteShort(field_1_len_ref_subexpression);}
using System;using System.IO;using System.Linq;using Lucene.Net.Store;using Lucene.Net.Index;using Lucene.Net.Facet.Taxonomy;public class Program{public static void Main(string[] args){bool printTree = false;string path = null;for (int i = 0; i < args.Length; i++){if (args[i] == "-printTree"){printTree = true;}else{path = args[i];}}if (args.Length != (printTree ? 2 : 1)){Console.WriteLine("\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxonomy/index\n");Environment.Exit(1);}Directory dir = FSDirectory.Open(new System.IO.DirectoryInfo(path));TaxonomyReader r = new DirectoryTaxonomyReader(dir);PrintStats(r, Console.Out, printTree);r.Close();dir.Close();}private static void PrintStats(TaxonomyReader r, TextWriter outWriter, bool printTree){// Placeholder for PrintStats method implementation}}
public void SetByteValue(byte value) {if (!(fieldsData is Byte)) {throw new ArgumentException("cannot change value type from " + fieldsData.GetType().FullName + " to Byte");}fieldsData = value;}
public static int Initialize() {return Initialize(DEFAULT_SEED);}
public CachingDoubleValueSource(DoubleValuesSource source) {this.source = source;cache = new Dictionary<double, double>();}
public AttributeDefinition(string attributeName, ScalarAttributeType attributeType) { SetAttributeName(attributeName); SetAttributeType(attributeType.ToString()); }
public static string Join(IEnumerable<string> parts, string separator) { return string.Join(separator, parts); }
public ListTaskDefinitionFamiliesResponse ListTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance;return Invoke<ListTaskDefinitionFamiliesResponse>(request, options);}
public virtual ListComponentsResponse ListComponents(ListComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;return Invoke<ListComponentsResponse>(request, options);}
public ActivatePhotosRequest() : base("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
public virtual CreateMatchmakingRuleSetResponse CreateMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;return Invoke<CreateMatchmakingRuleSetResponse>(request, options);}
public virtual ListAvailableManagementCidrRangesResponse ListAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;return Invoke<ListAvailableManagementCidrRangesResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> GetBaseObjectIds() {if (baseObjectIds != null){return baseObjectIds;} return new ObjectIdSubclassMap<>();}
public virtual DeletePushTemplateResponse DeletePushTemplate(DeletePushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;return Invoke<DeletePushTemplateResponse>(request, options);}
public virtual CreateDomainEntryResponse CreateDomainEntry(CreateDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDomainEntryResponseUnmarshaller.Instance;return Invoke<CreateDomainEntryResponse>(request, options);}
public static int GetEncodedSize(object[] values) {int result = values.Length * 1;foreach (object value in values) {result += GetEncodedSize(value);}return result;}
public OpenNLPTokenizerFactory(Dictionary<string, string> args) : base(args) {sentenceModelFile = Require(args, SENTENCE_MODEL);tokenizerModelFile = Require(args, TOKENIZER_MODEL);if (!args.IsNullOrEmpty()) {throw new ArgumentException("Unknown parameters: " + args);}}
public final int GetInt(int index) { CheckIndex(index, SizeOf.INT); return Memory.ReadInt32(backingArray, offset + index * SizeOf.INT, MemoryOrder); }
public List<Head> GetNextHeads(char c) {if (Matches(c)) {return newHeads;}return FileNameMatcher.EmptyHeadList;}
public byte[] PutShort(short value){throw new ReadOnlyBufferException();}
public void WriteUnshared(object obj) {WriteObject(obj, true);}
public int OffsetByCodePoints(int index, int codePointOffset) {return char.OffsetByCodePoints(value, 0, count, index, codePointOffset);}
public static int GetUniqueAlt(Collection<BitSet> altsets) { BitSet all = GetAlts(altsets); if (all.Cardinality() == 1) return all.NextSetBit(0); return ATN.INVALID_ALT_NUMBER; }
public DateTime GetWhen() { return new DateTime(when); }
public RuleTagToken(String ruleName, int bypassTokenType, String label) {if (string.IsNullOrEmpty(ruleName)) {throw new ArgumentException("ruleName cannot be null or empty.");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}
public virtual DisableOrganizationAdminAccountResponse DisableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableOrganizationAdminAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableOrganizationAdminAccountResponseUnmarshaller.Instance;return Invoke<DisableOrganizationAdminAccountResponse>(request, options);}
public virtual CreateRoomResponse CreateRoom(CreateRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;return Invoke<CreateRoomResponse>(request, options);}
public virtual ReplicationGroup DeleteReplicationGroup(DeleteReplicationGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;return Invoke<ReplicationGroup>(request, options);}
public CharBuffer Decode(ByteBuffer buffer) {try {return newDecoder().OnMalformedInput(CodingErrorAction.Replace).OnUnmappableCharacter(CodingErrorAction.Replace).Decode(buffer);} catch (CharacterCodingException ex) {throw new Error(ex.Message, ex);}}
public Distribution(string id, string status, string domainName) {SetId(id);SetStatus(status);SetDomainName(domainName);}
public virtual double[] Array() {return ProtectedArray();}
public DateWindow1904Record(RecordInputStream in) {this.field_1_window = in.readShort();}
public DeleteDBSnapshotRequest(String dBSnapshotIdentifier) {setDBSnapshotIdentifier(dBSnapshotIdentifier);}
public ParserExtension GetExtension(string key) {return this.extensions[key];}
public void Inform(ResourceLoader loader){try{if (chunkerModelFile != null){OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);}}catch (IOException e){throw new ArgumentException(e);}}
public virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteVaultLockRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteVaultLockResponseUnmarshaller.Instance;return Invoke<CompleteVaultLockResponse>(request, options);}
public final int[] GetCharIntervals(){return (int[])points.Clone();}
public long RamBytesUsed() {return values.RamBytesUsed() + base.RamBytesUsed() + sizeof(long) + RamUsageEstimator.NumBytesObjectRef;}
public virtual RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.Instance;return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options);}
public DescribeClusterUserKubeconfigRequest() : base("CS", "2015-12-15", "DescribeClusterUserKubeconfig", "csk"){SetUriPattern("/k8s/[ClusterId]/user_config");SetMethod(MethodType.GET);}
public PrecisionRecord(RecordInputStream in) {field_1_precision = in.readShort();}
public void Serialize(EndianBitConverter outObj) {outObj.WriteInt16(GetLeftRowGutter());outObj.WriteInt16(GetTopColGutter());outObj.WriteInt16(GetRowLevelMax());outObj.WriteInt16(GetColLevelMax());}
public virtual void DeleteVirtualInterface(DeleteVirtualInterfaceRequest request) { request = BeforeClientExecution(request); executeDeleteVirtualInterface(request); }
public Entry GetEntry(string name) { if (excludes.Contains(name)) { throw new FileNotFoundException(name); } Entry entry = directory.GetEntry(name); return wrapEntry(entry); }
public override string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[BACKUP]\n");buffer.Append("    .backup          = ").Append(Convert.ToString(getBackup(), 16)).Append("\n");buffer.Append("[/BACKUP]\n");return buffer.ToString();}
public DeleteVoiceConnectorOriginationResponse DeleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorOriginationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorOriginationResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorOriginationResponse>(request, options);}
public Appendable Append(char c) {Write(c);return this;}
public static long GenerationFromSegmentsFileName(string fileName) {if (fileName == OLD_SEGMENTS_GEN) {throw new ArgumentException("\"" + OLD_SEGMENTS_GEN + "\" is not a valid segment file name since 4.0");} else if (fileName == IndexFileNames.SEGMENTS) {return 0;} else if (fileName.StartsWith(IndexFileNames.SEGMENTS)) {return long.Parse(fileName.Substring(1 + IndexFileNames.SEGMENTS.Length()), char.MaxValue);} else {throw new ArgumentException("fileName \"" + fileName + "\" is not a segments file");}}
public static TagOpt FromOption(string o) {if (o == null || o.Length == 0)return AUTO_FOLLOW;foreach (TagOpt tagopt in Enum.GetValues(typeof(TagOpt))) {if (tagopt.Option().Equals(o))return tagopt;}throw new ArgumentException(string.Format(JGitText.Get().invalidTagOption, o));}
public virtual StartContentModerationResponse StartContentModeration(StartContentModerationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StartContentModerationRequestMarshaller.Instance;options.ResponseUnmarshaller = StartContentModerationResponseUnmarshaller.Instance;return Invoke<StartContentModerationResponse>(request, options);}
public static string QuoteReplacement(string s) {StringBuilder result = new StringBuilder(s.Length);for (int i = 0; i < s.Length; i++) {char c = s[i];if (c == '\\' || c == '$') {result.Append('\\');}result.Append(c);}return result.ToString();}
public final void set(V newValue) {value = newValue;}
public QueryParserTokenManager(CharStream stream){input_stream = stream;}
public long ValueFor(double elapsed){double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return Convert.ToInt64(Math.Round(val));elsereturn Convert.ToInt64(val);}
public unsafe LongBuffer Get(long[] dst, int dstOffset, int longCount){byteBuffer.Limit(limit * SizeOf.Long);byteBuffer.Position(position * SizeOf.Long);if (byteBuffer is DirectByteBuffer directByteBuffer){directByteBuffer.Get(dst, dstOffset, longCount);}else{((HeapByteBuffer)byteBuffer).Get(dst, dstOffset, longCount);}this.position += longCount;return this;}
public void RemoveErrorListeners(){_listeners.Clear();}
public CommonTokenStream(ITokenSource tokenSource, int channel){this(tokenSource);this.Channel = channel;}
public virtual ListObjectPoliciesResponse ListObjectPolicies(ListObjectPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectPoliciesResponseUnmarshaller.Instance;return Invoke<ListObjectPoliciesResponse>(request, options);}
public ObjectToPack(AnyObjectId src, int type) : base(src) {flags = type << TYPE_SHIFT;}
public int Stem(char[] s, int len){int numVowels = NumVowels(s, len);for (int i = 0; i < affixes.Length; i++){Affix affix = affixes[i];if (numVowels > affix.Vc && len >= affix.Affix.Length + 3 && EndsWith(s, len, affix.Affix)){len -= affix.Affix.Length;return affix.Palatalizes ? Unpalatalize(s, len) : len;}}return len;}
public void Recover(Parser recognizer, RecognitionException e){if(lastErrorIndex == recognizer.InputStream.Index && lastErrorStates != null && lastErrorStates.Contains(recognizer.State)){recognizer.Consume();}lastErrorIndex = recognizer.InputStream.Index;if(lastErrorStates == null) lastErrorStates = new IntervalSet();lastErrorStates.Add(recognizer.State);IntervalSet followSet = GetErrorRecoverySet(recognizer);ConsumeUntil(recognizer, followSet);}
public string ToFormulaString() {string value = field_3_string;int len = value.Length;StringBuilder sb = new StringBuilder(len + 4);sb.Append(FORMULA_DELIMITER);for (int i = 0; i < len; i++) {char c = value[i];if (c == FORMULA_DELIMITER) {sb.Append(FORMULA_DELIMITER);}sb.Append(c);}sb.Append(FORMULA_DELIMITER);return sb.ToString();}
public UnlinkFaceRequest() : base("LinkFace", "2018-07-20", "UnlinkFace"){this.Protocol = ProtocolType.HTTPS;this.Method = MethodType.POST;}
public ConfigurationOptionSetting(String namespace, String optionName, String value) {setNamespace(namespace);setOptionName(optionName);setValue(value);}
public string getFully(CharSequence key) {StringBuilder result = new StringBuilder(tries.Count * 2);for (int i = 0; i < tries.Count; i++) {CharSequence r = tries[i].getFully(key);if (r == null || (r.Length == 1 && r[0] == EOM)) {return result.ToString();}result.Append(r);}return result.ToString();}
public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);}
public virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApiMappingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApiMappingResponseUnmarshaller.Instance;return Invoke<GetApiMappingResponse>(request, options);}
public HttpRequest(string strUrl) : base(strUrl){}
public Int32 Field1LenRefSubexpression { get; set; }
public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, string field, IComparer<TermStats> comparator) {TermStatsQueue tiq = null;if (field != null) {Terms terms = MultiTerms.GetTerms(reader, field);if (terms == null) {throw new InvalidOperationException("field " + field + " not found");}TermsEnum termsEnum = terms.GetEnumerator();tiq = new TermStatsQueue(numTerms, comparator);tiq.Fill(field, termsEnum);} else {Collection<string> fields = FieldInfos.GetIndexedFields(reader);if (fields.Count == 0) {throw new InvalidOperationException("no fields found for this index");}tiq = new TermStatsQueue(numTerms, comparator);foreach (string fieldName in fields) {Terms terms = MultiTerms.GetTerms(reader, fieldName);if (terms != null) {tiq.Fill(fieldName, terms.GetEnumerator());}}}TermStats[] result = new TermStats[tiq.Size()];int count = tiq.Size() - 1;while (tiq.Size() != 0) {result[count] = tiq.Pop();count--;}return result;}
public virtual DeleteApnsVoipChannelResponse DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;return Invoke<DeleteApnsVoipChannelResponse>(request, options);}
public virtual ListFacesResponse ListFaces(ListFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListFacesResponseUnmarshaller.Instance;return Invoke<ListFacesResponse>(request, options);}
public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<Point> provider, Point from, double multiplier) { this.ctx = ctx; this.from = from; this.provider = provider; this.multiplier = multiplier; }
public char Get(int index) { CheckIndex(index); return sequence[index]; }
public virtual UpdateConfigurationProfileResponse UpdateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationProfileResponse>(request, options);}
public virtual DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLifecycleHooksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLifecycleHooksResponseUnmarshaller.Instance;return Invoke<DescribeLifecycleHooksResponse>(request, options);}
public virtual DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHostReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.Instance;return Invoke<DescribeHostReservationsResponse>(request, options);}
public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext){if( outerContext==null ) outerContext = RuleContext.Empty;if( outerContext.Parent==null || outerContext==RuleContext.Empty ) {return PredictionContext.Empty;}PredictionContext parent = EMPTY;parent = PredictionContext.FromRuleContext(atn, outerContext.Parent);ATNState state = atn.states[(int)outerContext.InvokingState];RuleTransition transition = (RuleTransition)state.Transition(0);return SingletonPredictionContext.Create(parent, transition.followState.StateNumber);}
public string ToString() {var buffer = new StringBuilder();buffer.Append("[SXVDEX]\n");buffer.Append("    .grbit1 =").Append(HexDump.IntToHex(_grbit1)).Append("\n");buffer.Append("    .grbit2 =").Append(HexDump.ByteToHex(_grbit2)).Append("\n");buffer.Append("    .citmShow =").Append(HexDump.ByteToHex(_citmShow)).Append("\n");buffer.Append("    .isxdiSort =").Append(HexDump.ShortToHex(_isxdiSort)).Append("\n");buffer.Append("    .isxdiShow =").Append(HexDump.ShortToHex(_isxdiShow)).Append("\n");buffer.Append("    .subtotalName =").Append(_subtotalName).Append("\n");buffer.Append("[/SXVDEX]\n");return buffer.ToString();}
public string ToString() {StringBuilder r = new StringBuilder();r.Append("BlameResult: "); r.Append(GetResultPath());return r.ToString();}
public virtual ListChangeSetsResponse ListChangeSets(ListChangeSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance;return Invoke<ListChangeSetsResponse>(request, options);}
public bool IsAllowNonFastForwards(){return allowNonFastForwards;}
public FeatRecord() {futureHeader = new FtrHeader();futureHeader.SetRecordType(sid);}
public ReadOnlySpan<byte> Put(short c) {throw new ReadOnlyBufferException();}
public void SetQuery(CharSequence query) {this.query = query;this.message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, "");}
public StashApplyCommand StashApply() { return new StashApplyCommand(repo); }
public HashSet<string> nameSet() { return new HashSet<string>(dictionary.Values); }
public static int GetEffectivePort(string scheme, int specifiedPort) {if (specifiedPort != -1) {return specifiedPort;}if ("http".Equals(scheme, StringComparison.OrdinalIgnoreCase)) {return 80;} else if ("https".Equals(scheme, StringComparison.OrdinalIgnoreCase)) {return 443;} else {return -1;}}
public virtual ListAssessmentTemplatesResponse ListAssessmentTemplates(ListAssessmentTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssessmentTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssessmentTemplatesResponseUnmarshaller.Instance;return Invoke<ListAssessmentTemplatesResponse>(request, options);}
public Cluster RestoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request){request = BeforeClientExecution(request);return ExecuteRestoreFromClusterSnapshot(request);}
public void addShape(HSSFShape shape){shape.SetPatriarch(this.GetPatriarch());shape.SetParent(this);shapes.Add(shape);}
public override bool Equals(object o){if (this == o) return true;if (o == null || GetType() != o.GetType()) return false;FacetEntry that = (FacetEntry) o;if (count != that.count) return false;if (!value.Equals(that.value)) return false;return true;}
public static int prev(byte[] b, int ptr, char chrA) {if (ptr == b.Length) --ptr;while (ptr >= 0) {if (b[ptr--] == chrA)return ptr;}return ptr;}
public bool IsDeltaRepresentation() { return deltaBase != null; }
public Token EmitEOF() {int cpos = GetCharPositionInLine();int line = GetLine();Token eof = _factory.Create(_tokenFactorySourcePair, Token.EOF, null, Token.DEFAULT_CHANNEL, _input.Index, _input.Index - 1, line, cpos);Emit(eof);return eof;}
public UpdateUserRequest(string userName) { SetUserName(userName); }
public RevFilter Negate() {return NotRevFilter.Create(this);}
public void SetTagger(PersonIdent taggerIdent) {tagger = taggerIdent;}
public static BufferSize Automatic(){Runtime rt = Runtime.getRuntime();long max = rt.MaxMemory();long total = rt.TotalMemory();long free = rt.FreeMemory();long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes){if (totalAvailableBytes / 2 > minBufferSizeBytes){sortBufferByteSize = totalAvailableBytes / 2;}else{sortBufferByteSize = Math.Max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize((long)Math.Min((int)int.MaxValue, sortBufferByteSize));}
public static int TrimTrailingWhitespace(byte[] raw, int start, int end){int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr])){ptr--;}return ptr + 1;}
public TopMarginRecord(RecordInputStream in) { field_1_margin = in.ReadDouble(); }
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType){SetInfoType(infoType.ToString());}
public virtual CreatePlayerSessionsResponse CreatePlayerSessions(CreatePlayerSessionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePlayerSessionsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePlayerSessionsResponseUnmarshaller.Instance;return Invoke<CreatePlayerSessionsResponse>(request, options);}
public virtual CreateProxySessionResponse CreateProxySession(CreateProxySessionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateProxySessionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProxySessionResponseUnmarshaller.Instance;return Invoke<CreateProxySessionResponse>(request, options);}
public int GetObjectType() { return type; }
public string GetScheme() {return scheme;}
public void Characters(char[] ch, int start, int length) {contents.Append(ch, start, length);}
public FetchAlbumTagPhotosRequest() : base("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
public virtual DeleteMembersResponse DeleteMembers(DeleteMembersRequest request){request = BeforeClientExecution(request);return ExecuteDeleteMembers(request);}
public virtual GetContactReachabilityStatusResponse GetContactReachabilityStatus(GetContactReachabilityStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactReachabilityStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactReachabilityStatusResponseUnmarshaller.Instance;return Invoke<GetContactReachabilityStatusResponse>(request, options);}
public bool Remove(object o) { return base.Remove(o) != null; }
public E Last() { return backingMap.LastKey(); }
public virtual CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamingDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.Instance;return Invoke<CreateStreamingDistributionResponse>(request, options);}
public bool IsAbsolute() {return absolute;}
public virtual DisableAddOnResponse DisableAddOn(DisableAddOnRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableAddOnResponseUnmarshaller.Instance;return Invoke<DisableAddOnResponse>(request, options);}
public virtual DescribeAliasResponse DescribeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;return Invoke<DescribeAliasResponse>(request, options);}
public void Next(int delta){while (--delta >= 0){if (currentSubtree != null){ptr += currentSubtree.getEntrySpan();}else{ptr++;}if (Eof())break;parseEntry();}}
public RevFilter Clone() { return new Binary(a.Clone(), b.Clone()); }
public Reader Create(Reader input) {return new PersianCharFilter(input);}
public string option() { return option; }
public override string ToString() {var sb = new StringBuilder("[");int index = 0;foreach (var item in this) {if (index > 0) sb.Append(", ");if (item is char[]) {sb.Append((char[]) item);} else {sb.Append(item);}index++;}return sb.Append(']').ToString();}
public virtual DescribeSignalingChannelResponse DescribeSignalingChannel(DescribeSignalingChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSignalingChannelResponseUnmarshaller.Instance;return Invoke<DescribeSignalingChannelResponse>(request, options);}
public virtual AttachStaticIpResponse AttachStaticIp(AttachStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachStaticIpResponseUnmarshaller.Instance;return Invoke<AttachStaticIpResponse>(request, options);}
public override string ToString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.Append(GetType().Name);sb.Append(" [").Append(crA.FormatAsString()).Append(':').Append(crB.FormatAsString()).Append("]");return sb.ToString();}
public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat, BloomFilterFactory bloomFilterFactory): base(BLOOM_CODEC_NAME) {this.delegatePostingsFormat = delegatePostingsFormat;this.bloomFilterFactory = bloomFilterFactory;}
public virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;return Invoke<ListTemplatesResponse>(request, options);}
public class TimerThread : Thread { private long resolution; private Counter counter; public TimerThread(long resolution, Counter counter) : base(THREAD_NAME) { this.resolution = resolution; this.counter = counter; this.IsBackground = true; } }
public DrawingRecord() {recordData = EMPTY_BYTE_ARRAY;}
public virtual ListDirectoriesResponse ListDirectories(ListDirectoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDirectoriesResponseUnmarshaller.Instance;return Invoke<ListDirectoriesResponse>(request, options);}
public void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >> 7) & 1;values[valuesOffset++] = (block >> 6) & 1;values[valuesOffset++] = (block >> 5) & 1;values[valuesOffset++] = (block >> 4) & 1;values[valuesOffset++] = (block >> 3) & 1;values[valuesOffset++] = (block >> 2) & 1;values[valuesOffset++] = (block >> 1) & 1;values[valuesOffset++] = block & 1;}}
public GroupingSearch DisableCaching(){this.MaxCacheRAMMB = null;this.MaxDocsToCache = null;return this;}
public static int IdealByteArraySize(int need) {for (int i = 4; i < 32; i++)if (need <= (1 << i) - 12)return (1 << i) - 12;return need;}
public virtual UpdateAssessmentTargetResponse UpdateAssessmentTarget(UpdateAssessmentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;return Invoke<UpdateAssessmentTargetResponse>(request, options);}
public virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;return Invoke<ModifyVolumeResponse>(request, options);}
public Cell Merge(Cell m, Cell e){if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip){Cell c = new Cell(m);c.cnt += e.cnt;return c;}else{return null;}}
public byte[] Read(int length, long position) {if (position >= size()) {throw new IndexOutOfRangeException("Position " + position + " past the end of the file");}byte[] dst;if (writable) {dst = new byte[length];ChannelUtilities.ReadFully(channel, dst, position);} else {channel.Position = position;dst = new byte[length];int worked = channel.Read(dst);if (worked == -1) {throw new IndexOutOfRangeException("Position " + position + " past the end of the file");}}return dst;}
public virtual void RespondActivityTaskCompleted(RespondActivityTaskCompletedRequest request) {request = beforeClientExecution(request);executeRespondActivityTaskCompleted(request);}
public void IncrementProgressBy(int diff) {SetProgress(MProgress + diff);}
public MetadataDiff CompareMetadata(DirCacheEntry entry){if (entry.IsAssumeValid())return MetadataDiff.EQUAL;if (entry.IsUpdateNeeded())return MetadataDiff.DIFFER_BY_METADATA;if (IsModeDifferent(entry.GetRawMode()))return MetadataDiff.DIFFER_BY_METADATA;int type = mode & FileMode.TYPE_MASK;if (type == FileMode.TYPE_TREE || type == FileMode.TYPE_GITLINK)return MetadataDiff.EQUAL;if (!entry.IsSmudged() && entry.GetLength() != (int)getEntryLength())return MetadataDiff.DIFFER_BY_METADATA;Instant cacheLastModified = entry.GetLastModifiedInstant();Instant fileLastModified = GetEntryLastModifiedInstant();if (timestampComparator.Compare(cacheLastModified, fileLastModified, getOptions().GetCheckStat() == CheckStat.MINIMAL) != 0){return MetadataDiff.DIFFER_BY_TIMESTAMP;}if (entry.IsSmudged()){return MetadataDiff.SMUDGED;}return MetadataDiff.EQUAL;}
public NumberRecord ConvertToNumberRecord(RKRecord rk){NumberRecord num = new NumberRecord();num.setColumn(rk.getColumn());num.setRow(rk.getRow());num.setXFIndex(rk.getXFIndex());num.setValue(rk.getRKNumber());return num;}
public CharBuffer Put(char[] src, int srcOffset, int charCount) {byteBuffer.Limit((int)(limit * SizeOf.CHAR));byteBuffer.Position((int)(position * SizeOf.CHAR));if (byteBuffer is ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).Put(src, srcOffset, charCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).Put(src, srcOffset, charCount);}this.position += charCount;return this;}
public int GetCells() {var i = cells.Keys.GetEnumerator();int size = 0;while (i.MoveNext()) {var c = i.Current;var e = At(c);if (e.cmd >= 0 || e.ref >= 0) {size++;}}return size;}
public BeiderMorseFilterFactory(Dictionary<string, string> args) {base(args);NameType nameType = NameType.ParseValue(get(args, "nameType", "GENERIC"), NameType.GENERIC);RuleType ruleType = RuleType.ParseValue(get(args, "ruleType", "APPROX"), RuleType.APPROX);boolean concat = getBoolean(args, "concat", true);engine = new PhoneticEngine(nameType, ruleType, concat);Set<string> langs = getSet(args, "languageSet");languageSet = (null == langs || (1 == langs.Count && langs.Contains("auto"))) ? null : LanguageSet.From(langs);if (!args.Count > 0) {throw new ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public static double Varp(double[] v){double r = double.NaN;if (v != null && v.Length > 1){r = Devsq(v) / v.Length;}return r;}private static double Devsq(double[] v){double sum = 0;double mean = 0;foreach (double num in v){sum += num;}mean = sum / v.Length;double ss = 0;foreach (double num in v){ss += Math.Pow(num - mean, 2);}return ss;}
public PersianNormalizationFilterFactory(Dictionary<string, string> args) : base(args){if (!args.isEmpty()){throw new ArgumentException("Unknown parameters: " + string.Join(", ", args));}}
public static WeightedTerm[] GetTerms(Query query, bool prohibited, string fieldName) {var terms = new HashSet<WeightedTerm>();Predicate<string> fieldSelector = fieldName == null ? f => true : f => f.Equals(fieldName);query.Visit(new BoostedTermExtractor(1, terms, prohibited, fieldSelector));return terms.ToArray(new WeightedTerm[0]);}
public virtual DeleteDocumentationPartResponse DeleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationPartResponse>(request, options);}
public string ToString() {var sb = new StringBuilder();sb.Append("[CHART]\n");sb.Append("    .x     = ").Append(GetX()).Append('\n');sb.Append("    .y     = ").Append(GetY()).Append('\n');sb.Append("    .width = ").Append(GetWidth()).Append('\n');sb.Append("    .height= ").Append(GetHeight()).Append('\n');sb.Append("[/CHART]\n");return sb.ToString();}
public final short Get(int index) { CheckIndex(index); return backingArray[offset + index]; }
public string ToString(){return image;}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = EvaluateRef(arg0);AreaEval reB = EvaluateRef(arg1);AreaEval result = ResolveRange(reA, reB);if (result == null) {return ErrorEval.NullIntersection;}return result;} catch (EvaluationException e) {return e.GetErrorEval();}}
public void Clear() { weightBySpanQuery.Clear(); }
public int findEndOffset(StringBuilder buffer, int start) {if (start > buffer.Length || start < 0) return start;bi.SetText(buffer.ToString().Substring(start));return bi.Next() + start;}
public SrndQuery PrimaryQuery(){SrndQuery q;switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk){case(LPAREN):jj_consume_token(LPAREN);q = FieldsQuery();jj_consume_token(RPAREN);break;case(OR):case(AND):case(W):case(N):q = PrefixOperatorQuery();break;case(TRUNCQUOTED):case(QUOTED):case(SUFFIXTERM):case(TRUNCTERM):case(TERM):q = SimpleTerm();break;default:jj_la1[5] = jj_gen;jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);return q;}
public virtual DeleteApiKeyResponse DeleteApiKey(DeleteApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApiKeyResponseUnmarshaller.Instance;return Invoke<DeleteApiKeyResponse>(request, options);}
public InsertTagsRequest() : base("Ots", "2016-06-20", "InsertTags", "ots") {setMethod(MethodType.POST);}
public virtual DeleteUserByPrincipalIdResponse DeleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteUserByPrincipalIdRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteUserByPrincipalIdResponseUnmarshaller.Instance;return Invoke<DeleteUserByPrincipalIdResponse>(request, options);}
public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResponse>(request, options);}
public int Serialize(int offset, byte[] data, EscherSerializationListener listener){listener.BeforeRecordSerialize(offset, GetRecordId(), this);LittleEndian.PutShort(data, offset, GetOptions());LittleEndian.PutShort(data, offset + 2, GetRecordId());LittleEndian.PutInt(data, offset + 4, 8);LittleEndian.PutInt(data, offset + 8, Field_1_numShapes);LittleEndian.PutInt(data, offset + 12, Field_2_lastMSOSPID);listener.AfterRecordSerialize(offset + 16, GetRecordId(), GetRecordSize(), this);return GetRecordSize();}
public virtual CreateSecurityConfigurationResponse CreateSecurityConfiguration(CreateSecurityConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSecurityConfigurationResponseUnmarshaller.Instance;return Invoke<CreateSecurityConfigurationResponse>(request, options);}
public virtual DescribeClientVpnConnectionsResponse DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeClientVpnConnectionsResponse>(request, options);}
public static void Fill(double[] array, double value) {for (int i = 0; i < array.Length; i++) {array[i] = value;}}
public bool HasNext() { return nextId < cells.Length; }
public PostingsEnum Reset(int[] postings) {this.postings = postings;upto = -2;freq = 0;return this;}
public bool HasAll(RevFlagSet set) { return (flags & set.mask) == set.mask; }
public virtual ModifyAccountResponse ModifyAccount(ModifyAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.Instance;return Invoke<ModifyAccountResponse>(request, options);}
public Token LT(int k) {LazyInit();if (k == 0) return null;if (k < 0) return LB(-k);int i = p + k - 1;Sync(i);if (i >= tokens.Count) { return tokens[tokens.Count - 1];}return tokens[i];}
public void RemoveSheet(int sheetIndex) {if (Boundsheets.Count > sheetIndex) {Records.Remove(Records.getBspos() - (Boundsheets.Count - 1) + sheetIndex);Boundsheets.RemoveAt(sheetIndex);FixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for(int i=0; i<getNumNames(); i++) {NameRecord nr = getNameRecord(i);if(nr.getSheetNumber() == sheetNum1Based) {nr.setSheetNumber(0);} else if(nr.getSheetNumber() > sheetNum1Based) {nr.setSheetNumber(nr.getSheetNumber()-1);}}if (linkTable != null) {linkTable.RemoveSheet(sheetIndex);}}
public void RemoveName(string name) {int index = GetNameIndex(name); RemoveName(index);}
public bool Equals(final object o) {if (!(o is Property)) {return false;}final Property p = (Property) o;final object pValue = p.GetValue();final long pId = p.GetID();if (id != pId || (id != 0 && !TypesAreEqual(type, p.GetType()))) {return false;}if (value == null && pValue == null) {return true;}if (value == null || pValue == null) {return false;}var valueClass = value.GetType();var pValueClass = pValue.GetType();if (!(valueClass.IsAssignableFrom(pValueClass)) &&!(pValueClass.IsAssignableFrom(valueClass))) {return false;}if (value is byte[]) {byte[] thisVal = (byte[]) value, otherVal = (byte[]) pValue;int len = unpaddedLength(thisVal);if (len != unpaddedLength(otherVal)) {return false;}for (int i = 0; i < len; i++) {if (thisVal[i] != otherVal[i]) {return false;}}return true;}return value.Equals(pValue);}
public GetRepoBuildListRequest() : base("cr", "2016-06-07", "GetRepoBuildList", "cr") {setUriPattern("/repos/[RepoNamespace]/[RepoName]/build");setMethod(MethodType.GET);}
public MessageWriter() { this.buf = new MemoryStream(); this.enc = new StreamWriter(getRawStream(), Encoding.UTF8); }
public void Append(RecordBase r){_recs.Add(r);}}
public void Close(){if (read(skipBuffer) != -1 || actualSize != expectedSize){throw new CorruptObjectException(string.Format(JGitText.get().packfileCorruptionDetected, JGitText.get().wrongDecompressedLength));}int used = bAvail - inf.GetRemaining();if (0 < used){onObjectData(src, buf, p, used);use(used);}inf.Reset();}
public virtual DescribeModelPackageResponse DescribeModelPackage(DescribeModelPackageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeModelPackageRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeModelPackageResponseUnmarshaller.Instance;return Invoke<DescribeModelPackageResponse>(request, options);}
public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec is FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText;Type nextClass = rs.PeekNextClass();if (nextClass == typeof(StringRecord)) {cachedText = (StringRecord) rs.GetNext();} else {cachedText = null;}insertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {insertCell(rec);}}
public Decompressor Clone() {return new DeflateDecompressor();}
public virtual UpdateS3ResourcesResponse UpdateS3Resources(UpdateS3ResourcesRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateS3ResourcesRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateS3ResourcesResponseUnmarshaller.Instance;return Invoke<UpdateS3ResourcesResponse>(request, options);}
public GroupQueryNode(QueryNode query) {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}allocate();setLeaf(false);add(query);}
public string ToQueryString(EscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.Append("/").Append(GetFirstPathElement());foreach (QueryText pathelement in GetPathElements(1)) {CharSequence value = escaper.Escape(pathelement.value, Locale.Default, Type.STRING);path.Append("/\"").Append(value).Append("\"");}return path.ToString();}
public void RemoveCellComment(){HSSFComment comment = _sheet.FindCellComment(_record.Row, _record.Column);_comment = null;if(null == comment){return;}_sheet.DrawingPatriarch.RemoveShape(comment);}
public void Reset(){arriving = -1;leaving = -1;}
public virtual ActivateUserResponse ActivateUser(ActivateUserRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateUserResponseUnmarshaller.Instance;return Invoke<ActivateUserResponse>(request, options);}
public bool IsCharsetDetected() {throw new NotImplementedException();}
public virtual ModifySnapshotCopyRetentionPeriodResponse ModifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;return Invoke<ModifySnapshotCopyRetentionPeriodResponse>(request, options);}
public virtual DeleteClusterSubnetGroupResponse DeleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterSubnetGroupResponseUnmarshaller.Instance;return Invoke<DeleteClusterSubnetGroupResponse>(request, options);}
public static String Decode(byte[] buffer) {return Decode(buffer, 0, buffer.Length);}
public int getDefaultPort() { return -1; }
public virtual StopTaskResponse StopTask(StopTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke<StopTaskResponse>(request, options);}
public void SeekExact(BytesRef target, TermState otherState) {Debug.Assert(otherState != null && otherState is BlockTermState);Debug.Assert(!doOrd || ((BlockTermState)otherState).ord < numTerms);state.CopyFrom(otherState);seekPending = true;indexIsCurrent = false;term.CopyBytes(target);}
public SeriesToChartGroupRecord(RecordInputStream in) {this.field_1_chartGroupIndex = in.readShort();}
public static void writeUnicodeStringFlagAndData(LittleEndianOutput @out, string value) {bool is16Bit = hasMultibyte(value);@out.WriteByte(is16Bit ? 0x01 : 0x00);if (is16Bit) {putUnicodeLE(value, @out);} else {putCompressedUnicode(value, @out);}}
public virtual AuthorizeSecurityGroupIngressResponse AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {var options = new InvokeOptions();options.RequestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.Instance;return Invoke<AuthorizeSecurityGroupIngressResponse>(request, options);}
public void addFile(string file) {checkFileNames(new HashSet<string>(1) { file });setFiles.Add(namedForThisSegment(file));}
public void SetSize(int width, int height) {mWidth = width;mHeight = height;}
public final void SetPrecedenceFilterSuppressed(bool value) {if (value) {this.reachesIntoOuterContext |= 0x40000000;}else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}
public IntervalSet LOOK(ATNState s, RuleContext ctx) {return LOOK(s, null, ctx);}
public void Serialize(LittleEndianOutput output) {output.WriteInt(GetOptionFlags());output.WriteInt(GetRowHeight());}
public Builder(bool dedup) {this.dedup = dedup;}
public Hashtable(int capacity, float loadFactor) : this(capacity) {if (loadFactor <= 0 || float.IsNaN(loadFactor)) {throw new ArgumentException("Load factor: " + loadFactor);}}
public object Get(IReadOnlySequence<char> key){int bucket = NormalCompletion.GetBucket(key);return bucket == -1 ? null : (object)bucket;}
public virtual ListHyperParameterTuningJobsResponse ListHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;return Invoke<ListHyperParameterTuningJobsResponse>(request, options);}
public DeleteTableResponse DeleteTable(string tableName) { return DeleteTable(new DeleteTableRequest().WithTableName(tableName)); }
public final bool LessThan(TextFragment fragA, TextFragment fragB){if (fragA.getScore() == fragB.getScore())return fragA.fragNum > fragB.fragNum;elsereturn fragA.getScore() < fragB.getScore();}
public void FreeBefore(int pos) {Debug.Assert(pos >= 0);Debug.Assert(pos <= nextPos);int newCount = nextPos - pos;Debug.Assert(newCount <= count, "newCount=" + newCount + " count=" + count);Debug.Assert(newCount <= buffer.Length, "newCount=" + newCount + " buf.length=" + buffer.Length);count = newCount;}
public virtual UpdateHITTypeOfHITResponse UpdateHITTypeOfHIT(UpdateHITTypeOfHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;return Invoke<UpdateHITTypeOfHITResponse>(request, options);}
public virtual UpdateRecommenderConfigurationResponse UpdateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRecommenderConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRecommenderConfigurationResponseUnmarshaller.Instance;return Invoke<UpdateRecommenderConfigurationResponse>(request, options);}
public int CompareTo(BytesRef other) {return BitConverter.ToUInt64(this.bytes, this.offset).CompareTo(BitConverter.ToUInt64(other.bytes, other.offset));}
public int stem(char[] s, int len) {if (len > 4 && s[len - 1] == 's') len--;if (len > 5 && (endsWith(s, len, "ene") || (endsWith(s, len, "ane") && useNynorsk))) return len - 3;if (len > 4 && (endsWith(s, len, "er") || endsWith(s, len, "en") || endsWith(s, len, "et") || (endsWith(s, len, "ar") && useNynorsk))) return len - 2;if (len > 3) switch (s[len - 1]) {case 'a':case 'e':return len - 1;}return len;}private bool endsWith(char[] s, int len, string suffix) {for (int i = 0; i < suffix.Length; i++) {if (s[len - suffix.Length + i] != suffix[i]) return false;}return true;}
public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}
public SortedSetDocValuesFacetField(string dim, string label) : base("dummy", TYPE) {FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.dim = dim;this.label = label;}
public virtual CreateDocumentationPartResponse CreateDocumentationPart(CreateDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResponseUnmarshaller.Instance;return Invoke<CreateDocumentationPartResponse>(request, options);}
public string GetValue() { return value;}
public ReadOnlySpan<byte> AsReadOnlySpan() => Duplicate();
public virtual UpdateDataSourcePermissionsResult UpdateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDataSourcePermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDataSourcePermissionsResponseUnmarshaller.Instance;return Invoke<UpdateDataSourcePermissionsResult>(request, options);}
public static Record CreateSingleRecord(RecordInputStream in) {IRecordCreator constructor = _recordCreatorsById[integer.ValueOf(in.Sid)];if (constructor == null) {return new UnknownRecord(in);}return constructor.Create(in);}
public int GetCount() { return mTabs.Count; }
public virtual DeleteApplicationReferenceDataSourceResponse DeleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteApplicationReferenceDataSourceResponse>(request, options);}
public virtual CreateProjectVersionResponse CreateProjectVersion(CreateProjectVersionRequest request){request = BeforeClientExecution(request);return ExecuteCreateProjectVersion(request);}
public Int32[] Slice(){return remaining() > 0 ? backingArray.Skip(offset + position).Take(remaining()).ToArray() : new Int32[0];}
public byte Get() {if (position == limit) {throw new BufferUnderflowException();}return this.block.PeekByte(offset + position++);}
public LongBuffer Put(int index, long c){CheckIndex(index);backingArray[offset + index] = c;return this;}
public StoredField(string name, float value) : base(name, TYPE) {fieldsData = value;}
public IntervalSet GetExpectedTokensWithinCurrentRule() {ATN atn = Interpreter.Atn;ATNState s = Atn.States[GetState()];return Atn.NextTokens(s);}
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[FILESHARING]\n");buffer.Append("    .readonly       = ").Append(GetReadOnly() == 1 ? "true" : "false").Append("\n");buffer.Append("    .password       = ").Append(Convert.ToInt32(GetPassword()).ToString("X")).Append("\n");buffer.Append("    .username       = ").Append(GetUsername()).Append("\n");buffer.Append("[/FILESHARING]\n");return buffer.ToString();}
public SubmoduleInitCommand(Repository repo) : base(repo) {paths = new List<string>();}
public void Include(string name, AnyObjectId id){bool validRefName = Repository.IsValidRefName(name) || Constants.HEAD.Equals(name);if (!validRefName){throw new ArgumentException(string.Format(JGitText.Get().invalidRefName, name));}if (include.ContainsKey(name)){throw new IllegalStateException(JGitText.Get().duplicateRef + name);}include[name] = id.ToObjectId();}
public Cluster EnableSnapshotCopy(EnableSnapshotCopyRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableSnapshotCopyRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableSnapshotCopyResponseUnmarshaller.Instance;return Invoke<Cluster>(request, options);}
public ValueFiller GetValueFiller(){var mval = new MutableValueFloat();return new ValueFiller(){public override void Method(){}};}
public void Serialize(LittleEndianOutput output) {output.WriteByte(GetPane());output.WriteShort(GetActiveCellRow());output.WriteShort(GetActiveCellCol());output.WriteShort(GetActiveCellRef());int nRefs = field_6_refs.Length;output.WriteShort(nRefs);foreach (CellRangeAddress8Bit field_6_ref in field_6_refs) {field_6_ref.Serialize(output);}}
public static Counter newCounter() { return newCounter(false); }
public bool Get(string name, bool dflt){bool[] vals = (bool[])valByRound[name];if (vals != null){return vals[roundNumber % vals.Length];}string sval = props[name] ?? "" + dflt;if (sval.IndexOf(":") < 0){return bool.Parse(sval);}int k = sval.IndexOf(":");string colName = sval.Substring(0, k);sval = sval.Substring(k + 1);colForValByRound[name] = colName;vals = PropToBooleanArray(sval);valByRound[name] = vals;return vals[roundNumber % vals.Length];}
public void PreSerialize(){if (records.getTabpos() > 0) {TabIdRecord tir = (TabIdRecord) records.get(records.getTabpos());if (tir._tabids.Length < boundsheets.Count) {fixTabIdRecord();}}}
public LimitTokenCountAnalyzer(Analyzer @delegate, int maxTokenCount, bool consumeAllTokens) : base(@delegate.ReuseStrategy) {this.@delegate = @delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}
public ExternalBookBlock(int numberOfSheets) {_externalBookRecord = SupBookRecord.CreateInternalReferences((short) numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
public string ToString(){var buffer = new StringBuilder();buffer.Append("[SCENARIOPROTECT]\n");buffer.Append("    .protect         = ").Append(GetProtect()).Append("\n");buffer.Append("[/SCENARIOPROTECT]\n");return buffer.ToString();}
public PushCommand SetThin(bool thin) {CheckCallable();this.thin = thin;return this;}
public int CompareTo(SearcherTracker other) {return other.recordTimeSec.CompareTo(recordTimeSec);}
public ReverseStringFilter Create(TokenStream in) {return new ReverseStringFilter(in);}
public BlockList() {directory = new BlockList<T>[256];directory[0] = new BlockList<T>();tailBlock = directory[0];}
public QueryScorer(WeightedSpanTerm[] weightedTerms){this.fieldWeightedSpanTerms = new Dictionary<string, WeightedSpanTerm>(weightedTerms.Length);for (int i = 0; i < weightedTerms.Length; i++){WeightedSpanTerm existingTerm = fieldWeightedSpanTerms.ContainsKey(weightedTerms[i].term) ? fieldWeightedSpanTerms[weightedTerms[i].term] : null;if ((existingTerm == null) || (existingTerm.weight < weightedTerms[i].weight)){fieldWeightedSpanTerms[weightedTerms[i].term] = weightedTerms[i];maxTermWeight = Math.Max(maxTermWeight, weightedTerms[i].getWeight());}}skipInitExtractor = true;}
public bool Equals(object _other){Assert.Art.NeverEquals(_other);if (_other is MergedGroup other){if (groupValue == null){return other == null;}else{return groupValue.Equals(other);}}else{return false;}}
public virtual Encoding Charset() {return cs;}
public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;return Invoke<DescribeExperimentResponse>(request, options);}
public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font("Arial", FontStyle.Regular, 10);this.foreground = forecolor;}
public string pattern() {return patternText;}
public virtual DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;return Invoke<DeleteRouteTableResponse>(request, options);}
public virtual AssociateVPCWithHostedZoneResponse AssociateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateVPCWithHostedZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateVPCWithHostedZoneResponseUnmarshaller.Instance;return Invoke<AssociateVPCWithHostedZoneResponse>(request, options);}
public virtual PutIntegrationResponse PutIntegration(PutIntegrationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke<PutIntegrationResponse>(request, options);}
public SimpleEntry(K theKey, V theValue) {key = theKey;value = theValue;}
public void Decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long byte0 = blocks[blocksOffset++] & 0xFF;long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | (byte1 >> 4);long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}
public virtual DisassociateConnectionFromLagResponse DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;return Invoke<DisassociateConnectionFromLagResponse>(request, options);}
public FileMode OldMode { get; private set; }
public override string ToString() {return m.ToString();}
public virtual StopKeyPhrasesDetectionJobResponse StopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StopKeyPhrasesDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopKeyPhrasesDetectionJobResponseUnmarshaller.Instance;return Invoke<StopKeyPhrasesDetectionJobResponse>(request, options);}
public string ToString() => $@"[Array Formula or Shared Formula]row = {getRow()}col = {getColumn()}";
public virtual ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);}
public override string ToString() {return "slice start=" + start + " length=" + length + " readerIndex=" + readerIndex;}
public static readonly int ParseHexInt4(final byte digit) {final byte r = digits16[digit];if (r < 0)throw new ArrayIndexOutOfBoundsException();return r;}
public Attribute(string name, string value) {SetName(name);SetValue(value);}
public virtual DescribeStackSetOperationResponse DescribeStackSetOperation(DescribeStackSetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;return Invoke<DescribeStackSetOperationResponse>(request, options);}
public HSSFCell GetCell(int cellnum) { return GetCell(cellnum, book.MissingCellPolicy); }
public void Write(byte[] b) {WriteContinueIfRequired(b.Length);_ulrOutput.Write(b);}
public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute) {SetImageId(imageId);SetAttribute(attribute.ToString());}
public void DiscardResultContents() { resultContents = null; }
public ObjectId GetPeeledObjectId() {return GetLeaf().GetPeeledObjectId();}
public void UndeprecateDomain(UndeprecateDomainRequest request) {request = BeforeClientExecution(request);ExecuteUndeprecateDomain(request);}
public void Write(LittleEndianOutput out) {out.WriteByte((byte)(sid + GetPtgClass()));out.WriteByte((byte)field_3_string.Length); out.WriteByte(_is16bitUnicode ? (byte)0x01 : (byte)0x00);if (_is16bitUnicode) {StringUtil.PutUnicodeLE(field_3_string, out);} else {StringUtil.PutCompressedUnicode(field_3_string, out);}}
public DeleteQueueResponse DeleteQueue(string queueUrl) {return DeleteQueue(new DeleteQueueRequest { QueueUrl = queueUrl });}
public void SetCheckEofAfterPackFooter(bool b){checkEofAfterPackFooter = b;}
public void Swap(){int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}
public int GetPackedGitWindowSize() {return packedGitWindowSize;}
public PutMetricDataResponse PutMetricData(PutMetricDataRequest request) {var options = new InvokeOptions();options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = PutMetricDataResponseUnmarshaller.Instance;return Invoke<PutMetricDataResponse>(request, options);}
public virtual GetCelebrityRecognitionResponse GetCelebrityRecognition(GetCelebrityRecognitionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CelebrityRecognitionRequestMarshaller.Instance;options.ResponseUnmarshaller = CelebrityRecognitionResponseUnmarshaller.Instance;return Invoke<CelebrityRecognitionResponse>(request, options);}
public CreateQueueRequest(string queueName) {SetQueueName(queueName);}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) : base(arearef) {this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.GetSheetIdentifier().Name;if (sheetName is SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier)sheetName).GetLastSheetIdentifier().Name;} else {this.lastSheetName = null;}}
public void SetBaseline(long clockTime){t0 = clockTime;timeout = t0 + ticksAllowed;}
public virtual MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = MoveAddressToVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.Instance;return Invoke<MoveAddressToVpcResponse>(request, options);}
public string ToString() {string coll = collectionModel.GetName();if (coll != null) {return string.Format(CultureInfo.InvariantCulture, "LM {0} - {1}", GetName(), coll);} else {return string.Format(CultureInfo.InvariantCulture, "LM {0}", GetName());}}
public virtual DescribeLagsResponse DescribeLags(DescribeLagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance;return Invoke<DescribeLagsResponse>(request, options);}
public AreaEval Offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx){if (_refEval == null){return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}
public ShortBuffer Put(short[] src, int srcOffset, int shortCount){byteBuffer.Limit(limit * SizeOf.SHORT);byteBuffer.Position(position * SizeOf.SHORT);if (byteBuffer is ReadWriteDirectByteBuffer){((ReadWriteDirectByteBuffer)byteBuffer).Put(src, srcOffset, shortCount);}else{((ReadWriteHeapByteBuffer)byteBuffer).Put(src, srcOffset, shortCount);}this.position += shortCount;return this;}
public void Initialize(string cat) { this._cat = cat; }
public void Write(int oneByte) {out.Write(oneByte);written++;}
public virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeImportImageTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeImportImageTasksResponseUnmarshaller.Instance;return Invoke<DescribeImportImageTasksResponse>(request, options);}
public ColumnInfoRecord(RecordInputStream in) {_firstCol = in.readUShort();_lastCol = in.readUShort();_colWidth = in.readUShort();_xfIndex = in.readUShort();_options = in.readUShort();switch(in.remaining()) {case 2: field_6_reserved = in.readUShort();break;case 1:field_6_reserved = (short)in.readByte();break;case 0:field_6_reserved = 0;break;default:throw new RuntimeException("Unusual record size remaining=(" + in.remaining() + ")");}}
public Status(IndexDiff diff) {base();this.diff = diff;hasUncommittedChanges = !diff.getAdded().isEmpty() || !diff.getChanged().isEmpty() || !diff.getRemoved().isEmpty() || !diff.getMissing().isEmpty() || !diff.getModified().isEmpty() || !diff.getConflicting().isEmpty();clean = !hasUncommittedChanges && diff.getUntracked().isEmpty();}
public virtual CreateExperimentResponse CreateExperiment(CreateExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExperimentResponseUnmarshaller.Instance;return Invoke<CreateExperimentResponse>(request, options);}
public UnknownRecord Clone() { return Copy(); }
public FloatBuffer Slice() {byteBuffer.Limit(limit * SizeOf.FLOAT);byteBuffer.Position(position * SizeOf.FLOAT);ByteBuffer bb = byteBuffer.Slice().Order(byteBuffer.Order());FloatBuffer result = new FloatToByteBufferAdapter(bb);byteBuffer.Clear();return result;}
public virtual DescribeSnapshotSchedulesResponse DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSnapshotSchedulesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSnapshotSchedulesResponseUnmarshaller.Instance;return Invoke<DescribeSnapshotSchedulesResponse>(request, options);}
public virtual ListImagesResponse ListImages(ListImagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListImagesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;return Invoke<ListImagesResponse>(request, options);}
public Diff(int ins, int del, int rep, int noop) { INSERT = ins; DELETE = del; REPLACE = rep; NOOP = noop; }
public string ToFormulaString(string[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[ 0 ]);buffer.Append(",");buffer.Append(operands[ 1 ]);return buffer.ToString();}
public static void SetupEnvironment(string[] workbookNames, ForkedEvaluator[] evaluators) {WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.Length];for (int i = 0; i < wbEvals.Length; i++) {wbEvals[i] = evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.Setup(workbookNames, wbEvals);}
public ListPhotoTagsRequest() : base("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto") {setProtocol(ProtocolType.HTTPS);}
public RandomSamplingFacetsCollector(int sampleSize, long seed) : base(false) {this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}
public virtual AllocateStaticIpResponse AllocateStaticIp(AllocateStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;return Invoke<AllocateStaticIpResponse>(request, options);}
public FeatRecord(RecordInputStream in){futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.readShort();reserved1 = in.readByte();reserved2 = in.readInt();int cref = in.readUShort();cbFeatData = in.readInt();reserved3 = in.readShort();cellRefs = new CellRangeAddress[cref];for(int i = 0; i < cellRefs.Length; i++){cellRefs[i] = new CellRangeAddress(in);}switch(isf_sharedFeatureType){case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in);break;default:logger.log(POILogger.ERROR, "Unknown Shared Feature " + isf_sharedFeatureType + " found!");break;}}
public async Task<RevCommit> TryFastForward(RevCommit newCommit){Ref head = await GetHead();ObjectId headId = head.ObjectId;if (headId == null)throw new RefNotFoundException(string.Format(JGitText.get().refNotResolved, Constants.HEAD));RevCommit headCommit = await Walk.LookupCommitAsync(headId);if (await Walk.IsMergedIntoAsync(newCommit, headCommit))return newCommit;string headName = await GetHeadNameAsync(head);return await TryFastForwardAsync(headName, headCommit, newCommit);}
public virtual CreateSnapshotScheduleResponse CreateSnapshotSchedule(CreateSnapshotScheduleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke<CreateSnapshotScheduleResponse>(request, options);}
public Record GetNext() {if (!HasNext()) {throw new InvalidOperationException("Attempt to read past end of record stream");}_countRead++;return _list[_nextIndex++];}
public string ToString(){return RawParseUtils.Decode(buf.ToArray());}
public ListTablesRequest(string exclusiveStartTableName){setExclusiveStartTableName(exclusiveStartTableName);}
public virtual EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableAlarmActionsRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableAlarmActionsResponseUnmarshaller.Instance;return Invoke<EnableAlarmActionsResponse>(request, options);}
public Builder() { this(true); }
public override bool Equals(object obj){State other = obj as State;return is_final == other.is_final && Array.Equals(this.labels, other.labels) && ReferenceEquals(this.states, other.states);}
public TokenStream Create(TokenStream input) {return new EnglishPossessiveFilter(input);}
public void ClearFormatting(){_string = CloneStringIfRequired();_string.ClearFormatting();AddToSSTIfRequired();}
public int Get(int index, long[] arr, int off, int len) { Debug.Assert(len > 0, "len must be > 0 (got " + len + ")"); Debug.Assert(index >= 0 && index < valueCount); len = Math.Min(len, valueCount - index); Array.Fill(arr, off, off + len, 0); return len; }
public virtual DeleteRouteResponse DeleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseResponseUnmarshaller.Instance;return Invoke<DeleteRouteResponse>(request, options);}
public string ToPrivateString() {return Format(true, false);}
public virtual CreatePresignedDomainUrlResponse CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance;return Invoke<CreatePresignedDomainUrlResponse>(request, options);}
public void Write(int oneChar) {doWrite(new char[] { (char) oneChar }, 0, 1);}
public SSTRecord GetSSTRecord() {return sstRecord;}
public string ToString() {return "term=" + term + ",field=" + field + ",value=" + valueToString() + ",docIDUpto=" + docIDUpto;}
public bool IsSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) { return bloomFilter.GetSaturation() > 0.9f; }
public Builder(bool ignoreCase) {this.ignoreCase = ignoreCase;}
public string ToString() {return GetType().Name + "(maxBasicQueries: " + maxBasicQueries + ", queriesMade: " + queriesMade + ")"; }
public virtual DeleteDataSourceResponse DeleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteDataSourceResponse>(request, options);
public virtual RebootNodeResponse RebootNode(RebootNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootNodeResponseUnmarshaller.Instance;return Invoke<RebootNodeResponse>(request, options);}
public void ProcessChildRecords(){ConvertRawBytesToEscherRecords();}
public virtual CreateOrUpdateTagsResponse CreateOrUpdateTags(CreateOrUpdateTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance;return Invoke<CreateOrUpdateTagsResponse>(request, options);}
public FileSnapshot GetSnapShot() { return snapShot; }
public Stream OpenResource(string resource) { using var stream = (clazz != null) ? clazz.ResourceAsStream(resource) : loader.ResourceAsStream(resource); if (stream == null) throw new IOException("Resource not found: " + resource); return stream; }
public string ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(this.GetType().Name).Append(" [");sb.Append("sid=").Append(HexDump.ShortToHex(_sid));sb.Append(" size=").Append(_data.Length);sb.Append(" : ").Append(HexDump.ToHex(_data));sb.Append("]\n");return sb.ToString();}
public int NextIndex() { return index;}
public string ToQueryString(EscapeQuerySyntax escaper) {if (IsDefaultField(this.field)) {return "\"" + GetTermEscapeQuoted(escaper) + "\"";} else {return this.field + ":" + "\"" + GetTermEscapeQuoted(escaper) + "\"";}}
public CalcModeRecord Clone() {return copy();}
public bool IsOutput() { return output; }
public virtual CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkInterfaceResponseUnmarshaller.Instance;return Invoke<CreateNetworkInterfaceResponse>(request, options);}
public void Serialize(IWorkbookWriter writer){writer.WriteShort(field_1_password);}
public virtual StopDominantLanguageDetectionJobResponse StopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);}
public ECSMetadataServiceCredentialsFetcher WithConnectionTimeout(int milliseconds){this.connectionTimeoutInMilliseconds = milliseconds;return this;}
public virtual GetGatewayGroupResponse GetGatewayGroup(GetGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayGroupResponseUnmarshaller.Instance;return Invoke<GetGatewayGroupResponse>(request, options);}
`public ReadOnlyFloatArrayBuffer Slice() {return new ReadOnlyFloatArrayBuffer(Remaining(), BackingArray, Offset + Position);}`
public static string Join(Collection<string> parts, string separator, string lastSeparator){StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.Count - 1;foreach (string part in parts){sb.Append(part);if (i == lastIndex - 1){sb.Append(lastSeparator);}else if (i != lastIndex){sb.Append(separator);}i++;}return sb.ToString();}
public override string ToString() { return "(" + a.ToString() + " AND " + b.ToString() + ")"; }
public ListSubscriptionsByTopicRequest(string topicArn, string nextToken){this.TopicArn = topicArn;this.NextToken = nextToken;}
public byte ReadByte() { return bytes[pos--]; }
public virtual TerminateClientVpnConnectionsResponse TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<TerminateClientVpnConnectionsResponse>(request, options);}
public ReceiveMessageRequest(string queueUrl) { setQueueUrl(queueUrl); }
public void Serialize(LittleEndianOutput out){out.WriteShort(field_1_barSpace);out.WriteShort(field_2_categorySpace);out.WriteShort(field_3_formatFlags);}
public object Common(object output1, object output2) {return outputs.Common((T) output1, (T) output2);}
public virtual CreateVariableResponse CreateVariable(CreateVariableRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;return Invoke<CreateVariableResponse>(request, options);}
public static int Match(byte[] b, int ptr, byte[] src) {if (ptr + src.Length > b.Length)return -1;for (int i = 0; i < src.Length; i++, ptr++)if (b[ptr] != src[i])return -1;return ptr;}
public int FillFields(byte[] data, int offset, EscherRecordFactory recordFactory){int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.GetInt(data, pos + size);size += 4;field_2_rectY1 = LittleEndian.GetInt(data, pos + size);size += 4;field_3_rectX2 = LittleEndian.GetInt(data, pos + size);size += 4;field_4_rectY2 = LittleEndian.GetInt(data, pos + size);size += 4;bytesRemaining -= size;if (bytesRemaining != 0){throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);}return 8 + size + bytesRemaining;}
public virtual CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.Instance;return Invoke<CreateCloudFrontOriginAccessIdentityResponse>(request, options);}
public bool IsNamespaceAware() {return (bool)GetFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES);}
public void SetOverridable(bool on) {overridable = on;}
public string GetClassName() { return className; }
public DirectoryReader GetIndexReader(){if (indexReader != null){indexReader.incRef();}return indexReader;}
public int IndexOfKey(int key) { return BinarySearch(mKeys, 0, mSize, key); }
public BlankRecord(RecordInputStream in) {field_1_row = in.readUShort();field_2_col = in.readShort();field_3_xf  = in.readShort();}
public long Length { get; private set; } = length;
public PasswordRecord(RecordInputStream in) {field_1_password = in.readShort();}
public HashMap(int capacity, float loadFactor) {base(capacity);if (loadFactor <= 0 || float.IsNaN(loadFactor)) {throw new ArgumentException("Load factor: " + loadFactor);}}
public virtual void Run(){long lastReopenStartNS = System.nanoTime();while (!finish) {while (!finish) {reopenLock.Lock();try {bool hasWaiting = waitingGen > searchingGen;long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - System.nanoTime();if (sleepNS > 0) {reopenCond.WaitNanos(sleepNS);} else {break;}} catch (ThreadInterruptedException ie) {Thread.CurrentThread().Interrupt();return;} finally {reopenLock.Unlock();}}if (finish) {break;}lastReopenStartNS = System.nanoTime();refreshStartGen = writer.GetMaxCompletedSequenceNumber();try {manager.MaybeRefreshBlocking();} catch (IOException ioe) {throw new RuntimeException(ioe);}}}
public DeleteLoginProfileRequest(string userName) {SetUserName(userName);}
public E PollFirst() {return (size == 0) ? default(E) : RemoveFirstImpl();}
public CreatePhotoRequest() : base("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto")
public string getName() { return "resolve"; }
public int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.Length || start < 0) return start;int offset, count = maxScan;for (offset = start; offset < buffer.Length && count > 0; count--){if (boundaryChars.Contains(buffer[offset])) return offset;offset++;}return start;}
public void SetObjectChecker(ObjectChecker oc) {objCheck = oc;}
public BaseRef(AreaEval ae) { _refEval = null; _areaEval = ae; _firstRowIndex = ae.GetFirstRow(); _firstColumnIndex = ae.GetFirstColumn(); _height = ae.GetLastRow() - ae.GetFirstRow() + 1; _width = ae.GetLastColumn() - ae.GetFirstColumn() + 1; }
public virtual CreateVpcEndpointResponse CreateVpcEndpoint(CreateVpcEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return Invoke<CreateVpcEndpointResponse>(request, options);}
public virtual DeregisterWorkspaceDirectoryResponse DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeregisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<DeregisterWorkspaceDirectoryResponse>(request, options);}
public ChartFRTInfoRecord(RecordInputStream in){rt = in.readShort();grbitFrt = in.readShort();verOriginator = in.readByte();verWriter = in.readByte();int cCFRTID = in.readShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++) {rgCFRTID[i] = new CFRTID(in);}}
public Merger newMerger(Repository db) {return new OneSide(db, treeIndex);}
public virtual CreateDataSourceFromRedshiftResponse CreateDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateDataSourceFromRedshiftRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDataSourceFromRedshiftResponseUnmarshaller.Instance;return Invoke<CreateDataSourceFromRedshiftResponse>(request, options);}
public void clearDFA() {for (int d = 0; d < decisionToDFA.Length; d++) {decisionToDFA[d] = new DFA(atn.GetDecisionState(d), d);}}
public void RemoveName(string name) {int index = GetNameIndex(name);RemoveName(index);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append( "[RightMargin]\n" );buffer.Append( "    .margin               = " ).Append( " (" ).Append( GetMargin() ).Append( " )\n" );buffer.Append( "[/RightMargin]\n" );return buffer.ToString();}
public RefreshAllRecord Clone() { return Copy(); }
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {base(queryConfig);Add(new WildcardQueryNodeProcessor());Add(new MultiFieldQueryNodeProcessor());Add(new FuzzyQueryNodeProcessor());Add(new RegexpQueryNodeProcessor());Add(new MatchAllDocsQueryNodeProcessor());Add(new OpenRangeQueryNodeProcessor());Add(new PointQueryNodeProcessor());Add(new PointRangeQueryNodeProcessor());Add(new TermRangeQueryNodeProcessor());Add(new AllowLeadingWildcardProcessor());Add(new AnalyzerQueryNodeProcessor());Add(new PhraseSlopQueryNodeProcessor());Add(new BooleanQuery2ModifierNodeProcessor());Add(new NoChildOptimizationQueryNodeProcessor());Add(new RemoveDeletedQueryNodesProcessor());Add(new RemoveEmptyNonLeafQueryNodeProcessor());Add(new BooleanSingleChildOptimizationQueryNodeProcessor());Add(new DefaultPhraseSlopQueryNodeProcessor());Add(new BoostQueryNodeProcessor());Add(new MultiTermRewriteMethodProcessor());}
public string FormatAsString(string sheetName, bool useAbsoluteAddress) {StringBuilder sb = new StringBuilder();if (sheetName != null) {sb.Append(SheetNameFormatter.Format(sheetName));sb.Append("!");}CellReference cellRefFrom = new CellReference(GetFirstRow(), GetFirstColumn(), useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(GetLastRow(), GetLastColumn(), useAbsoluteAddress, useAbsoluteAddress);sb.Append(cellRefFrom.FormatAsString());if (!cellRefFrom.Equals(cellRefTo) || IsFullColumnRange() || IsFullRowRange()) {sb.Append(':');sb.Append(cellRefTo.FormatAsString());}return sb.ToString();}
public byte Set(int index, byte value) {throw new NotSupportedException();}
public void Mode(int m) { _mode = m; }
public short[] Slice() { return new short[Remaining()]; }
public void Set(int index, long n) { if (count < index) throw new ArgumentOutOfRangeException(nameof(index), index); else if (count == index) Add(n); else entries[index] = n; }
public byte[] PutFloat(float value) { throw new ReadOnlyBufferException(); }
public static double Max(double[] values) {double max = double.MinValue;foreach (double value in values) {if (value > max) {max = value;}}return max;}
public UpdateRepoWebhookRequest() : base("cr", "2016-06-07", "UpdateRepoWebhook", "cr"){this.setUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]");this.setMethod(MethodType.POST);}
public DeleteAttributesRequest(string domainName, string itemName, java.util.List<Attribute> attributes, UpdateCondition expected) {SetDomainName(domainName);SetItemName(itemName);SetAttributes(attributes);SetExpected(expected);}
public virtual string ToString(){StringBuilder sb = new StringBuilder();sb.Append("[SXPI]\n");for (int i = 0; i < _fieldInfos.Length; i++) {sb.Append("    item[").Append(i).Append("]=");_fieldInfos[i].AppendDebugInfo(sb);sb.Append('\n');}sb.Append("[/SXPI]\n");return sb.ToString();}
public bool IsSuccessful() {if (mergeResult != null)return mergeResult.MergeStatus.IsSuccessful();else if (rebaseResult != null)return rebaseResult.Status.IsSuccessful();return true;}
public void SetBytesValue(byte[] value) {setBytesValue(new BytesRef(value));}
public DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request) {request = BeforeClientExecution(request);return ExecuteDescribeConnections(request);}
public DeletePhotosRequest() : base("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto") { this.Protocol = ProtocolType.HTTPS; }
public void Add(E obj) {iterator.Add(obj);subList.sizeChanged(true);end++;}
public static ByteBuffer Allocate(int capacity){if (capacity < 0){throw new ArgumentException();}return new ReadWriteHeapByteBuffer(capacity);}
```public SrndQuery GetSubQuery(int qn) {return queries[qn];}
public float CurrentScore(int docId, string field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {if (numPayloadsSeen == 0) {return currentPayloadScore;} else {return Math.Min(currentPayloadScore, currentScore);}}
public string ToString(){StringBuilder sb = new StringBuilder();sb.Append("[BLANK]\n");sb.Append("    row= ").Append(HexDump.ShortToHex(GetRow())).Append("\n");sb.Append("    col= ").Append(HexDump.ShortToHex(GetColumn())).Append("\n");sb.Append("    xf = ").Append(HexDump.ShortToHex(GetXFIndex())).Append("\n");sb.Append("[/BLANK]\n");return sb.ToString();}
public virtual DescribeLogPatternResponse DescribeLogPattern(DescribeLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;return Invoke<DescribeLogPatternResponse>(request, options);}
public virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual GetPhoneNumberSettingsResponse GetPhoneNumberSettings(GetPhoneNumberSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;return Invoke<GetPhoneNumberSettingsResponse>(request, options);}
public ObjectId GetData() { return data; }
public bool isDirect() { return false; }
public DeleteServerCertificateRequest(string serverCertificateName) {SetServerCertificateName(serverCertificateName);}
public String Append(double d) {RealToString.GetInstance().AppendDouble(this, d);return this;}
public virtual GetEvaluationResponse GetEvaluation(GetEvaluationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEvaluationResponseUnmarshaller.Instance;return Invoke<GetEvaluationResponse>(request, options);}
public LinkedDataRecord GetDataName(){return dataName;}
public bool Find(int start) { findPos = start; if (findPos < regionStart) { findPos = regionStart; } else if (findPos >= regionEnd) { matchFound = false; return false; } matchFound = FindImpl(address, input, findPos, matchOffsets); if (matchFound) { findPos = matchOffsets[1]; } return matchFound; }
public virtual GetLifecyclePolicyPreviewResponse GetLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance;return Invoke<GetLifecyclePolicyPreviewResponse>(request, options);}
public SinglePositionTokenStream(string word) {termAtt = AddAttribute(typeof(CharTermAttribute));posIncrAtt = AddAttribute(typeof(PositionIncrementAttribute));this.word = word;returned = true;}
public void Serialize(LittleEndianOutput out){out.WriteInt(field_1_print_gridlines);}
public override string ToString(){StringBuilder s = new StringBuilder();s.Append(Constants.typeString(GetType()));s.Append(' ');s.Append(Name());s.Append(' ');s.Append(CommitTime);s.Append(' ');AppendCoreFlags(s);return s.ToString();}
public LsRemoteCommand SetRemote(string remote) {CheckCallable();this.remote = remote;return this;}
public void CollapseRow(int rowNumber){int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int nextRowIx = WriteHidden(rowRecord, startRow);RowRecord row = GetRow(nextRowIx);if (row == null){row = CreateRow(nextRowIx);InsertRow(row);}row.SetCollapsed(true);}
public virtual AssociateSkillGroupWithRoomResponse AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;return Invoke<AssociateSkillGroupWithRoomResponse>(request, options);}
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[SERIESLIST]\n");buffer.Append("    .seriesNumbers= ").Append(" (").Append( string.Join(", ", GetSeriesNumbers()) ).Append(" )");buffer.Append("\n");buffer.Append("[/SERIESLIST]\n");return buffer.ToString();}
public QueryConfigHandler GetQueryConfigHandler() {return this.queryConfig;}
public string GetClassArg(){if (null != originalArgs){string className = originalArgs[CLASS_NAME];if (null != className){return className;}}return this.GetType().Name;}
