@Overridepublic void Serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_vcenter);}
public void addAll(NGit.Util.BlockList<T> src) {if (src.size == 0) {return;}int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++) {addAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);}if (src.tailBlkIdx != 0) {addAll(src.tailBlock, 0, src.tailBlkIdx);}}
@Overridepublic void writeByte(byte b) {if (outerInstance.upto == outerInstance.blockSize) {if (outerInstance.currentBlock != null) {outerInstance.blocks.add(outerInstance.currentBlock);outerInstance.blockEnd.add(outerInstance.upto);}outerInstance.currentBlock = new byte[outerInstance.blockSize];outerInstance.upto = 0;}outerInstance.currentBlock[outerInstance.upto++] = b;}
public abstract ObjectId GetObjectId();
public DeleteDomainEntryResponse deleteDomainEntry(DeleteDomainEntryRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteDomainEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDomainEntryResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract long RamBytesUsed() {return fst == null ? 0 : fst.GetSizeInBytes();}
public String GetFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.TagMessage(raw, 0);if (msgB < 0) {return "";}Encoding enc = RawParseUtils.ParseEncoding(raw);return RawParseUtils.Decode(enc, raw, msgB, raw.length);}
public POIFSFileSystem() {HeaderBlock headerBlock = new HeaderBlock(bigBlockSize);_property_table = new PropertyTable(headerBlock);_documents = new ArrayList<>();_root = null;}
public void Init(int address) {slice = pool.Buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];assert slice != null;upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;assert upto < slice.length;}
public NGit.Api.SubmoduleAddCommand setPath(String path) {this.path = path;return this;}
public ListIngestionsResponse listIngestions(ListIngestionsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListIngestionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListIngestionsResponseUnmarshaller.getInstance());return invoke(request, options);}
public QueryParserTokenManager(ICharStream stream, int lexState) {this(stream);SwitchTo(lexState);}
public GetShardIteratorResponse getShardIterator(GetShardIteratorRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetShardIteratorRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetShardIteratorResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public ModifyStrategyRequest() {super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis", "openAPI");this.Method = MethodType.POST;}
@Overridepublic boolean ready() {synchronized (lock) {if (in == null) {throw new java.io.IOException("InputStreamReader is closed");}try {return bytes.hasRemaining() || in.available() > 0;} catch (java.io.IOException e) {return false;}}}
protected EscherOptRecord GetOptRecord() { return _optRecord; }
@Overridepublic int read(byte[] buffer, int offset, int length) {synchronized (this) {if (buffer == null) {throw new IllegalArgumentException("buffer == null");}Arrays.checkOffsetAndCount(buffer.length, offset, length);if (length == 0) {return 0;}int copylen = count - pos < length ? count - pos : length;for (int i = 0; i < copylen; i++) {buffer[offset + i] = (byte) this.buffer[pos + i];}pos += copylen;return copylen;}}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}
public void print(String str) {write(str != null ? str : StringHelper.GetValueOf((Object)null));}
public class NotImplementedFunctionException extends Exception {private String functionName;public NotImplementedFunctionException(String functionName, Throwable cause) {super(functionName, cause);this.functionName = functionName;}}
@Overridepublic V next() {return this.nextEntry().getValue();}
@Overridefinal void ReadBytes(byte[] b, int offset, int len, boolean useBuffer) {int available = bufferLength - bufferPosition;if (len <= available) {if (len > 0) {System.arraycopy(m_buffer, bufferPosition, b, offset, len);}bufferPosition += len;} else {if (available > 0) {System.arraycopy(m_buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize) {Refill();if (bufferLength < len) {System.arraycopy(m_buffer, 0, b, offset, bufferLength);throw new EndOfStreamException("read past EOF: " + this);} else {System.arraycopy(m_buffer, 0, b, offset, len);bufferPosition = len;}} else {long after = bufferStart + bufferPosition + len;if (after > Length) {throw new EndOfStreamException("read past EOF: " + this);}ReadInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;}}}
public TagQueueResponse tagQueue(TagQueueRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(TagQueueRequestMarshaller.getInstance());options.setResponseUnmarshaller(TagQueueResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic void Remove() {throw new UnsupportedOperationException();}
public abstract ModifyCacheSubnetGroupResponse modifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request){var options = new InvokeOptions();options.requestMarshaller = ModifyCacheSubnetGroupRequestMarshaller.INSTANCE;options.responseUnmarshaller = ModifyCacheSubnetGroupResponseUnmarshaller.INSTANCE;return invoke(request, options);}
@Overridepublic void SetParams(String params){super.SetParams(params);String culture = "";String ignore;StringTokenizer st = new StringTokenizer(params, ",");if (st.hasMoreTokens()) culture = st.nextToken();if (st.hasMoreTokens()) culture += "-" + st.nextToken();if (st.hasMoreTokens()) ignore = st.nextToken();}
public DeleteDocumentationVersionResponse deleteDocumentationVersion(DeleteDocumentationVersionRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteDocumentationVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDocumentationVersionResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic boolean equals(Object obj) {if (!(obj instanceof FacetLabel)) {return false;}FacetLabel other = (FacetLabel) obj;if (this.Length != other.Length) {return false;}for (int i = this.Length - 1; i >= 0; i--) {if (!this.Components[i].equals(other.Components[i], StringComparison.Ordinal)) {return false;}}return true;}
public abstract GetInstanceAccessDetailsResponse get_instance_access_details(GetInstanceAccessDetailsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetInstanceAccessDetailsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetInstanceAccessDetailsResponseUnmarshaller.getInstance());return invoke(new TypeReference<GetInstanceAccessDetailsResponse>() {}, request, options);}
public HSSFPolygon createPolygon(HSSFChildAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.setParent(this);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);return shape;}
public String GetSheetName(int sheetIndex) { return GetBoundSheetRec(sheetIndex).Sheetname; }
public abstract GetDashboardResponse GetDashboard(GetDashboardRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetDashboardRequestMarshaller.Instance);options.setResponseUnmarshaller(GetDashboardResponseUnmarshaller.Instance);return invoke(request, options);}
public virtual AssociateSigninDelegateGroupsWithAccountResponse AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return Invoke<AssociateSigninDelegateGroupsWithAccountResponse>(request, options);}
public void AddMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.setColumn(j + mbr.getFirstColumn());br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));InsertCell(br);}}
public static String quote(String str){StringBuilder sb = new StringBuilder();sb.append("\\Q");int apos = 0;int k;while ((k = str.indexOf("\\E", apos)) >= 0){sb.append(str.substring(apos, k + 2)).append("\\\\E\\Q");apos = k + 2;}return sb.append(str.substring(apos)).append("\\E").toString();}
@Overridepublic ByteBuffer putInt(int value) {throw new ReadOnlyBufferException();}
public ArrayPtg(Object[][] values2d){int nColumns = values2d[0].length;int nRows = values2d.length;_nColumns = (short)nColumns;_nRows = (short)nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++){Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++){vv[GetValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public abstract GetIceServerConfigResponse getIceServerConfig(GetIceServerConfigRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetIceServerConfigRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetIceServerConfigResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append(getValueAsString());sb.append("]");return sb.toString();}
@Overridepublic String toString(String field) {return "ToChildBlockJoinQuery (" + _parentQuery + ")";}
public void IncRef() { refCount.incrementAndGet(); }
public abstract UpdateConfigurationSetSendingEnabledResponse updateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateConfigurationSetSendingEnabledRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateConfigurationSetSendingEnabledResponseUnmarshaller.getInstance());return invoke(request, options);}
public int GetNextXBATChainOffset() { return GetXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE; }
public void multiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.GetInstance(Math.abs(pow10));if (pow10 < 0) {mulShift(tp._divisor, tp._divisorShift);} else {mulShift(tp._multiplicand, tp._multiplierShift);}}
@Overridepublic String toString() {StringBuilder builder = new StringBuilder();int length = this.length;builder.append(File.separator);for (int i = 0; i < length; i++) {builder.append(this.getComponent(i));if (i < (length - 1)) {builder.append(File.separator);}}return builder.toString();}
public void withFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.setRoleName(roleName);}
public abstract void SetProgressMonitor(ProgressMonitor pm) { progressMonitor = pm; }
@Overridepublic void Reset() {if (!First) {ptr = 0;if (!Eof) {ParseEntry();}}}
public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new java.util.NoSuchElementException();}
public String GetNewPrefix() { return this.newPrefix; }
public int indexOfValue(int value) {for (int i = 0; i < mSize; i++) {if (mValues[i] == value) {return i;}}return -1;}
import java.util.*;public List<StringBuilder> UniqueStems(char[] word, int length) {List<StringBuilder> stems = Stem(word, length);if (stems.size() < 2) {return stems;}Set<StringBuilder> terms = new HashSet<>();List<StringBuilder> deduped = new ArrayList<>();for (StringBuilder s : stems) {if (!terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}
public GetGatewayResponsesResponse getGatewayResponses(GetGatewayResponsesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetGatewayResponsesRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetGatewayResponsesResponseUnmarshaller.getInstance());return invoke(request, options);}
public void setPosition(long position){currentBlockIndex = (int)(position >> outerInstance.blockBits);currentBlock = outerInstance.blocks[currentBlockIndex];currentBlockUpto = (int)(position & outerInstance.blockMask);}
@Overridepublic long Skip(long n) {int s = (int)Math.min(Available(), Math.max(0, n));ptr += s;return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {_bootstrapActionConfig = bootstrapActionConfig;}
@Overridepublic void Serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_row);out1.writeShort(field_2_col);out1.writeShort(field_3_flags);out1.writeShort(field_4_shapeid);out1.writeShort(field_6_author.length());out1.writeByte(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.PutUnicodeLE(field_6_author, out1);} else {StringUtil.PutCompressedUnicode(field_6_author, out1);}if (field_7_padding != null) {out1.writeByte(Integer.parseInt(field_7_padding, Locale.ROOT));}}
public int lastIndexOf(String str) {return lastIndexOf(str, count);}
@Overridepublic boolean add(E object) { return addLastImpl(object); }
public synchronized void UnsetSection(String section, String subsection) {ConfigSnapshot src;ConfigSnapshot res;do {src = state.get();res = UnsetSection(src, section, subsection);} while (!state.compareAndSet(src, res));}
public String getTagName() { return tagName; }
public void AddSubRecord(int index, SubRecord element) { subrecords.add(index, element); }
public synchronized boolean remove(Object object) {synchronized (mutex) {return c.remove(object);}}
@Overridepublic TokenStream create(TokenStream input) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public abstract long Length() { return InCoreLength(); }
public void setValue(boolean newValue) { value = newValue; }
public Pair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}
public abstract int Get(int i);
public class CreateRepoRequest extends BaseRequest {public CreateRepoRequest() {super("cr", "2016-06-07", "CreateRepo", "cr", "openAPI");this.UriPattern = "/repos";this.Method = MethodType.PUT;}}
public boolean isDeltaBaseAsOffset() { return deltaBaseAsOffset; }
public void remove() {if (expectedModCount == list.modCount) {if (lastLink != null) {java.util.LinkedList.Link<ET> next_1 = lastLink.next;java.util.LinkedList.Link<ET> previous_1 = lastLink.previous;next_1.previous = previous_1;previous_1.next = next_1;if (lastLink == link) {pos--;}link = previous_1;lastLink = null;expectedModCount++;list._size--;list.modCount++;} else {throw new java.lang.UnsupportedOperationException();}} else {throw new java.util.ConcurrentModificationException();}}
public abstract MergeShardsResponse mergeShards(MergeShardsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(MergeShardsRequestMarshaller.getInstance());options.setResponseUnmarshaller(MergeShardsResponseUnmarshaller.getInstance());return invoke(request, options);}
public AllocateHostedConnectionResponse allocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.setRequestMarshaller(AllocateHostedConnectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(AllocateHostedConnectionResponseUnmarshaller.getInstance());return invoke(request, options);}
public int getBeginIndex() { return start; }
public static WeightedTerm[] GetTerms(Query query) { return GetTerms(query, false); }
@Overridepublic ByteBuffer compact() {throw new ReadOnlyBufferException();}
@Overridepublic void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (int)((long)byte0 >> 2);int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | ((int)((long)byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | ((int)((long)byte2 >> 6));values[valuesOffset++] = byte2 & 63;}}
public String GetHumanishName() {if (String.isEmpty(GetPath()) || GetPath() == null) {throw new IllegalArgumentException();}String s = GetPath();String[] elements;if ("file".equals(scheme) || LOCAL_FILE.matcher(s).matches()) {elements = s.split("[\\\\/" + File.separatorChar + "]");} else {elements = s.split("/");}if (elements.length == 0) {throw new IllegalArgumentException();}String result = elements[elements.length - 1];if (Constants.DOT_GIT.equals(result)) {result = elements[elements.length - 2];} else {if (result.endsWith(Constants.DOT_GIT_EXT)) {result = result.substring(0, result.length() - Constants.DOT_GIT_EXT.length());}}return result;}
public DescribeNotebookInstanceLifecycleConfigResponse describeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeNotebookInstanceLifecycleConfigRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public String GetAccessKeySecret() { return AccessSecret; }
public CreateVpnConnectionResponse createVpnConnection(CreateVpnConnectionRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateVpnConnectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateVpnConnectionResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeVoicesResponse describeVoices(DescribeVoicesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeVoicesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeVoicesResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract ListMonitoringExecutionsResponse listMonitoringExecutions(ListMonitoringExecutionsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListMonitoringExecutionsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ListMonitoringExecutionsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public DescribeJobRequest(String vaultName, String jobId) {_vaultName = vaultName; _jobId = jobId;}
public EscherRecord getEscherRecord(int index) { return escherRecords[index]; }
public abstract GetApisResponse GetApis(GetApisRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetApisRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetApisResponseUnmarshaller.getInstance());return invoke(request, options);}
public DeleteSmsChannelResponse deleteSmsChannel(DeleteSmsChannelRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteSmsChannelRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteSmsChannelResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract TrackingRefUpdate getTrackingRefUpdate() { return trackingRefUpdate; }
public void print(boolean b) { print(String.valueOf(b)); }
public abstract IQueryNode getChild() { return getChildren().get(0); }
public NotIgnoredFilter(int workdirTreeIndex) {this.index = workdirTreeIndex;}
public AreaRecord(RecordInputStream in1) {field_1_formatFlags = in1.readShort();}
public class GetThumbnailRequest extends BaseRequest {public GetThumbnailRequest() {super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}}
public abstract DescribeTransitGatewayVpcAttachmentsResponse describeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeTransitGatewayVpcAttachmentsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.getInstance());return invoke(request, options);}
public PutVoiceConnectorStreamingConfigurationResponse putVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(PutVoiceConnectorStreamingConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic OrdRange GetOrdRange(String dim) {OrdRange result;prefixToOrdRange.TryGetValue(dim, out result);return result;}
@Overridepublic String toString() {String symbol = "";if (startIndex >= 0 && startIndex < ((ICharStream) inputStream).size()) {symbol = ((ICharStream) inputStream).getText(new Interval(startIndex, startIndex));symbol = Utils.escapeWhitespace(symbol, false);}return String.format(Locale.getDefault(), "%s('%s')", Antlr4.Runtime.LexerNoViableAltException.class.getSimpleName(), symbol);}
public E peek() { return peekFirstImpl(); }
public abstract CreateWorkspacesResponse createWorkspaces(CreateWorkspacesRequest request) {var options = new InvokeOptions();options.requestMarshaller = CreateWorkspacesRequestMarshaller.INSTANCE;options.responseUnmarshaller = CreateWorkspacesResponseUnmarshaller.INSTANCE;return invoke(request, options);}
@Overridepublic Object clone() {NumberFormatIndexRecord rec = new NumberFormatIndexRecord();rec.field_1_formatIndex = this.field_1_formatIndex;return rec;}
public DescribeRepositoriesResponse describeRepositories(DescribeRepositoriesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeRepositoriesRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DescribeRepositoriesResponseUnmarshaller.INSTANCE);return invoke(request, options);}
import java.util.Arrays;public class SparseIntArray {private static final int[] EMPTY_INTS = {};private int[] mKeys;private int[] mValues;private int mSize;public SparseIntArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}// Additional methods would need to be implemented here}
@Overridepublic TokenStream create(TokenStream input) {return new HyphenatedWordsFilter(input);}
public CreateDistributionWithTagsResponse createDistributionWithTags(CreateDistributionWithTagsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateDistributionWithTagsRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDistributionWithTagsResponseUnmarshaller.getInstance());return invoke(request, options);}
import java.io.RandomAccessFile;import java.io.File;public class MyClass {public MyClass(String fileName, String mode) throws Exception {throw new UnsupportedOperationException();}}
public DeleteWorkspaceImageResponse deleteWorkspaceImage(DeleteWorkspaceImageRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteWorkspaceImageRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteWorkspaceImageResponseUnmarshaller.getInstance());return invoke(request, options);}
public static String ToHex(int value) {return ToHex((long)value, 8);}
public UpdateDistributionResponse updateDistribution(UpdateDistributionRequest request) {var options = new InvokeOptions();options.requestMarshaller = UpdateDistributionRequestMarshaller.INSTANCE;options.responseUnmarshaller = UpdateDistributionResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public HSSFColor getColor(short index){if (index == HSSFColor.Automatic.getIndex()){return HSSFColor.Automatic.getInstance();} else {byte[] b = palette.getColor(index);if (b != null){return new CustomColor(index, b);}}return null;}
public ValueEval evaluate(ValueEval[] operands, int srcRow, int srcCol) {throw new NotImplementedFunctionException(_functionName);}
@Overridepublic void Serialize(ILittleEndianOutput out1) {out1.writeShort((short) field_1_number_crn_records);out1.writeShort((short) field_2_sheet_table_index);}
public DescribeDBEngineVersionsResponse describeDBEngineVersions() {return describeDBEngineVersions(new DescribeDBEngineVersionsRequest());}
public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}
public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte)(ch >> 8);result[resultIndex++] = (byte)ch;}return result;}
public UploadArchiveResponse uploadArchive(UploadArchiveRequest request) {var options = new InvokeOptions();options.requestMarshaller = UploadArchiveRequestMarshaller.INSTANCE;options.responseUnmarshaller = UploadArchiveResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public abstract List<IToken> GetHiddenTokensToLeft(int tokenIndex) { return GetHiddenTokensToLeft(tokenIndex, -1); }
@Overridepublic boolean equals(Object obj) {if (this == obj) {return true;}if (!super.equals(obj)) {return false;}if (getClass() != obj.getClass()) {return false;}AutomatonQuery other = (AutomatonQuery) obj;if (!m_compiled.equals(other.m_compiled)) {return false;}if (m_term == null) {if (other.m_term != null) {return false;}} else if (!m_term.equals(other.m_term)) {return false;}return true;}
import java.util.ArrayList;import java.util.List;public class MyClass {public virtual SpanQuery MakeSpanClause() {List<SpanQuery> spanQueries = new ArrayList<>();foreach (var wsq in weightBySpanQuery) {wsq.Key.Boost = wsq.Value;spanQueries.Add(wsq.Key);}if (spanQueries.size() == 1) {return spanQueries.get(0);} else {return new SpanOrQuery(spanQueries.toArray(new SpanQuery[0]));}}}
public abstract StashCreateCommand StashCreate() { return new StashCreateCommand(repo); }
public FieldInfo getFieldInfo(String fieldName) {FieldInfo ret;byName.TryGetValue(fieldName, out ret);return ret;}
public DescribeEventSourceResponse describeEventSource(DescribeEventSourceRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeEventSourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeEventSourceResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetDocumentAnalysisResponse getDocumentAnalysis(GetDocumentAnalysisRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetDocumentAnalysisRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDocumentAnalysisResponseUnmarshaller.getInstance());return invoke(request, options);}
public CancelUpdateStackResponse cancelUpdateStack(CancelUpdateStackRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CancelUpdateStackRequestMarshaller.getInstance());options.setResponseUnmarshaller(CancelUpdateStackResponseUnmarshaller.getInstance());return invoke(request, options);}
public ModifyLoadBalancerAttributesResponse modifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ModifyLoadBalancerAttributesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyLoadBalancerAttributesResponseUnmarshaller.getInstance());return invoke(request, options);}
public SetInstanceProtectionResponse setInstanceProtection(SetInstanceProtectionRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(SetInstanceProtectionRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(SetInstanceProtectionResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public abstract ModifyDBProxyResponse modifyDBProxy(ModifyDBProxyRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ModifyDBProxyRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyDBProxyResponseUnmarshaller.getInstance());return invoke(request, options);}
public void Add(char[] output, int offset, int len, int endOffset, int posLength) {if (count == outputs.length) {CharsRef[] next = new CharsRef[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];System.arraycopy(outputs, 0, next, 0, count);outputs = next;}if (count == endOffsets.length) {int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];System.arraycopy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.length) {int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];System.arraycopy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null) {outputs[count] = new CharsRef();}outputs[count].CopyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}
public class FetchLibrariesRequest extends BaseRequest {public FetchLibrariesRequest() {super("CloudPhoto", "2017-07-11", "FetchLibraries", "cloudphoto", "openAPI");this.Protocol = ProtocolType.HTTPS;}}
@Overridepublic boolean Exists() {return objects.exists();}
public FilterOutputStream(java.io.OutputStream out){this.out = out;}
public ScaleClusterRequest() {super("CS", "2015-12-15", "ScaleCluster", "cs", "openAPI");UriPattern = "/clusters/{ClusterId}";Method = MethodType.PUT;}
public IDataValidationConstraint createTimeConstraint(int operatorType, String formula1, String formula2) {return DVConstraint.createTimeConstraint(operatorType, formula1, formula2);}
public abstract ListObjectParentPathsResponse listObjectParentPaths(ListObjectParentPathsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListObjectParentPathsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ListObjectParentPathsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public DescribeCacheSubnetGroupsResponse describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeCacheSubnetGroupsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeCacheSubnetGroupsResponseUnmarshaller.getInstance());return invoke(request, options);}
public void setSharedFormula(boolean flag) { field_5_options = sharedFormula.setShortBoolean(field_5_options, flag); }
public boolean isReuseObjects() { return reuseObjects; }
public abstract IErrorNode AddErrorNode(IToken badToken){ErrorNodeImpl t = new ErrorNodeImpl(badToken);AddChild(t);t.Parent = this;return t;}
import java.util.Map;public class LatvianStemFilterFactory extends Base {public LatvianStemFilterFactory(Map<String, String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}}
public RemoveSourceIdentifierFromSubscriptionResponse removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){var options = new InvokeOptions();options.setRequestMarshaller(RemoveSourceIdentifierFromSubscriptionRequestMarshaller.getInstance());options.setResponseUnmarshaller(RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.getInstance());return invoke(request, options);}
public static TokenFilterFactory ForName(String name, Map<String, String> args) {return loader.newInstance(name, args);}
public class AddAlbumPhotosRequest extends BaseRequest {public AddAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto", "openAPI");this.Protocol = ProtocolType.HTTPS;}}
public GetThreatIntelSetResponse getThreatIntelSet(GetThreatIntelSetRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetThreatIntelSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetThreatIntelSetResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic TreeFilter clone() { return new AndTreeFilter.Binary(a.clone(), b.clone()); }
@Overridepublic boolean equals(Object o) {return o instanceof ArmenianStemmer;}
@Overridepublic final boolean hasArray() {return protectedHasArray();}
public UpdateContributorInsightsResponse updateContributorInsights(UpdateContributorInsightsRequest request) {var options = new InvokeOptions();options.requestMarshaller = UpdateContributorInsightsRequestMarshaller.INSTANCE;options.responseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public void UnwriteProtectWorkbook() {records.remove(fileShare);records.remove(writeProtect);fileShare = null;writeProtect = null;}
public SolrSynonymParser(boolean dedup, boolean expand, Analyzer analyzer) {super(dedup, analyzer);this.expand = expand;}
public RequestSpotInstancesResponse requestSpotInstances(RequestSpotInstancesRequest request){var options = new InvokeOptions();options.requestMarshaller = RequestSpotInstancesRequestMarshaller.INSTANCE;options.responseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public byte[] GetObjectData() {return FindObjectRecord().GetObjectData();}
public GetContactAttributesResponse getContactAttributes(GetContactAttributesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetContactAttributesRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetContactAttributesResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String toString() {return getkey() + ": " + getValue();}
public abstract ListTextTranslationJobsResponse listTextTranslationJobs(ListTextTranslationJobsRequest request){var options = new InvokeOptions();options.requestMarshaller = ListTextTranslationJobsRequestMarshaller.INSTANCE;options.responseUnmarshaller = ListTextTranslationJobsResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public GetContactMethodsResponse getContactMethods(GetContactMethodsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetContactMethodsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetContactMethodsResponseUnmarshaller.getInstance());return invoke(request, options);}
public static short LookupIndexByName(String name){FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);if (fd == null){return -1;}return (short)fd.Index;}
public DescribeAnomalyDetectorsResponse describeAnomalyDetectors(DescribeAnomalyDetectorsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeAnomalyDetectorsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeAnomalyDetectorsResponseUnmarshaller.getInstance());return invoke(request, options);}
public static String InsertId(String message, ObjectId changeId) {return InsertId(message, changeId, false);}
@Overridepublic long GetObjectSize(AnyObjectId objectId, int typeHint) {long sz = db.GetObjectSize(this, objectId);if (sz < 0) {if (typeHint == OBJ_ANY) {throw new MissingObjectException(objectId.copy(), "unknown");}throw new MissingObjectException(objectId.copy(), typeHint);}return sz;}
public abstract ImportInstallationMediaResponse importInstallationMedia(ImportInstallationMediaRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ImportInstallationMediaRequestMarshaller.getInstance());options.setResponseUnmarshaller(ImportInstallationMediaResponseUnmarshaller.getInstance());return invoke(request, options);}
public PutLifecycleEventHookExecutionStatusResponse putLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(PutLifecycleEventHookExecutionStatusRequestMarshaller.getInstance());options.setResponseUnmarshaller(PutLifecycleEventHookExecutionStatusResponseUnmarshaller.getInstance());return invoke(request, options);}
public NumberPtg(ILittleEndianInput in1) {field_1_value = in1.readDouble();}
public GetFieldLevelEncryptionConfigResponse getFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetFieldLevelEncryptionConfigRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetFieldLevelEncryptionConfigResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeDetectorResponse describeDetector(DescribeDetectorRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeDetectorRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDetectorResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract ReportInstanceStatusResponse reportInstanceStatus(ReportInstanceStatusRequest request){var options = new InvokeOptions();options.requestMarshaller = ReportInstanceStatusRequestMarshaller.INSTANCE;options.responseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public DeleteAlarmResponse deleteAlarm(DeleteAlarmRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteAlarmRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteAlarmResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic TokenStream create(TokenStream input) {return new PortugueseStemFilter(input);}
public FtCblsSubRecord() {reserved = new byte[ENCODED_SIZE];}
public synchronized boolean remove(Object object){synchronized (mutex){return c.remove(object);}}
public GetDedicatedIpResponse getDedicatedIp(GetDedicatedIpRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetDedicatedIpRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetDedicatedIpResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic String toString() {return precedence + " >= _p";}
public ListStreamProcessorsResponse listStreamProcessors(ListStreamProcessorsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListStreamProcessorsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListStreamProcessorsResponseUnmarshaller.getInstance());return invoke(request, options);}
public DeleteLoadBalancerPolicyRequest(String loadBalancerName, String policyName) {_loadBalancerName = loadBalancerName;_policyName = policyName;}
public WindowProtectRecord(int options) {_options = options;}
public UnbufferedCharStream(int bufferSize){n = 0;data = new int[bufferSize];}
public GetOperationsResponse getOperations(GetOperationsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetOperationsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetOperationsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public void CopyRawTo(byte[] b, int o) {NB.EncodeInt32(b, o, w1);NB.EncodeInt32(b, o + 4, w2);NB.EncodeInt32(b, o + 8, w3);NB.EncodeInt32(b, o + 12, w4);NB.EncodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in1){field_1_h_hold = in1.readShort();field_2_v_hold = in1.readShort();field_3_width = in1.readShort();field_4_height = in1.readShort();field_5_options = in1.readShort();field_6_active_sheet = in1.readShort();field_7_first_visible_tab = in1.readShort();field_8_num_selected_tabs = in1.readShort();field_9_tab_width_ratio = in1.readShort();}
public StopWorkspacesResponse stopWorkspaces(StopWorkspacesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StopWorkspacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopWorkspacesResponseUnmarshaller.getInstance());return invoke(request, options);}
public void close() throws IOException {if (isOpen) {isOpen = false;try {dump();} finally {try {channel.truncate(fileLength);} finally {try {channel.close();} finally {fos.close();}}}}}
public abstract DescribeMatchmakingRuleSetsResponse describeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeMatchmakingRuleSetsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DescribeMatchmakingRuleSetsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public String GetPronunciation(int wordId, char[] surface, int off, int len){return null; }
public String getPath() { return pathStr; }
public static double devsq(double[] v) {double r = Double.NaN;if (v != null && v.length >= 1) {double m = 0;double s = 0;int n = v.length;for (int i = 0; i < n; i++) {s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++) {s += (v[i] - m) * (v[i] - m);}r = (n == 1) ? 0 : s;}return r;}
public DescribeResizeResponse describeResize(DescribeResizeRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeResizeRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeResizeResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean hasPassedThroughNonGreedyDecision() { return passedThroughNonGreedyDecision; }
public int end() { return end(0); }
public void Traverse(ICellHandler handler) {int firstRow = range.getFirstRow();int lastRow = range.getLastRow();int firstColumn = range.getFirstColumn();int lastColumn = range.getLastColumn();int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();IRow currentRow = null;ICell currentCell = null;for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber) {currentRow = sheet.getRow(ctx.rowNumber);if (currentRow == null) {continue;}for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber) {currentCell = currentRow.getCell(ctx.colNumber);if (currentCell == null) {continue;}if (IsEmpty(currentCell) && !traverseEmptyCells) {continue;}ctx.ordinalNumber = (ctx.rowNumber - firstRow) * width + (ctx.colNumber - firstColumn + 1);handler.OnCell(currentCell, ctx);}}}
public int GetReadIndex() { return _ReadIndex; }
@Overridepublic int compareTo(ScoreTerm other) {if (Term.BytesEquals(other.Term)) {return 0;}if (this.Boost == other.Boost) {return other.Term.compareTo(this.Term);} else {return this.Boost.compareTo(other.Boost);}}
public abstract int Normalize(char[] s, int len){for (int i = 0; i < len; i++){switch (s[i]){case FARSI_YEH:case YEH_BARREE:s[i] = YEH;break;case KEHEH:s[i] = KAF;break;case HEH_YEH:case HEH_GOAL:s[i] = HEH;break;case HAMZA_ABOVE:len = StemmerUtil.Delete(s, i, len);i--;break;default:break;}}return len;}
@Overridepublic void Serialize(IIterativeLittleEndianOutput out1) {out1.WriteShort(_options);}
public DiagnosticErrorListener(boolean exactOnly) { this.exactOnly = exactOnly; }
public KeySchemaElement(String attributeName, KeyType keyType) {_attributeName = attributeName;_keyType = keyType;}
public GetAssignmentResponse GetAssignment(GetAssignmentRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetAssignmentRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetAssignmentResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean hasObject AnyObjectId id) {return findOffset(id) != -1;}
public abstract class GroupingSearch {private boolean allGroups;public abstract GroupingSearch SetAllGroups(boolean allGroups);}
public synchronized void setMultiValued(String dimName, boolean v) {if (!fieldTypes.containsKey(dimName)) {fieldTypes.put(dimName, new DimConfig(v));} else {fieldTypes.get(dimName).setIsMultiValued(v);}}
public int GetCellsVal() {int size = 0;for (char c : cells.keySet()) {Cell e = At(c);if (e.cmd >= 0) {size++;}}return size;}
public DeleteVoiceConnectorResponse deleteVoiceConnector(DeleteVoiceConnectorRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteVoiceConnectorRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteVoiceConnectorResponseUnmarshaller.getInstance());return invoke(request, options);}
public DeleteLifecyclePolicyResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteLifecyclePolicyRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteLifecyclePolicyResponseUnmarshaller.getInstance());return invoke(request, options);}
public void Write(byte[] b) {int len = b.length;CheckPosition(len);System.arraycopy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}
public abstract RebaseResult getRebaseResult() { return this.rebaseResult; }
import java.util.stream.IntStream;public static int GetNearestSetSize(int maxNumberOfValuesExpected, float desiredSaturation) {return IntStream.range(0, _usableBitSetSizes.length).map(i -> _usableBitSetSizes[i]).filter(t -> {int numSetBitsAtDesiredSaturation = (int) (t * desiredSaturation);int estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(t, numSetBitsAtDesiredSaturation);return estimatedNumUniqueValues > maxNumberOfValuesExpected;}).findFirst().orElse(-1);}
public DescribeDashboardResponse describeDashboard(DescribeDashboardRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeDashboardRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDashboardResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract CreateSegmentResponse createSegment(CreateSegmentRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateSegmentRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateSegmentResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[DBCELL]\n");buffer.append("    .rowoffset       = ").append(StringUtil.toHexString(RowOffset)).append("\n");for (int k = 0; k < field_2_cell_offsets.length; k++) {buffer.append("    .cell_").append(k).append(" = ").append(HexDump.shortToHex(field_2_cell_offsets[k])).append("\n");}buffer.append("[/DBCELL]\n");return buffer.toString();}
public List<String> getUndeletedList() { return undeletedList; }
@Overridepublic String toString() {return "[INTERFACEEND/]\\n";}
@Overridepublic Object clone() { return this; }
public PlainTextDictionary(TextReader reader) {this.@in = reader;}
public StringBuilder append(CharSequence csq){if (csq == null){appendNull();} else {append0(csq, 0, csq.length());}return this;}
public ListAssociatedStacksResponse listAssociatedStacks(ListAssociatedStacksRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListAssociatedStacksRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListAssociatedStacksResponseUnmarshaller.getInstance());return invoke(request, options);}
public static double avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.length; i < iSize; i++) {s += v[i];}m = s / v.length;s = 0;for (int i = 0, iSize = v.length; i < iSize; i++) {s += Math.abs(v[i] - m);}r = s / v.length;return r;}
public DescribeByoipCidrsResponse describeByoipCidrs(DescribeByoipCidrsRequest request) {var options = new InvokeOptions();options.requestMarshaller = DescribeByoipCidrsRequestMarshaller.INSTANCE;options.responseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public abstract GetDiskResponse getDisk(GetDiskRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetDiskRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDiskResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateDBClusterParameterGroupResponse createDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateDBClusterParameterGroupRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateDBClusterParameterGroupResponseUnmarshaller.INSTANCE);return invoke(request, options);}
import java.nio.CharBuffer;public static CharBuffer wrap(char[] array_1, int start, int charCount) {Arrays.checkOffsetAndCount(array_1.length, start, charCount);CharBuffer buf = new ReadWriteCharArrayBuffer(array_1);buf.position(start);buf.limit(start + charCount);return buf;}
public abstract SubmoduleStatusType getType() { return type; }
public DescribeGameServerGroupResponse describeGameServerGroup(DescribeGameServerGroupRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeGameServerGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeGameServerGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
public java.util.regex.Pattern pattern() { return _pattern; }
public abstract <V> V setValue(V object) {throw new UnsupportedOperationException();}
import java.util.Arrays;public class Stemmer {private StringBuilder buffer;private String[] stemmerGetLastOnPath(String word);public StringBuilder Stem(String word) {String[] cmd = stemmerGetLastOnPath(word);if (cmd == null) return null;buffer.setLength(0);buffer.append(word);Diff.Apply(buffer, Arrays.asList(cmd));if (buffer.length() > 0) return buffer;else return null;}}class Diff {public static void Apply(StringBuilder buffer, List<String> commands) {// Implementation of Apply method}}
public RenameFaceRequest() {super("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto", "openAPI");this.Protocol = ProtocolType.HTTPS;}
public abstract char RequireChar(Map<String, String> args, String name) { return Require(args, name).charAt(0); }
public static String toStringTree(ITree t) { return toStringTree(t, null); }
@Overridepublic String toString() {return "<deleted/>";}
public class GetRepoWebhookLogListRequest extends BaseRequest {public GetRepoWebhookLogListRequest() {super("cr", "2016-06-07", "GetRepoWebhookLogList", "cr", "openAPI");this.UriPattern = "/repos/{RepoNamespace}/{RepoName}/webhooks/{WebhookId}/logs";this.Method = MethodType.GET;}}
public GetJobUnlockCodeResponse getJobUnlockCode(GetJobUnlockCodeRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetJobUnlockCodeRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetJobUnlockCodeResponseUnmarshaller.getInstance());return invoke(request, options);}
public RemoveTagsRequest(String resourceId) {_resourceId = resourceId;}
public short GetGB2312Id(char ch) {try {byte[] buffer = new String(new char[]{ch}).getBytes("GB2312");if (buffer.length != 2) {return -1;}int b0 = (buffer[0] & 0xFF) - 161;int b1 = (buffer[1] & 0xFF) - 161;return (short) (b0 * 94 + b1);} catch (UnsupportedEncodingException e) {throw new RuntimeException(e.toString(), e);}}
public abstract class NGitBatchRefUpdate {protected List<ReceiveCommand> commands = new ArrayList<>();public abstract NGitBatchRefUpdate AddCommand(Collection<ReceiveCommand> cmd);}
public int CheckExternSheet(int sheetNumber){return OrCreateLinkTable.CheckExternSheet(sheetNumber);}
@Overridepublic boolean equals(Object object) {return c.equals(object);}
public Query build(IQueryNode queryNode) {AnyQueryNode andNode = (AnyQueryNode) queryNode;BooleanQuery bQuery = new BooleanQuery();List<IQueryNode> children = andNode.getChildren();if (children != null) {for (IQueryNode child : children) {Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null) {Query query = (Query) obj;try {bQuery.add(query, Occur.SHOULD);} catch (BooleanQuery.TooManyClausesException ex) {throw new QueryNodeException(new Message(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());return bQuery;}
public DescribeStreamProcessorResponse describeStreamProcessor(DescribeStreamProcessorRequest request){var options = new InvokeOptions();options.requestMarshaller = DescribeStreamProcessorRequestMarshaller.getInstance();options.responseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.getInstance();return invoke(request, options);}
public abstract DescribeDashboardPermissionsResponse describeDashboardPermissions(DescribeDashboardPermissionsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeDashboardPermissionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDashboardPermissionsResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract Ref Peel(Ref @ref) {try {return RefDatabase.Peel(@ref);} catch (IOException e) {return @ref;}}
@Overridepublic long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + 2 * RamUsageEstimator.NUM_BYTES_INT32 + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.sizeOf(blocks);}
public abstract GetDomainSuggestionsResponse getDomainSuggestions(GetDomainSuggestionsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetDomainSuggestionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDomainSuggestionsResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeStackEventsResponse describeStackEvents(DescribeStackEventsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeStackEventsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeStackEventsResponseUnmarshaller.getInstance());return invoke(request, options);}
public void SetRule(int idx, IConditionalFormattingRule cfRule) { SetRule(idx, (HSSFConditionalFormattingRule)cfRule); }
public CreateResolverRuleResponse createResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateResolverRuleRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateResolverRuleResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public SeriesIndexRecord(RecordInputStream in1) {field_1_index = in1.readShort();}
public GetStylesRequest() {super("lubancloud", "2018-05-09", "GetStyles", "luban", "openAPI");this.Method = MethodType.POST;}
@Overridepublic void Serialize(ILittleEndianOutput out1) {out1.WriteShort(field_1_gridset_flag);}
@Overridepublic boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (getClass() != obj.getClass()) {return false;}Toffs other = (Toffs) obj;if (StartOffset != other.StartOffset) {return false;}if (EndOffset != other.EndOffset) {return false;}return true;}
public CreateGatewayGroupResponse createGatewayGroup(CreateGatewayGroupRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateGatewayGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateGatewayGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateParticipantConnectionResponse createParticipantConnection(CreateParticipantConnectionRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateParticipantConnectionRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateParticipantConnectionResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public static double irr(double[] income) { return irr(income, 0.1); }
public RegisterWorkspaceDirectoryResponse registerWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.setRequestMarshaller(RegisterWorkspaceDirectoryRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(RegisterWorkspaceDirectoryResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public abstract class RevertCommand {private List<Ref> commits = new ArrayList<>();public RevertCommand include(Ref commit) {checkCallable();commits.add(commit);return this;}protected void checkCallable() {// Implementation of checkCallable}}
@Overridepublic ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String iNumber = OperandResolver.coerceValueToString(veText1);Pattern complexNumberPattern = Pattern.compile(COMPLEX_NUMBER_PATTERN);Matcher m = complexNumberPattern.matcher(iNumber);boolean result = m.matches() && m.group(0).length() > 0;String imaginary = "";if (result) {String imaginaryGroup = m.group(5);boolean hasImaginaryPart = imaginaryGroup.equals("i") || imaginaryGroup.equals("j");if (imaginaryGroup.length() == 0) {return new StringEval(String.valueOf(0));}if (hasImaginaryPart) {String sign = "";String imaginarySign = m.group(GROUP3_IMAGINARY_SIGN);if (imaginarySign.length() != 0 && !imaginarySign.equals("+")) {sign = imaginarySign;}String groupImaginaryNumber = m.group(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE);if (groupImaginaryNumber.length() != 0) {imaginary = sign + groupImaginaryNumber;} else {imaginary = sign + "1";}}} else {return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}
public E pollLast() {java.util.Map.Entry<E, Object> entry = backingMap.pollLastEntry();return (entry == null) ? null : entry.getKey();}
public int ReadUShort() {int ch1 = ReadUByte();int ch2 = ReadUByte();return (ch2 << 8) + (ch1 << 0);}
public ModifySnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute, OperationType operationType){_snapshotId = snapshotId;_attribute = attribute;_operationType = operationType;}
public ListBonusPaymentsResponse listBonusPayments(ListBonusPaymentsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListBonusPaymentsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListBonusPaymentsResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic <V> V Get(char[] text) {if (text == null) {throw new NullPointerException("text");}return null;}
@Overridepublic TokenStream create(TokenStream input) {var commonGrams = (CommonGramsFilter) super.create(input);return new CommonGramsQueryFilter(commonGrams);}
public String getPath() { return path; }
public InitiateMultipartUploadResponse initiateMultipartUpload(InitiateMultipartUploadRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(InitiateMultipartUploadRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(InitiateMultipartUploadResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public StringBuilder insert(int offset, int i) {insert0(offset, Integer.toString(i));return this;}
@Overridepublic void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int)(((long)((block >>> shift)) & 3));}}}
@Overridepublic TokenStream create(TokenStream input) {return new ElisionFilter(input, articles);}
public boolean eat(Row in, int[] remap){int sum = 0;for (Cell c : in.cells.values()){sum += c.cnt;if (c.ref >= 0){if (remap[c.ref] == 0){c.ref = -1;}}}int frame = sum / 10;boolean live = false;for (Cell c : in.cells.values()){if (c.cnt < frame && c.cmd >= 0){c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.ref >= 0){live |= true;}}return !live;}
public Token GetToken(int index){Token t = Token;for (int i = 0; i < index; i++){if (t.Next != null) t = t.Next;else t = t.Next = TokenSource.GetNextToken();}return t;}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append(" [ARRAY]\n");sb.append(" range=").append(range.toString()).append("\n");sb.append(" options=").append(HexDump.shortToHex(options)).append("\n");sb.append(" notUsed=").append(HexDump.intToHex(field3notUsed)).append("\n");sb.append(" formula:\n");Ptg[] ptgs = formula.getTokens();for (int i = 0; i < ptgs.length; i++) {Ptg ptg = ptgs[i];sb.append(ptg.toString()).append(ptg.getRVAType()).append("\n");}sb.append("]");return sb.toString();}
public GetFolderResponse getFolder(GetFolderRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetFolderRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetFolderResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract void add(int location, E object);
public PositiveScoresOnlyCollector(ICollector c) { this.c = c; }
public class CreateRepoBuildRuleRequest extends BaseRequest {public CreateRepoBuildRuleRequest() {super("cr", "2016-06-07", "CreateRepoBuildRule", "cr", "openAPI");UriPattern = "/repos/{RepoNamespace}/{RepoName}/rules";Method = MethodType.PUT;}}
public BaseRef(RefEval re) {_refEval = re;_areaEval = null;_firstRowIndex = re.getRow();_firstColumnIndex = re.getColumn();_height = 1;_width = 1;}
public DrawingManager2(EscherDggRecord dgg) {this.dgg = dgg;}
@Overridepublic void Reset() {if (!First) {Reset(raw);}}
public java.nio.charset.CharsetDecoder reset() { status = INIT; implReset(); return this; }
import java.io.BufferedReader;import java.io.IOException;public class CustomBufferedReader extends Reader {private final Reader in;private final char[] buf;public CustomBufferedReader(Reader in, int size) throws IOException {super(in);if (size <= 0) {throw new IllegalArgumentException("size <= 0");}this.in = in;this.buf = new char[size];}// Implement other methods of BufferedReader here}
public DescribeCodeRepositoryResponse describeCodeRepository(DescribeCodeRepositoryRequest request){var options = new InvokeOptions();options.requestMarshaller = DescribeCodeRepositoryRequestMarshaller.INSTANCE;options.responseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public CreateDBSubnetGroupResponse createDBSubnetGroup(CreateDBSubnetGroupRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateDBSubnetGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDBSubnetGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract class RenameBranchCommand {private String oldName;public RenameBranchCommand setOldName(String oldName) {checkCallable();this.oldName = oldName;return this;}protected abstract void checkCallable();}
public abstract class NGitApiDeleteBranchCommand {private boolean force;public abstract void CheckCallable();public NGitApiDeleteBranchCommand SetForce(boolean force) {CheckCallable();this.force = force;return this;}}
public abstract StopCompilationJobResponse stopCompilationJob(StopCompilationJobRequest request){var options = new InvokeOptions();options.setRequestMarshaller(StopCompilationJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopCompilationJobResponseUnmarshaller.getInstance());return invoke(request, options);}
public synchronized void incrementSecondaryProgressBy(int diff) {setSecondaryProgress(mSecondaryProgress + diff);}
@Overridepublic int[] Clear() {return bytesStart = null;}
public String getRawPath() { return path; }
public GetUserSourceAccountRequest() {super("cr", "2016-06-07", "GetUserSourceAccount", "cr", "openAPI");UriPattern = "/users/sourceAccount";Method = MethodType.GET;}
public CreateExportJobResponse createExportJob(CreateExportJobRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateExportJobRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateExportJobResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public CreateDedicatedIpPoolResponse createDedicatedIpPool(CreateDedicatedIpPoolRequest request){var options = new InvokeOptions();options.requestMarshaller = CreateDedicatedIpPoolRequestMarshaller.INSTANCE;options.responseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.INSTANCE;return invoke(request, options);}
@Overridepublic boolean equals(Object obj) {if (this == obj) return true;if (obj == null) return false;if (obj instanceof HSSFCellStyle) {HSSFCellStyle other = (HSSFCellStyle) obj;if (_format == null) {if (other._format != null) return false;} else if (!_format.equals(other._format)) return false;if (index != other.index) return false;return true;}return false;}
public ReleaseHostsResponse releaseHosts(ReleaseHostsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ReleaseHostsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ReleaseHostsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic boolean equals(Object object) {if (this == object) {return true;}if (object instanceof Set<?>) {Set<?> s = (Set<?>) object;try {return size() == s.size() && containsAll(s);} catch (NullPointerException e) {return false;} catch (ClassCastException e) {return false;}}return false;}
public void setRefLogMessage(String msg, boolean appendStatus) {if (msg == null && !appendStatus) {disableRefLog();} else {if (msg == null && appendStatus) {refLogMessage = "";refLogIncludeResult = true;} else {refLogMessage = msg;refLogIncludeResult = appendStatus;}}}
public StreamIDRecord(RecordInputStream in1) { idstm = in1.readShort(); }
public RecognizeCarRequest() {super("visionai-poc", "2020-04-08", "RecognizeCar");this.Method = MethodType.POST;}
public final native java.nio.ByteOrder order();
public abstract int getAheadCount();
public boolean isNewFragment() { return false; }
public GetCloudFrontOriginAccessIdentityConfigResponse getCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic boolean Matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return token == symbol;}
public DeleteTransitGatewayResponse deleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteTransitGatewayRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteTransitGatewayResponseUnmarshaller.INSTANCE);return invoke(request, options);}
import java.util.Arrays;public class Main {public static double[] Grow(double[] array, int minSize) {assert minSize >= 0 : "size must be positive (got " + minSize + "): likely integer overflow?";if (array.length < minSize) {double[] newArray = new double[Oversize(minSize, RamUsageEstimator.NUM_BYTES_DOUBLE)];System.arraycopy(array, 0, newArray, 0, array.length);return newArray;} else {return array;}}private static int Oversize(int size, int overheadPerElement) {// Placeholder for actual implementation of Oversize methodreturn size + overheadPerElement;}private static class RamUsageEstimator {public static final int NUM_BYTES_DOUBLE = 8;}}
public class CreateTransactionRequest extends BaseRequest {public CreateTransactionRequest() {super("CloudPhoto", "2017-07-11", "CreateTransaction", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}}
public abstract NGit.BatchRefUpdate setRefLogIdent(PersonIdent pi) { refLogIdent = pi; return this; }
public GetLaunchTemplateDataResponse getLaunchTemplateData(GetLaunchTemplateDataRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetLaunchTemplateDataRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetLaunchTemplateDataResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public ParseInfo(ProfilingATNSimulator atnSimulator) { this.atnSimulator = atnSimulator; }
public class SimpleQQParser {private String[] qqNames;private String indexField;public SimpleQQParser(String[] qqNames, String indexField) {this.qqNames = qqNames;this.indexField = indexField;}}
public PromoteReadReplicaDBClusterResponse promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request){var options = new InvokeOptions();options.setRequestMarshaller(PromoteReadReplicaDBClusterRequestMarshaller.getInstance());options.setResponseUnmarshaller(PromoteReadReplicaDBClusterResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeCapacityReservationsResponse describeCapacityReservations(DescribeCapacityReservationsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeCapacityReservationsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeCapacityReservationsResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String toString() {return "IndexSearcher(" + reader + "; executor=" + executor + ")";}
@Overridepublic boolean IncrementToken() {return false;}
public void Serialize(LittleEndianOutput out1){out1.writeShort((short)(main + 1));out1.writeShort(subFrom);out1.writeShort(subTo);}
@Overridepublic void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new UnsupportedOperationException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i) {long block = ReadInt64(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}
public boolean IsExpectedToken(int symbol) {ATN atn = Interpreter.atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states.get(State);IntervalSet following = atn.NextTokens(s);if (following.contains(symbol)) {return true;}if (!following.contains(TokenConstants.EPSILON)) {return false;}while (ctx != null && ctx.invokingState >= 0 && following.contains(TokenConstants.EPSILON)) {ATNState invokingState = atn.states.get(ctx.invokingState);RuleTransition rt = (RuleTransition) invokingState.transition(0);following = atn.NextTokens(rt.followState);if (following.contains(symbol)) {return true;}ctx = (ParserRuleContext) ctx.getParent();}if (following.contains(TokenConstants.EPSILON) && symbol == TokenConstants.EOF) {return true;}return false;}
public UpdateStreamResponse updateStream(UpdateStreamRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(UpdateStreamRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateStreamResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = TranslateErrorCodeToErrorTypeValue(e.GetErrorEval().GetErrorCode());return new NumberEval(result);}}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [").append(_index).append(" ").append(_name).append("]");return sb.toString();}
public ListAssignmentsForHITResponse listAssignmentsForHIT(ListAssignmentsForHITRequest request) {var options = new InvokeOptions();options.requestMarshaller = ListAssignmentsForHITRequestMarshaller.INSTANCE;options.responseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public DeleteAccessControlRuleResponse deleteAccessControlRule(DeleteAccessControlRuleRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteAccessControlRuleRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteAccessControlRuleResponseUnmarshaller.getInstance());return invoke(request, options);}
public FST.Arc<Long> GetFirstArc(FST.Arc<Long> arc){return fst.GetFirstArc(arc);}
@Overridepublic void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (int)(((long)((block >>> shift)) & 65535));}}}
@Overridepublic long skip(long charCount) {if (charCount < 0) {throw new IllegalArgumentException("charCount < 0: " + charCount);}synchronized (@lock) {checkNotClosed();if (charCount == 0) {return 0;}long inSkipped;int availableFromBuffer = buf.length - pos;if (availableFromBuffer > 0) {long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0) {pos += (int)(charCount);return charCount;}pos += availableFromBuffer;inSkipped = @in.skip(requiredFromIn);} else {inSkipped = @in.skip(charCount);}return inSkipped + availableFromBuffer;}}
public abstract Map<String, Ref> getRefsMap() { return advertisedRefs; }
public abstract UpdateApiKeyResponse updateApiKey(UpdateApiKeyRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateApiKeyRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(UpdateApiKeyResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic ObjectStream OpenStream() {WindowCursor wc = new WindowCursor(db);InputStream in;try {in = new PackInputStream(pack, objectOffset + headerLength, wc);} catch (IOException e) {return wc.Open(GetObjectId(), type).OpenStream();}in = new BufferedInputStream(new InflaterInputStream(in, wc.Inflater(), 8192), 8192);return new ObjectStream.Filter(type, size, in);}
import java.util.ArrayList;public class MyClass {private Object[] array;public MyClass() {this.array = libcore.util.EmptyArray.OBJECT;}}
public UpdateDetectorVersionResponse updateDetectorVersion(UpdateDetectorVersionRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateDetectorVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateDetectorVersionResponseUnmarshaller.getInstance());return invoke(request, options);}
public void Resize() { Resize(Double.MAX_VALUE); }
import java.util.Collection;public class RevFlagSet {public RevFlagSet(Collection<RevFlag> s) {this();this.addAll(s);}private void addAll(Collection<RevFlag> s) {// Implementation of adding all elements from the collection to the set}}
@Overridepublic int size() {return this._enclosing.size();}
@Overridepublic final long getLong() {int newPosition = _position + libcore.io.SizeOf.LONG;if (newPosition > _limit) {throw new java.nio.BufferUnderflowException();}long result = libcore.io.Memory.peekLong(backingArray, offset + _position, _order);_position = newPosition;return result;}
public StringBuilder insert(int offset, long l) { insert0(offset, Long.toString(l)); return this; }
public TurkishLowerCaseFilter(TokenStream @in) {super(@in);termAtt = addAttribute(ICharTermAttribute.class);}
import java.util.HashMap;import java.util.Map;public class Parser {public static class ParseTreeMatch {private final IParseTree tree;private final ParseTreePattern pattern;private final Map<String, IParseTree> labels;private final IParseTree mismatchedNode;public ParseTreeMatch(IParseTree tree, ParseTreePattern pattern, Map<String, IParseTree> labels, IParseTree mismatchedNode) {this.tree = tree;this.pattern = pattern;this.labels = labels;this.mismatchedNode = mismatchedNode;}// Getters for fieldspublic IParseTree getTree() { return tree; }public ParseTreePattern getPattern() { return pattern; }public Map<String, IParseTree> getLabels() { return labels; }public IParseTree getMismatchedNode() { return mismatchedNode; }}public static class IParseTree {}public static class ParseTreePattern {}public static class MultiMap<K, V> extends HashMap<K, V> {@Overridepublic V put(K key, V value) {if (!containsKey(key)) {super.put(key, value);} else {throw new RuntimeException("Duplicate key not allowed");}return value;}}public virtual ParseTreeMatch Match(IParseTree tree, ParseTreePattern pattern) {MultiMap<String, IParseTree> labels = new MultiMap<>();IParseTree mismatchedNode = MatchImpl(tree, pattern.PatternTree, labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}private IParseTree MatchImpl(IParseTree tree, IParseTree patternTree, MultiMap<String, IParseTree> labels) {// Implementation of MatchImpl goes herereturn null;}}
public void AddIfNoOverlap(WeightedPhraseInfo wpi) {for (WeightedPhraseInfo existWpi : PhraseList) {if (existWpi.IsOffsetOverlap(wpi)) {existWpi.TermsInfos.addAll(wpi.TermsInfos);return;}}PhraseList.add(wpi);}
@Overridepublic Merger NewMerger(Repository db){return new StrategySimpleTwoWayInCore.InCoreMerger(db);}
@Overridepublic float DocScore(int docId, String field, int numPayloadsSeen, float payloadScore) {return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}
@Overridepublic Collection<IParseTree> Evaluate(IParseTree t) {return Trees.FindAllRuleNodes(t, ruleIndex);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[CFRULE]\n");buffer.append("    .condition_type   =").append(field_1_condition_type).append("\n");buffer.append("    OPTION FLAGS=0x").append(String.format("%X", Options)).append("\n");if (ContainsFontFormattingBlock) {buffer.append(_fontFormatting.toString()).append("\n");}if (ContainsBorderFormattingBlock) {buffer.append(_borderFormatting.toString()).append("\n");}if (ContainsPatternFormattingBlock) {buffer.append(_patternFormatting.toString()).append("\n");}buffer.append("    Formula 1 =").append(Arrays.toString(field_17_formula1.Tokens)).append("\n");buffer.append("    Formula 2 =").append(Arrays.toString(field_18_formula2.Tokens)).append("\n");buffer.append("[/CFRULE]\n");return buffer.toString();}
public DescribeServiceUpdatesResponse describeServiceUpdates(DescribeServiceUpdatesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeServiceUpdatesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeServiceUpdatesResponseUnmarshaller.getInstance());return invoke(request, options);}
public String GetNameName(int index){String result = GetNameAt(index).NameName;return result;}
public DescribeLocationsResponse describeLocations() {return describeLocations(new DescribeLocationsRequest());}
@Overridepublic String toString() {return "<phraseslop value='" + getValueString() + "'>" + "\n" + getChild().toString() + "\n</phraseslop>";}
public DirCacheEntry getDirCacheEntry() {return currentSubtree == null ? currentEntry : null;}
public abstract IntBuffer put(int[] src, int srcOffset, int intCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, intCount);if (intCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + intCount; ++i) {put(src[i]);}return this;}
protected void trimToSize() {int s = _size;if (s == array.length) {return;}if (s == 0) {array = EmptyArray.OBJECT;} else {Object[] newArray = new Object[s];System.arraycopy(array, 0, newArray, 0, s);array = newArray;}modCount++;}
public DescribeLocalGatewayVirtualInterfacesResponse describeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeLocalGatewayVirtualInterfacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic TokenStream create(TokenStream input) {return new RussianLightStemFilter(input);}
public int[] ToArray(int[] a) {int[] rval;if (a.length == _limit) {System.arraycopy(_array, 0, a, 0, _limit);rval = a;} else {rval = ToArray();}return rval;}
import java.util.concurrent.TimeUnit;public class BasicSessionCredentials {private String accessKeyId;private String accessKeySecret;private String sessionToken;private long roleSessionDurationSeconds;private long sessionStartedTimeInMilliSeconds;public BasicSessionCredentials(String accessKeyId, String accessKeySecret, String sessionToken, long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new IllegalArgumentException("Access key ID cannot be null.");}if (accessKeySecret == null) {throw new IllegalArgumentException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = System.currentTimeMillis();}}
@Overridepublic ShortBuffer get(short[] dst, int dstOffset, int shortCount) {if (shortCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + _position, dst, dstOffset, shortCount);_position += shortCount;return this;}
public abstract ActivateEventSourceResponse activateEventSource(ActivateEventSourceRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ActivateEventSourceRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ActivateEventSourceResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public DescribeReceiptRuleSetResponse describeReceiptRuleSet(DescribeReceiptRuleSetRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeReceiptRuleSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeReceiptRuleSetResponseUnmarshaller.getInstance());return invoke(request, options);}
public Filter(String name) {_name = name;}
@Overridepublic DoubleBuffer put(double c) {throw new ReadOnlyBufferException();}
public abstract CreateTrafficPolicyInstanceResponse createTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateTrafficPolicyInstanceRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateTrafficPolicyInstanceResponseUnmarshaller.getInstance());return invoke(request, options);}
public class JapaneseIterationMarkCharFilter extends CharFilter {private boolean normalizeKanji;private boolean normalizeKana;private char[] buffer;public JapaneseIterationMarkCharFilter(Reader input, boolean normalizeKanji, boolean normalizeKana) throws IOException {super(input);this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;this.buffer = new char[1024];reset(input);}private void reset(Reader input) throws IOException {input.reset();}}
public void WriteLong(long v) { WriteInt((int)(v >> 0)); WriteInt((int)(v >> 32)); }
import java.util.concurrent.ConcurrentHashMap;import java.util.concurrent.CopyOnWriteArrayList;public class FileResolver {public ConcurrentHashMap<String, Repository> exports = new ConcurrentHashMap<>();public CopyOnWriteArrayList<FilePath> exportBase = new CopyOnWriteArrayList<>();}
public ValueEval GetRef3DEval(Ref3DPtg rptg) {SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.ExternSheetIndex);return new LazyRefEval(rptg.Row, rptg.Column, sre);}
public DeleteDatasetResponse deleteDataset(DeleteDatasetRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteDatasetRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteDatasetResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public StartRelationalDatabaseResponse startRelationalDatabase(StartRelationalDatabaseRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StartRelationalDatabaseRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartRelationalDatabaseResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract DescribeReservedCacheNodesOfferingsResponse describeReservedCacheNodesOfferings() {return describeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}
public static double PMT(double r, int nper, double pv, double fv, int type){double pmt = -r * (pv * Math.pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.pow(1 + r, nper) - 1));return pmt;}
public DescribeDocumentVersionsResponse describeDocumentVersions(DescribeDocumentVersionsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeDocumentVersionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDocumentVersionsResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract ListPublishingDestinationsResponse listPublishingDestinations(ListPublishingDestinationsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListPublishingDestinationsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListPublishingDestinationsResponseUnmarshaller.getInstance());return invoke(request, options);}
public DeleteAccountAliasRequest(String accountAlias) { this._accountAlias = accountAlias; }
public static float[] Grow(float[] array){return Grow(array, 1 + array.length);}
@Overridepublic String OutputToString(Object output) {if (!(output instanceof List)) {return outputs.OutputToString((T) output);} else {List<?> outputList = (List<?>) output;StringBuilder b = new StringBuilder();b.append('[');for (int i = 0; i < outputList.size(); i++) {if (i > 0) {b.append(", ");}b.append(outputs.OutputToString((T) outputList.get(i)));}b.append(']');return b.toString();}}
public void NotifyDeleteCell(ICell cell){_bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell(cell));}
public StringBuilder replace(int start, int end, String str) {replace0(start, end, str);return this;}
public SetIdentityPoolConfigurationResponse setIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(SetIdentityPoolConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(SetIdentityPoolConfigurationResponseUnmarshaller.getInstance());return invoke(request, options);}
public static double kthSmallest(double[] v, int k) {double r = Double.NaN;k--;if (v != null && v.length > k && k >= 0) {Arrays.sort(v);r = v[k];}return r;}
@Overridepublic void Set(int index, long value) {int o = (int)((uint)index >> 5);int b = index & 31;int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}
@Overridepublic String toString() {var children = getChildren();if (children == null || children.size() == 0)return "<boolean operation='and'/>";StringBuilder sb = new StringBuilder();sb.append("<boolean operation='and'>");for (IQueryNode child : children) {sb.append("\n");sb.append(child.toString());}sb.append("\n</boolean>");return sb.toString();}
public int SumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i = fromIx; i < toIx; i++) {result += _ptgs[i].Size;}return result;}
public void setReadonly(boolean readonly) {if (this.readonly && !readonly) {throw new IllegalStateException("can't alter readonly IntervalSet");}this.readonly = readonly;}
public void ClearConsumingCell(FormulaCellCacheEntry cce){if (!_consumingCells.remove(cce)){throw new IllegalStateException("Specified formula cell is not consumed by this cell");}}
@Overridepublic List<E> subList(int start, int end) {synchronized (mutex) {return Collections.synchronizedList(list.subList(start, end));}}
public abstract FileHeader getFileHeader() { return file; }
public AttachLoadBalancersResponse attachLoadBalancers(AttachLoadBalancersRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(AttachLoadBalancersRequestMarshaller.getInstance());options.setResponseUnmarshaller(AttachLoadBalancersResponseUnmarshaller.getInstance());return invoke(request, options);}
public InitiateJobRequest(String accountId, String vaultName, JobParameters jobParameters) {_accountId = accountId;_vaultName = vaultName;_jobParameters = jobParameters;}
@Overridepublic String toString() {return "SPL";}
public ReplaceableAttribute(String name, String value, boolean replace) {_name = name;_value = value;_replace = replace;}
public void Add(IIndexableField field) { fields.add(field); }
public DeleteStackSetResponse deleteStackSet(DeleteStackSetRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteStackSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteStackSetResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetRepoBuildRuleListRequest() {super("cr", "2016-06-07", "GetRepoBuildRuleList", "cr", "openAPI");UriPattern = "/repos/{RepoNamespace}/{RepoName}/rules";Method = MethodType.GET;}
import java.util.Arrays;public class SparseArray {private static final int[] EMPTY_INTS = {};private static final Object[] EMPTY_OBJECTS = {};private int[] mKeys;private Object[] mValues;private int mSize;public SparseArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = initialCapacity == 0 ? EMPTY_INTS : new int[initialCapacity];mValues = initialCapacity == 0 ? EMPTY_OBJECTS : new Object[initialCapacity];mSize = 0;}}
public InvokeServiceRequest() {super("industry-brain", "2018-07-12", "InvokeService");this.Method = MethodType.POST;}
public ListAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto", "openAPI");this.setProtocol(ProtocolType.HTTPS);}
public boolean hasPrevious() { return link != list.voidLink; }
public DeleteHsmConfigurationResponse deleteHsmConfiguration(DeleteHsmConfigurationRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteHsmConfigurationRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteHsmConfigurationResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public CreateLoadBalancerRequest(String loadBalancerName) {_loadBalancerName = loadBalancerName;}
public String getUserInfo() { return decode(userInfo); }
public TagAttendeeResponse tagAttendee(TagAttendeeRequest request){var options = new InvokeOptions();options.setRequestMarshaller(TagAttendeeRequestMarshaller.getInstance());options.setResponseUnmarshaller(TagAttendeeResponseUnmarshaller.getInstance());return invoke(request, options);}
public String getRefName() { return name; }
@Overridepublic WAH8DocIdSet Build() {if (this.wordNum != -1) {AddWord(wordNum, (byte) word);}return super.Build();}
public abstract boolean isSubTotal(int rowIndex, int columnIndex);
public DescribeDBProxiesResponse describeDBProxies(DescribeDBProxiesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeDBProxiesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDBProxiesResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetVoiceConnectorProxyResponse getVoiceConnectorProxy(GetVoiceConnectorProxyRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetVoiceConnectorProxyRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetVoiceConnectorProxyResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public void fromConfig(Config rc) {setPackedGitOpenFiles(rc.getInt("core", null, "packedgitopenfiles", getPackedGitOpenFiles()));setPackedGitLimit(rc.getLong("core", null, "packedgitlimit", getPackedGitLimit()));setPackedGitWindowSize(rc.getInt("core", null, "packedgitwindowsize", getPackedGitWindowSize()));setPackedGitMMAP(rc.getBoolean("core", null, "packedgitmmap", isPackedGitMMAP()));setDeltaBaseCacheLimit(rc.getInt("core", null, "deltabasecachelimit", getDeltaBaseCacheLimit()));long maxMem = Runtime.getRuntime().maxMemory();long sft = rc.getLong("core", null, "streamfilethreshold", getStreamFileThreshold());sft = Math.min(sft, maxMem / 4);sft = Math.min(sft, Integer.MAX_VALUE);setStreamFileThreshold((int)sft);}
import java.util.Date;public class Main {public static Date GetJavaDate(double date) {return GetJavaDate(date, false);}}
public abstract StartPersonTrackingResponse startPersonTracking(StartPersonTrackingRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StartPersonTrackingRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartPersonTrackingResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic int size() {return this._enclosing.size();}
public GetRouteResponse getRoute(GetRouteRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetRouteRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetRouteResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public DeleteClusterResponse deleteCluster(DeleteClusterRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteClusterRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteClusterResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[MMS]\n");buffer.append("    .addMenu        = ").append(StringUtil.toHexString(AddMenuCount)).append("\n");buffer.append("    .delMenu        = ").append(StringUtil.toHexString(DelMenuCount)).append("\n");buffer.append("[/MMS]\n");return buffer.toString();}
public class FileBasedConfig extends Config {private FilePath configFile;private FS fs;private FileSnapshot snapshot;private ObjectId hash;public FileBasedConfig(Config base, FilePath cfgLocation, FS fs) {super(base);this.configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.ZERO_ID;}}
@Overridepublic int Following(int pos) {if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {throw new IllegalArgumentException("offset out of bounds");} else if (0 == sentenceStarts.length) {text.setIndex(text.getBeginIndex());return Done;} else if (pos >= sentenceStarts[sentenceStarts.length - 1]) {text.setIndex(text.getEndIndex());currentSentence = sentenceStarts.length - 1;return Done;} else {currentSentence = (sentenceStarts.length - 1) / 2;MoveToSentenceAt(pos, 0, sentenceStarts.length - 2);text.setIndex(sentenceStarts[++currentSentence]);return Current;}}
public UpdateParameterGroupResponse updateParameterGroup(UpdateParameterGroupRequest request) {var options = new InvokeOptions();options.requestMarshaller = UpdateParameterGroupRequestMarshaller.INSTANCE;options.responseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.INSTANCE;return invoke(request, options);}
@Overridepublic Object clone() {SeriesChartGroupIndexRecord rec = new SeriesChartGroupIndexRecord();rec.field_1_chartGroupIndex = this.field_1_chartGroupIndex;return rec;}
public static double calcDistanceFromErrPct(IShape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0.5) {throw new IllegalArgumentException("distErrPct " + distErrPct + " must be between [0 to 0.5]");}if (distErrPct == 0 || shape instanceof IPoint) {return 0;}IRectangle bbox = shape.getBoundingBox();IPoint ctr = bbox.getCenter();double y = (ctr.getY() >= 0 ? bbox.getMaxY() : bbox.getMinY());double diagonalDist = ctx.distCalc().distance(ctr, bbox.getMaxX(), y);return diagonalDist * distErrPct;}
public abstract int codePointAt(int index){if (index < 0 || index >= count){throw new IndexOutOfBoundsException();}return Sharpen.CharHelper.CodePointAt(value, index, count);}
public void setPasswordVerifier(int passwordVerifier) { this.passwordVerifier = passwordVerifier; }
public ListVaultsRequest(String accountId) {_accountId = accountId;}
public SquashMessageFormatter() {dateFormatter = new GitDateFormatter(GitDateFormatter.Format.DEFAULT);}
public class GetVideoCoverRequest extends BaseRequest {public GetVideoCoverRequest() {super("CloudPhoto", "2017-07-11", "GetVideoCover", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}}
@Overridepublic int lastIndexOf(Object object) {int pos = _size;java.util.LinkedList.Node<E> link = voidNode.prev;if (object != null) {while (link != voidNode) {pos--;if (object.equals(link.data)) {return pos;}link = link.prev;}} else {while (link != voidNode) {pos--;if ((Object)link.data == null) {return pos;}link = link.prev;}}return -1;}
public DescribeSpotFleetRequestsResponse describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeSpotFleetRequestsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeSpotFleetRequestsResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract IndexFacesResponse indexFaces(IndexFacesRequest request){var options = new InvokeOptions();options.requestMarshaller = IndexFacesRequestMarshaller.Instance;options.responseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;return invoke(request, options);}
@Overridepublic BreakIterator getBreakIterator(int script) {switch (script) {case UScript.JAPANESE:return (BreakIterator) cjkBreakIterator.clone();case UScript.MYANMAR:if (myanmarAsWords) {return (BreakIterator) defaultBreakIterator.clone();} else {return (BreakIterator) myanmarSyllableIterator.clone();}default:return (BreakIterator) defaultBreakIterator.clone();}}
@Overridepublic String toString() {StringBuilder b = new StringBuilder();b.append("[DCONREF]\n");b.append("    .ref\n");b.append("        .firstrow   = ").append(firstRow).append("\n");b.append("        .lastrow    = ").append(lastRow).append("\n");b.append("        .firstcol   = ").append(firstCol).append("\n");b.append("        .lastcol    = ").append(lastCol).append("\n");b.append("    .cch            = ").append(charCount).append("\n");b.append("    .stFile\n");b.append("        .h          = ").append(charType).append("\n");b.append("        .rgb        = ").append(ReadablePath).append("\n");b.append("[/DCONREF]\n");return b.toString();}
public abstract int GetPackedGitOpenFiles() { return packedGitOpenFiles; }
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[FEATURE HEADER]\n");buffer.append("[/FEATURE HEADER]\n");return buffer.toString();}
import java.nio.charset.StandardCharsets;public static byte[] GetToUnicodeLE(String string1) {return string1.getBytes(StandardCharsets.UTF_16LE);}
import java.util.List;public List<String> getFooterLines(String keyName) {return getFooterLines(new FooterKey(keyName));}
@Overridepublic void Refresh() {super.Refresh();Rescan();}
@Overridepublic float get(int index){checkIndex(index);return byteBuffer.getFloat(index * libcore.io.SizeOf.FLOAT);}
public DeleteDetectorResponse deleteDetector(DeleteDetectorRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteDetectorRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDetectorResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic int[] Grow() {Debug.assert(bytesStart != null);return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.length + 1);}
public ListExclusionsResponse listExclusions(ListExclusionsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListExclusionsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ListExclusionsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
import java.util.Map;import java.util.HashMap;public class SpatialDocMaker {private static final Map<Integer, SpatialStrategy> spatialStrategyCache = new HashMap<>();public static SpatialStrategy GetSpatialStrategy(int roundNumber) {SpatialStrategy result;if (!spatialStrategyCache.containsKey(roundNumber) || (result = spatialStrategyCache.get(roundNumber)) == null) {throw new IllegalStateException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}}
public RestoreDBClusterToPointInTimeResponse restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(RestoreDBClusterToPointInTimeRequestMarshaller.getInstance());options.setResponseUnmarshaller(RestoreDBClusterToPointInTimeResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic void serialize(ILEtterEndianOutput out1) {out1.writeShort(field_1_categoryDataType);out1.writeShort(field_2_valuesDataType);out1.writeShort(field_3_numCategories);out1.writeShort(field_4_numValues);out1.writeShort(field_5_bubbleSeriesType);out1.writeShort(field_6_numBubbleValues);}
public abstract PostAgentProfileResponse postAgentProfile(PostAgentProfileRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(PostAgentProfileRequestMarshaller.getInstance());options.setResponseUnmarshaller(PostAgentProfileResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract ParseTreePattern compileParseTreePattern(String pattern, int patternRuleIndex) {if (((ITokenStream) inputStream) != null) {ITokenSource tokenSource = ((ITokenStream) inputStream).getTokenSource();if (tokenSource instanceof Lexer) {Lexer lexer = (Lexer) tokenSource;return compileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new UnsupportedOperationException("Parser can't discover a lexer to use");}
public BacktrackDBClusterResponse backtrackDBCluster(BacktrackDBClusterRequest request){var options = new InvokeOptions();options.setRequestMarshaller(BacktrackDBClusterRequestMarshaller.getInstance());options.setResponseUnmarshaller(BacktrackDBClusterResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String getName() {return strategyName;}
public void CopyTo(byte[] b, int o) {FormatHexByte(b, o + 0, w1);FormatHexByte(b, o + 8, w2);FormatHexByte(b, o + 16, w3);FormatHexByte(b, o + 24, w4);FormatHexByte(b, o + 32, w5);}
import java.util.ArrayList;import java.util.List;public class Program {public static List<Integer> LineMap(byte[] buf, int ptr, int end) {List<Integer> map = new ArrayList<>(Math.max(0, (end - ptr) / 36));for (int i = 0; i < map.size(); i++) {map.add(Integer.MIN_VALUE);}while (ptr < end) {ptr = NextLF(buf, ptr);map.add(ptr);}map.add(end);return map;}private static int NextLF(byte[] buf, int ptr) {// Assuming NextLF is a custom method that needs to be implemented// This is just a placeholder implementationreturn ptr + 1; // Example implementation}}
public abstract Set<ObjectId> getAdditionalHaves() { return Collections.emptySet(); }
@Overridepublic long RamBytesUsed() {return _termsCache.values().stream().mapToLong(simpleTextTerms -> (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0).sum();}
public String ToXml(String tab){StringBuilder builder = new StringBuilder();builder.append(tab).append("<").append(RecordName).append(">\n");for (Iterator<EscherRecord> iterator = EscherRecords.iterator(); iterator.hasNext(); ){EscherRecord escherRecord = iterator.next();builder.append(escherRecord.ToXml(tab + "\t"));}builder.append(tab).append("</").append(RecordName).append(">\n");return builder.toString();}
@Overridepublic TokenStream create(TokenStream input) {return new GalicianMinimalStemFilter(input);}
@Overridepublic String toString() {StringBuilder r = new StringBuilder();r.append("Commit");r.append("={\n");r.append("tree ");r.append(treeId != null ? treeId.getName() : "NOT_SET");r.append("\n");for (ObjectId p : parentIds) {r.append("parent ");r.append(p.getName());r.append("\n");}r.append("author ");r.append(author != null ? author.toString() : "NOT_SET");r.append("\n");r.append("committer ");r.append(committer != null ? committer.toString() : "NOT_SET");r.append("\n");if (encoding != null && !encoding.equals(Constants.CHARSET)) {r.append("encoding ");r.append(encoding.name());r.append("\n");}r.append("\n");r.append(message != null ? message : "");r.append("}");return r.toString();}
import java.util.Map;public class IndicNormalizationFilterFactory extends BaseClass {public IndicNormalizationFilterFactory(Map<String, String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}}
public abstract CreateOptionGroupResponse createOptionGroup(CreateOptionGroupRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateOptionGroupRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateOptionGroupResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public AssociateMemberAccountResponse associateMemberAccount(AssociateMemberAccountRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(AssociateMemberAccountRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateMemberAccountResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic void run() {this._enclosing.doRefreshProgress(this.mId, this.mProgress, this.mFromUser, true);this._enclosing.mRefreshProgressRunnable = this;}
public SetTerminationProtectionResponse setTerminationProtection(SetTerminationProtectionRequest request){var options = new InvokeOptions();options.setRequestMarshaller(SetTerminationProtectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(SetTerminationProtectionResponseUnmarshaller.getInstance());return invoke(request, options);}
public String GetErrorHeader(RecognitionException e) {int line = e.getOffendingToken().getLine();int charPositionInLine = e.getOffendingToken().getCharPositionInLine();return "line " + line + ":" + charPositionInLine;}
@Overridepublic CharBuffer asReadOnlyBuffer() {CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf._limit = this._limit;buf._position = this._position;buf._mark = this._mark;buf.byteBuffer.order(byteBuffer.order());return buf;}
public StopSentimentDetectionJobResponse stopSentimentDetectionJob(StopSentimentDetectionJobRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StopSentimentDetectionJobRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(StopSentimentDetectionJobResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public abstract ObjectIdSubclassMap<ObjectId> GetNewObjectIds() {if (newObjectIds != null) {return newObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
protected void clear() {hash = hash(new byte[0]);super.clear();}
@Overridepublic synchronized void reset() {checkNotClosed();if (_mark == -1) {throw new java.io.IOException("Invalid mark");}pos = _mark;}
public RefErrorPtg(ILittleEndianInput in1) {field_1_reserved = in1.readInt();}
public SuspendGameServerGroupResponse suspendGameServerGroup(SuspendGameServerGroupRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(SuspendGameServerGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(SuspendGameServerGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 3) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public class GetRepoRequest extends BaseRequest {public GetRepoRequest() {super("cr", "2016-06-07", "GetRepo", "cr", "openAPI");UriPattern = "/repos/{RepoNamespace}/{RepoName}";Method = MethodType.GET;}}
public void setDate(Date date) {if (date != null) {this.date = DateTools.dateToString(date, DateTools.Resolution.SECOND);} else {this.date = null;}}
@Overridepublic TokenStream create(TokenStream input) {return new GermanMinimalStemFilter(input);}
@Overridepublic Object[] toArray() {return a.clone();}
@Overridepublic void write(char[] buffer, int offset, int len) {java.util.Arrays.checkOffsetAndCount(buffer.length, offset, len);synchronized (@lock) {expand(len);System.arraycopy(buffer, offset, this.buf, this.count, len);this.count += len;}}
public static RevFilter After(long ts){return new CommitTimeRevFilterAfter(ts);}
public DeleteGroupPolicyRequest(String groupName, String policyName){_groupName = groupName;_policyName = policyName;}
public DeregisterTransitGatewayMulticastGroupMembersResponse deregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request) {var options = new InvokeOptions();options.requestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.INSTANCE;options.responseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public abstract BatchDeleteScheduledActionResponse batchDeleteScheduledAction(BatchDeleteScheduledActionRequest request){var options = new InvokeOptions();options.setRequestMarshaller(BatchDeleteScheduledActionRequestMarshaller.getInstance());options.setResponseUnmarshaller(BatchDeleteScheduledActionResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateAlgorithmResponse createAlgorithm(CreateAlgorithmRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateAlgorithmRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateAlgorithmResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public int ReadUByte() { CheckPosition(1); return _buf[_ReadIndex++] & 0xFF; }
public abstract void SetLength(int sz);
public DescribeScalingProcessTypesResponse describeScalingProcessTypes() {return describeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}
public ListResourceRecordSetsResponse listResourceRecordSets(ListResourceRecordSetsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListResourceRecordSetsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListResourceRecordSetsResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic IToken recoverInline(Parser recognizer) {InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.getContext(); context != null; context = (ParserRuleContext) context.getParent()) {context.exception = e;}throw new ParseCanceledException(e);}
public SetTagsForResourceResponse setTagsForResource(SetTagsForResourceRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(SetTagsForResourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(SetTagsForResourceResponseUnmarshaller.getInstance());return invoke(request, options);}
public ModifyStrategyRequest() {super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis", "openAPI");Method = MethodType.POST;}
public DescribeVpcEndpointServicesResponse describeVpcEndpointServices(DescribeVpcEndpointServicesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeVpcEndpointServicesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeVpcEndpointServicesResponseUnmarshaller.getInstance());return invoke(request, options);}
public EnableLoggingResponse enableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.setRequestMarshaller(EnableLoggingRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(EnableLoggingResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic boolean contains(Object o){return this._enclosing.containsValue(o);}
public class SheetRangeIdentifier extends SomeBaseClass {private NameIdentifier _lastSheetIdentifier;public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) {super(bookName, firstSheetIdentifier);this._lastSheetIdentifier = lastSheetIdentifier;}}
public DomainMetadataRequest(String domainName) {_domainName = domainName;}
public ParseException(Token currentToken, int[][] expectedTokenSequences, String[] tokenImage) {super(Initialize(currentToken, expectedTokenSequences, tokenImage));this.CurrentToken = currentToken;this.ExpectedTokenSequences = expectedTokenSequences;this.TokenImage = tokenImage;}
public class FetchPhotosRequest extends BaseRequest {public FetchPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto", "openAPI");this.Protocol = ProtocolType.HTTPS;}}
public PrintWriter writer() { return _writer; }
import java.util.Map;public class NGramTokenizerFactory extends Base {private int minGramSize;private int maxGramSize;public NGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt32(args, "minGramSize", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = getInt32(args, "maxGramSize", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}private int getInt32(Map<String, String> args, String key, int defaultValue) {// Assuming getInt32 is a utility method that converts a string to an integer// and returns a default value if the key is not foundreturn Integer.parseInt(args.getOrDefault(key, String.valueOf(defaultValue)));}}
public boolean IsDirectoryFileConflict() { return dfConflict != null; }
public IndonesianStemFilter(TokenStream input, boolean stemDerivational) {super(input);this.stemDerivational = stemDerivational;termAtt = addAttribute(ICharTermAttribute.class);keywordAtt = addAttribute(IKeywordAttribute.class);}
public CreateTrafficPolicyResponse createTrafficPolicy(CreateTrafficPolicyRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateTrafficPolicyRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateTrafficPolicyResponseUnmarshaller.getInstance());return invoke(request, options);}
public void Serialize(IIterableLittleEndianOutput out1) {out1.writeInt(fSD);out1.writeInt(passwordVerifier);StringUtil.writeUnicodeString(out1, title);out1.write(securityDescriptor);}
public static double Floor(double n, double s){double f;if ((n < 0 && s > 0) || (n > 0 && s < 0) || (s == 0 && n != 0)){f = Double.NaN;} else {f = (n == 0 || s == 0) ? 0 : Math.floor(n / s) * s;}return f;}
public ByteArrayDataOutput(byte[] bytes, int offset, int len) {Reset(bytes, offset, len);}
import java.util.ArrayList;import java.util.List;public static List<ITree> GetChildren(ITree t){List<ITree> kids = new ArrayList<>();for (int i = 0; i < t.getChildCount(); i++){kids.add(t.getChildAt(i));}return kids;}
@Overridepublic void clear() {this._enclosing.clear();}
public RefreshAllRecord(boolean refreshAll) {this(0);RefreshAll = refreshAll;}
public DeleteNamedQueryResponse deleteNamedQuery(DeleteNamedQueryRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteNamedQueryRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteNamedQueryResponseUnmarshaller.INSTANCE);return invoke(request, options);}
import java.util.HashMap;import java.util.Map;public class GraphvizFormatter {private ConnectionCosts costs;private Map<String, String> bestPathMap;private StringBuilder sb = new StringBuilder();public GraphvizFormatter(ConnectionCosts costs) {this.costs = costs;this.bestPathMap = new HashMap<>();sb.append(FormatHeader());sb.append("  init [style=invis]\n");sb.append("  init -> 0.0 [label=\"" + BOS_LABEL + "\"]\n");}}
public class CheckMultiagentRequest extends BaseRequest {public CheckMultiagentRequest() {super("visionai-poc", "2020-04-08", "CheckMultiagent");Method = MethodType.POST;}}
public ListUserProfilesResponse listUserProfiles(ListUserProfilesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListUserProfilesRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ListUserProfilesResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public CreateRelationalDatabaseFromSnapshotResponse createRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) {var options = new InvokeOptions();options.requestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.INSTANCE;options.responseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public StartTaskResponse startTask(StartTaskRequest request){var options = new InvokeOptions();options.setRequestMarshaller(StartTaskRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartTaskResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract Collection<String> getIgnoredPaths() { return ignoredPaths; }
public FeatSmartTag(RecordInputStream in1) { data = in1.readRemainder(); }
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {_action = action;_resourceRecordSet = resourceRecordSet;}
public DeleteImageResponse deleteImage(DeleteImageRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteImageRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteImageResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateConfigurationSetResponse createConfigurationSet(CreateConfigurationSetRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateConfigurationSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateConfigurationSetResponseUnmarshaller.getInstance());return invoke(request, options);}
public Iterator<E> iterator() {Object[] snapshot = elements;return new CopyOnWriteArrayList.CowIterator<>(snapshot, 0, snapshot.length);}
@Overridepublic void VisitContainedRecords(RecordVisitor rv) {if (_recs.size() == 0) {return;}rv.VisitRecord(_bofRec);for (int i = 0; i < _recs.size(); i++) {RecordBase rb = _recs.get(i);if (rb instanceof RecordAggregate) {((RecordAggregate) rb).VisitContainedRecords(rv);} else {rv.VisitRecord((Record) rb);}}rv.VisitRecord(EOFRecord.instance);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[FtCbls ]").append("\n");buffer.append("  size     = ").append(dataSize).append("\n");buffer.append("  reserved = ").append(HexDump.toHex(reserved)).append("\n");buffer.append("[/FtCbls ]").append("\n");return buffer.toString();}
public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, boolean isXBAT) {BATBlock block = new BATBlock(bigBlockSize);if (isXBAT) {block.SetXBATChain(bigBlockSize, POIFSConstants.END_OF_CHAIN);}return block;}
public TagResourceResponse tagResource(TagResourceRequest request){var options = new InvokeOptions();options.setRequestMarshaller(TagResourceRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(TagResourceResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public DeleteMailboxPermissionsResponse deleteMailboxPermissions(DeleteMailboxPermissionsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteMailboxPermissionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteMailboxPermissionsResponseUnmarshaller.getInstance());return invoke(request, options);}
public ListDatasetGroupsResponse listDatasetGroups(ListDatasetGroupsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListDatasetGroupsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListDatasetGroupsResponseUnmarshaller.getInstance());return invoke(request, options);}
public ResumeProcessesResponse resumeProcesses(ResumeProcessesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ResumeProcessesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ResumeProcessesResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetPersonTrackingResponse getPersonTracking(GetPersonTrackingRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetPersonTrackingRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetPersonTrackingResponseUnmarshaller.getInstance());return invoke(request, options);}
public String ToFormulaString(String[] operands){if (space.IsSet(field_1_options)){return operands[0];} else if (optiIf.IsSet(field_1_options)){return ToFormulaString() + "(" + operands[0] + ")";} else if (optiSkip.IsSet(field_1_options)){return ToFormulaString() + operands[0];} else {return ToFormulaString() + "(" + operands[0] + ")";}}
public abstract <T> T Merge(T first, T second);
@Overridepublic String toString() {return this.m_message.getKey() + ": " + getLocalizedMessage();}
public XPath(Parser parser, String path) {this.parser = parser;this.path = path;elements = Split(path);}
public CreateAccountAliasRequest(String accountAlias) {_accountAlias = accountAlias;}
@Overridepublic void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {byte block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((block >>> 7))) & 1;values[valuesOffset++] = ((int)((block >>> 6))) & 1;values[valuesOffset++] = ((int)((block >>> 5))) & 1;values[valuesOffset++] = ((int)((block >>> 4))) & 1;values[valuesOffset++] = ((int)((block >>> 3))) & 1;values[valuesOffset++] = ((int)((block >>> 2))) & 1;values[valuesOffset++] = ((int)((block >>> 1))) & 1;values[valuesOffset++] = block & 1;}}
@Overridepublic PushConnection openPush() {throw new NGit.Errors.NotSupportedException(JGitText.get().pushIsNotSupportedForBundleTransport);}
public static void StrCpy(char[] dst, int di, char[] src, int si){while (src[si] != 0){dst[di++] = src[si++];}dst[di] = (char)0;}
public abstract K getKey() { return mapEntry.getKey(); }
public static int numNonnull(Object[] data) {int n = 0;if (data == null) {return n;}for (Object o : data) {if (o != null) {n++;}}return n;}
@Overridepublic void add(int location, E object){if (location >= 0 && location <= _size){java.util.LinkedList.Node<E> node = null;if (location < (_size / 2)){for (int i = 0; i <= location; i++){node = node == null ? voidNode : node.next;}} else {for (int i = _size; i > location; i--){node = node == null ? voidNode : node.prev;}}java.util.LinkedList.Node<E> previous = node == null ? voidNode : node.prev;java.util.LinkedList.Node<E> newLink = new java.util.LinkedList.Node<>(object, previous, node);previous.next = newLink;if (node != null) node.prev = newLink;_size++;modCount++;} else {throw new IndexOutOfBoundsException();}}
public DescribeDomainResponse describeDomain(DescribeDomainRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeDomainRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDomainResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic void flush() {throw new UnsupportedOperationException();}
import java.util.Map;public class PersianCharFilterFactory extends Base {public PersianCharFilterFactory(Map<String, String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}}
@Overridepublic boolean incrementToken() {if (used) {return false;}clearAttributes();termAttribute.append(value);offsetAttribute.setOffset(0, value.length());used = true;return true;}
import java.nio.*;public static FloatBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new IllegalArgumentException();}return new ReadWriteFloatArrayBuffer(capacity_1);}
public NGit.Diff.Edit After(NGit.Diff.Edit cut){return new NGit.Diff.Edit(cut.endA, endA, cut.endB, endB);}
public UpdateRuleVersionResponse updateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateRuleVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateRuleVersionResponseUnmarshaller.getInstance());return invoke(request, options);}
public ListVoiceConnectorTerminationCredentialsResponse listVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request) {var options = new InvokeOptions();options.requestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.responseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return invoke(request, options);}
public abstract GetDeploymentTargetResponse getDeploymentTarget(GetDeploymentTargetRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetDeploymentTargetRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDeploymentTargetResponseUnmarshaller.getInstance());return invoke(request, options);}
public void setNoChildReport() {letChildReport = false;for (PerfTask task : tasks) {if (task instanceof TaskSequence) {((TaskSequence) task).setNoChildReport();}}}
@Overridepublic E get(int location) {try {return a[location];} catch (ArrayIndexOutOfBoundsException e) {throw new java.util.ArrayList<E>().throwIndexOutOfBoundsException(location, a.length);}}
public DescribeDataSetResponse describeDataSet(DescribeDataSetRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeDataSetRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DescribeDataSetResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public SkipWorkTreeFilter(int treeIdx) { this.treeIdx = treeIdx; }
public DescribeNetworkInterfacesResponse describeNetworkInterfaces() {return describeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}
public boolean contains(int row, int col) {return _firstRow <= row && _lastRow >= row && _firstColumn <= col && _lastColumn >= col;}
@Overridepublic String toString() {return new String(this.chars);}
public abstract PatchType getPatchType() { return patchType; }
@Overridepublic Iterator<K> iterator() {return this._enclosing.keySet().iterator();}
public CreateScriptResponse createScript(CreateScriptRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateScriptRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateScriptResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic BytesRef Next() {termUpto++;if (termUpto >= info.terms.size()) {return null;} else {info.terms.get(info.sortedTerms.get(termUpto), br);return br;}}
@Overridepublic String OutputToString(CharsRef output) {return output.toString();}
public abstract AssociateWebsiteAuthorizationProviderResponse associateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){var options = new InvokeOptions();options.setRequestMarshaller(AssociateWebsiteAuthorizationProviderRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateWebsiteAuthorizationProviderResponseUnmarshaller.getInstance());return invoke(request, options);}
public void unpop(RevCommit c) {BlockRevQueue.Block b = head;if (b == null) {b = free.newBlock();b.resetToMiddle();b.add(c);head = b;tail = b;return;} else {if (b.canUnpop()) {b.unpop(c);return;}}b = free.newBlock();b.resetToEnd();b.unpop(c);b.next = head;head = b;}
import java.util.Map;public class EdgeNGramTokenizerFactory extends TokenizerFactory {private int minGramSize;private int maxGramSize;private String side;public EdgeNGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = getInt(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);side = get(args, "side", EdgeNGramTokenFilter.Side.FRONT.toString());if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}private int getInt(Map<String, String> args, String key, int defaultValue) {return Integer.parseInt(args.getOrDefault(key, String.valueOf(defaultValue)));}private String get(Map<String, String> args, String key, String defaultValue) {return args.getOrDefault(key, defaultValue);}}
public ModifyDBParameterGroupRequest(String dbParameterGroupName, List<Parameter> parameters){_dbParameterGroupName = dbParameterGroupName;_parameters = parameters;}
public GetHostedZoneLimitResponse getHostedZoneLimit(GetHostedZoneLimitRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetHostedZoneLimitRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetHostedZoneLimitResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic void Set(int index, long value) {int o = (int)((index >>> 6));int b = index & 63;int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
@Overridepublic RevFilter clone() { return new CommitterRevFilter.PatternSearch(pattern()); }
@Overridepublic String toString() {return "spans(" + m_term.toString() + ")@" + (m_doc == -1 ? "START" : (m_doc == Integer.MAX_VALUE) ? "END" : m_doc + "-" + m_position);}
public boolean CanAppendMatch() {for (int i = 0; i < heads.size(); i++) {if (heads.get(i) != LastHead.INSTANCE) {return true;}}return false;}
@Overridepublic int lastIndexOf(String subString, int start){synchronized (this){return super.lastIndexOf(subString, start);}}
public DeleteNetworkAclEntryResponse deleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteNetworkAclEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteNetworkAclEntryResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract AssociateMemberToGroupResponse associateMemberToGroup(AssociateMemberToGroupRequest request){var options = new InvokeOptions();options.requestMarshaller = AssociateMemberToGroupRequestMarshaller.INSTANCE;options.responseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public static int Committer(byte[] b, int ptr){int sz = b.length;if (ptr == 0){ptr += 46;}while (ptr < sz && b[ptr] == 'p'){ptr += 48;}if (ptr < sz && b[ptr] == 'a'){ptr = NextLF(b, ptr);}return Match(b, ptr, ObjectChecker.committer);}
public abstract int getLineNumber() { return row; }
public NGit.Api.SubmoduleUpdateCommand addPath(String path) {paths.addItem(path);return this;}
public GetPushTemplateResponse getPushTemplate(GetPushTemplateRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetPushTemplateRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetPushTemplateResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeVaultResponse describeVault(DescribeVaultRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeVaultRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DescribeVaultResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public DescribeVpcPeeringConnectionsResponse describeVpcPeeringConnections() {return describeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}
@Overridepublic ByteBuffer putLong(int index, long value) {throw new UnsupportedOperationException();}
public RegisterDeviceResponse registerDevice(RegisterDeviceRequest request){var options = new InvokeOptions();options.setRequestMarshaller(RegisterDeviceRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(RegisterDeviceResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public static Format byId(int id) {for (Format format : Values) {if (format.getId() == id) {return format;}}throw new IllegalArgumentException("Unknown format id: " + id);}
public DeleteAppResponse deleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteAppRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteAppResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract GetBaiduChannelResponse getBaiduChannel(GetBaiduChannelRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetBaiduChannelRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetBaiduChannelResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public BytesReader getBytesReader() { return fst.getBytesReader(); }
public static boolean isValidSchemeChar(int index, char c) {if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {return true;}return false;}
public ListAppliedSchemaArnsResponse listAppliedSchemaArns(ListAppliedSchemaArnsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListAppliedSchemaArnsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ListAppliedSchemaArnsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
private URI baseUri;public URI getBaseUri() {return baseUri;}public void setBaseUri(URI baseUri) {this.baseUri = baseUri;}
import org.apache.poi.ss.formula.eval.*;import org.apache.poi.ss.usermodel.*;public class MyClass {public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length < 1) {return ErrorEval.VALUE_INVALID;}boolean isA1style;String text;try {ValueEval ve = OperandResolver.getSingleValue(args[0], ec.getRowIndex(), ec.getColumnIndex());text = OperandResolver.coerceValueToString(ve);switch (args.length) {case 1:isA1style = true;break;case 2:isA1style = EvaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}} catch (EvaluationException e) {return e.getErrorEval();}return EvaluateIndirect(ec, text, isA1style);}private boolean EvaluateBooleanArg(ValueEval arg, OperationEvaluationContext ec) throws EvaluationException {// Assuming EvaluateBooleanArg is defined elsewhere in the classreturn OperandResolver.coerceValueToBoolean(arg);}private ValueEval EvaluateIndirect(OperationEvaluationContext ec, String text, boolean isA1style) {// Assuming EvaluateIndirect is defined elsewhere in the classreturn null;}}
public int CompareTo(int[] bs, int p) {int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0) {return cmp;}return NB.CompareUInt32(w5, bs[p + 4]);}
public void RemoveName(int index){names.remove(index);workbook.RemoveName(index);}
public GetQueueAttributesRequest(String queueUrl, List<String> attributeNames) {_queueUrl = queueUrl;_attributeNames = attributeNames;}
public static boolean[] copyOf(boolean[] original, int newLength) {if (newLength < 0) {throw new java.lang.NegativeArraySizeException();}return Arrays.copyOfRange(original, 0, newLength);}
public static void setEnabled(boolean enabled) { ENABLED = enabled; }
public DeleteLogPatternResponse deleteLogPattern(DeleteLogPatternRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteLogPatternRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteLogPatternResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean contains(char[] text, int offset, int length) {return map.containsKey(new String(text, offset, length));}
public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber);}
public boolean handles(String commandLine) {return command.length() + 1 < commandLine.length() && commandLine.charAt(command.length()) == ' ' && commandLine.startsWith(command);}
public static void Register(MergeStrategy imp){Register(imp.getName(), imp);}
public long RamBytesUsed() { return (index != null) ? index.GetSizeInBytes() : 0; }
public class HostedZone {private String _id;private String _name;private String _callerReference;public HostedZone(String id, String name, String callerReference) {this._id = id;this._name = name;this._callerReference = callerReference;}}
public GetFindingsResponse getFindings(GetFindingsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetFindingsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetFindingsResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeTopicsDetectionJobResponse describeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeTopicsDetectionJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeTopicsDetectionJobResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean processMatch(ValueEval eval) {if (eval instanceof NumericValueEval) {if (minimumValue == null) {minimumValue = eval;} else {double currentValue = ((NumericValueEval) eval).getNumberValue();double oldValue = ((NumericValueEval) minimumValue).getNumberValue();if (currentValue < oldValue) {minimumValue = eval;}}}return true;}
@Overridepublic void Write(ILittleEndianOutput out1) {out1.writeByte((byte)(sid + PtgClass));out1.writeShort(field_1_len_ref_subexpression);}
import java.io.File;import org.apache.lucene.store.Directory;import org.apache.lucene.store.FSDirectory;import org.apache.lucene.taxonomy.DirectoryTaxonomyReader;public class Program {public static void main(String[] args) throws Exception {boolean printTree = false;String path = null;for (int i = 0; i < args.length; i++) {if ("-printTree".equals(args[i])) {printTree = true;} else {path = args[i];}}if (args.length != (printTree ? 2 : 1)) {throw new IllegalArgumentException();}try (Directory dir = FSDirectory.open(new File(path));DirectoryTaxonomyReader r = new DirectoryTaxonomyReader(dir)) {PrintStats(r, System.out, printTree);}}private static void PrintStats(DirectoryTaxonomyReader reader, java.io.PrintStream out, boolean printTree) throws Exception {// Implementation of PrintStats method}}
public void setByteValue(byte value) {if (!(FieldsData instanceof Byte)) {throw new IllegalArgumentException("cannot change value type from " + FieldsData.getClass().getName() + " to Byte");}FieldsData = new Byte(value);}
public static int Initialize() { return Initialize(DefaultSeed); }
public CachingDoubleValueSource(ValueSource source) {this.m_source = source;this.m_cache = new HashMap<Integer, Double>();}
public AttributeDefinition(String attributeName, ScalarAttributeType attributeType){_attributeName = attributeName;_attributeType = attributeType;}
import java.util.Collection;public static String Join(Collection<String> parts, String separator){return org.eclipse.jgit.util.StringUtils.join(parts, separator);}
public ListTaskDefinitionFamiliesResponse listTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) {var options = new InvokeOptions();options.requestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.INSTANCE;options.responseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public ListComponentsResponse listComponents(ListComponentsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListComponentsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListComponentsResponseUnmarshaller.getInstance());return invoke(request, options);}
public ActivatePhotosRequest() {super("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto", "openAPI");this.setProtocol(ProtocolType.HTTPS);}
public CreateMatchmakingRuleSetResponse createMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateMatchmakingRuleSetRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateMatchmakingRuleSetResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public abstract ListAvailableManagementCidrRangesResponse listAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListAvailableManagementCidrRangesRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ListAvailableManagementCidrRangesResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public abstract ObjectIdSubclassMap<ObjectId> GetBaseObjectIds() {if (baseObjectIds != null) {return baseObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
public DeletePushTemplateResponse deletePushTemplate(DeletePushTemplateRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeletePushTemplateRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeletePushTemplateResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public CreateDomainEntryResponse createDomainEntry(CreateDomainEntryRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateDomainEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDomainEntryResponseUnmarshaller.getInstance());return invoke(request, options);}
public static int GetEncodedSize(Object[] values){int result = values.length * 1;for (int i = 0; i < values.length; i++){result += GetEncodedSize(values[i]);}return result;}
import java.util.Map;public class OpenNLPTokenizerFactory extends Base {private String sentenceModelFile;private String tokenizerModelFile;public OpenNLPTokenizerFactory(Map<String, String> args) {super(args);sentenceModelFile = require(args, SENTENCE_MODEL);tokenizerModelFile = require(args, TOKENIZER_MODEL);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}private static String require(Map<String, String> args, String key) {// Assuming require function exists or implement it herereturn args.get(key);}private static final String SENTENCE_MODEL = "sentenceModel";private static final String TOKENIZER_MODEL = "tokenizerModel";}
@Overridepublic final int getInt(int index) {checkIndex(index, libcore.io.SizeOf.INT);return libcore.io.Memory.peekInt(backingArray, offset + index, _order);}
public abstract List<Head> GetNextHeads(char c) {if (Matches(c)) {return newHeads;} else {return FileNameMatcher.EMPTY_HEAD_LIST;}}
@Overridepublic ByteBuffer putShort(short value) {throw new UnsupportedOperationException();}
public abstract void writeUnshared(Object object);
public abstract int offsetByCodePoints(int index, int codePointOffset);
import java.util.BitSet;import java.util.List;public class Main {public static int GetUniqueAlt(List<BitSet> altsets) {BitSet all = GetAlts(altsets);if (all.cardinality() == 1) {return all.nextSetBit(0);}return ATN.INVALID_ALT_NUMBER;}private static BitSet GetAlts(List<BitSet> altsets) {// Implementation of GetAlts methodreturn new BitSet();}private static class ATN {public static final int INVALID_ALT_NUMBER = -1;}}
public Date getWhen() { return Sharpen.Extensions.createDate(when); }
public class RuleTagToken {private String ruleName;private int bypassTokenType;private String label;public RuleTagToken(String ruleName, int bypassTokenType, String label) {if (ruleName == null || ruleName.isEmpty()) {throw new IllegalArgumentException("ruleName cannot be null or empty.");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}}
public abstract DisableOrganizationAdminAccountResponse disableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DisableOrganizationAdminAccountRequestMarshaller.getInstance());options.setResponseUnmarshaller(DisableOrganizationAdminAccountResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateRoomResponse createRoom(CreateRoomRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateRoomRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateRoomResponseUnmarshaller.getInstance());return invoke(request, options);}
public DeleteReplicationGroupResponse deleteReplicationGroup(DeleteReplicationGroupRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteReplicationGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteReplicationGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
import java.nio.*;import java.nio.charset.*;public CharBuffer decode(ByteBuffer buffer) {try {return newDecoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE).decode(buffer);} catch (CharacterCodingException ex) {throw new RuntimeException(ex.getMessage(), ex);}}
public Distribution(String id, String status, String domainName){_id = id;_status = status;_domainName = domainName;}
@Overrideprotected Object array() {return protectedArray();}
public DateWindow1904Record(RecordInputStream in1) {field_1_window = in1.readShort();}
public DeleteDBSnapshotRequest(String dbSnapshotIdentifier) {_dbSnapshotIdentifier = dbSnapshotIdentifier;}
public ParserExtension GetExtension(String key){if (key == null || !this.extensions.TryGetValue(key, out ParserExtension value)) return null;return value;}
public void Inform(IResourceLoader loader) {try {if (chunkerModelFile != null) {OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);}} catch (IOException e) {throw new IllegalArgumentException(e.toString(), e);}}
public abstract CompleteVaultLockResponse completeVaultLock(CompleteVaultLockRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CompleteVaultLockRequestMarshaller.getInstance());options.setResponseUnmarshaller(CompleteVaultLockResponseUnmarshaller.getInstance());return invoke(request, options);}
public int[] GetCharIntervals() {return _points.clone();}
public long RamBytesUsed() {return RamUsageEstimator.alignObjectSize(3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF + 2 * RamUsageEstimator.NUM_BYTES_INT32) + RamUsageEstimator.sizeOf(data) + positions.ramBytesUsed() + wordNums.ramBytesUsed();}
public abstract RegisterInstancesWithLoadBalancerResponse registerInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request){var options = new InvokeOptions();options.requestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.INSTANCE;options.responseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public DescribeClusterUserKubeconfigRequest() {super("CS", "2015-12-15", "DescribeClusterUserKubeconfig", "cs", "openAPI");this.UriPattern = "/k8s/[ClusterId]/user_config";this.Method = MethodType.GET;}
public PrecisionRecord(RecordInputStream in1) { field_1_precision = in1.readShort(); }
@Overridepublic void Serialize(LittleEndianOutput out1) {out1.writeShort(LeftRowGutter);out1.writeShort(TopColGutter);out1.writeShort(RowLevelMax);out1.writeShort(ColLevelMax);}
public abstract DeleteVirtualInterfaceResponse deleteVirtualInterface(DeleteVirtualInterfaceRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteVirtualInterfaceRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteVirtualInterfaceResponseUnmarshaller.getInstance());return invoke(request, options);}
public Entry GetEntry(String name) {if (excludes.contains(name)) {throw new FileNotFoundException(name);}Entry entry = directory.getEntry(name);return wrapEntry(entry);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[BACKUP]\n");buffer.append("    .backup          = ").append(StringUtil.toHexString(Backup)).append("\n");buffer.append("[/BACKUP]\n");return buffer.toString();}
public DeleteVoiceConnectorOriginationResponse deleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteVoiceConnectorOriginationRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteVoiceConnectorOriginationResponseUnmarshaller.getInstance());return invoke(request, options);}
public OpenStringBuilder append(char c) {write(c);return this;}
public static long GenerationFromSegmentsFileName(String fileName){if (fileName.equals(IndexFileNames.SEGMENTS, StringComparison.Ordinal)){return 0;} else if (fileName.startsWith(IndexFileNames.SEGMENTS, StringComparison.Ordinal)){return Long.parseLong(fileName.substring(1 + IndexFileNames.SEGMENTS.length()), Character.MAX_RADIX);} else {throw new IllegalArgumentException("fileName \"" + fileName + "\" is not a segments file");}}
import java.text.MessageFormat;public class NGitTransport {public enum TagOpt {AUTO_FOLLOW,// Add other enum values here}public static TagOpt FromOption(String o) {if (o == null || o.length() == 0) {return TagOpt.AUTO_FOLLOW;}for (TagOpt tagopt : TagOpt.values()) {if (tagopt.Option().equals(o)) {return tagopt;}}throw new IllegalArgumentException(MessageFormat.format(JGitText.Get().invalidTagOption, o));}}
public abstract StartContentModerationResponse startContentModeration(StartContentModerationRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StartContentModerationRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartContentModerationResponseUnmarshaller.getInstance());return invoke(new TypeReference<StartContentModerationResponse>() {}, request, options);}
public static String quoteReplacement(String s) {StringBuilder result = new StringBuilder(s.length());for (int i = 0; i < s.length(); i++) {char c = s.charAt(i);if (c == '\\' || c == '$') {result.append('\\');}result.append(c);}return result.toString();}
public void set(V newValue){value = newValue;}
public QueryParserTokenManager(ICharStream stream) {InitBlock();m_input_stream = stream;}
public long ValueFor(double elapsed) {double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return (long)Math.round(val);elsereturn (long)val;}
@Overridepublic LongBuffer get(long[] dst, int dstOffset, int longCount) {byteBuffer.limit(_limit * libcore.io.SizeOf.LONG);byteBuffer.position(_position * libcore.io.SizeOf.LONG);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, longCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, longCount);}this._position += longCount;return this;}
public void removeErrorListeners() {_listeners = new IAntlrErrorListener<Symbol>[0];}
public CommonTokenStream(ITokenSource tokenSource, int channel) {this(tokenSource);this.channel = channel;}
public ListObjectPoliciesResponse listObjectPolicies(ListObjectPoliciesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListObjectPoliciesRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ListObjectPoliciesResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public ObjectToPack(AnyObjectId src, int type) {super(src);flags = type << TYPE_SHIFT;}
public abstract int Stem(char[] s, int len) {int numVowels_Renamed = NumVowels(s, len);for (int i = 0; i < affixes.length; i++) {Affix affix = affixes[i];if (numVowels_Renamed > affix.vc && len >= affix.affix.length() + 3 && StemmerUtil.EndsWith(s, len, affix.affix)) {len -= affix.affix.length();return affix.palatalizes ? Unpalatalize(s, len) : len;}}return len;}
public void Recover(Parser recognizer, RecognitionException e) {if (lastErrorIndex == ((TokenStream)recognizer.getInputStream()).getIndex() && lastErrorStates != null && lastErrorStates.contains(recognizer.getState())) {recognizer.consume();}lastErrorIndex = ((TokenStream)recognizer.getInputStream()).getIndex();if (lastErrorStates == null) {lastErrorStates = new IntervalSet();}lastErrorStates.add(recognizer.getState());IntervalSet followSet = getErrorRecoverySet(recognizer);consumeUntil(recognizer, followSet);}
@Overridepublic String ToFormulaString() {String value = field_3_string;int len = value.length();StringBuilder sb = new StringBuilder(len + 4);sb.append(FORMULA_DELIMITER);for (int i = 0; i < len; i++) {char c = value.charAt(i);if (c == FORMULA_DELIMITER) {sb.append(FORMULA_DELIMITER);}sb.append(c);}sb.append(FORMULA_DELIMITER);return sb.toString();}
public UnlinkFaceRequest() {super("LinkFace", "2018-07-20", "UnlinkFace");this.Protocol = ProtocolType.HTTPS;this.Method = MethodType.POST;}
public class ConfigurationOptionSetting {private String _awsNamespace;private String _optionName;private String _value;public ConfigurationOptionSetting(String awsNamespace, String optionName, String value) {this._awsNamespace = awsNamespace;this._optionName = optionName;this._value = value;}}
@Overridepublic String GetFully(String key) {StringBuilder result = new StringBuilder(m_tries.size() * 2);for (int i = 0; i < m_tries.size(); i++) {String r = m_tries.get(i).GetFully(key);if (r == null || (r.length() == 1 && r.charAt(0) == EOM)) {return result.toString();}result.append(r);}return result.toString();}
public DescribeMountTargetSecurityGroupsResponse describeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeMountTargetSecurityGroupsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeMountTargetSecurityGroupsResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetApiMappingResponse getApiMapping(GetApiMappingRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetApiMappingRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetApiMappingResponseUnmarshaller.getInstance());return invoke(request, options);}
public class HttpRequest {public String Url;public Map<String, String> Headers;public HttpRequest(String strUrl) {Url = strUrl;Headers = new HashMap<>();}}
public MemFuncPtg(int subExprLen) {field_1_len_ref_subexpression = subExprLen;}
import java.io.IOException;import org.apache.lucene.index.IndexReader;import org.apache.lucene.index.MultiFields;import org.apache.lucene.index.Fields;import org.apache.lucene.index.Terms;import org.apache.lucene.index.TermsEnum;import org.apache.lucene.util.PriorityQueue;public class TermStats {// Assume implementation of TermStats class}public class TermStatsQueue extends PriorityQueue<TermStats> {public TermStatsQueue(int maxSize, Comparator<TermStats> comparator) {super(maxSize, comparator);}public void Fill(String field, TermsEnum termsEnum) throws IOException {// Implementation of Fill method}}public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, String field, Comparator<TermStats> comparer) throws IOException {TermStatsQueue tiq = null;if (field != null) {Fields fields = MultiFields.getFields(reader);if (fields == null) {throw new IOException("field " + field + " not found");}Terms terms = fields.terms(field);if (terms != null) {TermsEnum termsEnum = terms.iterator();tiq = new TermStatsQueue(numTerms, comparer);tiq.fill(field, termsEnum);}} else {Fields fields = MultiFields.getFields(reader);if (fields == null) {throw new IOException("no fields found for this index");}tiq = new TermStatsQueue(numTerms, comparer);for (String fieldName : fields.fieldNames()) {Terms terms = fields.terms(fieldName);if (terms != null) {tiq.fill(fieldName, terms.iterator());}}}TermStats[] result = new TermStats[tiq.size()];int count = tiq.size() - 1;while (!tiq.isEmpty()) {result[count] = tiq.pop();count--;}return result;}
public DeleteApnsVoipChannelResponse deleteApnsVoipChannel(DeleteApnsVoipChannelRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteApnsVoipChannelRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteApnsVoipChannelResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public ListFacesResponse listFaces(ListFacesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListFacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListFacesResponseUnmarshaller.getInstance());return invoke(request, options);}
public class ShapeFieldCacheDistanceValueSource {private SpatialContext ctx;private IPoint from;private ShapeFieldCacheProvider<IPoint> provider;private double multiplier;public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier) {this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}}
@Overridepublic char get(int index) {checkIndex(index);return sequence[index];}
public UpdateConfigurationProfileResponse updateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateConfigurationProfileRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateConfigurationProfileResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeLifecycleHooksResponse describeLifecycleHooks(DescribeLifecycleHooksRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeLifecycleHooksRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLifecycleHooksResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeHostReservationsResponse describeHostReservations(DescribeHostReservationsRequest request) {var options = new InvokeOptions();options.requestMarshaller = DescribeHostReservationsRequestMarshaller.INSTANCE;options.responseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public static PredictionContext fromRuleContext(ATN atn, RuleContext outerContext) {if (outerContext == null) {outerContext = ParserRuleContext.EMPTY;}if (outerContext.getParent() == null || outerContext == ParserRuleContext.EMPTY) {return PredictionContext.EMPTY;}PredictionContext parent = PredictionContext.fromRuleContext(atn, outerContext.getParent());ATNState state = atn.states.get(outerContext.invokingState);RuleTransition transition = (RuleTransition) state.transition(0);return parent.getChild(transition.followState.stateNumber);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SXVDEX]\n");buffer.append("    .grbit1 = ").append(HexDump.intToHex(grbit1)).append("\n");buffer.append("    .grbit2 = ").append(HexDump.byteToHex(grbit2)).append("\n");buffer.append("    .citmShow = ").append(HexDump.byteToHex(citmShow)).append("\n");buffer.append("    .isxdiSort = ").append(HexDump.shortToHex(isxdiSort)).append("\n");buffer.append("    .isxdiShow = ").append(HexDump.shortToHex(isxdiShow)).append("\n");buffer.append("    .subName = ").append(subName).append("\n");buffer.append("[/SXVDEX]\n");return buffer.toString();}
@Overridepublic String toString() {StringBuilder r = new StringBuilder();r.append("BlameResult: ");r.append(getResultPath());return r.toString();}
public ListChangeSetsResponse listChangeSets(ListChangeSetsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListChangeSetsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListChangeSetsResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean isAllowNonFastForwards() { return allowNonFastForwards; }
public FeatRecord() {futureHeader = new FtrHeader();futureHeader.RecordType = sid;}
@Overridepublic ShortBuffer put(short c) {throw new ReadOnlyBufferException();}
public void setQuery(String query) {this.query = query;this.m_message = new Message(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, "");}
public abstract StashApplyCommand StashApply() { return new StashApplyCommand(repo); }
import java.util.Collection;import java.util.Map;public Collection NameSet() {return dictionaryNameToID.keySet();}
public static int getEffectivePort(String scheme, int specifiedPort) {if (specifiedPort != -1) {return specifiedPort;}if ("http".equalsIgnoreCase(scheme)) {return 80;} else {if ("https".equalsIgnoreCase(scheme)) {return 443;} else {return -1;}}}
public abstract ListAssessmentTemplatesResponse listAssessmentTemplates(ListAssessmentTemplatesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListAssessmentTemplatesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListAssessmentTemplatesResponseUnmarshaller.getInstance());return invoke(request, options);}
public RestoreFromClusterSnapshotResponse restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request){var options = new InvokeOptions();options.setRequestMarshaller(RestoreFromClusterSnapshotRequestMarshaller.getInstance());options.setResponseUnmarshaller(RestoreFromClusterSnapshotResponseUnmarshaller.getInstance());return invoke(request, options);}
public void AddShape(HSSFShape shape) { shape.setPatriarch(this.getPatriarch()); shape.setParent(this); shapes.add(shape); }
@Overridepublic boolean equals(Object o) {if (this == o) return true;if (o == null || getClass() != o.getClass()) return false;FacetEntry that = (FacetEntry) o;if (count != that.count) return false;if (!value.equals(that.value)) return false;return true;}
public static int Prev(byte[] b, int ptr, char chrA){if (ptr == b.length){--ptr;}while (ptr >= 0){if (b[ptr--] == chrA){return ptr;}}return ptr;}
public boolean isDeltaRepresentation() { return deltaBase != null; }
public abstract IToken EmitEOF() {int cpos = Column;int line = Line;IToken eof = _factory.Create(_tokenFactorySourcePair, TokenConstants.EOF, null, TokenConstants.DefaultChannel, _input.Index, _input.Index - 1, line, cpos);Emit(eof);return eof;}
public UpdateUserRequest(String userName) {this._userName = userName;}
public abstract RevFilter Negate() { return NotRevFilter.Create(this); }
public void setTagger(PersonIdent taggerIdent) {tagger = taggerIdent;}
import java.lang.management.ManagementFactory;import java.lang.management.MemoryMXBean;import java.lang.management.MemoryUsage;public class BufferSize {private long value;public BufferSize(long value) {this.value = value;}public long getValue() {return value;}}public class Program {private static final int MIN_BUFFER_SIZE_MB = 10;private static final int ABSOLUTE_MIN_SORT_BUFFER_SIZE = 1024 * 1024;public static BufferSize Automatic() {long max, total, free;MemoryMXBean memoryMxBean = ManagementFactory.getMemoryMXBean();MemoryUsage heapMemoryUsage = memoryMxBean.getHeapMemoryUsage();MemoryUsage nonHeapMemoryUsage = memoryMxBean.getNonHeapMemoryUsage();max = heapMemoryUsage.getMax() + nonHeapMemoryUsage.getMax();total = heapMemoryUsage.getUsed() + nonHeapMemoryUsage.getUsed();free = Runtime.getRuntime().freeMemory();long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * 1024 * 1024;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes) {if (totalAvailableBytes / 2 > minBufferSizeBytes) {sortBufferByteSize = totalAvailableBytes / 2;} else {sortBufferByteSize = Math.max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.min(Integer.MAX_VALUE, (int) sortBufferByteSize));}public static void main(String[] args) {BufferSize bufferSize = Automatic();System.out.println("Buffer Size: " + bufferSize.getValue());}}
public static int TrimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr])) {ptr--;}return ptr + 1;}
public TopMarginRecord(RecordInputStream in1) {field_1_margin = in1.readDouble();}
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {_infoType = infoType;}
public CreatePlayerSessionsResponse createPlayerSessions(CreatePlayerSessionsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreatePlayerSessionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreatePlayerSessionsResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateProxySessionResponse createProxySession(CreateProxySessionRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateProxySessionRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateProxySessionResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract int GetObjectType();
public String GetScheme() { return scheme; }
@Overridepublic void Characters(char[] ch, int start, int length) {contents.append(new String(ch, start, length));}
public class FetchAlbumTagPhotosRequest extends BaseRequest {public FetchAlbumTagPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto", "openAPI");this.setProtocol(ProtocolType.HTTPS);}}
public DeleteMembersResponse deleteMembers(DeleteMembersRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteMembersRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteMembersResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetContactReachabilityStatusResponse getContactReachabilityStatus(GetContactReachabilityStatusRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetContactReachabilityStatusRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetContactReachabilityStatusResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic boolean remove(Object o) {synchronized (this._enclosing) {int oldSize = this._enclosing._size;this._enclosing.remove(o);return this._enclosing._size != oldSize;}}
public abstract E last() { return backingMap.lastKey(); }
public CreateStreamingDistributionResponse createStreamingDistribution(CreateStreamingDistributionRequest request) {var options = new InvokeOptions();options.requestMarshaller = CreateStreamingDistributionRequestMarshaller.INSTANCE;options.responseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public boolean isAbsolute() { return absolute; }
public DisableAddOnResponse disableAddOn(DisableAddOnRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DisableAddOnRequestMarshaller.getInstance());options.setResponseUnmarshaller(DisableAddOnResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeAliasResponse describeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeAliasRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeAliasResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic void Next(int delta){while (--delta >= 0){if (currentSubtree != null){ptr += currentSubtree.GetEntrySpan();} else {ptr++;}if (Eof()){break;}ParseEntry();}}
@Overridepublic RevFilter clone() {return new AndRevFilter.Binary(a.clone(), b.clone());}
@Overridepublic Reader create(Reader input) {return new PersianCharFilter(input);}
public abstract String Option() { return option; }
@Overridepublic String toString() {StringBuilder sb = new StringBuilder("[");for (var item : this) {if (sb.length() > 1) {sb.append(", ");}sb.append(item);}return sb.append(']').toString();}
public DescribeSignalingChannelResponse describeSignalingChannel(DescribeSignalingChannelRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeSignalingChannelRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeSignalingChannelResponseUnmarshaller.getInstance());return invoke(request, options);}
public AttachStaticIpResponse attachStaticIp(AttachStaticIpRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(AttachStaticIpRequestMarshaller.getInstance());options.setResponseUnmarshaller(AttachStaticIpResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.append(getClass().getName());sb.append(" [").append(crA.formatAsString()).append(':').append(crB.formatAsString()).append("]");return sb.toString();}
public class BloomFilteringPostingsFormat extends PostingsFormat {private final PostingsFormat _delegatePostingsFormat;private final BloomFilterFactory _bloomFilterFactory;public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat, BloomFilterFactory bloomFilterFactory) {super();this._delegatePostingsFormat = delegatePostingsFormat;this._bloomFilterFactory = bloomFilterFactory;}}
public abstract ListTemplatesResponse listTemplates(ListTemplatesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListTemplatesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListTemplatesResponseUnmarshaller.getInstance());return invoke(request, options);}
public class TimerThread extends Thread {private long resolution;private Counter counter;public TimerThread(long resolution, Counter counter) {super("THREAD_NAME");this.resolution = resolution;this.counter = counter;this.setDaemon(true);}}
public DrawingRecord() {recordData = EMPTY_BYTE_ARRAY;}
public abstract ListDirectoriesResponse listDirectories(ListDirectoriesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListDirectoriesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListDirectoriesResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {byte block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((block >>> 7))) & 1;values[valuesOffset++] = ((int)((block >>> 6))) & 1;values[valuesOffset++] = ((int)((block >>> 5))) & 1;values[valuesOffset++] = ((int)((block >>> 4))) & 1;values[valuesOffset++] = ((int)((block >>> 3))) & 1;values[valuesOffset++] = ((int)((block >>> 2))) & 1;values[valuesOffset++] = ((int)((block >>> 1))) & 1;values[valuesOffset++] = block & 1;}}
public abstract GroupingSearch disableCaching() { this.maxCacheRAMMB = null; this.maxDocsToCache = null; return this; }
public static int idealByteArraySize(int need) {for (int i = 4; i < 32; i++) {if (need <= (1 << i) - 12) {return (1 << i) - 12;}}return need;}
public UpdateAssessmentTargetResponse updateAssessmentTarget(UpdateAssessmentTargetRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(UpdateAssessmentTargetRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateAssessmentTargetResponseUnmarshaller.getInstance());return invoke(request, options);}
public ModifyVolumeResponse modifyVolume(ModifyVolumeRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ModifyVolumeRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyVolumeResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic Cell Merge(Cell m, Cell e){if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {Cell c = new Cell(m);c.cnt += e.cnt;return c;} else {return null;}}
@Overridepublic ByteBuffer read(int length, long position) throws IOException {if (position >= size) throw new IllegalArgumentException("Position " + position + " past the end of the file");ByteBuffer dst;int worked = -1;if (writable) {dst = ByteBuffer.allocate(length);worked = 0;} else {fileStream.seek(position);dst = ByteBuffer.allocate(length);worked = IOUtils.readFully(fileStream, dst.array());}if (worked == -1) throw new IllegalArgumentException("Position " + position + " past the end of the file");dst.position(0);return dst;}
public RespondActivityTaskCompletedResponse respondActivityTaskCompleted(RespondActivityTaskCompletedRequest request){var options = new InvokeOptions();options.setRequestMarshaller(RespondActivityTaskCompletedRequestMarshaller.getInstance());options.setResponseUnmarshaller(RespondActivityTaskCompletedResponseUnmarshaller.getInstance());return invoke(request, options);}
public synchronized void incrementProgressBy(int diff) {setProgress(mProgress + diff);}
public abstract class WorkingTreeIterator {public static class MetadataDiff {public static final int EQUAL = 0;public static final int DIFFER_BY_METADATA = 1;public static final int DIFFER_BY_TIMESTAMP = 2;public static final int SMUDGED = 3;}protected abstract long GetEntryLength();protected abstract long GetEntryLastModified();public abstract MetadataDiff CompareMetadata(DirCacheEntry entry) {if (entry.IsAssumeValid) {return MetadataDiff.EQUAL;}if (entry.IsUpdateNeeded) {return MetadataDiff.DIFFER_BY_METADATA;}if (!entry.IsSmudged && entry.Length != (int) GetEntryLength()) {return MetadataDiff.DIFFER_BY_METADATA;}if (IsModeDifferent(entry.RawMode)) {return MetadataDiff.DIFFER_BY_METADATA;}long cacheLastModified = entry.LastModified;long fileLastModified = GetEntryLastModified();if (cacheLastModified % 1000 == 0 || fileLastModified % 1000 == 0) {cacheLastModified = cacheLastModified - cacheLastModified % 1000;fileLastModified = fileLastModified - fileLastModified % 1000;}if (fileLastModified != cacheLastModified) {return MetadataDiff.DIFFER_BY_TIMESTAMP;} else {if (!entry.IsSmudged) {return MetadataDiff.EQUAL;} else {return MetadataDiff.SMUDGED;}}}protected abstract boolean IsModeDifferent(int rawMode);public static class DirCacheEntry {public boolean IsAssumeValid;public boolean IsUpdateNeeded;public boolean IsSmudged;public int Length;public long LastModified;public int RawMode;public DirCacheEntry(boolean assumeValid, boolean updateNeeded, boolean smudged, int length, long lastModified, int rawMode) {IsAssumeValid = assumeValid;IsUpdateNeeded = updateNeeded;IsSmudged = smudged;Length = length;LastModified = lastModified;RawMode = rawMode;}}}
public static NumberRecord ConvertToNumberRecord(RKRecord rk){NumberRecord num = new NumberRecord();num.Column = (rk.Column);num.Row = (rk.Row);num.XFIndex = (rk.XFIndex);num.Value = (rk.RKNumber);return num;}
@Overridepublic CharBuffer put(char[] src, int srcOffset, int charCount) {byteBuffer.limit(_limit * libcore.io.SizeOf.CHAR);byteBuffer.position(_position * libcore.io.SizeOf.CHAR);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, charCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, charCount);}this._position += charCount;return this;}
public int GetCells() {int size = 0;for (char c : cells.keySet()) {Cell e = At(c);if (e.cmd >= 0 || e.ref >= 0) {size++;}}return size;}
import java.util.Dictionary;import java.util.EnumSet;import java.util.Set;public class BeiderMorseFilterFactory extends BaseFilterFactory {private PhoneticEngine engine;private Set<String> languageSet;public BeiderMorseFilterFactory(Dictionary<String, String> args) {super(args);NameType nameType = Enum.valueOf(NameType.class, Get(args, "nameType", NameType.GENERIC.toString()));RuleType ruleType = Enum.valueOf(RuleType.class, Get(args, "ruleType", RuleType.APPROX.toString()));boolean concat = GetBoolean(args, "concat", true);engine = new PhoneticEngine(nameType, ruleType, concat);Set<String> langs = GetSet(args, "languageSet");languageSet = (langs == null || (langs.size() == 1 && langs.contains("auto"))) ? null : LanguageSet.from(langs);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}// Assuming these methods are defined elsewhere in the codebaseprivate <T> T Get(Dictionary<String, String> args, String key, T defaultValue) {// Implementation of Get methodreturn defaultValue;}private boolean GetBoolean(Dictionary<String, String> args, String key, boolean defaultValue) {// Implementation of GetBoolean methodreturn defaultValue;}private Set<String> GetSet(Dictionary<String, String> args, String key) {// Implementation of GetSet methodreturn null;}}
public static double varp(double[] v) {double r = Double.NaN;if (v != null && v.length > 1) {r = devsq(v) / v.length;}return r;}
import java.util.Map;public class PersianNormalizationFilterFactory extends BaseClass {public PersianNormalizationFilterFactory(Map<String, String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}}
import java.util.HashSet;public static WeightedTerm[] GetTerms(Query query, boolean prohibited, String fieldName){var terms = new HashSet<WeightedTerm>();if (fieldName != null){fieldName = fieldName.intern();}GetTerms(query, terms, prohibited, fieldName);return terms.toArray(new WeightedTerm[0]);}
public DeleteDocumentationPartResponse deleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteDocumentationPartRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDocumentationPartResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[CHART]\n");buffer.append("    .x                    = 0x").append(HexDump.toHex(X)).append(" (").append(X).append(" )\n");buffer.append("    .y                    = 0x").append(HexDump.toHex(Y)).append(" (").append(Y).append(" )\n");buffer.append("    .width                = 0x").append(HexDump.toHex(Width)).append(" (").append(Width).append(" )\n");buffer.append("    .height               = 0x").append(HexDump.toHex(Height)).append(" (").append(Height).append(" )\n");buffer.append("[/CHART]\n");return buffer.toString();}
@Overridepublic final short get(int index) {checkIndex(index);return backingArray[offset + index];}
@Overridepublic String toString() {return Image;}
@Overridepublic ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = EvaluateRef(arg0);AreaEval reB = EvaluateRef(arg1);AreaEval result = ResolveRange(reA, reB);if (result == null) {return ErrorEval.NULL_INTERSECTION;}return result;} catch (EvaluationException e) {return e.getErrorEval();}}
public void clear() { weightBySpanQuery.clear(); }
public int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.length() || start < 0) return start;bi.setText(buffer.substring(start).toString());return bi.next() + start;}
public SrndQuery PrimaryQuery(){SrndQuery q;switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk){case RegexpToken.LPAREN:Jj_consume_token(RegexpToken.LPAREN);q = FieldsQuery();Jj_consume_token(RegexpToken.RPAREN);break;case RegexpToken.OR:case RegexpToken.AND:case RegexpToken.W:case RegexpToken.N:q = PrefixOperatorQuery();break;case RegexpToken.TRUNCQUOTED:case RegexpToken.QUOTED:case RegexpToken.SUFFIXTERM:case RegexpToken.TRUNCTERM:case RegexpToken.TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;Jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);return q;}
public DeleteApiKeyResponse deleteApiKey(DeleteApiKeyRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteApiKeyRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteApiKeyResponseUnmarshaller.getInstance());return invoke(request, options);}
public InsertTagsRequest() {super("Ots", "2016-06-20", "InsertTags", "ots", "openAPI");this.Method = MethodType.POST;}
public DeleteUserByPrincipalIdResponse deleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteUserByPrincipalIdRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteUserByPrincipalIdResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract DescribeNetworkInterfacesResponse describeNetworkInterfaces(DescribeNetworkInterfacesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeNetworkInterfacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeNetworkInterfacesResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic int Serialize(int offset, byte[] data, EscherSerializationListener listener) {listener.BeforeRecordSerialize(offset, RecordId, this);LittleEndian.PutShort(data, offset, Options);LittleEndian.PutShort(data, offset + 2, RecordId);LittleEndian.PutInt(data, offset + 4, 8);LittleEndian.PutInt(data, offset + 8, field_1_numShapes);LittleEndian.PutInt(data, offset + 12, field_2_lastMSOSPID);listener.AfterRecordSerialize(offset + 16, RecordId, RecordSize, this);return RecordSize;}
public CreateSecurityConfigurationResponse createSecurityConfiguration(CreateSecurityConfigurationRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateSecurityConfigurationRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateSecurityConfigurationResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public DescribeClientVpnConnectionsResponse describeClientVpnConnections(DescribeClientVpnConnectionsRequest request) {var options = new InvokeOptions();options.requestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.getInstance();options.responseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.getInstance();return invoke(request, options);}
public static void fill(double[] array, double value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}
public boolean hasNext() { return pos < maxColumn; }
public DocsEnum Reset(int[] postings) { this.postings = postings; upto = -2; freq_Renamed = 0; return this; }
public boolean HasAll(RevFlagSet set) { return (flags & set.mask) == set.mask; }
public abstract ModifyAccountResponse modifyAccount(ModifyAccountRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ModifyAccountRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyAccountResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract IToken LT(int k) {LazyInit();if (k == 0) {return null;}if (k < 0) {return Lb(-k);}int i = p + k - 1;Sync(i);if (i >= tokens.size()) {return tokens.get(tokens.size() - 1);}return tokens.get(i);}
public void RemoveSheet(int sheetIndex){if (boundsheets.size() > sheetIndex){records.remove(records.bspos - (boundsheets.size() - 1) + sheetIndex);boundsheets.remove(sheetIndex);FixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for (int i = 0; i < NumNames; i++){NameRecord nr = GetNameRecord(i);if (nr.SheetNumber == sheetNum1Based){nr.SheetNumber = 0;} else if (nr.SheetNumber > sheetNum1Based){nr.SheetNumber = (nr.SheetNumber - 1);}}if (linkTable != null){for (int i = sheetIndex + 1; i < NumSheets + 1; i++){linkTable.RemoveSheet(i);}}}
public void RemoveName(int index){names.remove(index);workbook.RemoveName(index);}
@Overridepublic boolean equals(Object o) {if (!(o instanceof Property)) return false;Property p = (Property) o;Object pValue = p.getValue();long pId = p.getId();if (id != pId || (id != 0 && !TypesAreEqual(type, p.getType()))) return false;if (value == null && pValue == null) return true;if (value == null || pValue == null) return false;Type valueClass = value.getClass();Type pValueClass = pValue.getClass();if (!(valueClass.isAssignableFrom(pValueClass)) && !(pValueClass.isAssignableFrom(valueClass))) return false;if (value instanceof byte[]) return Arrays.equals((byte[]) value, (byte[]) pValue);return value.equals(pValue);}
public GetRepoBuildListRequest() {super("cr", "2016-06-07", "GetRepoBuildList", "cr", "openAPI");UriPattern = "/repos/{RepoNamespace}/{RepoName}/build";Method = MethodType.GET;}
import java.io.ByteArrayOutputStream;import java.io.OutputStreamWriter;public class MessageWriter {private ByteArrayOutputStream buf;private OutputStreamWriter enc;public MessageWriter() {buf = new ByteArrayOutputStream();enc = new OutputStreamWriter(getRawStream(), Constants.CHARSET);}private java.io.InputStream getRawStream() {// Implement this method to return the raw input streamreturn null;}}
public void Append(RecordBase r) {_recs.add(r);}
@Overridepublic void Close() {if (this.Read(this.skipBuffer) != -1 || this.actualSize != this.expectedSize) {throw new CorruptObjectException(String.format(JGitText.Get().packfileCorruptionDetected, JGitText.Get().wrongDecompressedLength));}int used = this._enclosing.bAvail - this.inf.RemainingInput;if (0 < used) {this._enclosing.OnObjectData(this.src, this._enclosing.buf, this.p, used);this._enclosing.Use(used);}this.inf.Reset();}
public DescribeModelPackageResponse describeModelPackage(DescribeModelPackageRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeModelPackageRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeModelPackageResponseUnmarshaller.getInstance());return invoke(request, options);}
public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec instanceof FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord) rec;StringRecord cachedText = null;Type nextClass = rs.PeekNextClass();if (nextClass == StringRecord.class) {cachedText = (StringRecord) rs.GetNext();} else {cachedText = null;}InsertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {InsertCell(rec);}}
@Overridepublic Object clone() {return new DeflateDecompressor();}
public UpdateS3ResourcesResponse updateS3Resources(UpdateS3ResourcesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateS3ResourcesRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(UpdateS3ResourcesResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public class GroupQueryNode {public GroupQueryNode(IQueryNode query) {if (query == null) {throw new QueryNodeError(new Message(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}Allocate();IsLeaf = false;Add(query);}}
@Overridepublic String ToQueryString(IEscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.append("/").append(getFirstPathElement());for (QueryText pathelement : getPathElements(1)) {String value = escaper.Escape(new StringCharSequence(pathelement.Value), CultureInfo.InvariantCulture, EscapeQuerySyntaxType.STRING).toString();path.append("/\"").append(value).append("\"");}return path.toString();}
public void RemoveCellComment() {HSSFComment comment2 = _sheet.findCellComment(_record.getRow(), _record.getColumn());comment = null;if (null == comment2) {return;}((_sheet.getDrawingPatriarch()) instanceof HSSFPatriarch).removeShape(comment2);}
public void Reset() {count = 0;assert forwardCount == 0 : "pos=" + pos + " forwardCount=" + forwardCount;}
public abstract ActivateUserResponse activateUser(ActivateUserRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ActivateUserRequestMarshaller.getInstance());options.setResponseUnmarshaller(ActivateUserResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean isCharsetDetected() {throw new UnsupportedOperationException();}
public ModifySnapshotCopyRetentionPeriodResponse modifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){var options = new InvokeOptions();options.requestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.INSTANCE;options.responseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public DeleteClusterSubnetGroupResponse deleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteClusterSubnetGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteClusterSubnetGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
public static String Decode(byte[] buffer) { return Decode(buffer, 0, buffer.length); }
public abstract int getDefaultPort();
public StopTaskResponse stopTask(StopTaskRequest request){var options = new InvokeOptions();options.setRequestMarshaller(StopTaskRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(StopTaskResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic void SeekExact(BytesRef target, TermState otherState) {if (!target.equals(term_Renamed)) {state.copyFrom(otherState);term_Renamed = BytesRef.deepCopyOf(target);seekPending = true;}}
public SeriesToChartGroupRecord(RecordInputStream in1) {field_1_chartGroupIndex = in1.readShort();}
public static void writeUnicodeStringFlagAndData(OutputStream out1, String value) throws IOException {boolean is16Bit = hasMultibyte(value);out1.write(is16Bit ? 0x01 : 0x00);if (is16Bit) {putUnicodeLE(value, out1);} else {putCompressedUnicode(value, out1);}}
public virtual AuthorizeSecurityGroupIngressResponse authorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request){var options = new InvokeOptions();options.requestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.INSTANCE;options.responseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public void AddFile(String file) {CheckFileNames(new String[] { file });setFiles.add(file);}
public abstract void setSize(int width, int height){mWidth = width;mHeight = height;}
public void setPrecedenceFilterSuppressed(boolean value) {if (value) {this.reachesIntoOuterContext |= SUPPRESS_PRECEDENCE_FILTER;} else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}
public IntervalSet Look(ATNState s, RuleContext ctx) {return Look(s, null, ctx);}
@Overridepublic void Serialize(ILittleEndianOutput out1) {out1.WriteShort(OptionFlags);out1.WriteShort(RowHeight);}
public Builder(boolean dedup) { this.dedup = dedup; }
import java.util.Hashtable;public Hashtable(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException("Load factor: " + loadFactor);}}
public abstract Object Get(String key) {int bucket = normalCompletion.GetBucket(key);return bucket == -1 ? null : bucket;}
public abstract ListHyperParameterTuningJobsResponse listHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.requestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.INSTANCE;options.responseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public abstract DeleteTableResponse DeleteTable(String tableName) {var request = new DeleteTableRequest();request.setTableName(tableName);return DeleteTable(request);}
protected boolean lessThan(TextFragment fragA, TextFragment fragB) {if (fragA.score == fragB.score)return fragA.fragNum > fragB.fragNum;elsereturn fragA.score < fragB.score;}
public void FreeBefore(int pos){assert pos >= 0;assert pos <= nextPos;int newCount = nextPos - pos;assert newCount <= count : "newCount=" + newCount + " count=" + count;assert newCount <= buffer.length : "newCount=" + newCount + " buf.length=" + buffer.length;count = newCount;}
public UpdateHITTypeOfHITResponse updateHITTypeOfHIT(UpdateHITTypeOfHITRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateHITTypeOfHITRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateHITTypeOfHITResponseUnmarshaller.getInstance());return invoke(request, options);}
public UpdateRecommenderConfigurationResponse updateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateRecommenderConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateRecommenderConfigurationResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic int compareTo(Object other) {BytesRef br = other instanceof BytesRef ? (BytesRef) other : null;assert br != null;return utf8SortedAsUnicodeSortOrder.compare(this, br);}
public int Stem(char[] s, int len){if (len > 4 && s[len - 1] == 's'){len--;}if (len > 5 && (StemmerUtil.EndsWith(s, len, "ene") || (StemmerUtil.EndsWith(s, len, "ane") && useNynorsk))) {return len - 3;}if (len > 4 && (StemmerUtil.EndsWith(s, len, "er") || StemmerUtil.EndsWith(s, len, "en") || StemmerUtil.EndsWith(s, len, "et") || (StemmerUtil.EndsWith(s, len, "ar") && useNynorsk))) {return len - 2;}if (len > 3){switch (s[len - 1]){case 'a':case 'e':return len - 1;}}return len;}
public DescribeDBSnapshotsResponse describeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeDBSnapshotsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDBSnapshotsResponseUnmarshaller.getInstance());return invoke(request, options);}
import java.util.SortedSet;public class SortedSetDocValuesFacetField extends FacetField {public SortedSetDocValuesFacetField(String dim, String label) {super("dummy", TYPE);FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.dim = dim;this.label = label;}private String dim;private String label;}
public CreateDocumentationPartResponse createDocumentationPart(CreateDocumentationPartRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateDocumentationPartRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDocumentationPartResponseUnmarshaller.getInstance());return invoke(request, options);}
public String GetValue() { return value; }
@Overridepublic ShortBuffer asReadOnlyBuffer() {return duplicate();}
public abstract UpdateDataSourcePermissionsResponse updateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateDataSourcePermissionsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(UpdateDataSourcePermissionsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
import java.util.HashMap;import java.util.Map;public class Record {private static Map<Integer, I_RecordCreator> _recordCreatorsById = new HashMap<>();public static Record CreateSingleRecord(RecordInputStream in1) {if (_recordCreatorsById.containsKey(in1.getSid())) {I_RecordCreator constructor = _recordCreatorsById.get(in1.getSid());return constructor.create(in1);} else {return new UnknownRecord(in1);}}}
@Overridepublic int getCount() {return this._enclosing.mTabLayout.getChildCount();}
public DeleteApplicationReferenceDataSourceResponse deleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteApplicationReferenceDataSourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteApplicationReferenceDataSourceResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateProjectVersionResponse createProjectVersion(CreateProjectVersionRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateProjectVersionRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateProjectVersionResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic IntBuffer slice() {return new ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + _position);}
@Overridepublic final byte get() {throw new UnsupportedOperationException();}
@Overridepublic LongBuffer put(int index, long c) {checkIndex(index);backingArray[offset + index] = c;return this;}
public class StoredField extends Base {public float FieldsData;public StoredField(String name, float value) {super(name, TYPE);FieldsData = value;}}
public IntervalSet GetExpectedTokensWithinCurrentRule() {ATN atn = Interpreter.atn;ATNState s = atn.states.get(State);return atn.NextTokens(s);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[FILESHARING]\n");buffer.append("    .Readonly       = ").append(ReadOnly == 1 ? "true" : "false").append("\n");buffer.append("    .password       = ").append(StringUtil.toHexString(Password)).append("\n");buffer.append("    .username       = ").append(Username).append("\n");buffer.append("[/FILESHARING]\n");return buffer.toString();}
protected SubmoduleInitCommand(Repository repo) {super(repo);paths = new ArrayList<String>();}
import java.text.MessageFormat;import java.util.HashMap;public abstract class MyClass {protected HashMap<String, ObjectId> include = new HashMap<>();protected Repository repository;public void include(String name, AnyObjectId id) throws Exception {if (!repository.isValidRefName(name)) {throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidRefName, name));}if (include.containsKey(name)) {throw new InvalidOperationException(JGitText.get().duplicateRef + name);}include.put(name, id.toObjectId());}}
public EnableSnapshotCopyResponse enableSnapshotCopy(EnableSnapshotCopyRequest request){var options = new InvokeOptions();options.setRequestMarshaller(EnableSnapshotCopyRequestMarshaller.getInstance());options.setResponseUnmarshaller(EnableSnapshotCopyResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract ValueFiller getValueFiller() { return new ValueFillerAnonymousInnerClassHelper(this); }
@Overridepublic void Serialize(ILittleEndianOutput out1) {out1.WriteByte(Pane);out1.WriteShort(ActiveCellRow);out1.WriteShort(ActiveCellCol);out1.WriteShort(ActiveCellRef);int nRefs = field_6_refs.length;out1.WriteShort(nRefs);for (int i = 0; i < field_6_refs.length; i++) {field_6_refs[i].Serialize(out1);}}
public static Counter newCounter() {return newCounter(false);}
import java.util.HashMap;import java.util.Locale;public abstract class MyClass {private HashMap<String, Object> valByRound = new HashMap<>();private HashMap<String, String> props = new HashMap<>();private HashMap<String, String> colForValByRound = new HashMap<>();private int roundNumber;public abstract int Get(String name, int dflt);protected int[] PropToInt32Array(String sval) {// Implementation of PropToInt32Arrayreturn new int[0];}}
public void PreSerialize() {if (records.Tabpos > 0) {TabIdRecord tir = (TabIdRecord) records[records.Tabpos];if (tir._tabids.length < boundsheets.size()) {FixTabIdRecord();}}}
public class LimitTokenCountAnalyzer extends Analyzer {private final Analyzer delegate;private final int maxTokenCount;private final boolean consumeAllTokens;public LimitTokenCountAnalyzer(Analyzer @delegate, int maxTokenCount, boolean consumeAllTokens) {super(@delegate.getStrategy());this.delegate = @delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}}
public ExternalBookBlock(int numberOfSheets) {_externalBookRecord = SupBookRecord.CreateInternalReferences((short) numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SCENARIOPROTECT]\n");buffer.append("    .protect         = ").append(protect).append("\n");buffer.append("[/SCENARIOPROTECT]\n");return buffer.toString();}
public abstract class NGitApiPushCommand {private boolean thin;public NGitApiPushCommand setThin(boolean thin) {checkCallable();this.thin = thin;return this;}protected abstract void checkCallable();}
public int compareTo(SearcherTracker other) { return other.recordTimeSec.compareTo(recordTimeSec); }
@Overridepublic TokenStream create(TokenStream input) {return new ReverseStringFilter(m_luceneMatchVersion, input);}
public BlockList() {directory = new NGit.Util.BlockList<T>[256];directory[0] = new NGit.Util.BlockList<T>();tailBlock = directory[0];}
import java.util.HashMap;import java.util.Map;public class QueryScorer {private Map<String, WeightedSpanTerm> fieldWeightedSpanTerms;private boolean skipInitExtractor;private double maxTermWeight;public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new HashMap<>(weightedTerms.length);for (WeightedSpanTerm t : weightedTerms) {if (!fieldWeightedSpanTerms.containsKey(t.getTerm()) ||(fieldWeightedSpanTerms.get(t.getTerm()) == null) ||(fieldWeightedSpanTerms.get(t.getTerm()).getWeight() < t.getWeight())) {fieldWeightedSpanTerms.put(t.getTerm(), t);maxTermWeight = Math.max(maxTermWeight, t.getWeight());}}skipInitExtractor = true;}}
@Overridepublic boolean equals(Object other) {Debug.assert(NeverEquals(other));if (other instanceof MergedGroup<T>) {MergedGroup<T> otherMergedGroup = (MergedGroup<T>) other;if (groupValue == null) {return otherMergedGroup == null;} else {return groupValueIsValueType ? JCG.EqualityComparer<T>.Default.Equals(groupValue, otherMergedGroup.groupValue) : J2N.Collections.StructuralEqualityComparer.Default.Equals(groupValue, otherMergedGroup.groupValue);}} else {return false;}}
public java.nio.charset.Charset charset() { return cs; }
public DescribeExperimentResponse describeExperiment(DescribeExperimentRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeExperimentRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeExperimentResponseUnmarshaller.getInstance());return invoke(request, options);}
public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font("Arial", 10);this.foreground = forecolor;}
public String Pattern() { return patternText; }
public DeleteRouteTableResponse deleteRouteTable(DeleteRouteTableRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteRouteTableRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteRouteTableResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public abstract class AssociateVPCWithHostedZoneResponse {}public abstract class AssociateVPCWithHostedZoneRequest {}public class AssociateVPCWithHostedZoneRequestMarshaller {public static final AssociateVPCWithHostedZoneRequestMarshaller Instance = new AssociateVPCWithHostedZoneRequestMarshaller();}public class AssociateVPCWithHostedZoneResponseUnmarshaller {public static final AssociateVPCWithHostedZoneResponseUnmarshaller Instance = new AssociateVPCWithHostedZoneResponseUnmarshaller();}public class InvokeOptions {public Object RequestMarshaller;public Object ResponseUnmarshaller;}public abstract class AbstractClient {public <T> T Invoke(Object request, InvokeOptions options) {// Implementation of Invoke methodreturn null;}}
public abstract PutIntegrationResponse putIntegration(PutIntegrationRequest request){var options = new InvokeOptions();options.requestMarshaller = PutIntegrationRequestMarshaller.INSTANCE;options.responseUnmarshaller = PutIntegrationResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public SimpleEntry(K theKey, V theValue) {key = theKey;value = theValue;}
@Overridepublic void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | ((byte1 >>> 4) & 0xF);int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 0xF) << 8) | byte2;}}
public abstract class DisassociateConnectionFromLagResponse {}public abstract class DisassociateConnectionFromLagRequest {}public abstract class InvokeOptions {public RequestMarshaller RequestMarshaller;public ResponseUnmarshaller ResponseUnmarshaller;}public interface RequestMarshaller {}public interface ResponseUnmarshaller {}public abstract class AmazonWebServiceClient {protected <T> T Invoke(T request, InvokeOptions options) {// Implementation of Invoke methodreturn null;}}public class YourClass : AmazonWebServiceClient {public virtual DisassociateConnectionFromLagResponse DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;return Invoke<DisassociateConnectionFromLagResponse>(request, options);}}
public abstract FileMode getOldMode() { return oldMode; }
@Overridepublic String toString() {return mapEntry.toString();}
public StopKeyPhrasesDetectionJobResponse stopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StopKeyPhrasesDetectionJobRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(StopKeyPhrasesDetectionJobResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder("[Array Formula or Shared Formula]\n");buffer.append("row = ").append(row).append("\n");buffer.append("col = ").append(column).append("\n");return buffer.toString();}
public abstract ListDominantLanguageDetectionJobsResponse listDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListDominantLanguageDetectionJobsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListDominantLanguageDetectionJobsResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String toString() {return "slice start=" + Start + " length=" + Length + " readerIndex=" + ReaderIndex;}
public static int ParseHexInt4(byte digit) {byte r = digits16[digit];if (r < 0) {throw new ArrayIndexOutOfBoundsException();}return r;}
public Attribute(String name, String value) {_name = name; _value = value;}
public DescribeStackSetOperationResponse describeStackSetOperation(DescribeStackSetOperationRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeStackSetOperationRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeStackSetOperationResponseUnmarshaller.getInstance());return invoke(request, options);}
public ICell getCell(short cellnum){int ushortCellNum = cellnum & 0x0000FFFF;return GetCell(ushortCellNum);}
public void Write(byte[] b) {WriteContinueIfRequired(b.length);_ulrOutput.write(b);}
public ResetImageAttributeRequest(String imageId, ResetImageAttributeName attribute) {_imageId = imageId;_attribute = attribute;}
public void discardResultContents() { resultContents = null; }
public abstract ObjectId GetPeeledObjectId() { return GetLeaf().GetPeeledObjectId(); }
public UndeprecateDomainResponse undeprecateDomain(UndeprecateDomainRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UndeprecateDomainRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(UndeprecateDomainResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic void Write(ILittleEndianOutput out1) {out1.writeByte((byte)(sid + PtgClass));out1.writeByte((byte)field_3_string.length());out1.writeByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode) {StringUtil.PutUnicodeLE(field_3_string, out1);} else {StringUtil.PutCompressedUnicode(field_3_string, out1);}}
public DeleteQueueResponse deleteQueue(String queueUrl) {var request = new DeleteQueueRequest();request.setQueueUrl(queueUrl);return deleteQueue(request);}
public void setCheckEofAfterPackFooter(boolean b) { checkEofAfterPackFooter = b; }
public void swap() {int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}
public abstract int getPackedGitWindowSize();
public PutMetricDataResponse putMetricData(PutMetricDataRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(PutMetricDataRequestMarshaller.getInstance());options.setResponseUnmarshaller(PutMetricDataResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetCelebrityRecognitionResponse getCelebrityRecognition(GetCelebrityRecognitionRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetCelebrityRecognitionRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetCelebrityRecognitionResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateQueueRequest(String queueName) {_queueName = queueName;}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) {super(arearef);this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.getSheetId().getName();if (sheetName instanceof SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier) sheetName).getLastSheetIdentifier().getName();} else {this.lastSheetName = null;}}
public abstract void setBaseline(long clockTime) { t0 = clockTime; timeout = t0 + ticksAllowed; }
public abstract MoveAddressToVpcResponse moveAddressToVpc(MoveAddressToVpcRequest request){var options = new InvokeOptions();options.requestMarshaller = MoveAddressToVpcRequestMarshaller.INSTANCE;options.responseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.INSTANCE;return invoke(request, options);}
@Overridepublic String toString() {String coll = m_collectionModel.getName();if (coll != null) {return String.format("LM %s - %s", getName(), coll);} else {return String.format("LM %s", getName());}}
public DescribeLagsResponse describeLags(DescribeLagsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeLagsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLagsResponseUnmarshaller.getInstance());return invoke(request, options);}
public AreaEval Offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx){if (_refEval == null){return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}
@Overridepublic ShortBuffer put(short[] src, int srcOffset, int shortCount) {byteBuffer.limit(_limit * libcore.io.SizeOf.SHORT);byteBuffer.position(_position * libcore.io.SizeOf.SHORT);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, shortCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, shortCount);}this._position += shortCount;return this;}
@Overridepublic void Initialize(String cat) {this._cat = cat;}
@Overridepublic void write(int oneByte) {throw new UnsupportedOperationException();}
public DescribeImportImageTasksResponse describeImportImageTasks(DescribeImportImageTasksRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeImportImageTasksRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeImportImageTasksResponseUnmarshaller.getInstance());return invoke(request, options);}
public ColumnInfoRecord(RecordInputStream in1) {_first_col = in1.readUShort();_last_col = in1.readUShort();_col_width = in1.readUShort();_xf_index = in1.readUShort();_options = in1.readUShort();switch (in1.remaining()) {case 2:field_6_reserved = in1.readUShort();break;case 1:field_6_reserved = in1.readByte();break;case 0:field_6_reserved = 0;break;default:throw new Exception("Unusual record size remaining=(" + in1.remaining() + ")");}}
public Status(IndexDiff diff) {super();this.diff = diff;clean = diff.getAdded().isEmpty() && diff.getChanged().isEmpty() && diff.getRemoved().isEmpty() && diff.getMissing().isEmpty() && diff.getModified().isEmpty() && diff.getUntracked().isEmpty() && diff.getConflicting().isEmpty();}
public CreateExperimentResponse createExperiment(CreateExperimentRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateExperimentRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateExperimentResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic Object clone() { return this; }
@Overridepublic FloatBuffer slice() {byteBuffer.limit(_limit * libcore.io.SizeOf.FLOAT);byteBuffer.position(_position * libcore.io.SizeOf.FLOAT);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());FloatBuffer result = new FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}
public DescribeSnapshotSchedulesResponse describeSnapshotSchedules(DescribeSnapshotSchedulesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DescribeSnapshotSchedulesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeSnapshotSchedulesResponseUnmarshaller.getInstance());return invoke(request, options);}
public ListImagesResponse listImages(ListImagesRequest request){var options = new InvokeOptions();options.requestMarshaller = ListImagesRequestMarshaller.getInstance();options.responseUnmarshaller = ListImagesResponseUnmarshaller.getInstance();return invoke(request, options);}
public Diff(int ins, int del, int rep, int noop){INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}
@Overridepublic String ToFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.append(operands[0]);buffer.append(",");buffer.append(operands[1]);return buffer.toString();}
public static void SetupEnvironment(String[] workbookNames, ForkedEvaluator[] evaluators){WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.length];for (int i = 0; i < wbEvals.length; i++){wbEvals[i] = evaluators[i].getEvaluator();}CollaboratingWorkbooksEnvironment.setup(workbookNames, wbEvals);}
public class ListPhotoTagsRequest extends BaseRequest {public ListPhotoTagsRequest() {super("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}}
import java.util.Random;public class RandomSamplingFacetsCollector extends BaseClass {private int sampleSize;private Random random;private Object sampledDocs;public RandomSamplingFacetsCollector(int sampleSize, long seed) {super(false);this.sampleSize = sampleSize;this.random = new Random((int) seed);this.sampledDocs = null;}}
public AllocateStaticIpResponse allocateStaticIp(AllocateStaticIpRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(AllocateStaticIpRequestMarshaller.getInstance());options.setResponseUnmarshaller(AllocateStaticIpResponseUnmarshaller.getInstance());return invoke(request, options);}
public FeatRecord(RecordInputStream in1) {futureHeader = new FtrHeader(in1);isf_sharedFeatureType = in1.readShort();reserved1 = (byte) in1.readByte();reserved2 = in1.readInt();int cref = in1.readUnsignedShort();cbFeatData = in1.readInt();reserved3 = in1.readShort();cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.length; i++) {cellRefs[i] = new CellRangeAddress(in1);}switch (isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in1);break;default:logger.log(POILogger.ERROR, "Unknown Shared Feature " + isf_sharedFeatureType + " found!");break;}}
public abstract RevCommit TryFastForward(RevCommit newCommit) {Ref head = repo.getRef(Constants.HEAD);if (head == null || head.getObjectId() == null) {throw new RefNotFoundException(String.format(JGitText.get().refNotResolved, Constants.HEAD));}ObjectId headId = head.getObjectId();if (headId == null) {throw new RefNotFoundException(String.format(JGitText.get().refNotResolved, Constants.HEAD));}RevCommit headCommit = walk.lookupCommit(headId);if (walk.isMergedInto(newCommit, headCommit)) {return newCommit;}String headName;if (head.isSymbolic()) {headName = head.getTarget().getName();} else {headName = "detached HEAD";}return TryFastForward(headName, headCommit, newCommit);}
public CreateSnapshotScheduleResponse createSnapshotSchedule(CreateSnapshotScheduleRequest request) {var options = new InvokeOptions();options.requestMarshaller = CreateSnapshotScheduleRequestMarshaller.INSTANCE;options.responseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public Record getNext() {if (_nextIndex >= _list.size()) {throw new RuntimeException("Attempt to Read past end of record stream");}_countRead++;return (Record) _list.get(_nextIndex++);}
@Overridepublic String toString() {return RawParseUtils.decode(buf.toByteArray());}
public ListTablesRequest(String exclusiveStartTableName) {_exclusiveStartTableName = exclusiveStartTableName;}
public EnableAlarmActionsResponse enableAlarmActions(EnableAlarmActionsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(EnableAlarmActionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(EnableAlarmActionsResponseUnmarshaller.getInstance());return invoke(request, options);}
public Builder() {super();lastDocID = -1;wordNum = -1;word = 0;}
@Overridepublic boolean equals(Object obj) {State other = (State) obj;return is_final == other.is_final && Arrays.equals(this.labels, other.labels) && Objects.equals(this.states, other.states);}
@Overridepublic TokenStream create(TokenStream input) {return new EnglishPossessiveFilter(m_luceneMatchVersion, input);}
public void ClearFormatting() {_string = cloneStringIfRequired();_string.clearFormatting();addToSSTIfRequired();}
@Overridepublic int Get(int index, long[] arr, int off, int len) {assert len > 0 : "len must be > 0 (got " + len + ")";assert index >= 0 && index < valueCount;len = Math.min(len, valueCount - index);Arrays.fill(arr, off, off + len, 0L);return len;}
public DeleteRouteResponseResponse deleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteRouteResponseRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteRouteResponseResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic String ToPrivateString() {return Format(true, false);}
public CreatePresignedDomainUrlResponse createPresignedDomainUrl(CreatePresignedDomainUrlRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreatePresignedDomainUrlRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreatePresignedDomainUrlResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic void write(int oneChar) {doWrite(new char[] { (char) oneChar }, 0, 1);}
public SSTRecord getSSTRecord() { return sstRecord; }
@Overridepublic String toString() {return "term=" + term + ",field=" + field + ",value=" + value;}
@Overridepublic boolean IsSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) {return bloomFilter.GetSaturation() > 0.9f;}
public Builder(boolean ignoreCase) { this.ignoreCase = ignoreCase; }
@Overridepublic String toString() {return getClass().getName() + "(maxBasicQueries: " + maxBasicQueries + ", queriesMade: " + queriesMade + ")";}
public DeleteDataSourceResponse deleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteDataSourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDataSourceResponseUnmarshaller.getInstance());return invoke(request, options);}
public RebootNodeResponse rebootNode(RebootNodeRequest request){var options = new InvokeOptions();options.setRequestMarshaller(RebootNodeRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(RebootNodeResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public void ProcessChildRecords() {ConvertRawBytesToEscherRecords();}
public CreateOrUpdateTagsResponse createOrUpdateTags(CreateOrUpdateTagsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateOrUpdateTagsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateOrUpdateTagsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public FileSnapshot getSnapShot() { return snapShot; }
import java.io.IOException;import java.io.InputStream;public InputStream openResource(String resource) {InputStream stream = this.clazz.getClassLoader().getResourceAsStream(resource);if (stream == null) {throw new IOException("Resource not found: " + resource);}return stream;}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append("sid=").append(HexDump.shortToHex(_sid));sb.append(" size=").append(_data.length);sb.append(" : ").append(HexDump.toHex(_data));sb.append("]\n");return sb.toString();}
public abstract int nextIndex();
@Overridepublic String ToQueryString(IEscapeQuerySyntax escaper) {if (IsDefaultField(this.m_field)) {return "\"" + GetTermEscapeQuoted(escaper) + "\"";} else {return this.m_field + ":" + "\"" + GetTermEscapeQuoted(escaper) + "\"";}}
@Overridepublic Object clone() {CalcModeRecord rec = new CalcModeRecord();rec.field_1_calcmode = this.field_1_calcmode;return rec;}
public boolean IsOutput() { return output; }
public CreateNetworkInterfaceResponse createNetworkInterface(CreateNetworkInterfaceRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateNetworkInterfaceRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateNetworkInterfaceResponseUnmarshaller.INSTANCE);return invoke(request, options);}
@Overridepublic void Serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_password);}
public StopDominantLanguageDetectionJobResponse stopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request){var options = new InvokeOptions();options.setRequestMarshaller(StopDominantLanguageDetectionJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopDominantLanguageDetectionJobResponseUnmarshaller.getInstance());return invoke(request, options);}
public void WithConnectionTimeout(int milliseconds) { connectionTimeoutInMilliseconds = milliseconds; }
public GetGatewayGroupResponse getGatewayGroup(GetGatewayGroupRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetGatewayGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetGatewayGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic FloatBuffer slice() {return new ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset + _position);}
import java.util.Collection;public static String Join(Collection<String> parts, String separator, String lastSeparator) {StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.size() - 1;for (String part : parts) {sb.append(part);if (i == lastIndex - 1) {sb.append(lastSeparator);} else {if (i != lastIndex) {sb.append(separator);}}i++;}return sb.toString();}
@Overridepublic String toString() {return "(" + a.toString() + " AND " + b.toString() + ")";}
public ListSubscriptionsByTopicRequest(String topicArn, String nextToken){_topicArn = topicArn;_nextToken = nextToken;}
@Overridepublic byte readByte() {return bytes[pos--];}
public abstract class TerminateClientVpnConnectionsResponse extends AmazonWebServiceResult<ResponseMetadata> {// Class implementation here}public abstract class TerminateClientVpnConnectionsRequest implements Serializable {// Class implementation here}public class ClientVpnManager {public TerminateClientVpnConnectionsResponse terminateClientVpnConnections(TerminateClientVpnConnectionsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(TerminateClientVpnConnectionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(TerminateClientVpnConnectionsResponseUnmarshaller.getInstance());return invoke(request, options);}private <T> T invoke(Object request, InvokeOptions options) {// Method implementation herereturn null;}}class InvokeOptions {private RequestMarshaller requestMarshaller;private ResponseUnmarshaller responseUnmarshaller;public void setRequestMarshaller(RequestMarshaller requestMarshaller) {this.requestMarshaller = requestMarshaller;}public void setResponseUnmarshaller(ResponseUnmarshaller responseUnmarshaller) {this.responseUnmarshaller = responseUnmarshaller;}public RequestMarshaller getRequestMarshaller() {return requestMarshaller;}public ResponseUnmarshaller getResponseUnmarshaller() {return responseUnmarshaller;}}interface RequestMarshaller {// Interface implementation here}interface ResponseUnmarshaller {// Interface implementation here}class TerminateClientVpnConnectionsRequestMarshaller implements RequestMarshaller {private static final TerminateClientVpnConnectionsRequestMarshaller INSTANCE = new TerminateClientVpnConnectionsRequestMarshaller();public static TerminateClientVpnConnectionsRequestMarshaller getInstance() {return INSTANCE;}@Overridepublic void marshall(Object request, ProtocolMarshaller protocolMarshaller) {// Method implementation here}}class TerminateClientVpnConnectionsResponseUnmarshaller implements ResponseUnmarshaller {private static final TerminateClientVpnConnectionsResponseUnmarshaller INSTANCE = new TerminateClientVpnConnectionsResponseUnmarshaller();public static TerminateClientVpnConnectionsResponseUnmarshaller getInstance() {return INSTANCE;}@Overridepublic Object unmarshall(ProtocolUnmarshaller protocolUnmarshaller) {// Method implementation herereturn null;}}
public ReceiveMessageRequest(String queueUrl) {_queueUrl = queueUrl;}
@Overridepublic void serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_barSpace);out1.writeShort(field_2_categorySpace);out1.writeShort(field_3_formatFlags);}
@Overridepublic Object Common(Object output1, Object output2){return outputs.Common((T)output1, (T)output2);}
public abstract CreateVariableResponse CreateVariable(CreateVariableRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;return Invoke<CreateVariableResponse>(request, options);}
public static int Match(byte[] b, int ptr, byte[] src){if (ptr + src.length > b.length){return -1;}for (int i = 0; i < src.length; i++, ptr++){if (b[ptr] != src[i]){return -1;}}return ptr;}
@Overridepublic int FillFields(byte[] data, int offset, IEscherRecordFactory recordFactory) {int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.getInt(data, pos + size);size += 4;field_2_rectY1 = LittleEndian.getInt(data, pos + size);size += 4;field_3_rectX2 = LittleEndian.getInt(data, pos + size);size += 4;field_4_rectY2 = LittleEndian.getInt(data, pos + size);size += 4;bytesRemaining -= size;if (bytesRemaining != 0) throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);return 8 + size + bytesRemaining;}
public CreateCloudFrontOriginAccessIdentityResponse createCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {var options = new InvokeOptions();options.requestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.INSTANCE;options.responseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public boolean isNamespaceAware() { return getFeature(org.xmlpull.v1.XmlPullParser.Feature.PROCESS_NAMESPACES); }
public void setOverridable(boolean on) { this.overridable = on; }
public String getClassName() { return className; }
public synchronized DirectoryReader GetIndexReader() {if (indexReader != null) {indexReader.IncRef();}return indexReader;}
public int indexOfKey(int key) { return binarySearch(mKeys, 0, mSize, key); }
public BlankRecord(RecordInputStream in1) {field_1_row = in1.readUShort();field_2_col = in1.readShort();field_3_xf = in1.readShort();}
@Overridepublic long length() { return length_Renamed; }
public PasswordRecord(RecordInputStream in1) { field_1_password = in1.readShort(); }
public HashMap(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException("Load factor: " + loadFactor);}}
@Overridepublic void run() {long lastReopenStartNS = System.nanoTime();while (!finish) {boolean hasWaiting;synchronized (this) {hasWaiting = waitingGen > searchingGen;}long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - System.nanoTime();if (sleepNS > 0) {try {reopenCond.await((sleepNS / 1000000), TimeUnit.MILLISECONDS);} catch (InterruptedException ie) {Thread.currentThread().interrupt();return;}}if (finish) {break;}lastReopenStartNS = System.nanoTime();refreshStartGen = writer.getAndIncrementGeneration();try {manager.maybeRefreshBlocking();} catch (IOException ioe) {throw new RuntimeException(ioe.toString(), ioe);}}RefreshDone();}
public DeleteLoginProfileRequest(String userName) {_userName = userName;}
public E pollFirst() {return (_size == 0) ? null : removeFirstImpl();}
public CreatePhotoRequest() {super("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto", "openAPI");this.Protocol = ProtocolType.HTTPS;}
@Overridepublic String GetName() {return "resolve";}
public int FindEndOffset(StringBuilder buffer, int start) {if (start > buffer.length() || start < 0) return start;int offset, count = m_maxScan;for (offset = start; offset < buffer.length() && count > 0; count--) {if (m_boundaryChars.contains(buffer.charAt(offset))) return offset;offset++;}return start;}
public abstract void SetObjectChecker(ObjectChecker oc);
public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}
public CreateVpcEndpointResponse createVpcEndpoint(CreateVpcEndpointRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateVpcEndpointRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateVpcEndpointResponseUnmarshaller.getInstance());return invoke(request, options);}
public DeregisterWorkspaceDirectoryResponse deregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeregisterWorkspaceDirectoryRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeregisterWorkspaceDirectoryResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public ChartFRTInfoRecord(RecordInputStream in1){rt = in1.readShort();grbitFrt = in1.readShort();verOriginator = (byte)in1.readByte();verWriter = (byte)in1.readByte();int cCFRTID = in1.readShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++){rgCFRTID[i] = new CFRTID(in1);}}
@Overridepublic Merger NewMerger(Repository db) {return new StrategyOneSided.OneSide(db, treeIndex);}
public CreateDataSourceFromRedshiftResponse createDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateDataSourceFromRedshiftRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDataSourceFromRedshiftResponseUnmarshaller.getInstance());return invoke(new TypeReference<CreateDataSourceFromRedshiftResponse>() {}, request, options);}
@Overridepublic void ClearDFA() {for (int d = 0; d < decisionToDFA.length; d++) {decisionToDFA[d] = new DFA(atn.getDecisionState(d), d);}}
public void RemoveName(String name){int index = GetNameIndex(name);RemoveName(index);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[RightMargin]\n");buffer.append("    .margin               = ").append(" (").append(margin).append(" )\n");buffer.append("[/RightMargin]\n");return buffer.toString();}
@Overridepublic Object clone() {return new RefreshAllRecord(_options);}
public class StandardQueryNodeProcessorPipeline extends QueryConfigHandler {public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {super(queryConfig);Add(new WildcardQueryNodeProcessor());Add(new MultiFieldQueryNodeProcessor());Add(new FuzzyQueryNodeProcessor());Add(new MatchAllDocsQueryNodeProcessor());Add(new OpenRangeQueryNodeProcessor());Add(new NumericQueryNodeProcessor());Add(new NumericRangeQueryNodeProcessor());Add(new LowercaseExpandedTermsQueryNodeProcessor());Add(new TermRangeQueryNodeProcessor());Add(new AllowLeadingWildcardProcessor());Add(new AnalyzerQueryNodeProcessor());Add(new PhraseSlopQueryNodeProcessor());Add(new BooleanQuery2ModifierNodeProcessor());Add(new NoChildOptimizationQueryNodeProcessor());Add(new RemoveDeletedQueryNodesProcessor());Add(new RemoveEmptyNonLeafQueryNodeProcessor());Add(new BooleanSingleChildOptimizationQueryNodeProcessor());Add(new DefaultPhraseSlopQueryNodeProcessor());Add(new BoostQueryNodeProcessor());Add(new MultiTermRewriteMethodProcessor());}}
import java.util.*;public class Formatter {public static String FormatAsString(String sheetName, boolean useAbsoluteAddress){StringBuilder sb = new StringBuilder();if (sheetName != null){sb.append(SheetNameFormatter.Format(sheetName));sb.append("!");}CellReference cellRefFrom = new CellReference(FirstRow, FirstColumn, useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(LastRow, LastColumn, useAbsoluteAddress, useAbsoluteAddress);sb.append(cellRefFrom.FormatAsString());if (!cellRefFrom.equals(cellRefTo) || IsFullColumnRange || IsFullRowRange){sb.append(':');sb.append(cellRefTo.FormatAsString());}return sb.toString();}}
@Overridepublic ByteBuffer put(int index, byte value) {throw new UnsupportedOperationException();}
public abstract void Mode(int m);
@Overridepublic ShortBuffer slice() {return new ReadWriteShortArrayBuffer(remaining(), backingArray, offset + _position);}
public void set(int index, long n) {if (count < index) {throw new IndexOutOfBoundsException();} else {if (count == index) {add(n);} else {entries[index] = n;}}}
@Overridepublic ByteBuffer putFloat(float value) {throw new ReadOnlyBufferException();}
public static double Max(double[] values){double max = Double.NEGATIVE_INFINITY;for (int i = 0, iSize = values.length; i < iSize; i++){max = Math.max(max, values[i]);}return max;}
public class UpdateRepoWebhookRequest extends BaseRequest {public UpdateRepoWebhookRequest() {super("cr", "2016-06-07", "UpdateRepoWebhook", "cr", "openAPI");UriPattern = "/repos/{RepoNamespace}/{RepoName}/webhooks/{WebhookId}";Method = MethodType.POST;}}
public DeleteAttributesRequest(String domainName, String itemName, List<Attribute> attributes, UpdateCondition expected){_domainName = domainName;_itemName = itemName;_attributes = attributes;_expected = expected;}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder();sb.append("[SXPI]\n");for (int i = 0; i < _fieldInfos.length; i++) {sb.append("    item[").append(i).append("]=");_fieldInfos[i].appendDebugInfo(sb);sb.append('\n');}sb.append("[/SXPI]\n");return sb.toString();}
public boolean isSuccessful() {if (mergeResult != null) {return mergeResult.getMergeStatus().isSuccessful();} else {if (rebaseResult != null) {return rebaseResult.getStatus().isSuccessful();}}return true;}
public void setBytesValue(byte[] value) { setBytesValue(new BytesRef(value)); }
public DescribeConnectionsResponse describeConnections(DescribeConnectionsRequest request) {var options = new InvokeOptions();options.requestMarshaller = DescribeConnectionsRequestMarshaller.INSTANCE;options.responseUnmarshaller = DescribeConnectionsResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public DeletePhotosRequest() {super("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto", "openAPI");this.Protocol = ProtocolType.HTTPS;}
public void add(E object) { iterator.add(object); subList.sizeChanged(true); end++; }
public static ByteBuffer allocate(int capacity_1) {if (capacity_1 < 0) {throw new IllegalArgumentException();}return ByteBuffer.allocate(capacity_1);}
public abstract SrndQuery getSubQuery(int qn) { return m_queries[qn]; }
@Overridepublic float CurrentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore){if (numPayloadsSeen == 0){return currentPayloadScore;} else {return Math.min(currentPayloadScore, currentScore);}}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[BLANK]\n");buffer.append("row       = ").append(HexDump.shortToHex(row)).append("\n");buffer.append("col       = ").append(HexDump.shortToHex(column)).append("\n");buffer.append("xf        = ").append(HexDump.shortToHex(xfIndex)).append("\n");buffer.append("[/BLANK]\n");return buffer.toString();}
public DescribeLogPatternResponse describeLogPattern(DescribeLogPatternRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeLogPatternRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLogPatternResponseUnmarshaller.getInstance());return invoke(request, options);}
public RegisterTransitGatewayMulticastGroupMembersResponse registerTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.getInstance());options.setResponseUnmarshaller(RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetPhoneNumberSettingsResponse getPhoneNumberSettings(GetPhoneNumberSettingsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetPhoneNumberSettingsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(GetPhoneNumberSettingsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public abstract ObjectId GetData();
@Overridepublic boolean isDirect() {return false;}
public DeleteServerCertificateRequest(String serverCertificateName) {_serverCertificateName = serverCertificateName;}
public java.lang.StringBuffer append(boolean b) {return append(b ? "true" : "false");}
public GetEvaluationResponse getEvaluation(GetEvaluationRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetEvaluationRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetEvaluationResponseUnmarshaller.getInstance());return invoke(request, options);}
public BRAIRecord getDataName() { return dataName; }
public boolean find(int start_1){findPos = start_1;if (findPos < _regionStart){findPos = _regionStart;} else {if (findPos >= _regionEnd){matchFound = false;return false;}}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound){findPos = matchOffsets[1];}return matchFound;}
public GetLifecyclePolicyPreviewResponse getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetLifecyclePolicyPreviewRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetLifecyclePolicyPreviewResponseUnmarshaller.getInstance());return invoke(request, options);}
import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;public class SinglePositionTokenStream {private CharTermAttribute termAtt;private PositionIncrementAttribute posIncrAtt;private String word;private boolean returned;public SinglePositionTokenStream(String word) {termAtt = addAttribute(CharTermAttribute.class);posIncrAtt = addAttribute(PositionIncrementAttribute.class);this.word = word;returned = true;}}
@Overridepublic void Serialize(IIterableLittleEndianOutput out1) {out1.WriteShort(field_1_print_gridlines);}
@Overridepublic String toString() {StringBuilder s = new StringBuilder();s.append(Constants.TypeString(Type));s.append(' ');s.append(Name);s.append(' ');s.append(commitTime);s.append(' ');AppendCoreFlags(s);return s.toString();}
public abstract class NGitApiLsRemoteCommand {private String remote;public abstract NGitApiLsRemoteCommand setRemote(String remote);protected void checkCallable() {// Implementation of checkCallable method}}
public void CollapseRow(int rowNumber){int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int lastRow = WriteHidden(rowRecord, startRow, true);if (GetRow(lastRow + 1) != null){GetRow(lastRow + 1).Collapsed = true;} else {RowRecord row = CreateRow(lastRow + 1);row.Collapsed = true;InsertRow(row);}}
public AssociateSkillGroupWithRoomResponse associateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request){var options = new InvokeOptions();options.setRequestMarshaller(AssociateSkillGroupWithRoomRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateSkillGroupWithRoomResponseUnmarshaller.getInstance());return invoke(request, options);}
@Overridepublic String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SERIESLIST]\n");buffer.append("    .seriesNumbers        = ").append(" (").append(seriesNumbers).append(" )");buffer.append(System.lineSeparator());buffer.append("[/SERIESLIST]\n");return buffer.toString();}
public abstract QueryConfigHandler getQueryConfigHandler() { return this.queryConfig; }
public String GetClassArg() {if (originalArgs != null) {String className = originalArgs.get(CLASS_NAME);if (className != null) {return className;}}return this.getClass().getName();}
