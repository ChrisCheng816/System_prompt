public void Serialize(LittleEndianOutput output) {output.WriteShort(field_1_vcenter);}
public void AddAll(BlockList<T> src) {if (src.Size == 0)return;int srcDirIdx = 0;for (; srcDirIdx < src.TailDirIdx; srcDirIdx++)AddAll(src.Directory[srcDirIdx], 0, BLOCK_SIZE);if (src.TailBlkIdx != 0)AddAll(src.TailBlock, 0, src.TailBlkIdx);}
public void WriteByte(byte b) {if (upto == blockSize) {if (currentBlock != null) {addBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}currentBlock[upto++] = b;}
public ObjectId GetObjectId() { return objectId; }
public virtual DeleteDomainEntryResponse DeleteDomainEntry(DeleteDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDomainEntryResponseUnmarshaller.Instance;return Invoke<DeleteDomainEntryResponse>(request, options);}
public long RamBytesUsed() { return (termOffsets != null) ? termOffsets.RamBytesUsed() : 0) + ((termsDictOffsets != null) ? termsDictOffsets.RamBytesUsed() : 0);}
public string GetFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.tagMessage(raw, 0);if (msgB < 0) {return ""; }return RawParseUtils.decode(guessEncoding(), raw, msgB, raw.Length);}
public POIFSFileSystem() {this(true);((HeaderBlock)_header).BATCount = 1;((HeaderBlock)_header).BATArray = new int[] { 1 };BATBlock bb = BATBlock.CreateEmptyBATBlock(bigBlockSize, false);bb.SetOurBlockIndex(1);_bat_blocks.Add(bb);SetNextBlock(0, POIFSConstants.END_OF_CHAIN);SetNextBlock(1, POIFSConstants.FAT_SECTOR_BLOCK);_property_table.SetStartBlock(0);}
public void init(int address) { slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT]; Debug.Assert(slice != null); upto = address & ByteBlockPool.BYTE_BLOCK_MASK; offset0 = address; Debug.Assert(upto < slice.Length); }
public SubmoduleAddCommand SetPath(string path) { this.path = path; return this; }
public virtual ListIngestionsResponse ListIngestions(ListIngestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;return Invoke<ListIngestionsResponse>(request, options);}
public QueryParserTokenManager(CharStream stream, int lexState) : this(stream){SwitchTo(lexState);}
public GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request){request = BeforeClientExecution(request);return ExecuteGetShardIterator(request);}
public ModifyStrategyRequest() {this.setServiceName("aegis");this.setApiVersion("2016-11-11");this.setOperationName("ModifyStrategy");this.setProduct("vipaegis");this.setMethod(MethodType.POST);}
public virtual bool Ready(){lock (lockObj){if (inStream == null){throw new IOException("StreamReader is closed");}try{return remaining > 0 || inStream.Ready();}catch (IOException e){return false;}}}
public EscherOptRecord GetOptRecord() { return _optRecord; }
public virtual int Read(byte[] buffer, int offset, int length) {if (buffer == null) {throw new ArgumentNullException("buffer", "buffer == null");}Array.Copy(buffer, offset, this.buffer, pos, Math.Min(count - pos, length));pos += Math.Min(count - pos, length);return Math.Min(count - pos, length);}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}
public void Print(string str) {Write(str != null ? str : ((object)null).ToString());}
public class NotImplementedFunctionException : Exception{public string FunctionName { get; }public NotImplementedFunctionException(string functionName, Exception cause) : base(functionName, cause){this.functionName = functionName;}}
public T Next() { return base.NextEntry().Value; }
public void readBytes(byte[] b, int offset, int len, bool useBuffer) throws IOException{int available = bufferLength - bufferPosition;if (len <= available){if (len > 0){Buffer.BlockCopy(buffer, bufferPosition, b, offset, len);}bufferPosition += len;}else{if (available > 0){Buffer.BlockCopy(buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize){refill();if (bufferLength < len){Buffer.BlockCopy(buffer, 0, b, offset, bufferLength);throw new EOFException("read past EOF: " + this);}else{Buffer.BlockCopy(buffer, 0, b, offset, len);bufferPosition = len;}}else{long after = bufferStart + bufferPosition + len;if (after > length()){throw new EOFException("read past EOF: " + this);}readInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;}}}
public virtual TagQueueResponse TagQueue(TagQueueRequest request) {var options = new InvokeOptions();options.RequestMarshaller = TagQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance;return Invoke<TagQueueResponse>(request, options);}
public void Remove() => throw new NotSupportedException();
public CacheSubnetGroup ModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) { request = BeforeClientExecution(request); return ExecuteModifyCacheSubnetGroup(request); }
public void SetParams(string params) {base.SetParams(params); language = country = variant = ""; var st = new StringTokenizer(params, ","); if (st.hasMoreTokens()) language = st.nextToken(); if (st.hasMoreTokens()) country = st.nextToken(); if (st.hasMoreTokens()) variant = st.nextToken();}
public DeleteDocumentationVersionResponse DeleteDocumentationVersion(DeleteDocumentationVersionRequest request){request = BeforeClientExecution(request);return ExecuteDeleteDocumentationVersion(request);}
public bool Equals(object obj) {if (!(obj is FacetLabel other)) {return false;}if (length != other.length) {return false;}for (int i = length - 1; i >= 0; i--) {if (!components[i].Equals(other.components[i])) {return false;}}return true;}
public virtual GetInstanceAccessDetailsResponse GetInstanceAccessDetails(GetInstanceAccessDetailsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetInstanceAccessDetailsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetInstanceAccessDetailsResponseUnmarshaller.Instance;return Invoke<GetInstanceAccessDetailsResponse>(request, options);}
public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.SetParent(this);shape.SetAnchor(anchor);shapes.Add(shape);OnCreate(shape);return shape;}
public string GetSheetName(int sheetIndex) {return GetBoundSheetRec(sheetIndex).GetSheetname();}
public GetDashboardResult GetDashboard(GetDashboardRequest request) {request = BeforeClientExecution(request);return ExecuteGetDashboard(request);}
public AssociateSigninDelegateGroupsWithAccountResponse AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return Invoke<AssociateSigninDelegateGroupsWithAccountResponse>(request, options);}
public void AddMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.GetNumColumns(); j++) {BlankRecord br = new BlankRecord();br.SetColumn((short)(j + mbr.GetFirstColumn()));br.SetRow(mbr.GetRow());br.SetXFIndex(mbr.GetXFAt(j));InsertCell(br);}}
public static string quote(string input) {StringBuilder sb = new StringBuilder();sb.Append("\\Q");int apos = 0;int k;while ((k = input.IndexOf("\\E", apos)) >= 0) {sb.Append(input.Substring(apos, k + 2)).Append("\\\\E\\Q");apos = k + 2;}return sb.Append(input.Substring(apos)).Append("\\E").ToString();}
public byte[] PutInt(int value) {throw new ReadOnlyBufferException();}
public ArrayPtg(Object[][] values2d) {int nColumns = values2d[0].Length;int nRows = values2d.Length;_nColumns = (short)nColumns;_nRows = (short)nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++) {Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++) {vv[getValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public virtual GetIceServerConfigResponse GetIceServerConfig(GetIceServerConfigRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetIceServerConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIceServerConfigResponseUnmarshaller.Instance;return Invoke<GetIceServerConfigResponse>(request, options);}
public override string ToString() {return GetType().Name + " [" + getValueAsString() +"]";}
public string ToString(string field) { return "ToChildBlockJoinQuery (" + parentQuery.ToString() + ")"; }
public void IncRef() {refCount.InterlockedIncrement(); }
public virtual UpdateConfigurationSetSendingEnabledResponse UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationSetSendingEnabledResponse>(request, options);}
public int GetNextXBATChainOffset() {return getXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}
public void MultiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.GetInstance(Math.Abs(pow10));if (pow10 < 0) {MulShift(tp.Divisor, tp.DivisorShift);} else {MulShift(tp.Multiplicand, tp.MultiplierShift);}}
public override string ToString(){StringBuilder b = new StringBuilder();int l = Length;b.Append(Path.DirectorySeparatorChar);for (int i = 0; i < l; i++){b.Append(GetComponent(i));if (i < l - 1){b.Append(Path.DirectorySeparatorChar);}}return b.ToString();}
public InstanceProfileCredentialsProvider WithFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.SetRoleName(roleName);return this;}
public void SetProgressMonitor(ProgressMonitor pm) {progressMonitor = pm;}
public void reset() {if (!first()) {ptr = 0;if (!eof()) parseEntry();}}
public E Previous() { if (iterator.PreviousIndex() >= start) { return iterator.Previous(); } throw new NoSuchElementException(); }
public string GetNewPrefix() {return this.newPrefix;}
public int IndexOfValue(int value){for (int i = 0; i < mSize; i++){if (mValues[i] == value){return i;}}return -1;}
public List<CharsRef> uniqueStems(char[] word, int length) {List<CharsRef> stems = stem(word, length);if (stems.Count < 2) {return stems;}HashSet<CharsRef> terms = new HashSet<CharsRef>();List<CharsRef> deduped = new List<CharsRef>();foreach (CharsRef s in stems) {if (!terms.Contains(s)) {deduped.Add(s);terms.Add(s);}}return deduped;}
public virtual GatewayResponses GetGatewayResponses(GetGatewayResponsesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance;return Invoke<GatewayResponses>(request, options);}
public void SetPosition(long pos){currentBlockIndex = (int)(pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int)(pos & blockMask);}
public long Skip(long n) {int s = (int)Math.Min(Available(), Math.Max(0, n));ptr += s; return s; }
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {SetBootstrapActionConfig(bootstrapActionConfig);}
public void Serialize(LittleEndianOutput output) {output.WriteInt16(field_1_row);output.WriteInt16(field_2_col);output.WriteInt16(field_3_flags);output.WriteInt16(field_4_shapeid);output.WriteInt16((short)field_6_author.Length);output.WriteByte(field_5_hasMultibyte ? (byte)0x01 : (byte)0x00);if (field_5_hasMultibyte) {StringUtil.PutUnicodeLE(field_6_author, output);} else {StringUtil.PutCompressedUnicode(field_6_author, output);}if (field_7_padding != null) {output.WriteByte(Convert.ToByte(field_7_padding));}}
public int LastIndexOf(string input) {return LastIndexOf(input, Count);}
public bool Add(E obj) { return AddLastImpl(obj); }
public void UnsetSection(string section, string subsection){ConfigSnapshot src, res;do{src = state.Get();res = unsetSection(src, section, subsection);} while (!state.CompareAndSet(src, res));}
public final string getTagName() { return tagName; }
public void AddSubRecord(int index, SubRecord element) {subrecords.Insert(index, element);}
public bool Remove(object o){lock (mutex){return delegate().Remove(o);}}
public DoubleMetaphoneFilter Create(TokenStream input) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long Length() { return inCoreLength(); }
public void setValue(bool newValue) {value = newValue;}
public ContentSourcePair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}
public int Get(int i){if (count <= i)throw new IndexOutOfRangeException(i);return entries[i];}
public CreateRepoRequest() : base("cr", "2016-06-07", "CreateRepo", "cr"){this.setUriPattern("/repos");this.setMethod(MethodType.PUT);}
public bool IsDeltaBaseAsOffset() { return deltaBaseAsOffset; }
public void Remove() {if (expectedModCount == list.modCount) {if (lastLink != null) {Link<ET> next = lastLink.next;Link<ET> previous = lastLink.previous;next.previous = previous;previous.next = next;if (lastLink == link) {pos--;}link = previous;lastLink = null;expectedModCount++;list.size--;list.modCount++;} else {throw new IllegalStateException();}} else {throw new ConcurrentModificationException();}}
public MergeShardsResponse MergeShards(MergeShardsRequest request) {request = BeforeClientExecution(request);return ExecuteMergeShards(request);}
public virtual AllocateHostedConnectionResponse AllocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;return Invoke<AllocateHostedConnectionResponse>(request, options);}
public int GetBeginIndex() { return start; }
public static WeightedTerm[] GetTerms(Query query){return GetTerms(query, false);}
public byte[] Compact() {throw new ReadOnlyBufferException();}
public void Decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >> 2;long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >> 4);long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >> 6);values[valuesOffset++] = byte2 & 63;}}
public string GetHumanishName() {string s = GetPath();if ("/".Equals(s) || "".Equals(s)) s = GetHost();if (s == null) throw new ArgumentException();string[] elements;if ("file".Equals(Scheme) || LOCAL_FILE.IsMatch(s)) elements = s.Split(new char[] { File.DirectorySeparatorChar, '/' }, StringSplitOptions.RemoveEmptyEntries); else elements = s.Split('/', StringSplitOptions.RemoveEmptyEntries); if (elements.Length == 0)throw new ArgumentException();string result = elements[elements.Length - 1];if (Constants.DOT_GIT.Equals(result))result = elements[elements.Length - 2];else if (result.EndsWith(Constants.DOT_GIT_EXT))result = result.Substring(0, result.Length - Constants.DOT_GIT_EXT.Length());return result;}
public virtual DescribeNotebookInstanceLifecycleConfigResponse DescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance;return Invoke<DescribeNotebookInstanceLifecycleConfigResponse>(request, options);}
public string GetAccessKeySecret() {return this.accessKeySecret;}
public CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request) {request = BeforeClientExecution(request);return ExecuteCreateVpnConnection(request);}
public virtual DescribeVoicesResponse DescribeVoices(DescribeVoicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVoicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVoicesResponseUnmarshaller.Instance;return Invoke<DescribeVoicesResponse>(request, options);}
public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance; options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance; return Invoke<ListMonitoringExecutionsResponse>(request, options); }
public DescribeJobRequest(string vaultName, string jobId) {SetVaultName(vaultName);SetJobId(jobId);}
public EscherRecord GetEscherRecord(int index) { return escherRecords[index]; }
public GetApisResponse GetApis(GetApisRequest request) {request = beforeClientExecution(request);return executeGetApis(request);}
public DeleteSmsChannelResponse DeleteSmsChannel(DeleteSmsChannelRequest request) { request = BeforeClientExecution(request); return ExecuteDeleteSmsChannel(request); }
public TrackingRefUpdate GetTrackingRefUpdate() {return trackingRefUpdate;}
public void print(bool b) {print(b.ToString());}
public QueryNode GetChild() { return GetChildren().ElementAt(0); }
public class NotIgnoredFilter{private readonly int index;public NotIgnoredFilter(int workdirTreeIndex){this.index = workdirTreeIndex;}}
public AreaRecord(RecordInputStream in) {field_1_formatFlags = in.ReadShort();}
public GetThumbnailRequest() : base("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto") { SetProtocol(ProtocolType.HTTPS); }
public virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTransitGatewayVpcAttachmentsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.Instance;return Invoke<DescribeTransitGatewayVpcAttachmentsResponse>(request, options);}
public PutVoiceConnectorStreamingConfigurationResponse PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) { request = BeforeClientExecution(request); return ExecutePutVoiceConnectorStreamingConfiguration(request); }
public OrdRange GetOrdRange(string dim) { return prefixToOrdRange[dim]; }
public string ToString() {string symbol = "";if (startIndex >= 0 && startIndex < getInputStream().Size) {symbol = getInputStream().GetText(new Interval(startIndex, startIndex));symbol = Utils.EscapeWhitespace(symbol, false);}return string.Format(System.Globalization.CultureInfo.CurrentCulture, "{0}('{1}')", LexerNoViableAltException.class.getSimpleName(), symbol);}
public E Peek() {return PeekFirstImpl();}
public WorkspaceResult CreateWorkspaces(CreateWorkspacesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance;return Invoke<WorkspaceResult>(request, options);}
public NumberFormatIndexRecord Clone() { return Copy(); }
public virtual DescribeRepositoriesResponse DescribeRepositories(DescribeRepositoriesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.Instance;return Invoke<DescribeRepositoriesResponse>(request, options);}
public SparseIntArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}
public HyphenatedWordsFilter Create(TokenStream input) { return new HyphenatedWordsFilter(input); }
public CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateDistributionWithTagsResponse>(request, options);}
public RandomAccessFile(String fileName, String mode) { this(new File(fileName), mode); }
public DeleteWorkspaceImageResponse DeleteWorkspaceImage(DeleteWorkspaceImageRequest request) { request = BeforeClientExecution(request); return ExecuteDeleteWorkspaceImage(request); }
public static string ToHex(long value) {StringBuilder sb = new StringBuilder(16);WriteHex(sb, value, 16, "");return sb.ToString();}
public UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request) {request = beforeClientExecution(request);return executeUpdateDistribution(request);}
public HSSFColor getColor(short index) {if (index == HSSFColorPredefined.AUTOMATIC.GetIndex()) {return HSSFColorPredefined.AUTOMATIC.GetColor();}byte[] b = _palette.GetColor(index);return (b == null) ? null : new CustomColor(index, b);}
public IEvaluationResult Evaluate(IEvaluationContext context, params IEvaluationResult[] operands) { throw new NotImplementedException(_functionName); }
public void Serialize(LittleEndianOutput @out) {@out.WriteShort((short)field_1_number_crn_records);@out.WriteShort((short)field_2_sheet_table_index);}
public DescribeDBEngineVersionsResponse DescribeDBEngineVersions() { return DescribeDBEngineVersions(new DescribeDBEngineVersionsRequest()); }
public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}
public static byte[] ToBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte)(ch >> 8);result[resultIndex++] = (byte)ch;}return result;}
public UploadArchiveResponse UploadArchive(UploadArchiveRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;return Invoke<UploadArchiveResponse>(request, options);}
public virtual List<Token> GetHiddenTokensToLeft(int tokenIndex) {return GetHiddenTokensToLeft(tokenIndex, -1);}
public override bool Equals(object obj) {if (this == obj)return true;if (!base.Equals(obj))return false;if (GetType() != obj.GetType())return false;AutomatonQuery other = (AutomatonQuery) obj;if (!compiled.Equals(other.compiled))return false;if (term == null) {if (other.term != null)return false;} else if (!term.Equals(other.term))return false;return true;}
public virtual SpanQuery MakeSpanClause() {SpanQuery[] spanQueries = new SpanQuery[size()];IEnumerator<SpanQuery> sqi = weightBySpanQuery.Keys.GetEnumerator();int i = 0;while (sqi.MoveNext()) {SpanQuery sq = sqi.Current;float boost = weightBySpanQuery[sq];if (boost != 1f) {sq = new SpanBoostQuery(sq, boost);}spanQueries[i++] = sq;}if (spanQueries.Length == 1) return spanQueries[0];else return new SpanOrQuery(spanQueries);}
public StashCreateCommand StashCreate() => new StashCreateCommand(repo);
public FieldInfo FieldInfo(string fieldName) { return byName[fieldName]; }
public DescribeEventSourceResponse DescribeEventSource(DescribeEventSourceRequest request){request = BeforeClientExecution(request);return ExecuteDescribeEventSource(request);}
public virtual GetDocumentAnalysisResponse GetDocumentAnalysis(GetDocumentAnalysisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentAnalysisResponseUnmarshaller.Instance;return Invoke<GetDocumentAnalysisResponse>(request, options);}
public virtual CancelUpdateStackResponse CancelUpdateStack(CancelUpdateStackRequest request){var options = new InvokeOptions();options.RequestMarshaller = CancelUpdateStackRequestMarshaller.Instance;options.ResponseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;return Invoke<CancelUpdateStackResponse>(request, options);}
public virtual ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;return Invoke<ModifyLoadBalancerAttributesResponse>(request, options);}
public SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = SetInstanceProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetInstanceProtectionResponseUnmarshaller.Instance;return Invoke<SetInstanceProtectionResponse>(request, options);}
public virtual ModifyDBProxyResponse ModifyDBProxy(ModifyDBProxyRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBProxyResponseUnmarshaller.Instance;return Invoke<ModifyDBProxyResponse>(request, options);}
public void Add(char[] output, int offset, int len, int endOffset, int posLength) { if (count == outputs.Length) { outputs = ArrayUtil.Grow(outputs, count + 1); } if (count == endOffsets.Length) { int[] next = new int[ArrayUtil.Oversize(1 + count, sizeof(int))]; Array.Copy(endOffsets, 0, next, 0, count); endOffsets = next; } if (count == posLengths.Length) { int[] next = new int[ArrayUtil.Oversize(1 + count, sizeof(int))]; Array.Copy(posLengths, 0, next, 0, count); posLengths = next; } if (outputs[count] == null) { outputs[count] = new CharsRefBuilder(); } outputs[count].CopyChars(output, offset, len); endOffsets[count] = endOffset; posLengths[count] = posLength; count++; }
public partial class FetchLibrariesRequest : AliyunAcsCore.Request{ public FetchLibrariesRequest() { this.Version = "2017-07-11"; this.Action = "FetchLibraries"; this.Domain = "cloudphoto"; this.Protocol = ProtocolType.HTTPS; } }
public bool Exists() {return fs.Exists(objects);}
public FilterOutputStream(OutputStream out) {this.out = out;}
public ScaleClusterRequest() : base("CS", "2015-12-15", "ScaleCluster", "csk") { SetUriPattern("/clusters/[ClusterId]"); SetMethod(MethodType.PUT); }
public DataValidationConstraint CreateTimeConstraint(int operatorType, string formula1, string formula2) { return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2); }
public ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request) { request = BeforeClientExecution(request); return ExecuteListObjectParentPaths(request); }
public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeCacheSubnetGroupsResponse>(request, options);}
public void SetSharedFormula(bool flag) {field_5_options = sharedFormula.setShortBoolean(field_5_options, flag);}
public bool ReuseObjects { get; private set; }
public ErrorNode AddErrorNode(Token badToken) {ErrorNodeImpl t = new ErrorNodeImpl(badToken);addAnyChild(t);t.SetParent(this);return t;}
public LatvianStemFilterFactory(Dictionary<string, string> args) {base(args);if (args.Any()) {throw new ArgumentException("Unknown parameters: " + string.Join(", ", args));}}
public EventSubscription RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) { request = beforeClientExecution(request); return executeRemoveSourceIdentifierFromSubscription(request); }
public static TokenFilterFactory ForName(string name, IDictionary<string, string> args) {return loader.NewInstance(name, args);}
public AddAlbumPhotosRequest() : base("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto") { setProtocol(ProtocolType.HTTPS); }
public virtual GetThreatIntelSetResponse GetThreatIntelSet(GetThreatIntelSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;return Invoke<GetThreatIntelSetResponse>(request, options);}
public RevFilter Clone() { return new Binary(a.Clone(), b.Clone()); }
public bool Equals(object o) {return o is ArmenianStemmer;}
public readonly bool HasArray() { return ProtectedHasArray(); }
public UpdateContributorInsightsResponse UpdateContributorInsights(UpdateContributorInsightsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.Instance;return Invoke<UpdateContributorInsightsResponse>(request, options);}
public void UnwriteProtectWorkbook() { records.Remove(fileShare); records.Remove(writeProtect); fileShare = null; writeProtect = null; }
public SolrSynonymParser(bool dedup, bool expand, Analyzer analyzer) : base(dedup, analyzer) { this.expand = expand; }
public RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return Invoke<RequestSpotInstancesResponse>(request, options);}
public byte[] GetObjectData() { return FindObjectRecord().GetObjectData(); }
public virtual GetContactAttributesResponse GetContactAttributes(GetContactAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;return Invoke<GetContactAttributesResponse>(request, options);}
public string ToString() { return GetKey() + ": " + GetValue(); }
public class TranslationService{public ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request){request = BeforeClientExecution(request);return ExecuteListTextTranslationJobs(request);}private ListTextTranslationJobsRequest BeforeClientExecution(ListTextTranslationJobsRequest request){// Implementation of BeforeClientExecutionreturn request;}private ListTextTranslationJobsResponse ExecuteListTextTranslationJobs(ListTextTranslationJobsRequest request){// Implementation of ExecuteListTextTranslationJobsreturn new ListTextTranslationJobsResponse();}}
public virtual GetContactMethodsResponse GetContactMethods(GetContactMethodsRequest request){request = BeforeClientExecution(request);return ExecuteGetContactMethods(request);}
public static short lookupIndexByName(string name) {FunctionMetadata fd = getInstance().getFunctionByNameInternal(name);if (fd == null) {fd = getInstanceCetab().getFunctionByNameInternal(name);if (fd == null) {return -1;}}return (short) fd.getIndex();}
public DescribeAnomalyDetectorsResponse DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request) {request = beforeClientExecution(request);return executeDescribeAnomalyDetectors(request);}
public static string InsertId(string message, ObjectId changeId, bool skipIfAlready= false)
public long GetObjectSize(AnyObjectId objectId, int typeHint) throws MissingObjectException, IncorrectObjectTypeException, IOException { long sz = db.GetObjectSize(this, objectId); if (sz < 0) { if (typeHint == OBJ_ANY) throw new MissingObjectException(objectId.Copy(), JGitText.Get().UnknownObjectType2); throw new MissingObjectException(objectId.Copy(), typeHint); } return sz;}
public virtual ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance; options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance; return Invoke<ImportInstallationMediaResponse>(request, options); }
public PutLifecycleEventHookExecutionStatusResponse PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {request = beforeClientExecution(request);return executePutLifecycleEventHookExecutionStatus(request);}
public NumberPtg(LittleEndianInput in)  {this(in.ReadDouble());}
public GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) {request = beforeClientExecution(request);return executeGetFieldLevelEncryptionConfig(request);}
public DescribeDetectorResponse DescribeDetector(DescribeDetectorRequest request) {request = beforeClientExecution(request);return executeDescribeDetector(request);}
public ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance; options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance; return Invoke<ReportInstanceStatusResponse>(request, options); }
public DeleteAlarmResponse DeleteAlarm(DeleteAlarmRequest request){request = beforeClientExecution(request);return executeDeleteAlarm(request);}
public TokenStream Create(TokenStream input) { return new PortugueseStemFilter(input); }
public FtCblsSubRecord() {reserved = new byte[ENCODED_SIZE];}
public bool Remove(object obj){lock (mutex){return c.Remove(obj);}}
public GetDedicatedIpResponse GetDedicatedIp(GetDedicatedIpRequest request){request = BeforeClientExecution(request);return ExecuteGetDedicatedIp(request);}
public override string ToString() { return precedence + " >= _p"; }
public virtual ListStreamProcessorsResponse ListStreamProcessors(ListStreamProcessorsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListStreamProcessorsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.Instance;return Invoke<ListStreamProcessorsResponse>(request, options);}
public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName) {setLoadBalancerName(loadBalancerName);setPolicyName(policyName);}
public WindowProtectRecord(int options) { this._options = options; }
public UnbufferedCharStream(int bufferSize) { n = 0; data = new int[bufferSize]; }
public GetOperationsResponse GetOperations(GetOperationsRequest request){request = BeforeClientExecution(request);return ExecuteGetOperations(request);}
public void CopyRawTo(byte[] b, int o) {NB.EncodeInt32(b, o, w1);NB.EncodeInt32(b, o + 4, w2);NB.EncodeInt32(b, o + 8, w3);NB.EncodeInt32(b, o + 12, w4);NB.EncodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in) {field_1_h_hold = in.ReadShort();field_2_v_hold = in.ReadShort();field_3_width = in.ReadShort();field_4_height = in.ReadShort();field_5_options = in.ReadShort();field_6_active_sheet = in.ReadShort();field_7_first_visible_tab = in.ReadShort();field_8_num_selected_tabs = in.ReadShort();field_9_tab_width_ratio = in.ReadShort();}
public virtual StopWorkspacesResponse StopWorkspaces(StopWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;return Invoke<StopWorkspacesResponse>(request, options);}
public void Close(){if (isOpen){isOpen = false;try{Dump();}finally{try{channel.Truncate(fileLength);}finally{try{channel.Close();}finally{fos.Close();}}}}}
public virtual DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);}
public string getPronunciation(int wordId, char[] surface, int off, int len) { return null; }
public string GetPath() {return pathStr;}
public static double Devsq(double[] v) { double r = double.NaN; if (v != null && v.Length >= 1) { double m = 0; double s = 0; int n = v.Length; for (int i = 0; i < n; i++) { s += v[i]; } m = s / n; s = 0; for (int i = 0; i < n; i++) { s += (v[i] - m) * (v[i] - m); } r = (n == 1) ? 0 : s; } return r; }
public DescribeResizeResponse DescribeResize(DescribeResizeRequest request) { request = BeforeClientExecution(request); return ExecuteDescribeResize(request); }
public bool HasPassedThroughNonGreedyDecision() { return passedThroughNonGreedyDecision; }
public int End() {return End(0);}
using System; using System.Collections.Generic; class Solution { public void traverse(CellHandler handler) { int firstRow = range.getFirstRow(); int lastRow = range.getLastRow(); int firstColumn = range.getFirstColumn(); int lastColumn = range.getLastColumn(); int width = lastColumn - firstColumn + 1; SimpleCellWalkContext ctx = new SimpleCellWalkContext(); Row currentRow = null; Cell currentCell = null; for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber) { currentRow = sheet.getRow(ctx.rowNumber); if (currentRow == null) { continue; } for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber) { currentCell = currentRow.getCell(ctx.colNumber); if (currentCell == null) { continue; } if (isEmpty(currentCell) && !traverseEmptyCells) { continue; } long rowSize = ArithmeticUtils.mulAndCheck(((long)ArithmeticUtils.subAndCheck(ctx.rowNumber, firstRow)), ((long)width)); ctx.ordinalNumber = ArithmeticUtils.addAndCheck(rowSize, (ctx.colNumber - firstColumn + 1)); handler.onCell(currentCell, ctx); } } } }
public int GetReadIndex() { return pos; }
public int CompareTo(ScoreTerm other) { if (this.Boost == other.Boost) return other.Bytes.Compare(this.Bytes); else return float.Compare(this.Boost, other.Boost); }
public int Normalize(char[] s, int len) { for (int i = 0; i < len; i++) { switch (s[i]) { case FARSI_YEH: case YEH_BARREE: s[i] = YEH; break; case KEHEH: s[i] = KAF; break; case HEH_YEH: case HEH_GOAL: s[i] = HEH; break; case HAMZA_ABOVE: len = Delete(s, i, len); i--; break; default: break; } } return len; }private int Delete(char[] s, int index, int len) { for (int i = index; i < len - 1; i++) { s[i] = s[i + 1]; } return len - 1; }
public void Serialize(LittleEndianOutput @out) { @out.WriteShort(_options); }
public DiagnosticErrorListener(bool exactOnly) {this.exactOnly = exactOnly;}
public KeySchemaElement(string attributeName, KeyType keyType) {SetAttributeName(attributeName);SetKeyType(keyType.ToString());}
public virtual GetAssignmentResponse GetAssignment(GetAssignmentRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;return Invoke<GetAssignmentResponse>(request, options);}
public bool HasObject(AnyObjectId id) {return FindOffset(id) != -1;}
public GroupingSearch SetAllGroups(bool allGroups) { this.allGroups = allGroups; return this; }
public void SetMultiValued(string dimName, bool v) {DimConfig ft = fieldTypes[dimName];if (ft == null) {ft = new DimConfig();fieldTypes[dimName] = ft;}ft.multiValued = v;}
public int getCellsVal() {using (IEnumerator<KeyValuePair<Character, Cell>> i = cells.Keys.GetEnumerator()) {int size = 0;while (i.MoveNext()) {Character c = i.Current.Key;Cell e = at(c);if (e.cmd >= 0) {size++;}}return size;}}
public DeleteVoiceConnectorResponse DeleteVoiceConnector(DeleteVoiceConnectorRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorResponse>(request, options);}
public DeleteLifecyclePolicyResponse DeleteLifecyclePolicy(DeleteLifecyclePolicyRequest request) {request = beforeClientExecution(request);return executeDeleteLifecyclePolicy(request);}
public void Write(byte[] b) {int len = b.Length;CheckPosition(len);Array.Copy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}
public RebaseResult GetRebaseResult() { return this.rebaseResult; }
public static int GetNearestSetSize(int maxNumberOfValuesExpected, float desiredSaturation){for (int i = 0; i < usableBitSetSizes.Length; i++){int numSetBitsAtDesiredSaturation = (int)(usableBitSetSizes[i] * desiredSaturation);int estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(usableBitSetSizes[i], numSetBitsAtDesiredSaturation);if (estimatedNumUniqueValues > maxNumberOfValuesExpected){return usableBitSetSizes[i];}}return -1;}
public virtual DescribeDashboardResponse DescribeDashboard(DescribeDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return Invoke<DescribeDashboardResponse>(request, options);}
public virtual CreateSegmentResponse CreateSegment(CreateSegmentRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSegmentResponseUnmarshaller.Instance;return Invoke<CreateSegmentResponse>(request, options);}
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[DBCELL]\n");buffer.Append("    .rowoffset = ").Append(HexDump.IntToHex(field_1_row_offset)).Append("\n");for (int k = 0; k < field_2_cell_offsets.Length; k++) {buffer.Append("    .cell_").Append(k).Append(" = ").Append(HexDump.ShortToHex(field_2_cell_offsets[k])).Append("\n");}buffer.Append("[/DBCELL]\n");return buffer.ToString();}
public List<String> GetUndeletedList() {return undeletedList;}
public override string ToString() {return "[INTERFACEEND/]\\n"; }
public MergeScheduler Clone() { return this; }
public PlainTextDictionary(Reader reader) {this.in = new System.IO.BufferedReader(reader);}
public StringBuilder Append(string csq) { if (csq == null) { AppendNull(); } else { Append0(csq, 0, csq.Length); } return this; }
public ListAssociatedStacksResponse ListAssociatedStacks(ListAssociatedStacksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance;return Invoke<ListAssociatedStacksResponse>(request, options);}
public static double Avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++) {s += v[i];}m = s / v.Length;s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++) {s += Math.Abs(v[i] - m);}r = s / v.Length;return r;}
public virtual DescribeByoipCidrsResponse DescribeByoipCidrs(DescribeByoipCidrsRequest request){request = BeforeClientExecution(request);return ExecuteDescribeByoipCidrs(request);}
public GetDiskResponse GetDisk(GetDiskRequest request) { request = BeforeClientExecution(request); return ExecuteGetDisk(request); }
public CreateDBClusterParameterGroupResponse CreateDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {request = BeforeClientExecution(request);return ExecuteCreateDBClusterParameterGroup(request);}
public static CharBuffer Wrap(char[] array, int start, int charCount){Array.CheckOffsetAndLength(array.Length, start, charCount);CharBuffer buf = new ReadWriteCharArrayBuffer(array);buf.Position = start;buf.Limit = start + charCount;return buf;}
public SubmoduleStatusType GetType() {return type;}
public virtual DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;return Invoke<DescribeGameServerGroupResponse>(request, options);}
public Pattern pattern() { return pattern; }
public V SetValue(V obj) { throw new NotImplementedException(); }
public StringBuilder stem(CharSequence word) {CharSequence cmd = stemmer.getLastOnPath(word);if (cmd == null)return null;buffer.Clear();buffer.Append(word);Diff.apply(buffer, cmd);if (buffer.Length > 0)return buffer;elsereturn null;}
public RenameFaceRequest() : base("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
public char requireChar(Dictionary<string, string> args, string name) {return require(args, name)[0];}
public static string ToStringTree(Tree t) {return ToStringTree(t, (List<string>)null);}
public override string ToString() {return "<deleted/>";}
public GetRepoWebhookLogListRequest() : base("cr", "2016-06-07", "GetRepoWebhookLogList", "cr") { SetUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs"); SetMethod(MethodType.GET); }
public virtual GetJobUnlockCodeResponse GetJobUnlockCode(GetJobUnlockCodeRequest request) {request = BeforeClientExecution(request);return ExecuteGetJobUnlockCode(request);}
public RemoveTagsRequest(string resourceId) {ResourceId = resourceId;}
public short GetGB2312Id(char ch){try{byte[] buffer = Encoding.GetEncoding("GB2312").GetBytes(ch.ToString());if (buffer.Length != 2){return -1;}int b0 = (buffer[0] & 0x0FF) - 161;int b1 = (buffer[1] & 0x0FF) - 161;return (short)(b0 * 94 + b1);}catch (EncoderFallbackException e){throw new RuntimeException(e);}}
public BatchRefUpdate AddCommand(IEnumerable<ReceiveCommand> cmd) {commands.AddRange(cmd);return this;}
public short CheckExternSheet(int sheetNumber) { return (short)getOrCreateLinkTable().CheckExternSheet(sheetNumber); }
public override bool Equals(object obj) {return c.Equals(obj);}
public BooleanQuery Build(QueryNode queryNode) throws QueryNodeException {AnyQueryNode andNode = (AnyQueryNode)queryNode;BooleanQuery.Builder bQuery = new BooleanQuery.Builder();List<QueryNode> children = andNode.getChildren();if (children != null) {foreach (QueryNode child in children) {object obj = child.GetTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null) {Query query = (Query)obj;try {bQuery.Add(query, BooleanClause.Occur.SHOULD);} catch (TooManyClauses ex) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.SetMinimumNumberShouldMatch(andNode.GetMinimumMatchingElements());return bQuery.Build();}
public DescribeStreamProcessorResponse DescribeStreamProcessor(DescribeStreamProcessorRequest request) { request = BeforeClientExecution(request); return ExecuteDescribeStreamProcessor(request); }
public DescribeDashboardPermissionsResult DescribeDashboardPermissions(DescribeDashboardPermissionsRequest request) {request = BeforeClientExecution(request);return ExecuteDescribeDashboardPermissions(request);}
public Ref Peel(Ref ref) {try {return GetRefDatabase().Peel(ref);} catch (IOException e) {return ref;}}
public long RamBytesUsed() {return RamUsageEstimator.AlignObjectSize(RamUsageEstimator.NumBytesObjectHeader + 2 * sizeof(int) + RamUsageEstimator.NumBytesObjectRef) + RamUsageEstimator.SizeOf(blocks);}
public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request){request = BeforeClientExecution(request);return ExecuteGetDomainSuggestions(request);}
public virtual DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance;return Invoke<DescribeStackEventsResponse>(request, options);}
public void setRule(int idx, ConditionalFormattingRule cfRule){setRule(idx, (HSSFConditionalFormattingRule)cfRule);}
public virtual CreateResolverRuleResponse CreateResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverRuleResponseUnmarshaller.Instance;return Invoke<CreateResolverRuleResponse>(request, options);}
public SeriesIndexRecord(RecordInputStream in) {field_1_index = in.ReadInt16();}
public GetStylesRequest() {base("lubancloud", "2018-05-09", "GetStyles", "luban");this.Method = MethodType.POST;}
public void serialize(LittleEndianOutput output) {output.WriteInt16(field_1_gridset_flag);}
public bool Equals(object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (GetType() != obj.GetType()) {return false;}Toffs other = (Toffs) obj;if (GetStartOffset() != other.GetStartOffset()) {return false;}if (GetEndOffset() != other.GetEndOffset()) {return false;}return true;}
public CreateGatewayGroupResponse CreateGatewayGroup(CreateGatewayGroupRequest request) { request = BeforeClientExecution(request); return ExecuteCreateGatewayGroup(request); }
public virtual CreateParticipantConnectionResponse CreateParticipantConnection(CreateParticipantConnectionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance;return Invoke<CreateParticipantConnectionResponse>(request, options);}
public static double IRR(double[] income) { return IRR(income, 0.1d); }
public virtual RegisterWorkspaceDirectoryResponse RegisterWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<RegisterWorkspaceDirectoryResponse>(request, options);}
public RevertCommand Include(AnyObjectId commit) {return Include(commit.Name(), commit);}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.GetErrorEval();}string iNumber = OperandResolver.CoerceValueToString(veText1);Match m = COMPLEX_NUMBER_PATTERN.Matcher(iNumber);bool result = m.Matches();string imaginary = "";if (result) {string imaginaryGroup = m.Group(5);bool hasImaginaryPart = imaginaryGroup.Equals("i") || imaginaryGroup.Equals("j");if (imaginaryGroup.Length == 0) {return new StringEval(string.ValueOf(0));}if (hasImaginaryPart) {string sign = "";string imaginarySign = m.Group(GROUP3_IMAGINARY_SIGN);if (imaginarySign.Length != 0 && !(imaginarySign.Equals("+"))) {sign = imaginarySign;}string groupImaginaryNumber = m.Group(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE);if (groupImaginaryNumber.Length != 0) {imaginary = sign + groupImaginaryNumber;} else {imaginary = sign + "1";}} else {return ErrorEval.Num_error;}} else {return ErrorEval.Num_error;}return new StringEval(imaginary);}
public E PollLast() {DictionaryEntry<E, object> entry = backingMap.PollLast();return (entry == null) ? null : entry.Key;}
public ushort ReadUShort(){byte ch1 = ReadUByte();byte ch2 = ReadUByte();return (ushort)((ch2 << 8) + (ch1 << 0));}
public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType){SetSnapshotId(snapshotId);SetAttribute(attribute.ToString());SetOperationType(operationType.ToString());}
public ListBonusPaymentsResult ListBonusPayments(ListBonusPaymentsRequest request) { request = BeforeClientExecution(request); return ExecuteListBonusPayments(request); }
public T Get(string cs) { if (cs == null) throw new ArgumentNullException(nameof(cs)); return default; }
public TokenFilter Create(TokenStream input) {CommonGramsFilter commonGrams = (CommonGramsFilter)base.Create(input);return new CommonGramsQueryFilter(commonGrams);}
public string GetPath() { return path; }
public InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = InitiateMultipartUploadResponseUnmarshaller.Instance;return Invoke<InitiateMultipartUploadResponse>(request, options);}
public StringBuilder Insert(int offset, int i) {Insert0(offset, i.ToString());return this;}
public void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2){values[valuesOffset++] = (int)((block >> shift) & 3);}}}
public TokenStream Create(TokenStream input) { return new ElisionFilter(input, articles); }
public bool Eat(Row in, int[] remap) { int sum = 0; foreach (var c in in.Cells.Values) { sum += c.Cnt; if (c.Ref >= 0) { if (remap[c.Ref] == 0) { c.Ref = -1; } } } int frame = sum / 10; bool live = false; foreach (var c in in.Cells.Values) { if (c.Cnt < frame && c.Cmd >= 0) { c.Cnt = 0; c.Cmd = -1; } if (c.Cmd >= 0 || c.Ref >= 0) { live |= true; } } return !live; }
public Token GetToken(int index){Token t = jj_lookingAhead ? jj_scanpos : token;for (int i = 0; i < index; i++){if (t.Next != null) t = t.Next;else t = t.Next = token_source.GetNextToken();}return t;}
public override string ToString() {StringBuilder sb = new StringBuilder();sb.Append(GetType().Name).Append(" [ARRAY]\n");sb.Append(" range=").Append(GetRange()).Append("\n");sb.Append(" options=").Append(HexDump.ShortToHex(_options)).Append("\n");sb.Append(" notUsed=").Append(HexDump.IntToHex(_field3notUsed)).Append("\n");sb.Append(" formula:").Append("\n");Ptg[] ptgs = _formula.GetTokens();for (int i = 0; i < ptgs.Length; i++) {Ptg ptg = ptgs[i];sb.Append(ptg).Append(ptg.GetRVAType()).Append("\n");}sb.Append("]");return sb.ToString();}
public virtual GetFolderResponse GetFolder(GetFolderRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFolderRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance;return Invoke<GetFolderResponse>(request, options);}
public override void Add(int location, E object) { throw new UnsupportedOperationException(); }
public PositiveScoresOnlyCollector(ICollector in) : base(in) { }
public CreateRepoBuildRuleRequest() : base("cr", "2016-06-07", "CreateRepoBuildRule", "cr"){setUriPattern("/repos/[RepoNamespace]/[RepoName]/rules");setMethod(MethodType.PUT);}
public BaseRef(AreaEval ae){_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}
public DrawingManager2(EscherDggRecord dgg) {this.dgg = dgg;}
public void Reset() { if (!First()) Reset(raw); }
public sealed CharsetDecoder Reset() {status = INIT;implReset();return this;}
public BufferedReader(Reader in, int size) {base(in);if (size <= 0) {throw new IllegalArgumentException("size <= 0");}this.in = in;buf = new char[size];}
public DescribeCodeRepositoryResponse DescribeCodeRepository(DescribeCodeRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance;return Invoke<DescribeCodeRepositoryResponse>(request, options);}
public DBSubnetGroup CreateDBSubnetGroup(CreateDBSubnetGroupRequest request) {request = BeforeClientExecution(request);return ExecuteCreateDBSubnetGroup(request);}
public RenameBranchCommand SetOldName(string oldName) { CheckCallable(); this.oldName = oldName; return this;}
public DeleteBranchCommand SetForce(bool force) {checkCallable();this.force = force;return this;}
public virtual StopCompilationJobResponse StopCompilationJob(StopCompilationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopCompilationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopCompilationJobResponseUnmarshaller.Instance;return Invoke<StopCompilationJobResponse>(request, options);}
public void IncrementSecondaryProgressBy(int diff){setSecondaryProgress(mSecondaryProgress + diff);}
public int[] Clear() { bytesStart = null; return null; }
public string GetRawPath() { return path; }
public GetUserSourceAccountRequest(){this.OperationName = "GetUserSourceAccount";this.ServiceName = "cr";this.Version = "2016-06-07";this.Action = "GetUserSourceAccount";this.UriPattern = "/users/sourceAccount";this.Method = MethodType.GET;}
public virtual CreateExportJobResponse CreateExportJob(CreateExportJobRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateExportJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.Instance;return Invoke<CreateExportJobResponse>(request, options);}
public virtual CreateDedicatedIpPoolResponse CreateDedicatedIpPool(CreateDedicatedIpPoolRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;return Invoke<CreateDedicatedIpPoolResponse>(request, options);}
public override bool Equals(object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (obj is HSSFCellStyle other) {if (_format == null) {if (other._format != null) {return false;}} else if (!_format.Equals(other._format)) {return false;}if (_index != other._index) {return false;}return true;}return false;}
public virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReleaseHostsRequestMarshaller.Instance;options.ResponseUnmarshaller = ReleaseHostsResponseUnmarshaller.Instance;return Invoke<ReleaseHostsResponse>(request, options);}
public override bool Equals(object obj){if (this == obj){return true;}if (obj is Set s){try{return size() == s.size() && containsAll(s);}catch (NullReferenceException ignored){return false;}catch (InvalidCastException ignored){return false;}}return false;}
public void SetRefLogMessage(string msg, bool appendStatus){customRefLog = true;if (msg == null && !appendStatus){DisableRefLog();}else if (msg == null && appendStatus){refLogMessage = "";refLogIncludeResult = true;}else{refLogMessage = msg;refLogIncludeResult = appendStatus;}}
public StreamIDRecord(RecordInputStream in) {idstm = in.ReadShort();}
public RecognizeCarRequest() : base("visionai-poc", "2020-04-08", "RecognizeCar") { }
public final byte Order => BitConverter.IsLittleEndian ? (byte)ByteOrder.LittleEndian : (byte)ByteOrder.BigEndian;
public int GetAheadCount() { return aheadCount; }
public bool IsNewFragment() {return false;}
public GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){request = beforeClientExecution(request);return executeGetCloudFrontOriginAccessIdentityConfig(request);}
public bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return label == symbol;}
public DeleteTransitGatewayResponse DeleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayResponseUnmarshaller.Instance;return Invoke<DeleteTransitGatewayResponse>(request, options);}
public static byte[] Grow(byte[] array, int minSize){Debug.Assert(minSize >= 0, "size must be positive (got " + minSize + "): likely integer overflow?");if (array.Length < minSize){return GrowExact(array, Oversize(minSize, Byte.BYTES));}else{return array;}}private static int Oversize(int size, int byteSize){// Implementation of Oversize method// This is a placeholder for the actual implementationreturn size;}private static byte[] GrowExact(byte[] array, int newSize){// Implementation of GrowExact method// This is a placeholder for the actual implementationreturn new byte[newSize];}
public CreateTransactionRequest() {base("CloudPhoto", "2017-07-11", "CreateTransaction", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public BatchRefUpdate SetRefLogIdent(PersonIdent pi) { refLogIdent = pi; return this; }
public virtual GetLaunchTemplateDataResponse GetLaunchTemplateData(GetLaunchTemplateDataRequest request){request = beforeClientExecution(request);return executeGetLaunchTemplateData(request);}
public ParseInfo(ProfilingATNSimulator atnSimulator) {this.atnSimulator = atnSimulator;}
public SimpleQQParser(string[] qqNames, string indexField) {this.qqNames = qqNames;this.indexField = indexField;}
public DBCluster PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {request = BeforeClientExecution(request);return ExecutePromoteReadReplicaDBCluster(request);}
public virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCapacityReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCapacityReservationsResponseUnmarshaller.Instance;return Invoke<DescribeCapacityReservationsResponse>(request, options);}
public override string ToString() {return "IndexSearcher(" + reader + "; executor=" + executor + "; sliceExecutionControlPlane " + sliceExecutor + ")";}
public virtual bool IncrementToken() {return false;}
public void Serialize(LittleEndianOutput output) {output.WriteInt((main + 1));output.WriteInt(subFrom);output.WriteInt(subTo);}
public void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new InvalidOperationException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i) {long block = ReadLong(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}
public bool IsExpectedToken(int symbol){ATN atn = GetInterpreter().Atn;ParserRuleContext ctx = _ctx;ATNState s = atn.States[GetState()];IntervalSet following = atn.NextTokens(s);if (following.Contains(symbol)){return true;}if (!following.Contains(Token.Epsilon)){return false;}while (ctx != null && ctx.InvokingState >= 0 && following.Contains(Token.Epsilon)){ATNState invokingState = atn.States[ctx.InvokingState];RuleTransition rt = (RuleTransition)invokingState.Transition(0);following = atn.NextTokens(rt.FollowState);if (following.Contains(symbol)){return true;}ctx = (ParserRuleContext)ctx.Parent;}if (following.Contains(Token.Epsilon) && symbol == Token.Eof){return true;}return false;}
public UpdateStreamResponse UpdateStream(UpdateStreamRequest request) {request = BeforeClientExecution(request);return ExecuteUpdateStream(request);}
public ICellSet Evaluate(int srcRowIndex, int srcColumnIndex, ICellAddress srcCellAddress, IValueEvaluator arg0) {try {var resolver = new OperandResolver();resolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = TranslateErrorCodeToErrorTypeValue(e.ErrorValue);return new Cell.Set(new Cell[srcRowIndex, srcColumnIndex]);}}
public override string ToString() {return base.GetType().Name + " [" + _index + " " + _name + "]"; }
public virtual ListAssignmentsForHITResponse ListAssignmentsForHIT(ListAssignmentsForHITRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<ListAssignmentsForHITResponse>(request, options);}
public virtual DeleteAccessControlRuleResponse DeleteAccessControlRule(DeleteAccessControlRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.Instance;return Invoke<DeleteAccessControlRuleResponse>(request, options);}
public Arc<long> GetFirstArc(FST.Arc<long> arc) { return fst.GetFirstArc(arc); }
public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (int) ((block >> shift) & 65535);}}}
public long Skip(long charCount) { if (charCount < 0) { throw new ArgumentException("charCount < 0: " + charCount); } lock (lock) { CheckNotClosed(); if (charCount == 0) { return 0; } long inSkipped; int availableFromBuffer = buf.Length - pos; if (availableFromBuffer > 0) { long requiredFromIn = charCount - availableFromBuffer; if (requiredFromIn <= 0) { pos += charCount; return charCount; } pos += availableFromBuffer; inSkipped = in.Skip(requiredFromIn); } else { inSkipped = in.Skip(charCount); } return inSkipped + availableFromBuffer; } }
public Dictionary<string, Ref> GetRefsMap() { return advertisedRefs; }
public UpdateApiKeyResponse UpdateApiKey(UpdateApiKeyRequest request) {request = beforeClientExecution(request);return executeUpdateApiKey(request);}
public Stream OpenStream(){PackInputStream packIn;using (DfsReader ctx = db.NewReader()){try{try{packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);ctx = null;}catch (IOException packGone){ObjectId obj = pack.GetReverseIdx(ctx).FindObject(objectOffset);return ctx.Open(obj, type).OpenStream();}}finally{if (ctx != null){ctx.Close();}}int bufsz = 8192;InputStream inStream = new BufferedInputStream(new InflaterInputStream(packIn, packIn.ctx.Inflater(), bufsz), bufsz);return new ObjectStream.Filter(type, size, inStream);}}
public ArrayList() {array = EmptyArray.OBJECT;}
public UpdateDetectorVersionResponse UpdateDetectorVersion(UpdateDetectorVersionRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = UpdateDetectorVersionRequestMarshaller.Instance; options.ResponseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.Instance; return Invoke<UpdateDetectorVersionResponse>(request, options); }
public void resize(){resize(double.MaxValue);}
public RevFlagSet(IEnumerable<RevFlag> s) : this() => AddRange(s);
public int Size { get; set; }
public long GetLong(){int newPosition = position + SizeOf.LONG;if (newPosition > limit){throw new BufferUnderflowException();}long result = Memory.ReadInt64(backingArray, offset + position, order);position = newPosition;return result;}
public StringBuilder Insert(int offset, long l) {insert0(offset, Long.ToString(l));return this;}
public TurkishLowerCaseFilter(TokenStream input) : base(input){}
public ParseTreeMatch Match(ParseTree tree, ParseTreePattern pattern) {MultiMap<string, ParseTree> labels = new MultiMap<string, ParseTree>();ParseTree mismatchedNode = MatchImpl(tree, pattern.GetPatternTree(), labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}
public void AddIfNoOverlap(WeightedPhraseInfo wpi) {foreach (WeightedPhraseInfo existWpi in GetPhraseList()) {if (existWpi.IsOffsetOverlap(wpi)) {existWpi.GetTermsInfos().AddRange(wpi.GetTermsInfos());return;}}GetPhraseList().Add(wpi);}
public ThreeWayMerger NewMerger(Repository db) {return new InCoreMerger(db);}
public float DocScore(int docId, string field, int numPayloadsSeen, float payloadScore) { return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1; }
public IEnumerable<ParseTree> Evaluate(ParseTree t) { return Trees.FindAllRuleNodes(t, ruleIndex); }
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[CFRULE]\n");buffer.Append("    .condition_type   =").Append(GetConditionType()).Append("\n");buffer.Append("    OPTION FLAGS=0x").Append(Convert.ToString(GetOptions(), 16)).Append("\n");if (ContainsFontFormattingBlock()) {buffer.Append(_fontFormatting).Append("\n");}if (ContainsBorderFormattingBlock()) {buffer.Append(_borderFormatting).Append("\n");}if (ContainsPatternFormattingBlock()) {buffer.Append(_patternFormatting).Append("\n");}buffer.Append("    Formula 1 =").Append(String.Join(",", GetFormula1().GetTokens())).Append("\n");buffer.Append("    Formula 2 =").Append(String.Join(",", GetFormula2().GetTokens())).Append("\n");buffer.Append("[/CFRULE]\n");return buffer.ToString();}
public virtual DescribeServiceUpdatesResponse DescribeServiceUpdates(DescribeServiceUpdatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance;return Invoke<DescribeServiceUpdatesResponse>(request, options);}
public string GetNameName(int index){return GetNameAt(index).GetNameName();}
public DescribeLocationsResponse DescribeLocations() {return DescribeLocations(new DescribeLocationsRequest());}
public override string ToString() => $"<phraseslop value='{GetValueString()}'>" + "\n" + $"{GetChild().ToString()}" + "\n</phraseslop>";
public DirCacheEntry GetDirCacheEntry() { return currentSubtree == null ? currentEntry : null; }
public void Put(int[] src, int srcOffset, int intCount) {Array.CheckOffsetAndCount(src.Length, srcOffset, intCount);if (intCount > Remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + intCount; ++i) {Put(src[i]);}}
public void TrimToSize() {int s = size;if (s == array.Length) {return;}if (s == 0) {array = EmptyArray<Object>.INSTANCE;} else {Object[] newArray = new Object[s];Array.Copy(array, 0, newArray, 0, s);array = newArray;}modCount++;}
public DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request) {request = BeforeClientExecution(request);return ExecuteDescribeLocalGatewayVirtualInterfaces(request);}
public TokenStream Create(TokenStream input) {return new RussianLightStemFilter(input);}
public int[] ToArray(final int[] a){int[] rval;if (a.Length == _limit){Array.Copy(_array, 0, a, 0, _limit);rval = a;}else{rval = ToArray();}return rval;}
public BasicSessionCredentials(string accessKeyId, string accessKeySecret, string sessionToken, long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new ArgumentNullException("Access key ID cannot be null.");}if (accessKeySecret == null) {throw new ArgumentNullException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = DateTimeOffset.Now.ToUnixTimeMilliseconds();}
public ReadOnlySpan<short> Get(Span<short> dst, int dstOffset, int shortCount){if (shortCount > Remaining){throw new BufferUnderflowException();}backingArray.AsSpan(offset + position, shortCount).CopyTo(dst.Slice(dstOffset));position += shortCount;return dst;}
public ActivateEventSourceResponse ActivateEventSource(ActivateEventSourceRequest request) {request = BeforeClientExecution(request);return ExecuteActivateEventSource(request);}
public DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeDescribeReceiptRuleSet(request);}
public Filter(string name) { setName(name); }
public void Put(double c) {throw new ReadOnlyBufferException();}
public CreateTrafficPolicyInstanceResponse CreateTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request) {request = BeforeClientExecution(request);return ExecuteCreateTrafficPolicyInstance(request);}
public JapaneseIterationMarkCharFilter(Reader input, bool normalizeKanji, bool normalizeKana) : base(input) {this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;buffer.Reset(input);}
public void WriteLong(long v) { WriteInt((int)(v >> 0)); WriteInt((int)(v >> 32)); }
public FileResolver() {exports = new ConcurrentDictionary<string, object>();exportBase = new List<object>();}
public ValueEval GetRef3DEval(Ref3DPxg rptg) {SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.GetSheetName(), rptg.GetLastSheetName(), rptg.GetExternalWorkbookNumber());return new LazyRefEval(rptg.GetRow(), rptg.GetColumn(), sre);}
public DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDatasetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDatasetResponseUnmarshaller.Instance;return Invoke<DeleteDatasetResponse>(request, options);}
public virtual StartRelationalDatabaseResponse StartRelationalDatabase(StartRelationalDatabaseRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartRelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = StartRelationalDatabaseResponseUnmarshaller.Instance;return Invoke<StartRelationalDatabaseResponse>(request, options);}
public RetrieveReservedCacheNodesOfferingsResponse DescribeReservedCacheNodesOfferings() {var options = new InvokeOptions();options.RequestMarshaller = DescribeReservedCacheNodesOfferingsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReservedCacheNodesOfferingsResponseUnmarshaller.Instance;return Invoke<RetrieveReservedCacheNodesOfferingsResponse>(new DescribeReservedCacheNodesOfferingsRequest(), options);}
static public double pmt(double r, int nper, double pv, double fv, int type) { return -r * (pv * Math.Pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.Pow(1 + r, nper) - 1)); }
public virtual DescribeDocumentVersionsResponse DescribeDocumentVersions(DescribeDocumentVersionsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDocumentVersionsResponse>(request, options);}
public ListPublishingDestinationsResult ListPublishingDestinations(ListPublishingDestinationsRequest request) { request = BeforeClientExecution(request); return ExecuteListPublishingDestinations(request); }
public DeleteAccountAliasRequest(string accountAlias) {AccountAlias = accountAlias;}
public static long[] Grow(long[] array) { return Grow(array, 1 + array.Length); }
public string OutputToString(object output) {if (!(output is List)) {return Outputs.OutputToString((T) output);} else {List<T> outputList = (List<T>) output;StringBuilder b = new StringBuilder();b.Append('[');for(int i=0;i<outputList.Count;i++) {if (i > 0) {b.Append(", ");}b.Append(Outputs.OutputToString(outputList[i]));}b.Append(']');return b.ToString();}}
public void NotifyDeleteCell(Cell cell) { _bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell((HSSFCell)cell)); }
public StringBuilder Replace(int start, int end, string str) {Replace0(start, end, str);return this;}
public virtual SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;return Invoke<SetIdentityPoolConfigurationResponse>(request, options);}
public static double KthSmallest(double[] v, int k) {double r = double.NaN; int index = k - 1; if (v != null && v.Length > index && index >= 0) { Array.Sort(v); r = v[index]; } return r; }
public void Set(int index, long value) { int o = index >> 5; int b = index & 31; int shift = b << 1; blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift); }
public string ToString() {if (GetChildren() == null || GetChildren().Count == 0)return "<boolean operation='and'/>";StringBuilder sb = new StringBuilder();sb.Append("<boolean operation='and'>");foreach (QueryNode child in GetChildren()) {sb.Append("\n");sb.Append(child.ToString());}sb.Append("\n</boolean>");return sb.ToString();}
public int SumTokenSizes(int fromIx, int toIx) { int result = 0; for (int i = fromIx; i < toIx; i++) { result += _ptgs[i].GetSize(); } return result; }
public virtual void SetReadonly(bool readonly){if (this.readonly && !readonly) throw new InvalidOperationException("can't alter readonly IntervalSet");this.readonly = readonly;}
public final void ClearConsumingCell(FormulaCellCacheEntry cce) {if (!_consumingCells.Remove(cce)) {throw new IllegalStateException("Specified formula cell is not consumed by this cell");}}
public SubList<T> GetRange(int start, int end) => new SubList<T>(list.GetRange(start, end), mutex);
public FileHeader GetFileHeader() => file;
public virtual AttachLoadBalancersResponse AttachLoadBalancers(AttachLoadBalancersRequest request) {var options = new InvokeOptions();options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachLoadBalancersResponseUnmarshaller.Instance;return Invoke<AttachLoadBalancersResponse>(request, options);}
public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters) {SetAccountId(accountId);SetVaultName(vaultName);SetJobParameters(jobParameters);}
public string ToString() { return "SPL"; }
public ReplaceableAttribute(string name, string value, bool replace) {SetName(name);SetValue(value);SetReplace(replace);}
public void Add(IndexableField field) { fields.Add(field); }
public DeleteStackSetResponse DeleteStackSet(DeleteStackSetRequest request) {request = BeforeClientExecution(request);return ExecuteDeleteStackSet(request);}
public GetRepoBuildRuleListRequest() : base("cr", "2016-06-07", "GetRepoBuildRuleList", "cr"){SetUriPattern("/repos/{RepoNamespace}/{RepoName}/rules");SetMethod(MethodType.GET);}
public SparseArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new object[initialCapacity];mSize = 0;}
public InvokeServiceRequest() {this("industry-brain", "2018-07-12", "InvokeService");setMethod(MethodType.POST);}
public ListAlbumPhotosRequest() {base("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public bool HasPrevious() {return link != list.voidLink;}
public DeleteHsmConfigurationResponse DeleteHsmConfiguration(DeleteHsmConfigurationRequest request){request = BeforeClientExecution(request);return ExecuteDeleteHsmConfiguration(request);}
public CreateLoadBalancerRequest(string loadBalancerName) { SetLoadBalancerName(loadBalancerName); }
public string GetUserInfo() {return Decode(userInfo);}
public virtual TagAttendeeResponse TagAttendee(TagAttendeeRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance;options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance;return Invoke<TagAttendeeResponse>(request, options);}
public string GetRefName() { return name; }
public SpanNearQuery Build() { return new SpanNearQuery(clauses.ToArray(new SpanQuery[clauses.Count]), slop, ordered); }
public bool IsSubTotal(int rowIndex, int columnIndex) { return false; }
public DescribeDBProxiesResult DescribeDBProxies(DescribeDBProxiesRequest request) { request = BeforeClientExecution(request); return ExecuteDescribeDBProxies(request); }
public async ValueTask<GetVoiceConnectorProxyResponse> GetVoiceConnectorProxyAsync(GetVoiceConnectorProxyRequest request) => await InvokeAsync(request, new InvokeOptions { RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance, ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance });
public WindowCacheConfig FromConfig(Config rc) {PackedGitUseStrongRefs = rc.GetBoolean(CONFIG_CORE_SECTION, CONFIG_KEY_PACKED_GIT_USE_STRONGREFS, PackedGitUseStrongRefs);PackedGitOpenFiles = rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_OPENFILES, PackedGitOpenFiles);PackedGitLimit = rc.GetLong(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_LIMIT, PackedGitLimit);PackedGitWindowSize = rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_WINDOWSIZE, PackedGitWindowSize);PackedGitMMAP = rc.GetBoolean(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_MMAP, PackedGitMMAP);DeltaBaseCacheLimit = rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_DELTA_BASE_CACHE_LIMIT, DeltaBaseCacheLimit);long maxMem = Runtime.getRuntime().maxMemory();long sft = rc.GetLong(CONFIG_CORE_SECTION, null, CONFIG_KEY_STREAM_FILE_TRESHOLD, StreamFileThreshold);sft = Math.Min(sft, maxMem / 4); sft = Math.Min(sft, int.MaxValue); StreamFileThreshold = (int) sft;return this;}
public static DateTime GetJavaDate(double date) { return GetJavaDate(date, false, null, false); }
public StartPersonTrackingResult StartPersonTracking(StartPersonTrackingRequest request) { request = BeforeClientExecution(request); return ExecuteStartPersonTracking(request); }
public int Size { get; set; }
public GetRouteResponse GetRoute(GetRouteRequest request) {request = BeforeClientExecution(request);return ExecuteGetRoute(request);}
public virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance;return Invoke<DeleteClusterResponse>(request, options);}
public override string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[MMS]\n");buffer.Append("    .addMenu        = ").Append(Integer.ToString(getAddMenuCount(), 16)).Append("\n");buffer.Append("    .delMenu        = ").Append(Integer.ToString(getDelMenuCount(), 16)).Append("\n");buffer.Append("[/MMS]\n");return buffer.ToString();}
public FileBasedConfig(Config baseConfig, File cfgLocation, FS fs) : base(baseConfig){configFile = cfgLocation;this.fs = fs;snapshot = FileSnapshot.DIRTY;hash = ObjectId.zeroId();}
public int following(int pos){if (pos < text.GetBeginIndex() || pos > text.GetEndIndex()){throw new ArgumentException("offset out of bounds");}else if (0 == sentenceStarts.Length){text.SetIndex(text.GetBeginIndex());return DONE;}else if (pos >= sentenceStarts[sentenceStarts.Length - 1]){text.SetIndex(text.GetEndIndex());currentSentence = sentenceStarts.Length - 1;return DONE;}else{currentSentence = (sentenceStarts.Length - 1) / 2;moveToSentenceAt(pos, 0, sentenceStarts.Length - 2);text.SetIndex(sentenceStarts[++currentSentence]);return current();}}
public UpdateParameterGroupResponse UpdateParameterGroup(UpdateParameterGroupRequest request) { request = BeforeClientExecution(request); return ExecuteUpdateParameterGroup(request); }
public SeriesChartGroupIndexRecord clone() { return Copy(); }
public static double CalcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) { if (distErrPct < 0 || distErrPct > 0.5) { throw new ArgumentException($"distErrPct {distErrPct} must be between [0 to 0.5]"); } if (distErrPct == 0 || shape is Point) { return 0; } Rectangle bbox = shape.GetBoundingBox(); Point ctr = bbox.GetCenter(); double y = (ctr.Y >= 0 ? bbox.MaxY : bbox.MinY); double diagonalDist = ctx.DistCalc.Distance(ctr, bbox.MaxX, y); return diagonalDist * distErrPct; }
public int CodePointAt(int index){if (index < 0 || index >= count){throw IndexAndLength(index);}return char.CodePointAt(value, index, count);}
public void SetPasswordVerifier(int passwordVerifier) {this.passwordVerifier = passwordVerifier;}
public ListVaultsRequest(string accountId) { SetAccountId(accountId); }
public SquashMessageFormatter() {dateFormatter = new GitDateFormatter(Format.DEFAULT);}
public GetVideoCoverRequest() : base("CloudPhoto", "2017-07-11", "GetVideoCover", "cloudphoto"){this.Protocol = ProtocolType.HTTPS;}
public int LastIndexOf(object obj) {int pos = size;Link<E> link = voidLink.Previous;if (obj != null) {while (link != voidLink) {pos--;if (obj.Equals(link.Data)) {return pos;}link = link.Previous;}} else {while (link != voidLink) {pos--;if (link.Data == null) {return pos;}link = link.Previous;}}return -1;}
public DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request){request = BeforeClientExecution(request);return ExecuteDescribeSpotFleetRequests(request);}
public IndexFacesResponse IndexFaces(IndexFacesRequest request) {request = BeforeClientExecution(request);return ExecuteIndexFaces(request);}
public RuleBasedBreakIterator GetBreakIterator(int script) {switch(script) {case UScript.JAPANESE: return (RuleBasedBreakIterator)cjkBreakIterator.Clone();case UScript.MYANMAR:if (myanmarAsWords) {return (RuleBasedBreakIterator)defaultBreakIterator.Clone();} else {return (RuleBasedBreakIterator)myanmarSyllableIterator.Clone();}default: return (RuleBasedBreakIterator)defaultBreakIterator.Clone();}}
public override string ToString(){StringBuilder b = new StringBuilder();b.Append("[DCONREF]\n");b.Append("    .ref\n");b.Append("        .firstrow   = ").Append(firstRow).Append("\n");b.Append("        .lastrow    = ").Append(lastRow).Append("\n");b.Append("        .firstcol   = ").Append(firstCol).Append("\n");b.Append("        .lastcol    = ").Append(lastCol).Append("\n");b.Append("    .cch            = ").Append(charCount).Append("\n");b.Append("    .stFile\n");b.Append("        .h          = ").Append(charType).Append("\n");b.Append("        .rgb        = ").Append(getReadablePath()).Append("\n");b.Append("[/DCONREF]\n");return b.ToString();}
public int GetPackedGitOpenFiles() { return packedGitOpenFiles; }
public string ToString() {var buffer = new StringBuilder();buffer.Append("[FEATURE HEADER]\n");buffer.Append("[/FEATURE HEADER]\n");return buffer.ToString();}
public static byte[] GetToUnicodeLE(string str) { return System.Text.Encoding.Unicode.GetBytes(str); }
public List<String> GetFooterLines(string keyName) => GetFooterLines(new FooterKey(keyName));
public void Refresh() {base.Refresh();ClearReferences();}
public float Get(int index) { CheckIndex(index); return byteBuffer.GetFloat(index * SizeOf.Float); }
public virtual DeleteDetectorResponse DeleteDetector(DeleteDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDetectorResponseUnmarshaller.Instance;return Invoke<DeleteDetectorResponse>(request, options);}
public int[] Grow() {Debug.Assert(bytesStart != null);return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.Length + 1);}
public virtual ListExclusionsResponse ListExclusions(ListExclusionsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListExclusionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListExclusionsResponseUnmarshaller.Instance;return Invoke<ListExclusionsResponse>(request, options);}
public static SpatialStrategy GetSpatialStrategy(int roundNumber) {SpatialStrategy result = spatialStrategyCache.Get(roundNumber);if (result == null) {throw new InvalidOperationException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}
public virtual DBCluster RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance;return Invoke<DBCluster>(request, options);}
public void Serialize(LittleEndianOutput output){output.WriteShort(field_1_categoryDataType);output.WriteShort(field_2_valuesDataType);output.WriteShort(field_3_numCategories);output.WriteShort(field_4_numValues);output.WriteShort(field_5_bubbleSeriesType);output.WriteShort(field_6_numBubbleValues);}
public PostAgentProfileResult PostAgentProfile(PostAgentProfileRequest request) { request = BeforeClientExecution(request); return ExecutePostAgentProfile(request); }
public ParseTreePattern compileParseTreePattern(string pattern, int patternRuleIndex) {if (getTokenStream() != null) {TokenSource tokenSource = getTokenStream().getTokenSource();if (tokenSource is Lexer) {Lexer lexer = (Lexer)tokenSource;return compileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new NotSupportedException("Parser can't discover a lexer to use");}
public BacktrackDBClusterResult BacktrackDBCluster(BacktrackDBClusterRequest request) {request = BeforeClientExecution(request);return ExecuteBacktrackDBCluster(request);}
public string GetName() { return strategyName; }
public void CopyTo(byte[] b, int o) {FormatHexByte(b, o + 0, w1);FormatHexByte(b, o + 8, w2);FormatHexByte(b, o + 16, w3);FormatHexByte(b, o + 24, w4);FormatHexByte(b, o + 32, w5);}
public static readonly List<int> LineMap(byte[] buf, int ptr, int end){List<int> map = new List<int>((end - ptr) / 36);map.AddRange(Enumerable.Repeat(int.MinValue, 1));for (; ptr < end; ptr = NextLF(buf, ptr)) { map.Add(ptr); }map.Add(end);return map;}
public HashSet<object> GetAdditionalHaves() { return new HashSet<object>(); }
public long RamBytesUsed(){long sizeInBytes = BASE_RAM_BYTES_USED + fields.Count * 2 * RamUsageEstimator.NUM_BYTES_OBJECT_REF;foreach (var simpleTextTerms in termsCache.Values){sizeInBytes += (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0;}return sizeInBytes;}
public string ToXml(string tab) {StringBuilder builder = new StringBuilder();builder.Append(tab).Append("<").Append(GetRecordName()).Append(">\n");foreach (EscherRecord escherRecord in GetEscherRecords()) {builder.Append(escherRecord.ToXml(tab + "\t"));}builder.Append(tab).Append("</").Append(GetRecordName()).Append(">\n");return builder.ToString();}
public TokenStream Create(TokenStream input) { return new GalicianMinimalStemFilter(input); }
public string ToString() {StringBuilder r = new StringBuilder();r.Append("Commit");r.Append("={\n");r.Append("tree ");r.Append(treeId != null ? treeId.Name() : "NOT_SET");r.Append("\n");foreach (ObjectId p in parentIds) {r.Append("parent ");r.Append(p.Name());r.Append("\n");}r.Append("author ");r.Append(author != null ? author.ToString() : "NOT_SET");r.Append("\n");r.Append("committer ");r.Append(committer != null ? committer.ToString() : "NOT_SET");r.Append("\n");r.Append("gpgSignature ");r.Append(gpgSignature != null ? gpgSignature.ToString() : "NOT_SET");r.Append("\n");if (encoding != null && !References.IsSameObject(encoding, UTF_8)) {r.Append("encoding ");r.Append(encoding.Name());r.Append("\n");}r.Append("\n");r.Append(message != null ? message : "");r.Append("}");return r.ToString();}
public IndicNormalizationFilterFactory(Dictionary<string, string> args) : base(args) { if (args != null && args.Count > 0) { throw new ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys)); } }
public virtual OptionGroup CreateOptionGroup(CreateOptionGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOptionGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOptionGroupResponseUnmarshaller.Instance;return Invoke<OptionGroup>(request, options);}
public virtual AssociateMemberAccountResponse AssociateMemberAccount(AssociateMemberAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.Instance;return Invoke<AssociateMemberAccountResponse>(request, options);}
public void Run() {DoRefreshProgress(mId, mProgress, mFromUser, true); mRefreshProgressRunnable = this;}
public SetTerminationProtectionResponse SetTerminationProtection(SetTerminationProtectionRequest request) {request = beforeClientExecution(request);return executeSetTerminationProtection(request);}
public string GetErrorHeader(RecognitionException e) {int line = e.OffendingToken.Line;int charPositionInLine = e.OffendingToken.CharPositionInLine;return "line " + line + ":" + charPositionInLine;}
public CharBuffer AsReadOnlyBuffer() { CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.AsReadOnlyBuffer()); buf.Limit = limit; buf.Position = position; buf.Mark = mark; buf.byteBuffer.Order = byteBuffer.Order; return buf; }
public virtual StopSentimentDetectionJobResponse StopSentimentDetectionJob(StopSentimentDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke<StopSentimentDetectionJobResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> GetNewObjectIds() { if (newObjectIds != null) return newObjectIds; return new ObjectIdSubclassMap<>(); }
public void Clear() { hash = hash(new byte[0]); base.Clear(); }
public void Reset(){lock (lockObject){CheckNotClosed();if (mark == -1){throw new IOException("Invalid mark");}pos = mark;}}
public RefErrorPtg(LittleEndianInput in){field_1_reserved = in.ReadInt32();}
public SuspendGameServerGroupResponse SuspendGameServerGroup(SuspendGameServerGroupRequest request){request = beforeClientExecution(request);return executeSuspendGameServerGroup(request);}
public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.Length != 3) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public class GetRepoRequest : ClientRuntime.AmcRequestMessage{public GetRepoRequest() : base("cr", "2016-06-07", "GetRepo", "cr"){this.RequestUriPattern = "/repos/[RepoNamespace]/[RepoName]";this.Method = MethodType.GET;}}
public void SetDate(DateTime date){if (date != null){this.date = DateTools.DateToString(date, DateTools.Resolution.Second);}else{this.date = null;}}
public TokenStream create(TokenStream input) {return new GermanMinimalStemFilter(input);}
public object[] ToArray() { return a.Clone() as object[]; }
public void Write(char[] buffer, int offset, int len){Array.Copy(buffer, offset, this.buf, this.count, len);this.count += len;}
public static RevFilter after(DateTime ts) {return after(ts.ToUnixTimeMilliseconds());}
public DeleteGroupPolicyRequest(string groupName, string policyName) {SetGroupName(groupName);SetPolicyName(policyName);}
public virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public BatchDeleteScheduledActionResult BatchDeleteScheduledAction(BatchDeleteScheduledActionRequest request){request = BeforeClientExecution(request);return ExecuteBatchDeleteScheduledAction(request);}
public CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request) { request = BeforeClientExecution(request); return ExecuteCreateAlgorithm(request); }
public int ReadUByte() {return ReadByte() & 0x00FF;}
public void SetLength(int sz) { NB.EncodeInt32(info, infoOffset + P_SIZE, sz); }
public DescribeScalingProcessTypesResponse DescribeScalingProcessTypes() {return DescribeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}
public virtual ListResourceRecordSetsResponse ListResourceRecordSets(ListResourceRecordSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListResourceRecordSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.Instance;return Invoke<ListResourceRecordSetsResponse>(request, options);}
public Token RecoverInline(Parser recognizer){InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.Context; context != null; context = context.Parent){context.Exception = e;}throw new ParseCancellationException(e);}
public virtual SetTagsForResourceResponse SetTagsForResource(SetTagsForResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance;return Invoke<SetTagsForResourceResponse>(request, options);}
public ModifyStrategyRequest() : base("CloudCallCenter", "2017-07-05", "ModifyStrategy", "CloudCallCenter", "innerAPI"){}
public virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcEndpointServicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcEndpointServicesResponseUnmarshaller.Instance;return Invoke<DescribeVpcEndpointServicesResponse>(request, options);}
public virtual EnableLoggingResponse EnableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableLoggingRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableLoggingResponseUnmarshaller.Instance;return Invoke<EnableLoggingResponse>(request, options);}
public bool Contains(object o) {return ((ConcurrentDictionary<object, object>)this).ContainsValue(o);}
public class SheetRangeIdentifier : SheetIdentifier{private NameIdentifier _lastSheetIdentifier;public SheetRangeIdentifier(string bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier): base(bookName, firstSheetIdentifier){_lastSheetIdentifier = lastSheetIdentifier;}}
public DomainMetadataRequest(string domainName) {SetDomainName(domainName);}
public ParseException(Token currentTokenVal, int[][] expectedTokenSequencesVal, string[] tokenImageVal) : base(new MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal))) { this.currentToken = currentTokenVal; this.expectedTokenSequences = expectedTokenSequencesVal; this.tokenImage = tokenImageVal; }
public class FetchPhotosRequest : CloudPhotoRequest {public FetchPhotosRequest() : base("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto") {setProtocol(ProtocolType.HTTPS);}}
public PrintWriter writer { get; set; }
public NGramTokenizerFactory(Dictionary<string, string> args) : base(args){minGramSize = GetInt(args, "minGramSize", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = GetInt(args, "maxGramSize", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (args.Count > 0){throw new ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}private int GetInt(Dictionary<string, string> args, string key, int defaultValue){if (args.ContainsKey(key)){if (int.TryParse(args[key], out int value)){return value;}}return defaultValue;}
public bool IsDirectoryFileConflict() {return dfConflict != null;}
public IndonesianStemFilter(TokenStream input, bool stemDerivational) : base(input) {this.stemDerivational = stemDerivational;}
public virtual CreateTrafficPolicyResponse CreateTrafficPolicy(CreateTrafficPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyResponse>(request, options);}
public void Serialize(LittleEndianOutput output) {output.WriteInt(fSD);output.WriteInt(passwordVerifier);StringUtil.WriteUnicodeString(output, title);output.Write(securityDescriptor);}
public static double Floor(double n, double s){if (s == 0 && n != 0){return double.NaN;}else{return (n == 0 || s == 0) ? 0 : Math.Floor(n / s) * s;}}
public ByteArrayDataOutput(byte[] bytes, int offset, int len) {this.reset(bytes, offset, len);}
public static List<Tree> getChildren(Tree t) {List<Tree> kids = new List<Tree>();for (int i = 0; i < t.getChildCount(); i++) {kids.Add(t.getChild(i));}return kids;}
public void Clear() {Hashtable.Clear();}
public RefreshAllRecord(bool refreshAll) {this(0);setRefreshAll(refreshAll);}
public DeleteNamedQueryResponse DeleteNamedQuery(DeleteNamedQueryRequest request) { request = BeforeClientExecution(request); return ExecuteDeleteNamedQuery(request); }
public GraphvizFormatter(ConnectionCosts costs) {this.costs = costs;this.bestPathMap = new Dictionary<string, string>();sb.Append(formatHeader());sb.Append("  init [style=invis]\n");sb.Append("  init -> 0.0 [label=\"" + BOS_LABEL + "\"]\n");}
public CheckMultiagentRequest() : base("visionai-poc", "2020-04-08", "CheckMultiagent") { this.Method = MethodType.POST; }
public ListUserProfilesResponse ListUserProfiles(ListUserProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListUserProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListUserProfilesResponseUnmarshaller.Instance;return Invoke<ListUserProfilesResponse>(request, options);}
public virtual CreateRelationalDatabaseFromSnapshotResponse CreateRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance;return Invoke<CreateRelationalDatabaseFromSnapshotResponse>(request, options);}
public StartTaskResponse StartTask(StartTaskRequest request) { request = BeforeClientExecution(request); return ExecuteStartTask(request); }
public HashSet<string> GetIgnoredPaths() {return ignoredPaths;}
public FeatSmartTag(RecordInputStream @in) {data = @in.ReadRemainder();}
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {SetAction(action.ToString());SetResourceRecordSet(resourceRecordSet);}
public virtual DeleteImageResponse DeleteImage(DeleteImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteImageResponseUnmarshaller.Instance;return Invoke<DeleteImageResponse>(request, options);}
public virtual CreateConfigurationSetResponse CreateConfigurationSet(CreateConfigurationSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateConfigurationSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateConfigurationSetResponseUnmarshaller.Instance;return Invoke<CreateConfigurationSetResponse>(request, options);}
public IEnumerator<E> GetEnumerator() { object[] snapshot = elements; return new CowIterator<E>(snapshot, 0, snapshot.Length); }
public void VisitContainedRecords(RecordVisitor rv) {if (_recs.Count == 0) {return;}rv.VisitRecord(_bofRec);for (int i = 0; i < _recs.Count; i++) {RecordBase rb = _recs[i];if (rb is RecordAggregate) {((RecordAggregate) rb).VisitContainedRecords(rv);} else {rv.VisitRecord((org.apache.poi.hssf.record.Record) rb);}}rv.VisitRecord(EOFRecord.instance);}
public override string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[FtCbls ]\n");buffer.Append("  size     = ").Append(GetDataSize()).Append("\n");buffer.Append("  reserved = ").Append(HexDump.ToHex(reserved)).Append("\n");buffer.Append("[/FtCbls ]\n");return buffer.ToString();}
public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, bool isXBAT) {BATBlock block = new BATBlock(bigBlockSize);if(isXBAT) {int _entries_per_xbat_block = bigBlockSize.XBATEntriesPerBlock;block._values[_entries_per_xbat_block] = POIFSConstants.END_OF_CHAIN;}return block;}
public TagResourceResponse TagResource(TagResourceRequest request) {var options = new InvokeOptions();options.RequestMarshaller = TagResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = TagResourceResponseUnmarshaller.Instance;return Invoke<TagResourceResponse>(request, options);}
public virtual DeleteMailboxPermissionsResult DeleteMailboxPermissions(DeleteMailboxPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMailboxPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMailboxPermissionsResponseUnmarshaller.Instance;return Invoke<DeleteMailboxPermissionsResult>(request, options);}
public virtual ListDatasetGroupsResponse ListDatasetGroups(ListDatasetGroupsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;return Invoke<ListDatasetGroupsResponse>(request, options);}
public ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request) {request = BeforeClientExecution(request);return ExecuteResumeProcesses(request);}
public GetPersonTrackingResponse GetPersonTracking(GetPersonTrackingRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;return Invoke<GetPersonTrackingResponse>(request, options);}
public string ToFormulaString(string[] operands) {if (space.IsSet(_options)) {return operands[0];} else if (optiIf.IsSet(_options)) {return ToFormulaString() + "(" + operands[0] + ")";} else if (optiSkip.IsSet(_options)) {return ToFormulaString() + operands[0];} else {return ToFormulaString() + "(" + operands[0] + ")";}}
public T Merge(T first, T second) { throw new NotSupportedException(); }
public string ToString() { return this.message.GetKey() + ": " + GetLocalizedMessage(); }
public XPath(Parser parser, string path) {this.parser = parser;this.path = path;elements = split(path);}
public CreateAccountAliasRequest(string accountAlias) { SetAccountAlias(accountAlias); }
public void Decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {var block = blocks[blocksOffset++];values[valuesOffset++] = (long)((block >> 7) & 1);values[valuesOffset++] = (long)((block >> 6) & 1);values[valuesOffset++] = (long)((block >> 5) & 1);values[valuesOffset++] = (long)((block >> 4) & 1);values[valuesOffset++] = (long)((block >> 3) & 1);values[valuesOffset++] = (long)((block >> 2) & 1);values[valuesOffset++] = (long)((block >> 1) & 1);values[valuesOffset++] = (long)(block & 1);}}
public PushConnection OpenPush() { return new TcpPushConnection(); }
public static void strcpy(char[] dst, int di, char[] src, int si) {while (src[si] != 0) {dst[di++] = src[si++];}dst[di] = 0;}
public K getKey() { return mapEntry.getKey(); }
public static int numNonnull(Object[] data) {int n = 0;if (data == null) return n;foreach (Object o in data) {if (o != null) n++;}return n;}
public void Add(int location, E obj){if (location >= 0 && location <= size){Link<E> link = voidLink;if (location < (size / 2)){for (int i = 0; i <= location; i++){link = link.Next;}}else{for (int i = size; i > location; i--){link = link.Previous;}}Link<E> previous = link.Previous;Link<E> newLink = new Link<E>(obj, previous, link);previous.Next = newLink;link.Previous = newLink;size++;modCount++;}else{throw new IndexOutOfRangeException();}}
public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}
public void Flush() {base.Flush();}
public PersianCharFilterFactory(Dictionary<string, string> args) : base(args){if (!args.isEmpty()){throw new ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public bool IncrementToken() {if (used) {return false;}ClearAttributes();termAttribute.Append(value);offsetAttribute.SetOffset(0, length);used = true;return true;}
public static FloatBuffer Allocate(int capacity) {if (capacity < 0) {throw new ArgumentOutOfRangeException();}return new ReadWriteFloatArrayBuffer(capacity);}
public Edit After(Edit cut) { return new Edit(cut.EndA, endA, cut.EndB, endB); }
public virtual UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;return Invoke<UpdateRuleVersionResponse>(request, options);}
public virtual ListVoiceConnectorTerminationCredentialsResponse ListVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return Invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);}
public GetDeploymentTargetResponse GetDeploymentTarget(GetDeploymentTargetRequest request) {request = BeforeClientExecution(request);return ExecuteGetDeploymentTarget(request);}
public void SetNoChildReport() { letChildReport = false; foreach (PerfTask task in tasks) { if (task is TaskSequence) { ((TaskSequence)task).SetNoChildReport(); } } }
public T Get(int location){try{return a[location];}catch (IndexOutOfRangeException e){throw System.Collections.Generic.List<T>.ThrowIndexOutOfRangeException(location, a.Length);}}
public virtual DescribeDataSetResponse DescribeDataSet(DescribeDataSetRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance; return Invoke<DescribeDataSetResponse>(request, options); }
public SkipWorkTreeFilter(int treeIdx) { this.treeIdx = treeIdx; }
public DescribeNetworkInterfacesResponse DescribeNetworkInterfaces() {return DescribeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}
public bool Contains(int row, int col) { return _firstRow <= row && _lastRow >= row && _firstColumn <= col && _lastColumn >= col; }
public string ToString() { return new string(this.chars); }
public PatchType GetPatchType() { return patchType; }
public IEnumerator<K> GetEnumerator() {return new KeyIterator();}
public virtual CreateScriptResult CreateScript(CreateScriptRequest request) { request = BeforeClientExecution(request); return ExecuteCreateScript(request); }
public BytesRef Next() {termUpto++;if (termUpto >= info.terms.Count) {return null;} else {info.terms.Get(info.sortedTerms[termUpto], br);return br;}}
public string outputToString(CharsRef output) { return output.ToString(); }
public AssociateWebsiteAuthorizationProviderResponse AssociateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){request = BeforeClientExecution(request);return ExecuteAssociateWebsiteAuthorizationProvider(request);}
public void Unpop(RevCommit c){Block b = head;if (b == null){b = free.NewBlock();b.ResetToMiddle();b.Add(c);head = b;tail = b;return;}else if (b.CanUnpop()){b.Unpop(c);return;}b = free.NewBlock();b.ResetToEnd();b.Unpop(c);b.Next = head;head = b;}
public EdgeNGramTokenizerFactory(Dictionary<string, string> args) : base(args){minGramSize = GetInt(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = GetInt(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);if (args.Count > 0){throw new ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public ModifyDBParameterGroupRequest(string dBParameterGroupName, List<Parameter> parameters) {setDBParameterGroupName(dBParameterGroupName);setParameters(parameters);}
public virtual GetHostedZoneLimitResponse GetHostedZoneLimit(GetHostedZoneLimitRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;return Invoke<GetHostedZoneLimitResponse>(request, options);}
public void Set(int index, long value) {var o = index >> 6;var b = index & 63;var shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
public RevFilter Clone() {return new PatternSearch(Pattern());}
public override string ToString() {return "spans(" + term.ToString() + ")@" + (doc == -1 ? "START" : (doc == NO_MORE_DOCS) ? "ENDDOC" : doc + " - " + (position == NO_MORE_POSITIONS ? "ENDPOS" : position));}
public bool CanAppendMatch() {foreach (Head head in heads) {if (head != LastHead.INSTANCE) {return true;}}return false;}
public int LastIndexOf(string subString, int start) { return base.LastIndexOf(subString, start); }
public DeleteNetworkAclEntryResponse DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNetworkAclEntryResponseUnmarshaller.Instance;return Invoke<DeleteNetworkAclEntryResponse>(request, options);}
public AssociateMemberToGroupResponse AssociateMemberToGroup(AssociateMemberToGroupRequest request) {request = beforeClientExecution(request);return executeAssociateMemberToGroup(request);}
public static int committer(byte[] b, int ptr){int sz = b.Length;if (ptr == 0)ptr += 46;while (ptr < sz && b[ptr] == 'p')ptr += 48;if (ptr < sz && b[ptr] == 'a')ptr = nextLF(b, ptr);return match(b, ptr, committer);}
public int GetLineNumber() { return row; }
public SubmoduleUpdateCommand AddPath(string path) { paths.Add(path); return this; }
public virtual GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance; options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance; return Invoke<GetPushTemplateResponse>(request, options); }
public DescribeVaultResponse DescribeVault(DescribeVaultRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;return Invoke<DescribeVaultResponse>(request, options);}
public virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections() => DescribeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());
public void PutLong(int index, long value) {throw new ReadOnlyBufferException();}
public RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request) {request = beforeClientExecution(request);return executeRegisterDevice(request);}
public static Format byId(int id) {foreach (Format format in Enum.GetValues(typeof(Format))) {if (format.getId() == id) {return format;}}throw new ArgumentException("Unknown format id: " + id);}
public virtual DeleteAppResponse DeleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;return Invoke<DeleteAppResponse>(request, options);}
public virtual GetBaiduChannelResponse GetBaiduChannel(GetBaiduChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBaiduChannelResponseUnmarshaller.Instance;return Invoke<GetBaiduChannelResponse>(request, options);}
public FST.BytesReader GetBytesReader() {return fst.GetBytesReader();}
public static bool IsValidSchemeChar(int index, char c){if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')){return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')){return true;}return false;}
public virtual ListAppliedSchemaArnsResponse ListAppliedSchemaArns(ListAppliedSchemaArnsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAppliedSchemaArnsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.Instance;return Invoke<ListAppliedSchemaArnsResponse>(request, options);}
public string name() { return this.name; }
public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec){if (args.Length < 1){return ErrorEval.ValueInvalid;}bool isA1Style;string text;try{ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.RowIndex, ec.ColumnIndex);text = OperandResolver.CoerceValueToString(ve);switch (args.Length){case 1:isA1Style = true;break;case 2:isA1Style = EvaluateBooleanArg(args[1], ec);break;default:return ErrorEval.ValueInvalid;}}catch (EvaluationException e){return e.ErrorEval;}return EvaluateIndirect(ec, text, isA1Style);}
public int CompareTo(int[] bs, int p) {int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0) return cmp;cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0) return cmp;cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0) return cmp;cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0) return cmp;return NB.CompareUInt32(w5, bs[p + 4]);}
public void RemoveName(int index) { names.RemoveAt(index); workbook.RemoveName(index); }
public GetQueueAttributesRequest(string queueUrl, List<string> attributeNames) { SetQueueUrl(queueUrl); SetAttributeNames(attributeNames); }
public static bool[] CopyOf(bool[] original, int newLength) { if (newLength < 0) { throw new IndexOutOfRangeException(); } return CopyOfRange(original, 0, newLength); }
public static void SetEnabled(bool enabled) { ENABLED = enabled; }
public DeleteLogPatternResponse DeleteLogPattern(DeleteLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;return Invoke<DeleteLogPatternResponse>(request, options);}
public bool Contains(char[] text, int off, int len) { return map.ContainsKey(text, off, len); }
public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber) { return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber); }
public bool Handles(string commandLine) { return command.Length + 1 < commandLine.Length && commandLine[command.Length] == ' ' && commandLine.StartsWith(command); }
public static void Register(MergeStrategy imp) => Register(imp.Name, imp);
public long RamBytesUsed() => BASE_RAM_BYTES_USED + (index != null ? index.RamBytesUsed() : 0);
public HostedZone(string id, string name, string callerReference) {Id = id;Name = name;CallerReference = callerReference;}
public virtual GetFindingsResponse GetFindings(GetFindingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFindingsResponseUnmarshaller.Instance;return Invoke<GetFindingsResponse>(request, options);}
public virtual DescribeTopicsDetectionJobResponse DescribeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;return Invoke<DescribeTopicsDetectionJobResponse>(request, options);}
public bool ProcessMatch(ValueEval eval) {if(eval is NumericValueEval) {if(minimumValue == null) { minimumValue = eval;} else { double currentValue = ((NumericValueEval)eval).NumberValue;double oldValue = ((NumericValueEval)minimumValue).NumberValue;if(currentValue < oldValue) {minimumValue = eval;}}}return true;}
public void Write(LittleEndianOutput output) {output.WriteByte((byte)(sid + GetPtgClass()));output.WriteInt(field_1_len_ref_subexpression);}
using System;using System.IO;using System.Text.RegularExpressions;using Lucene.Net.Analysis.CharFilter;using Lucene.Net.Analysis.Scope;using Lucene.Net.Analysis.Standard;using Lucene.Net.Analysis.Util;public class Program{public static void Main(string[] args){bool printTree = false;string path = null;for (int i = 0; i < args.Length; i++){if (args[i] == "-printTree"){printTree = true;}else{path = args[i];}}if (args.Length != (printTree ? 2 : 1)){Console.WriteLine("\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\n");Environment.Exit(1);}using (var dir = FSDirectory.Open(Paths.Get(path))){using (var r = new DirectoryTaxonomyReader(dir)){PrintStats(r, Console.Out, printTree);}}}private static void PrintStats(TaxonomyReader r, TextWriter writer, bool printTree){// Implementation of PrintStats method}}
public void SetByteValue(byte value){if (!(fieldsData is Byte)){throw new ArgumentException("cannot change value type from " + fieldsData.GetType().getSimpleName() + " to Byte");}fieldsData = value;}
public static int Initialize() => Initialize(DEFAULT_SEED);
public CachingDoubleValueSource(DoubleValuesSource source) {this.source = source;cache = new Dictionary<int, double>();}
public AttributeDefinition(string attributeName, ScalarAttributeType attributeType) {SetAttributeName(attributeName);SetAttributeType(attributeType.ToString());}
public static string Join(IEnumerable<string> parts, string separator) {return string.Join(separator, parts);}
public virtual ListTaskDefinitionFamiliesResponse ListTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance;return Invoke<ListTaskDefinitionFamiliesResponse>(request, options);}
public virtual ListComponentsResponse ListComponents(ListComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;return Invoke<ListComponentsResponse>(request, options);}
public ActivatePhotosRequest() : base("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto") { setProtocol(ProtocolType.HTTPS); }
public virtual CreateMatchmakingRuleSetResponse CreateMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;return Invoke<CreateMatchmakingRuleSetResponse>(request, options);}
public virtual ListAvailableManagementCidrRangesResponse ListAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;return Invoke<ListAvailableManagementCidrRangesResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> GetBaseObjectIds() { if (baseObjectIds != null) return baseObjectIds; return new ObjectIdSubclassMap<>(); }
public virtual DeletePushTemplateResponse DeletePushTemplate(DeletePushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;return Invoke<DeletePushTemplateResponse>(request, options);}
public CreateDomainEntryResponse CreateDomainEntry(CreateDomainEntryRequest request) {request = beforeClientExecution(request);return ExecuteCreateDomainEntry(request);}
public static int GetEncodedSize(object[] values) {int result = values.Length * 1;foreach (object value in values) {result += GetEncodedSize(value);}return result;}
public OpenNLPTokenizerFactory(Dictionary<string, string> args) : base(args){sentenceModelFile = require(args, SENTENCE_MODEL);tokenizerModelFile = require(args, TOKENIZER_MODEL);if (!args.isEmpty()){throw new ArgumentException("Unknown parameters: " + args);}}
public int GetInt(int index) { CheckIndex(index, SizeOf.INT); return Memory.ReadInt32(backingArray, offset + index * order); }
public List<Head> GetNextHeads(char c) {if (Matches(c)) {return newHeads;}return FileNameMatcher.EmptyHeadList;}
public byte[] PutShort(short value) {throw new ReadOnlyBufferException();}
public void WriteUnshared(object @object) throw IOException {WriteObject(@object, true);}
public int OffsetByCodePoints(int index, int codePointOffset) => System.Text.RegularExpressions.Regex.Unescape(value.Substring(0, index)).Length + codePointOffset;
public static int GetUniqueAlt(IEnumerable<BitSet> altsets) {BitSet all = GetAlts(altsets);if ( all.Cardinality() == 1 ) return all.NextSetBit(0);return ATN.INVALID_ALT_NUMBER;}
public DateTime GetWhen() {return DateTimeOffset.FromUnixTimeSeconds(when).LocalDateTime;}
public class RuleTagToken{private string ruleName;private int bypassTokenType;private string label;public RuleTagToken(string ruleName, int bypassTokenType, string label){if (string.IsNullOrEmpty(ruleName)){throw new ArgumentException("ruleName cannot be null or empty.");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}}
public DisableOrganizationAdminAccountResult DisableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request) { request = beforeClientExecution(request); return executeDisableOrganizationAdminAccount(request); }
public virtual CreateRoomResponse CreateRoom(CreateRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;return Invoke<CreateRoomResponse>(request, options);}
public virtual ReplicationGroup DeleteReplicationGroup(DeleteReplicationGroupRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;return Invoke<ReplicationGroup>(request, options);}
public CharBuffer Decode(ByteBuffer buffer){try{return newDecoder().OnMalformedInput(CodingErrorAction.REPLACE).OnUnmappableCharacter(CodingErrorAction.REPLACE).Decode(buffer);}catch (CharacterCodingException ex){throw new Error(ex.Message, ex);}}
public Distribution(string id, string status, string domainName) {Id = id;Status = status;DomainName = domainName;}
public final double[] Array() {return ProtectedArray();}
public DateWindow1904Record(RecordInputStream in) {field_1_window = in.readShort();}
public DeleteDBSnapshotRequest(string dBSnapshotIdentifier) {DBSnapshotIdentifier = dBSnapshotIdentifier;}
public ParserExtension GetExtension(string key) {return this.extensions[key];}
public void inform(ResourceLoader loader) {try {if (chunkerModelFile != null) {OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);}} catch (IOException e) {throw new ArgumentException(e);}}
public virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request) {request = beforeClientExecution(request);return executeCompleteVaultLock(request);}
public final int[] GetCharIntervals() {return points.Clone();}
public long RamBytesUsed() { return values.RamBytesUsed() + base.RamBytesUsed() + (long)long.MaxValue + RamUsageEstimator.NUM_BYTES_OBJECT_REF; }
public virtual RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.Instance;return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options);}
public DescribeClusterUserKubeconfigRequest() : base("CS", "2015-12-15", "DescribeClusterUserKubeconfig", "csk"){this.UriPattern = "/k8s/[ClusterId]/user_config";this.Method = MethodType.GET;}
public PrecisionRecord(RecordInputStream in) {field_1_precision = in.ReadShort();}
public void Serialize(LittleEndianOutput out) {out.WriteInt16(GetLeftRowGutter());out.WriteInt16(GetTopColGutter());out.WriteInt16(GetRowLevelMax());out.WriteInt16(GetColLevelMax());}
public DeleteVirtualInterfaceResponse DeleteVirtualInterface(DeleteVirtualInterfaceRequest request){request = BeforeClientExecution(request);return ExecuteDeleteVirtualInterface(request);}
public Entry GetEntry(string name) { if (excludes.Contains(name)) { throw new FileNotFoundException(name); } Entry entry = directory.GetEntry(name); return wrapEntry(entry); }
public override string ToString() { StringBuilder buffer = new StringBuilder(); buffer.Append("[BACKUP]\n"); buffer.Append("    .backup          = ").Append(BitConverter.ToString(BitConverter.GetBytes(GetBackup()))).Append("\n"); buffer.Append("[/BACKUP]\n"); return buffer.ToString(); }
public DeleteVoiceConnectorOriginationResponse DeleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request) {request = BeforeClientExecution(request);return ExecuteDeleteVoiceConnectorOrigination(request);}
public IAppendable Append(char c) { write(c); return this; }
public static long GenerationFromSegmentsFileName(string fileName){if (fileName.Equals(OLD_SEGMENTS_GEN)){throw new ArgumentException("\"" + OLD_SEGMENTS_GEN + "\" is not a valid segment file name since 4.0");}else if (fileName.Equals(IndexFileNames.SEGMENTS)){return 0;}else if (fileName.StartsWith(IndexFileNames.SEGMENTS)){return long.Parse(fileName.Substring(1 + IndexFileNames.SEGMENTS.Length()), System.Globalization.NumberStyles.HexNumber);}else{throw new ArgumentException("fileName \"" + fileName + "\" is not a segments file");}}
public static TagOpt FromOption(string o) { if (string.IsNullOrEmpty(o)) return TagOpt.AUTO_FOLLOW; foreach (TagOpt tagopt in Enum.GetValues(typeof(TagOpt))) { if (tagopt.Option().Equals(o)) return tagopt; } throw new ArgumentException(string.Format(JGitText.get().invalidTagOption, o)); }
public virtual StartContentModerationResponse StartContentModeration(StartContentModerationRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartContentModerationRequestMarshaller.Instance;options.ResponseUnmarshaller = StartContentModerationResponseUnmarshaller.Instance;return Invoke<StartContentModerationResponse>(request, options);}
public static string QuoteReplacement(string s) {StringBuilder result = new StringBuilder(s.Length);for (int i = 0; i < s.Length; i++) {char c = s[i];if (c == '\\' || c == '$') {result.Append('\\');}result.Append(c);}return result.ToString();}
public void set(V newValue) {value = newValue;}
public QueryParserTokenManager(CharStream stream) { input_stream = stream; }
public long valueFor(double elapsed){double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return (long)Math.Round(val);elsereturn (long)val;}
public ByteBuffer Get(long[] dst, int dstOffset, int longCount){byteBuffer.Limit(limit * SizeOf.Long);byteBuffer.Position(position * SizeOf.Long);if (byteBuffer is DirectByteBuffer){((DirectByteBuffer)byteBuffer).Get(dst, dstOffset, longCount);}else{((HeapByteBuffer)byteBuffer).Get(dst, dstOffset, longCount);}position += longCount;return this;}
public void RemoveErrorListeners() { _listeners.Clear(); }
public CommonTokenStream(ITokenSource tokenSource, int channel) : base(tokenSource) {this.channel = channel;}
public async Task<ListObjectPoliciesResponse> ListObjectPoliciesAsync(ListObjectPoliciesRequest request) { request = BeforeClientExecution(request); return await ExecuteListObjectPoliciesAsync(request); }
public ObjectToPack(AnyObjectId src, int type) : base(src) {flags = type << TYPE_SHIFT;}
public int Stem(char[] s, int len){int numVowels = NumVowels(s, len);for (int i = 0; i < affixes.Length; i++){Affix affix = affixes[i];if (numVowels > affix.vc && len >= affix.affix.Length + 3 && EndsWith(s, len, affix.affix)){len -= affix.affix.Length;return affix.palatalizes ? Unpalatalize(s, len) : len;}}return len;}
public override void Recover(Parser recognizer, RecognitionException e) {if (lastErrorIndex == recognizer.InputStream.Index && lastErrorStates != null && lastErrorStates.Contains(recognizer.State)) {recognizer.Consume();}lastErrorIndex = recognizer.InputStream.Index;if (lastErrorStates == null) lastErrorStates = new IntervalSet();lastErrorStates.Add(recognizer.State);IntervalSet followSet = GetErrorRecoverySet(recognizer);ConsumeUntil(recognizer, followSet);}
public string ToFormulaString(){string value = field_3_string;int len = value.Length;StringBuilder sb = new StringBuilder(len + 4);sb.Append(FORMULA_DELIMITER);for (int i = 0; i < len; i++){char c = value[i];if (c == FORMULA_DELIMITER){sb.Append(FORMULA_DELIMITER);}sb.Append(c);}sb.Append(FORMULA_DELIMITER);return sb.ToString();}
public UnlinkFaceRequest() : base("LinkFace", "2018-07-20", "UnlinkFace"){this.Protocol = ProtocolType.HTTPS;this.Method = MethodType.POST;}
public ConfigurationOptionSetting(string @namespace, string optionName, string value) {SetNamespace(@namespace);SetOptionName(optionName);SetValue(value);}
public string GetFully(string key) {StringBuilder result = new StringBuilder(tries.Count * 2);for (int i = 0; i < tries.Count; i++) {string r = tries[i].GetFully(key);if (r == null || (r.Length == 1 && r[0] == 'EOM')) {return result.ToString();}result.Append(r);}return result.ToString();}
public DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);}
public GetApiMappingResponse GetApiMapping(GetApiMappingRequest request){request = BeforeClientExecution(request);return ExecuteGetApiMapping(request);}
public HttpRequest(string strUrl) : base(strUrl) { }
public MemFuncPtg(int subExprLen) { field_1_len_ref_subexpression = subExprLen; }
using System;using System.Collections.Generic;using System.Linq;public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, string field, IComparer<TermStats> comparator){TermStatsQueue tiq = null;if (field != null){Terms terms = MultiTerms.GetTerms(reader, field);if (terms == null){throw new Exception("field " + field + " not found");}TermsEnum termsEnum = terms.Iterator();tiq = new TermStatsQueue(numTerms, comparator);tiq.Fill(field, termsEnum);}else{var fields = FieldInfos.GetIndexedFields(reader).ToList();if (fields.Count == 0){throw new ArgumentException("no fields found for this index");}tiq = new TermStatsQueue(numTerms, comparator);foreach (var fieldName in fields){Terms terms = MultiTerms.GetTerms(reader, fieldName);if (terms != null){tiq.Fill(fieldName, terms.Iterator());}}}TermStats[] result = new TermStats[tiq.Size()];int count = tiq.Size() - 1;while (tiq.Size() != 0){result[count] = tiq.Pop();count--;}return result;}
public DeleteApnsVoipChannelResponse DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;return InvokeDeleteApnsVoipChannel(request, options);}
public virtual ListFacesResponse ListFaces(ListFacesRequest request) { request = beforeClientExecution(request); return executeListFaces(request); }
public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<Point> provider, Point from, double multiplier) {this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}
public char Get(int index) { CheckIndex(index); return sequence[index]; }
public virtual UpdateConfigurationProfileResponse UpdateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationProfileResponse>(request, options);}
public DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request) {request = beforeClientExecution(request);return executeDescribeLifecycleHooks(request);}
public DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request) {request = BeforeClientExecution(request);return ExecuteDescribeHostReservations(request);}
public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext){if (outerContext == null)outerContext = RuleContext.Empty;if (outerContext.Parent == null || outerContext == RuleContext.Empty){return PredictionContext.Empty;}PredictionContext parent = EMPTY;parent = PredictionContext.FromRuleContext(atn, outerContext.Parent);ATNState state = atn.States[outerContext.InvokingState];RuleTransition transition = state.Transition(0) as RuleTransition;return SingletonPredictionContext.Create(parent, transition.FollowState.StateNumber);}
public override string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[SXVDEX]\n");buffer.Append("    .grbit1 =").Append(HexDump.IntToHex(_grbit1)).Append("\n");buffer.Append("    .grbit2 =").Append(HexDump.ByteToHex(_grbit2)).Append("\n");buffer.Append("    .citmShow =").Append(HexDump.ByteToHex(_citmShow)).Append("\n");buffer.Append("    .isxdiSort =").Append(HexDump.ShortToHex(_isxdiSort)).Append("\n");buffer.Append("    .isxdiShow =").Append(HexDump.ShortToHex(_isxdiShow)).Append("\n");buffer.Append("    .subtotalName =").Append(_subtotalName).Append("\n");buffer.Append("[/SXVDEX]\n");return buffer.ToString();}
public override string ToString() {StringBuilder r = new StringBuilder();r.Append("BlameResult: ");r.Append(GetResultPath());return r.ToString();}
public ListChangeSetsResponse ListChangeSets(ListChangeSetsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance;return Invoke<ListChangeSetsResponse>(request, options);}
public bool IsAllowNonFastForwards() {return allowNonFastForwards;}
public FeatRecord() {futureHeader = new FtrHeader();futureHeader.RecordType = sid;}
public void Put(short c) {throw new NotSupportedException();}
public void SetQuery(ICharSequence query) { this.query = query; this.message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, ""); }
public StashApplyCommand StashApply() {return new StashApplyCommand(repo);}
public HashSet<string> NameSet() { return dictionary.Values.ToHashSet(); }
public static int GetEffectivePort(string scheme, int specifiedPort){if (specifiedPort != -1){return specifiedPort;}if (string.Equals(scheme, "http", StringComparison.OrdinalIgnoreCase)){return 80;}else if (string.Equals(scheme, "https", StringComparison.OrdinalIgnoreCase)){return 443;}else{return -1;}}
public ListAssessmentTemplatesResponse ListAssessmentTemplates(ListAssessmentTemplatesRequest request) {request = beforeClientExecution(request);return executeListAssessmentTemplates(request);}
public Cluster RestoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) { request = BeforeClientExecution(request); return ExecuteRestoreFromClusterSnapshot(request); }
public void AddShape(HSSFShape shape) {shape.SetPatriarch(this.GetPatriarch());shape.SetParent(this);shapes.Add(shape);}
public override bool Equals(object obj) { if (this == obj) return true; if (obj == null || GetType() != obj.GetType()) return false; FacetEntry other = (FacetEntry) obj; if (count != other.count) return false; if (!value.Equals(other.value)) return false; return true;}
public static int prev(byte[] b, int ptr, char chrA) { if (ptr == b.Length) ptr--; while (ptr >= 0) { if (b[ptr--] == chrA) return ptr; } return ptr; }
public bool IsDeltaRepresentation() {return deltaBase != null;}
public Token EmitEOF() {int cpos = GetCharPositionInLine();int line = GetLine();Token eof = _factory.Create(_tokenFactorySourcePair, Token.EOF, null, Token.DEFAULT_CHANNEL, _input.Index, _input.Index - 1, line, cpos);emit(eof);return eof;}
public UpdateUserRequest(string userName) {SetUserName(userName);}
public RevFilter Negate() { return NotRevFilter.create(this); }
public void SetTagger(PersonIdent taggerIdent) { tagger = taggerIdent; }
public static BufferSize Automatic(){Runtime rt = Runtime.getRuntime();long max = rt.maxMemory();long total = rt.totalMemory();long free = rt.freeMemory();long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes){if (totalAvailableBytes / 2 > minBufferSizeBytes){sortBufferByteSize = totalAvailableBytes / 2;}else{sortBufferByteSize = Math.Max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.Min((long)int.MaxValue, sortBufferByteSize));}
public static int TrimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr]))ptr--;return ptr + 1;}
public TopMarginRecord(RecordInputStream in) { field_1_margin = in.ReadDouble(); }
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {SetInfoType(infoType.ToString());}
public CreatePlayerSessionsResponse CreatePlayerSessions(CreatePlayerSessionsRequest request){request = BeforeClientExecution(request);return ExecuteCreatePlayerSessions(request);}
public virtual CreateProxySessionResponse CreateProxySession(CreateProxySessionRequest request) { request = BeforeClientExecution(request); return ExecuteCreateProxySession(request); }
public int GetObjectType() { return type; }
public string GetScheme() { return scheme; }
public void Characters(char[] ch, int start, int length) {contents.Append(ch, start, length);}
public FetchAlbumTagPhotosRequest() : base("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto"){this.Protocol = ProtocolType.HTTPS;}
public virtual DeleteMembersResponse DeleteMembers(DeleteMembersRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMembersResponseUnmarshaller.Instance;return Invoke<DeleteMembersResponse>(request, options);}
public virtual GetContactReachabilityStatusResponse GetContactReachabilityStatus(GetContactReachabilityStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactReachabilityStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactReachabilityStatusResponseUnmarshaller.Instance;return Invoke<GetContactReachabilityStatusResponse>(request, options);}
public override bool Remove(object o) { return Impl.this.Remove(o) != null; }
public E Last() {return backingMap.LastKey();}
public CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request) {request = BeforeClientExecution(request);return ExecuteCreateStreamingDistribution(request);}
public bool IsAbsolute(){return absolute;}
public DisableAddOnResponse DisableAddOn(DisableAddOnRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableAddOnResponseUnmarshaller.Instance;return Invoke<DisableAddOnResponse>(request, options);}
public virtual DescribeAliasResponse DescribeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;return Invoke<DescribeAliasResponse>(request, options);}
public void next(int delta) {while (--delta >= 0) {if (currentSubtree != null)ptr += currentSubtree.getEntrySpan();elseptr++;if (eof())break;parseEntry();}}
public RevFilter Clone() { return new Binary(a.Clone(), b.Clone()); }
public static Reader Create(Reader input) { return new PersianCharFilter(input); }
public string Option() { return option; }
public override string ToString() {var sb = new StringBuilder("[");foreach (var item in this) {if (sb.Length > 1) sb.Append(", ");if (item is char[]) {sb.Append(((char[]) item));} else {sb.Append(item);}}return sb.Append(']').ToString();}
public virtual DescribeSignalingChannelResponse DescribeSignalingChannel(DescribeSignalingChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSignalingChannelResponseUnmarshaller.Instance;return Invoke<DescribeSignalingChannelResponse>(request, options);}
public AttachStaticIpResponse AttachStaticIp(AttachStaticIpRequest request) { request = BeforeClientExecution(request); return ExecuteAttachStaticIp(request); }
public override string ToString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.Append(GetType().Name);sb.Append(" [").Append(crA.FormatAsString()).Append(':').Append(crB.FormatAsString()).Append("]");return sb.ToString();}
public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat, BloomFilterFactory bloomFilterFactory) : base(BLOOM_CODEC_NAME){this.delegatePostingsFormat = delegatePostingsFormat;this.bloomFilterFactory = bloomFilterFactory;}
public virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;return Invoke<ListTemplatesResponse>(request, options);}
public class TimerThread : Thread{private const string THREAD_NAME = "TimerThread";private long resolution;private Counter counter;public TimerThread(long resolution, Counter counter){this.Name = THREAD_NAME;this.resolution = resolution;this.counter = counter;this.IsBackground = true;}}
public DrawingRecord() { recordData = EMPTY_BYTE_ARRAY; }
public virtual ListDirectoriesResponse ListDirectories(ListDirectoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDirectoriesResponseUnmarshaller.Instance;return Invoke<ListDirectoriesResponse>(request, options);}
public void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {var block = blocks[blocksOffset++];values[valuesOffset++] = (block >> 7) & 1;values[valuesOffset++] = (block >> 6) & 1;values[valuesOffset++] = (block >> 5) & 1;values[valuesOffset++] = (block >> 4) & 1;values[valuesOffset++] = (block >> 3) & 1;values[valuesOffset++] = (block >> 2) & 1;values[valuesOffset++] = (block >> 1) & 1;values[valuesOffset++] = block & 1;}}
public GroupingSearch DisableCaching() {this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}
public static int IdealByteArraySize(int need) {for (int i = 4; i < 32; i++)if (need <= (1 << i) - 12)return (1 << i) - 12;return need;}
public UpdateAssessmentTargetResponse UpdateAssessmentTarget(UpdateAssessmentTargetRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;return Invoke<UpdateAssessmentTargetResponse>(request, options);}
public virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;return Invoke<ModifyVolumeResponse>(request, options);}
public Cell Merge(Cell m, Cell e) { if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) { Cell c = new Cell(m); c.cnt += e.cnt; return c; } else { return null; } }
public byte[] Read(int length, long position) throws IOException{if (position >= Size()){throw new IndexOutOfBoundsException("Position " + position + " past the end of the file");}byte[] dst;if (Writable){dst = new byte[length];int bytesRead = channel.Read(new ByteBuffer(dst), position);if (bytesRead == -1){throw new IndexOutOfBoundsException("Position " + position + " past the end of the file");}}else{channel.Position(position);dst = new byte[length];int bytesRead = channel.Read(new ByteBuffer(dst));if (bytesRead == -1){throw new IndexOutOfBoundsException("Position " + position + " past the end of the file");}}Array.Copy(dst, 0, dst, 0, length);return dst;}
public virtual void RespondActivityTaskCompleted(RespondActivityTaskCompletedRequest request){var options = new InvokeOptions();options.RequestMarshaller = RespondActivityTaskCompletedRequestMarshaller.Instance;options.ResponseUnmarshaller = RespondActivityTaskCompletedResponseUnmarshaller.Instance;Invoke<VoidType>(request, options);}
public void IncrementProgressBy(int diff) { SetProgress(mProgress + diff); }
public MetadataDiff CompareMetadata(DirCacheEntry entry){if (entry.IsAssumeValid) return MetadataDiff.EQUAL;if (entry.IsUpdateNeeded) return MetadataDiff.DIFFER_BY_METADATA;if (IsModeDifferent(entry.GetRawMode())) return MetadataDiff.DIFFER_BY_METADATA;int type = entry.Mode & FileMode.TYPE_MASK;if (type == FileMode.TYPE_TREE || type == FileMode.TYPE_GITLINK) return MetadataDiff.EQUAL;if (!entry.IsSmudged() && entry.Length != (int)getEntryLength()) return MetadataDiff.DIFFER_BY_METADATA;Instant cacheLastModified = entry.LastModifiedInstant;Instant fileLastModified = GetEntryLastModifiedInstant();if (TimestampComparator.Compare(cacheLastModified, fileLastModified, GetOptions().CheckStat == CheckStat.MINIMAL) != 0) { return MetadataDiff.DIFFER_BY_TIMESTAMP; }if (entry.IsSmudged()) { return MetadataDiff.SMUDGED; }return MetadataDiff.EQUAL;}
public static NumberRecord ConvertToNumberRecord(RKRecord rk) {NumberRecord num = new NumberRecord();num.Column = rk.Column;num.Row = rk.Row;num.XFIndex = rk.XFIndex;num.Value = rk.RKNumber;return num;}
public CharBuffer Put(char[] src, int srcOffset, int charCount) {byteBuffer.Limit = limit * SizeOf.Char;byteBuffer.Position = position * SizeOf.Char;if (byteBuffer is ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).Put(src, srcOffset, charCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).Put(src, srcOffset, charCount);}this.position += charCount;return this;}
public int GetCells() {var i = cells.Keys.GetEnumerator();int size = 0;while (i.MoveNext()) {var c = i.Current;var e = At(c);if (e.cmd >= 0 || e.ref >= 0) {size++;}}return size;}
public BeiderMorseFilterFactory(Dictionary<string, string> args) : base(args) { NameType nameType = Enum.Parse(typeof(NameType), args.GetValueOrDefault("nameType", NameType.GENERIC.ToString())); RuleType ruleType = Enum.Parse(typeof(RuleType), args.GetValueOrDefault("ruleType", RuleType.APPROX.ToString())); bool concat = GetBoolean(args, "concat", true); engine = new PhoneticEngine(nameType, ruleType, concat); HashSet<string> langs = GetSet(args, "languageSet"); languageSet = (langs == null || (langs.Count == 1 && langs.Contains("auto"))) ? null : LanguageSet.From(langs); if (args.Any()) { throw new ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys)); } }
public static double Varp(double[] v){double r = double.NaN;if (v != null && v.Length > 1){r = Devsq(v) / v.Length;}return r;}
public PersianNormalizationFilterFactory(Dictionary<string, string> args){base(args);if (!args.isEmpty()){throw new ArgumentException("Unknown parameters: " + args);}}
public static WeightedTerm[] GetTerms(Query query, bool prohibited, string fieldName){HashSet<WeightedTerm> terms = new HashSet<WeightedTerm>();Predicate<string> fieldSelector = fieldName == null ? f => true : f => f.Equals(fieldName);query.Visit(new BoostedTermExtractor(1, terms, prohibited, fieldSelector));return terms.ToArray(new WeightedTerm[0]);}
public virtual DeleteDocumentationPartResponse DeleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationPartResponse>(request, options);}
public override string ToString() {StringBuilder sb = new StringBuilder();sb.Append("[CHART]\n");sb.Append("    .x     = ").Append(GetX()).Append('\n');sb.Append("    .y     = ").Append(GetY()).Append('\n');sb.Append("    .width = ").Append(GetWidth()).Append('\n');sb.Append("    .height= ").Append(GetHeight()).Append('\n');sb.Append("[/CHART]\n");return sb.ToString();}
public sealed short get(int index) { checkIndex(index); return backingArray[offset + index]; }
public string ToString() { return image; }
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = evaluateRef(arg0);AreaEval reB = evaluateRef(arg1);AreaEval result = resolveRange(reA, reB);if (result == null) {return ErrorEval.NULL_INTERSECTION;}return result;} catch (EvaluationException e) {return e.getErrorEval();}}
public void Clear() { weightBySpanQuery.Clear(); }
public int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.Length || start < 0) return start;bi.SetText(buffer.ToString(start, buffer.Length - start));return bi.Next() + start;}
public SrndQuery PrimaryQuery() {SrndQuery q;switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case LPAREN:jj_consume_token(LPAREN);q = FieldsQuery();jj_consume_token(RPAREN);break;case OR:case AND:case W:case N:q = PrefixOperatorQuery();break;case TRUNCQUOTED:case QUOTED:case SUFFIXTERM:case TRUNCTERM:case TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);return q;}
public DeleteApiKeyResponse DeleteApiKey(DeleteApiKeyRequest request){request = BeforeClientExecution(request);return ExecuteDeleteApiKey(request);}
public InsertTagsRequest() : base("Ots", "2016-06-20", "InsertTags", "ots") { SetMethod(MethodType.POST); }
public DeleteUserByPrincipalIdResponse DeleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request){return base.DeleteUserByPrincipalId(request);}
public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResponse>(request, options);}
public int Serialize(int offset, byte[] data, EscherSerializationListener listener) {listener.BeforeRecordSerialize(offset, GetRecordId(), this);LittleEndian.PutShort(data, offset, GetOptions());LittleEndian.PutShort(data, offset + 2, GetRecordId());LittleEndian.PutInt(data, offset + 4, 8);LittleEndian.PutInt(data, offset + 8, field_1_numShapes);LittleEndian.PutInt(data, offset + 12, field_2_lastMSOSPID);listener.AfterRecordSerialize(offset + 16, GetRecordId(), GetRecordSize(), this);return GetRecordSize();}
public virtual CreateSecurityConfigurationResponse CreateSecurityConfiguration(CreateSecurityConfigurationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSecurityConfigurationResponseUnmarshaller.Instance;return Invoke<CreateSecurityConfigurationResponse>(request, options);}
public virtual DescribeClientVpnConnectionsResponse DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeClientVpnConnectionsResponse>(request, options);}
public static void fill(double[] array, double value) {for (int i = 0; i < array.Length; i++) {array[i] = value;}}
public bool HasNext() { return nextId < cells.Length; }
public PostingsEnum Reset(int[] postings){this.postings = postings;upto = -2;freq = 0;return this;}
public bool HasAll(RevFlagSet set) { return (flags & set.mask) == set.mask; }
public virtual ModifyAccountResponse ModifyAccount(ModifyAccountRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ModifyAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.Instance;return Invoke<ModifyAccountResponse>(request, options);}
public Token LT(int k) {lazyInit();if (k == 0) return null;if (k < 0) return LB(-k);int i = p + k - 1;sync(i);if (i >= tokens.Count) { return tokens[tokens.Count - 1];}return tokens[i];}
public void RemoveSheet(int sheetIndex) {if (boundsheets.Count > sheetIndex) {records.RemoveAt(records.GetBspos() - (boundsheets.Count - 1) + sheetIndex);boundsheets.RemoveAt(sheetIndex);FixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for(int i=0; i<getNumNames(); i++) {NameRecord nr = getNameRecord(i);if(nr.GetSheetNumber() == sheetNum1Based) {nr.SetSheetNumber(0);} else if(nr.GetSheetNumber() > sheetNum1Based) {nr.SetSheetNumber(nr.GetSheetNumber()-1);}}if (linkTable != null) {linkTable.RemoveSheet(sheetIndex);}}
public void RemoveName(string name) {int index = GetNameIndex(name);RemoveName(index);}
public override bool Equals(object obj) {if (!(obj is Property p)) return false;var pValue = p.GetValue();long pId = p.GetID();if (id != pId || (id != 0 && !TypesAreEqual(type, p.GetType()))) return false;if (value == null && pValue == null) return true;if (value == null || pValue == null) return false;var valueClass = value.GetType();var pValueClass = pValue.GetType();if (!(valueClass.IsAssignableFrom(pValueClass)) &&!(pValueClass.IsAssignableFrom(valueClass))) return false;if (value is byte[]) {byte[] thisVal = (byte[]) value, otherVal = (byte[]) pValue;int len = UnpaddedLength(thisVal);if (len != UnpaddedLength(otherVal)) return false;for (int i=0; i<len; i++) {if (thisVal[i] != otherVal[i]) return false;}return true;}return value.Equals(pValue);}
public GetRepoBuildListRequest() : base("cr", "2016-06-07", "GetRepoBuildList", "cr") {SetUriPattern("/repos/[RepoNamespace]/[RepoName]/build");SetMethod(MethodType.GET);}
public class MessageWriter{private System.IO.MemoryStream buf;private System.IO.StreamWriter enc;public MessageWriter(){buf = new System.IO.MemoryStream();enc = new System.IO.StreamWriter(buf, System.Text.Encoding.UTF8);}}
public void Append(RecordBase r) { _recs.Add(r); }
public void Close() {if (Read(skipBuffer) != -1 || actualSize != expectedSize) {throw new CorruptObjectException(string.Format(JGitText.get().packfileCorruptionDetected, JGitText.get().wrongDecompressedLength));}int used = bAvail - inf.getRemaining();if (0 < used) {onObjectData(src, buf, p, used);use(used);}inf.Reset();}
public virtual DescribeModelPackageResponse DescribeModelPackage(DescribeModelPackageRequest request){request = BeforeClientExecution(request);return ExecuteDescribeModelPackage(request);}
public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec is FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText = null;Class<? extends Record> nextClass = rs.PeekNextClass();if (nextClass == typeof(StringRecord)) {cachedText = (StringRecord) rs.GetNext();}insertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {insertCell(rec);}}
public DeflateDecompressor Clone() {return new DeflateDecompressor();}
public UpdateS3ResourcesResponse UpdateS3Resources(UpdateS3ResourcesRequest request) { request = beforeClientExecution(request); return executeUpdateS3Resources(request); }
public GroupQueryNode(QueryNode query) {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}Allocate();SetLeaf(false);Add(query);}
public string ToQueryString(EscapeQuerySyntax escaper){StringBuilder path = new StringBuilder();path.Append("/").Append(GetFirstPathElement());foreach (QueryText pathElement in getPathElements(1)){string value = escaper.Escape(pathElement.value, Locale.getDefault(), Type.STRING);path.Append("/\"").Append(value).Append("\"");}return path.ToString();}
public void RemoveCellComment(){HSSFComment comment = _sheet.FindCellComment(_record.Row, _record.Column);_comment = null;if (comment == null){return;}_sheet.DrawingPatriarch.RemoveShape(comment);}
public void Reset() {arriving = -1;leaving = -1;}
public virtual ActivateUserResponse ActivateUser(ActivateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateUserResponseUnmarshaller.Instance;return Invoke<ActivateUserResponse>(request, options);}
public bool IsCharsetDetected() {throw new UnsupportedOperationException();}
public Cluster ModifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request) {request = BeforeClientExecution(request);return ExecuteModifySnapshotCopyRetentionPeriod(request);}
public DeleteClusterSubnetGroupResponse DeleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {request = BeforeClientExecution(request);return ExecuteDeleteClusterSubnetGroup(request);}
public static string Decode(byte[] buffer) {return Decode(buffer, 0, buffer.Length);}
public int getDefaultPort() { return -1; }
public virtual StopTaskResponse StopTask(StopTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke<StopTaskResponse>(request, options);}
public void SeekExact(BytesRef target, TermState otherState) { Debug.Assert(otherState != null && otherState is BlockTermState); Debug.Assert(!doOrd || ((BlockTermState)otherState).Ord < numTerms); state.CopyFrom(otherState); seekPending = true; indexIsCurrent = false; term.CopyBytes(target); }
public SeriesToChartGroupRecord(RecordInputStream in) { field_1_chartGroupIndex = in.ReadShort(); }
public static void WriteUnicodeStringFlagAndData(BinaryWriter out, string value) {bool is16Bit = HasMultibyte(value);out.Write(is16Bit ? (byte)0x01 : (byte)0x00);if (is16Bit) {PutUnicodeLE(value, out);} else {PutCompressedUnicode(value, out);}}
public virtual AuthorizeSecurityGroupIngressResponse AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request){var options = new InvokeOptions();options.RequestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.Instance;return Invoke<AuthorizeSecurityGroupIngressResponse>(request, options);}
public void AddFile(string file) { CheckFileNames(new HashSet<string> { file }); SetFiles.Add(NamedForThisSegment(file)); }
public void setSize(int width, int height) {mWidth = width;mHeight = height;}
public final void SetPrecedenceFilterSuppressed(bool value) { if (value) { this.reachesIntoOuterContext |= unchecked((int)0x40000000); } else { this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER; } }
public IntervalSet LOOK(ATNState s, RuleContext ctx) {return LOOK(s, null, ctx);}
public void Serialize(LittleEndianOutput output) { output.WriteInt(GetOptionFlags()); output.WriteInt(GetRowHeight()); }
public Builder(bool dedup) { this.dedup = dedup; }
public Hashtable(int capacity, float loadFactor) {base(capacity);if (loadFactor <= 0 || float.IsNaN(loadFactor)) {throw new ArgumentException("Load factor: " + loadFactor);}}
public object Get(CharSequence key) { int bucket = normalCompletion.GetBucket(key); return bucket == -1 ? null : bucket; }
public ListHyperParameterTuningJobsResponse ListHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;return Invoke<ListHyperParameterTuningJobsResponse>(request, options);}
public DeleteTableResponse DeleteTable(string tableName) {return DeleteTable(new DeleteTableRequest { TableName = tableName });}
public bool LessThan(TextFragment fragA, TextFragment fragB) {if (fragA.Score == fragB.Score) {return fragA.FragNum > fragB.FragNum;} else {return fragA.Score < fragB.Score;}}
public void FreeBefore(int pos) {Debug.Assert(pos >= 0);Debug.Assert(pos <= nextPos);int newCount = nextPos - pos;Debug.Assert(newCount <= count, "newCount=" + newCount + " count=" + count);Debug.Assert(newCount <= buffer.Length, "newCount=" + newCount + " buf.length=" + buffer.Length);count = newCount;}
public UpdateHITTypeOfHITResponse UpdateHITTypeOfHIT(UpdateHITTypeOfHITRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;return Invoke<UpdateHITTypeOfHITResponse>(request, options);}
public UpdateRecommenderConfigurationResponse UpdateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request){request = BeforeClientExecution(request);return ExecuteUpdateRecommenderConfiguration(request);}
public int CompareTo(BytesRef other) {return Array.Compare(this.bytes, this.offset, this.offset + this.length, other.bytes, other.offset, other.offset + other.length, ArrayComparisonMode.Unsigned);}
public int Stem(char[] s, int len){if (len > 4 && s[len - 1] == 's') len--;if (len > 5 && (EndsWith(s, len, "ene") || (EndsWith(s, len, "ane") && useNynorsk))) return len - 3;if (len > 4 && (EndsWith(s, len, "er") || EndsWith(s, len, "en") || EndsWith(s, len, "et") || (EndsWith(s, len, "ar") && useNynorsk))) return len - 2;if (len > 3){switch (s[len - 1]){case 'a':case 'e':return len - 1;}}return len;}private bool EndsWith(char[] array, int length, string s){if (array.Length < length || s.Length != length) return false;for (int i = 0; i < length; i++){if (array[length - i - 1] != s[length - i - 1]) return false;}return true;}
public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DbSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DbSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}
public class SortedSetDocValuesFacetField : FacetField{public SortedSetDocValuesFacetField(string dim, string label) : base("dummy", TYPE){FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.dim = dim;this.label = label;}}
public virtual CreateDocumentationPartResponse CreateDocumentationPart(CreateDocumentationPartRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResponseUnmarshaller.Instance;return Invoke<CreateDocumentationPartResponse>(request, options);}
public string GetValue() { return value; }
public ReadOnlyMemory<byte> AsReadOnlyBuffer() {return MemoryMarshal.AsReadOnly(Memory<byte>.Empty);}
public virtual UpdateDataSourcePermissionsResult UpdateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDataSourcePermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDataSourcePermissionsResponseUnmarshaller.Instance;return Invoke<UpdateDataSourcePermissionsResult>(request, options);}
public static IRecord CreateSingleRecord(RecordInputStream in) {IRecordCreator constructor = _recordCreatorsById[in.GetSid()];if (constructor == null) {return new UnknownRecord(in);}return constructor.Create(in);}
public int GetCount() { return mTabs.Count; }
public DeleteApplicationReferenceDataSourceResponse DeleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteApplicationReferenceDataSourceResponse>(request, options);}
public CreateProjectVersionResponse CreateProjectVersion(CreateProjectVersionRequest request) { request = beforeClientExecution(request); return executeCreateProjectVersion(request); }
public IntBuffer Slice() {return new ReadOnlyIntArrayBuffer(Remaining(), BackingArray, Offset + Position);}
public byte Get() {if (position == limit) {throw new BufferUnderflowException();}return this.block.PeekByte(offset + position++);}
public ByteBuffer Put(int index, long c) { CheckIndex(index); backingArray[offset + index] = c; return this; }
public StoredField(string name, float value) : base(name, TYPE) {fieldsData = value;}
public IntervalSet GetExpectedTokensWithinCurrentRule() {var atn = GetInterpreter().Atn;var s = atn.States[GetState()];return atn.NextTokens(s);}
public string ToString() { StringBuilder buffer = new StringBuilder(); buffer.Append("[FILESHARING]\n"); buffer.Append("    .readonly       = ").Append(GetReadOnly() == 1 ? "true" : "false").Append("\n"); buffer.Append("    .password       = ").Append(Convert.ToString(GetPassword(), 16)).Append("\n"); buffer.Append("    .username       = ").Append(GetUsername()).Append("\n"); buffer.Append("[/FILESHARING]\n"); return buffer.ToString(); }
public SubmoduleInitCommand(Repository repo) {base(repo);paths = new List<string>();}
public void Include(string name, AnyObjectId id) {bool validRefName = Repository.IsValidRefName(name) || Constants.HEAD.Equals(name);if (!validRefName) {throw new ArgumentException(string.Format(JGitText.get().invalidRefName, name));}if (include.ContainsKey(name)) {throw new InvalidOperationException(JGitText.get().duplicateRef + name);}include.Add(name, id.ToObjectId());}
public Cluster EnableSnapshotCopy(EnableSnapshotCopyRequest request) { request = BeforeClientExecution(request); return ExecuteEnableSnapshotCopy(request); }
public ValueFiller GetValueFiller() => new ValueFiller(){private readonly MutableValueFloat mval = new MutableValueFloat();public override
public void Serialize (LittleEndianOutput output) {output.WriteByte(GetPane ());output.WriteInt16(GetActiveCellRow ());output.WriteInt16(GetActiveCellCol ());output.WriteInt16(GetActiveCellRef ());int nRefs = field_6_refs.Length;output.WriteInt16(nRefs);foreach (CellRangeAddress8Bit field_6_ref in field_6_refs) {field_6_ref.Serialize (output);}}
public static Counter NewCounter() { return new Counter(false); }
public bool Get(string name, bool dflt){bool[] vals = (bool[])valByRound[name];if (vals != null){return vals[roundNumber % vals.Length];}string sval = props.GetProperty(name, dflt.ToString());if (sval.IndexOf(':') < 0){return bool.Parse(sval);}int k = sval.IndexOf(':');string colName = sval.Substring(0, k);sval = sval.Substring(k + 1);colForValByRound[name] = colName;vals = PropToBooleanArray(sval);valByRound[name] = vals;return vals[roundNumber % vals.Length];}
public void PreSerialize(){if (records.getTabpos() > 0){TabIdRecord tir = (TabIdRecord)records.get(records.getTabpos());if (tir._tabids.Length < boundsheets.Count){FixTabIdRecord();}}}
public LimitTokenCountAnalyzer(Analyzer @delegate, int maxTokenCount, bool consumeAllTokens) : base(@delegate.GetReuseStrategy()) {this.@delegate = @delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}
public ExternalBookBlock(int numberOfSheets) {_externalBookRecord = SupBookRecord.CreateInternalReferences((short)numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
public override string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[SCENARIOPROTECT]\n");buffer.Append("    .protect         = ").Append(GetProtect()).Append("\n");buffer.Append("[/SCENARIOPROTECT]\n");return buffer.ToString();}
public PushCommand SetThin(bool thin) { CheckCallable(); this.thin = thin; return this; }
public int CompareTo(SearcherTracker other) {return Double.Compare(other.recordTimeSec, recordTimeSec);}
public ReverseStringFilter Create(TokenStream input) { return new ReverseStringFilter(input); }
public BlockList<T> {this.directory = BlockList<T>.newDirectory(256);this.directory[0] = BlockList<T>.newBlock();this.tailBlock = this.directory[0];}
public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new Dictionary<string, WeightedSpanTerm>(weightedTerms.Length);for (int i = 0; i < weightedTerms.Length; i++) {WeightedSpanTerm existingTerm = fieldWeightedSpanTerms.ContainsKey(weightedTerms[i].term) ? fieldWeightedSpanTerms[weightedTerms[i].term] : null;if ((existingTerm == null) || (existingTerm.weight < weightedTerms[i].weight)) {fieldWeightedSpanTerms[weightedTerms[i].term] = weightedTerms[i];maxTermWeight = Math.Max(maxTermWeight, weightedTerms[i].getWeight());}}skipInitExtractor = true;}
public override bool Equals(object _other) {if (neverEquals(_other)) {return false;}if (_other is MergedGroup other) {if (groupValue == null) {return other == null;} else {return groupValue.Equals(other);}} else {return false;}}
public Charset charset() => cs;
public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;return Invoke<DescribeExperimentResponse>(request, options);}
public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel) { this.escherGroup = escherGroup; this.workbook = workbook; this.verticalPointsPerPixel = verticalPointsPerPixel; this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel; this.font = new Font("Arial", 0, 10); this.foreground = forecolor; }
public string pattern() { return patternText; }
public virtual DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;return Invoke<DeleteRouteTableResponse>(request, options);}
public virtual AssociateVPCWithHostedZoneResponse AssociateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request) {var options = new InvokeOptions();options.RequestMarshaller = AssociateVPCWithHostedZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateVPCWithHostedZoneResponseUnmarshaller.Instance;return Invoke<AssociateVPCWithHostedZoneResponse>(request, options);}
public PutIntegrationResult PutIntegration(PutIntegrationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke<PutIntegrationResult>(request, options);}
public SimpleEntry(K theKey, V theValue) {key = theKey;value = theValue;}
public void Decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long byte0 = blocks[blocksOffset++] & 0xFF;long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | (byte1 >> 4);long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}
public virtual DisassociateConnectionFromLagResponse DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;return Invoke<DisassociateConnectionFromLagResponse>(request, options);}
public FileMode GetOldMode() { return oldMode; }
public override string ToString() => m.ToString();
public StopKeyPhrasesDetectionJobResponse StopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopKeyPhrasesDetectionJob(request);}
public string ToString() {return "[Array Formula or Shared Formula]\n" + "row = " + GetRow() + "\n" + "col = " + GetColumn() + "\n";}
public virtual ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);}
public string ToString() {return "slice start=" + start + " length=" + length + " readerIndex=" + readerIndex;}
public static int ParseHexInt4(byte digit) {byte r = digits16[digit];if (r < 0) throw new IndexOutOfRangeException();return r;}
public Attribute(String name, String value) {setName(name); setValue(value);}
public virtual DescribeStackSetOperationResponse DescribeStackSetOperation(DescribeStackSetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;return Invoke<DescribeStackSetOperationResponse>(request, options);}
public HSSFCell GetCell(int cellnum) {return GetCell(cellnum, book.getMissingCellPolicy());}
public void Write(byte[] b) {WriteContinueIfRequired(b.Length); _ulrOutput.Write(b);}
public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute) {SetImageId(imageId);SetAttribute(attribute.ToString());}
public void DiscardResultContents() { resultContents = null; }
public ObjectId GetPeeledObjectId() {return GetLeaf().GetPeeledObjectId();}
public void UndeprecateDomain(UndeprecateDomainRequest request) {request = beforeClientExecution(request); executeUndeprecateDomain(request);}
public void Write(LittleEndianOutput output) {output.WriteByte((byte)(sid + GetPtgClass()));output.WriteByte((byte)field_3_string.Length);output.WriteByte(_is16bitUnicode ? (byte)0x01 : (byte)0x00);if (_is16bitUnicode) {StringUtil.PutUnicodeLE(field_3_string, output);} else {StringUtil.PutCompressedUnicode(field_3_string, output);}}
public DeleteQueueResponse DeleteQueue(string queueUrl) => DeleteQueue(new DeleteQueueRequest { QueueUrl = queueUrl });
public void SetCheckEofAfterPackFooter(bool b) { checkEofAfterPackFooter = b; }
public void Swap(){int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}
public int GetPackedGitWindowSize() { return packedGitWindowSize; }
public virtual PutMetricDataResponse PutMetricData(PutMetricDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = PutMetricDataResponseUnmarshaller.Instance;return Invoke<PutMetricDataResponse>(request, options);}
public GetCelebrityRecognitionResponse GetCelebrityRecognition(GetCelebrityRecognitionRequest request) {request = beforeClientExecution(request);return executeGetCelebrityRecognition(request);}
public CreateQueueRequest(string queueName) {SetQueueName(queueName);}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) : base(arearef){this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.GetSheetIdentifier().GetName();if (sheetName is SheetRangeIdentifier){this.lastSheetName = ((SheetRangeIdentifier)sheetName).GetLastSheetIdentifier().GetName();}else{this.lastSheetName = null;}}
public void SetBaseline(long clockTime) { t0 = clockTime; timeout = t0 + ticksAllowed; }
public MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request) {request = BeforeClientExecution(request);return ExecuteMoveAddressToVpc(request);}
public override string ToString(){string coll = collectionModel?.Name;if (coll != null){return string.Format(System.Globalization.CultureInfo.InvariantCulture, "LM {0} - {1}", getName(), coll);}else{return string.Format(System.Globalization.CultureInfo.InvariantCulture, "LM {0}", getName());}}
public DescribeLagsResponse DescribeLags(DescribeLagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance;return Invoke<DescribeLagsResponse>(request, options);}
public AreaEval Offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx) {if (_refEval == null) {return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}
public ShortBuffer Put(short[] src, int srcOffset, int shortCount){byteBuffer.Limit(limit * SizeOf.SHORT);byteBuffer.Position(position * SizeOf.SHORT);if (byteBuffer is ReadWriteDirectByteBuffer directBuffer){directBuffer.Put(src, srcOffset, shortCount);}else{((ReadWriteHeapByteBuffer)byteBuffer).Put(src, srcOffset, shortCount);}this.position += shortCount;return this;}
public void Initialize(string cat) { this._cat = cat; }
public void Write(int oneByte) { out.Write(oneByte); written++; }
public virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeImportImageTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeImportImageTasksResponseUnmarshaller.Instance;return Invoke<DescribeImportImageTasksResponse>(request, options);}
public ColumnInfoRecord(RecordInputStream in) {_firstCol = in.ReadUShort();_lastCol = in.ReadUShort();_colWidth = in.ReadUShort();_xfIndex = in.ReadUShort();_options = in.ReadUShort();switch (in.Remaining()) {case 2:field_6_reserved = in.ReadUShort();break;case 1:field_6_reserved = (short)in.ReadByte();break;case 0:field_6_reserved = 0;break;default:throw new RuntimeException("Unusual record size remaining=(" + in.Remaining() + ")");}}
public Status(IndexDiff diff){base();this.diff = diff;hasUncommittedChanges = !diff.getAdded().isEmpty() || !diff.getChanged().isEmpty() || !diff.getRemoved().isEmpty() || !diff.getMissing().isEmpty() || !diff.getModified().isEmpty() || !diff.getConflicting().isEmpty();clean = !hasUncommittedChanges && diff.getUntracked().isEmpty();}
public virtual CreateExperimentResponse CreateExperiment(CreateExperimentRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExperimentResponseUnmarshaller.Instance;return Invoke<CreateExperimentResponse>(request, options);}
public UnknownRecord Clone() {return base.Clone();}
public FloatBuffer Slice() {byteBuffer.Limit(limit * SizeOf.FLOAT);byteBuffer.Position(position * SizeOf.FLOAT);ByteBuffer bb = byteBuffer.Slice().Order(byteBuffer.Order);FloatBuffer result = new FloatToByteBufferAdapter(bb);byteBuffer.Clear();return result;}
public virtual DescribeSnapshotSchedulesResponse DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request) {request = BeforeClientExecution(request);return ExecuteDescribeSnapshotSchedules(request);}
public virtual ListImagesResponse ListImages(ListImagesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListImagesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;return Invoke<ListImagesResponse>(request, options);}
public class Diff{public int INSERT { get; set; }public int DELETE { get; set; }public int REPLACE { get; set; }public int NOOP { get; set; }public Diff(int ins, int del, int rep, int noop){INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}}
public string ToFormulaString(string[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[0]);buffer.Append(",");buffer.Append(operands[1]);return buffer.ToString();}
public static void setupEnvironment(string[] workbookNames, ForkedEvaluator[] evaluators) { WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.Length]; for (int i = 0; i < wbEvals.Length; i++) { wbEvals[i] = evaluators[i]._evaluator; } CollaboratingWorkbooksEnvironment.setup(workbookNames, wbEvals); }
public ListPhotoTagsRequest() : base("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
```cspublic RandomSamplingFacetsCollector(int sampleSize, long seed) : base(false){this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}
public virtual AllocateStaticIpResponse AllocateStaticIp(AllocateStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;return Invoke<AllocateStaticIpResponse>(request, options);}
public FeatRecord(RecordInputStream in) {futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.ReadShort();reserved1 = in.ReadByte();reserved2 = in.ReadInt32();int cref = in.ReadUShort();cbFeatData = in.ReadInt32();reserved3 = in.ReadShort();cellRefs = new CellRangeAddress[cref];for(int i=0; i<cellRefs.Length; i++) {cellRefs[i] = new CellRangeAddress(in);}switch(isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in);break;default:logger.Log( POILogger.ERROR, "Unknown Shared Feature " + isf_sharedFeatureType + " found!");}}
public RevCommit TryFastForward(RevCommit newCommit)where T : IOException, GitAPIException{Ref head = GetHead();ObjectId headId = head.GetObjectId();if (headId == null)throw new RefNotFoundException(string.Format(JGitText.get().refNotResolved, Constants.HEAD));RevCommit headCommit = Walk.LookupCommit(headId);if (Walk.IsMergedInto(newCommit, headCommit))return newCommit;string headName = GetHeadName(head);return TryFastForward(headName, headCommit, newCommit);}
public virtual CreateSnapshotScheduleResponse CreateSnapshotSchedule(CreateSnapshotScheduleRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke<CreateSnapshotScheduleResponse>(request, options);}
public Record Next() {if (!HasNext()) {throw new InvalidOperationException("Attempt to read past end of record stream");}_countRead++;return _list[_nextIndex++];}
public string ToString() { return RawParseUtils.decode(buf.ToArray()); }
public ListTablesRequest(string exclusiveStartTableName) {SetExclusiveStartTableName(exclusiveStartTableName);}
public EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request) {request = BeforeClientExecution(request);return ExecuteEnableAlarmActions(request);}
public Builder() : this(true) { }
public virtual bool Equals(object obj) { var other = obj as State; return is_final == other.is_final && labels.SequenceEqual(other.labels) && ReferenceEquals(this.states, other.states); }
public TokenStream Create(TokenStream input) {return new EnglishPossessiveFilter(input);}
public void ClearFormatting() {_string = CloneStringIfRequired();_string.ClearFormatting();addToSSTIfRequired();}
public int Get(int index, long[] arr, int off, int len) {Debug.Assert(len > 0, "len must be > 0 (got " + len + ")");Debug.Assert(index >= 0 && index < valueCount);len = Math.Min(len, valueCount - index);Array.Fill(arr, off, off + len, 0);return len;}
public virtual DeleteRouteResponseResponse DeleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseResponseUnmarshaller.Instance;return Invoke<DeleteRouteResponseResponse>(request, options);}
public string toPrivateString() {return format(true, false);}
public virtual CreatePresignedDomainUrlResponse CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance;return Invoke<CreatePresignedDomainUrlResponse>(request, options);}
public void Write(int oneChar) { DoWrite(new char[] { (char)oneChar }, 0, 1); }
public SSTRecord GetSSTRecord() { return sstRecord; }
public override string ToString() {return "term=" + term + ",field=" + field + ",value=" + valueToString() + ",docIDUpto=" + docIDUpto;}
public bool IsSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) { return bloomFilter.GetSaturation() > 0.9f; }
public Builder(bool ignoreCase) {this.ignoreCase = ignoreCase;}
public override string ToString() {return base.GetType().Name + "(maxBasicQueries: " + maxBasicQueries + ", queriesMade: " + queriesMade + ")";}
public virtual DeleteDataSourceResponse DeleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteDataSourceResponse>(request, options);}
public RebootNodeResponse RebootNode(RebootNodeRequest request){request = beforeClientExecution(request);return executeRebootNode(request);}
public void ProcessChildRecords() {ConvertRawBytesToEscherRecords();}
public virtual CreateOrUpdateTagsResponse CreateOrUpdateTags(CreateOrUpdateTagsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance;return Invoke<CreateOrUpdateTagsResponse>(request, options);}
public FileSnapshot GetSnapShot() { return snapShot; }
public Stream OpenResource(string resource){var stream = (clazz != null) ? clazz.ResourceManager.GetStream(resource) : loader.ResourceManager.GetStream(resource);if (stream == null){throw new FileNotFoundException("Resource not found: " + resource);}return stream;}
public override string ToString() {var sb = new StringBuilder(64);sb.Append(GetType().Name).Append(" [");sb.Append("sid=").Append(BitConverter.ToString(_sid));sb.Append(" size=").Append(_data.Length);sb.Append(" : ").Append(BitConverter.ToString(_data));sb.Append("]\n");return sb.ToString();}
public int NextIndex() {return index;}
public string ToQueryString(EscapeQuerySyntax escaper) { if (IsDefaultField(this.field)) { return "\"" + GetTermEscapeQuoted(escaper) + "\""; } else { return this.field + ":" + "\"" + GetTermEscapeQuoted(escaper) + "\""; } }
public CalcModeRecord Clone() {return Copy();}
public bool IsOutput() => output;
public virtual CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkInterfaceResponseUnmarshaller.Instance;return Invoke<CreateNetworkInterfaceResponse>(request, options);}
public void Serialize(LittleEndianOutput output) {output.WriteInt(field_1_password);}
public virtual StopDominantLanguageDetectionJobResponse StopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);}
public ECSMetadataServiceCredentialsFetcher WithConnectionTimeout(int milliseconds) {this.connectionTimeoutInMilliseconds = milliseconds;return this;}
public GetGatewayGroupResponse GetGatewayGroup(GetGatewayGroupRequest request) { request = BeforeClientExecution(request); return ExecuteGetGatewayGroup(request); }
public ReadOnlyFloatArrayBuffer Slice() { return new ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset + position); }
public static string Join(IEnumerable<string> parts, string separator, string lastSeparator) {StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.Count() - 1;foreach (string part in parts) {sb.Append(part);if (i == lastIndex - 1) {sb.Append(lastSeparator);} else if (i != lastIndex) {sb.Append(separator);}i++;}return sb.ToString();}
public override string ToString() { return "(" + a.ToString() + " AND " + b.ToString() + ")"; }
public ListSubscriptionsByTopicRequest(string topicArn, string nextToken) {SetTopicArn(topicArn); SetNextToken(nextToken);}
public byte ReadByte() { return bytes[pos--]; }
public virtual TerminateClientVpnConnectionsResponse TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<TerminateClientVpnConnectionsResponse>(request, options);}
public ReceiveMessageRequest(string queueUrl) {setQueueUrl(queueUrl);}
public void Serialize(BinaryWriter out) {out.Write(field_1_barSpace);out.Write(field_2_categorySpace);out.Write(field_3_formatFlags);}
public object Common(object output1, object output2) { return outputs.Common((T)output1, (T)output2); }
public virtual CreateVariableResponse CreateVariable(CreateVariableRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;return Invoke<CreateVariableResponse>(request, options);}
public static int Match(byte[] b, int ptr, byte[] src) {if (ptr + src.Length > b.Length)return -1;for (int i = 0; i < src.Length; i++, ptr++)if (b[ptr] != src[i])return -1;return ptr;}
public int FillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.GetInt(data, pos + size);size += 4;field_2_rectY1 = LittleEndian.GetInt(data, pos + size);size += 4;field_3_rectX2 = LittleEndian.GetInt(data, pos + size);size += 4;field_4_rectY2 = LittleEndian.GetInt(data, pos + size);size += 4;bytesRemaining -= size;if (bytesRemaining != 0) {throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);}return 8 + size + bytesRemaining;}
public CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request){request = BeforeClientExecution(request);return ExecuteCreateCloudFrontOriginAccessIdentity(request);}
public virtual bool IsNamespaceAware() { return (bool)this.GetFeature(XmlPullParser.Feature.ProcessNamespaces); }
public void SetOverridable(bool on) { overridable = on; }
public string GetClassName() { return className; }
public DirectoryReader GetIndexReader() {if (indexReader != null) {indexReader.incRef();}return indexReader;}
public int IndexOfKey(int key) {return Array.BinarySearch(mKeys, 0, mSize, key);}
public BlankRecord(RecordInputStream @in) {field_1_row = @in.ReadUShort();field_2_col = @in.ReadInt16();field_3_xf  = @in.ReadInt16();}
public long Length { get; set; }
public PasswordRecord(RecordInputStream @in) {field_1_password = @in.readShort();}
public Dictionary<TKey, TValue> Dictionary<TKey, TValue>(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || float.IsNaN(loadFactor)) {throw new ArgumentException("Load factor: " + loadFactor);}}
public void Run(){long lastReopenStartNS = Stopwatch.GetTimestamp();while (!finish){while (!finish){reopenLock.Enter();try{bool hasWaiting = waitingGen > searchingGen;long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - Stopwatch.GetTimestamp();if (sleepNS > 0){reopenCond.Wait(TimeSpan.FromTicks(sleepNS));}else{break;}}catch (InterruptedException ie){Thread.CurrentThread.Interrupt();return;}finally{reopenLock.Exit();}}if (finish){break;}lastReopenStartNS = Stopwatch.GetTimestamp();refreshStartGen = writer.GetMaxCompletedSequenceNumber();try{manager.MaybeRefreshBlocking();}catch (IOException ioe){throw new RuntimeException(ioe);}}}
public DeleteLoginProfileRequest(string userName) { SetUserName(userName); }
public T PollFirst() { return (size == 0) ? default(T) : RemoveFirstImpl(); }
public CreatePhotoRequest() : base("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto"){this.Protocol = ProtocolType.HTTPS;}
public string getName() { return "resolve"; }
public int findEndOffset(StringBuilder buffer, int start) { if (start > buffer.Length || start < 0) return start; int offset, count = maxScan; for (offset = start; offset < buffer.Length && count > 0; count--) { if (boundaryChars.Contains(buffer[offset])) return offset; offset++; } return start; }
public void SetObjectChecker(ObjectChecker oc) {objCheck = oc;}
public BaseRef(AreaEval ae){_refEval = null;_areaEval = ae;_firstRowIndex = ae.GetFirstRow();_firstColumnIndex = ae.GetFirstColumn();_height = ae.GetLastRow() - ae.GetFirstRow() + 1;_width = ae.GetLastColumn() - ae.GetFirstColumn() + 1;}
public virtual CreateVpcEndpointResponse CreateVpcEndpoint(CreateVpcEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return Invoke<CreateVpcEndpointResponse>(request, options);}
public DeregisterWorkspaceDirectoryResponse DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {request = BeforeClientExecution(request);return ExecuteDeregisterWorkspaceDirectory(request);}
public ChartFRTInfoRecord(RecordInputStream in) {rt = in.ReadShort();grbitFrt = in.ReadShort();verOriginator = in.ReadByte();verWriter = in.ReadByte();int cCFRTID = in.ReadShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++) {rgCFRTID[i] = new CFRTID(in);}}
public Merger NewMerger(Repository db) {return new OneSide(db, treeIndex);}
public virtual CreateDataSourceFromRedshiftResponse CreateDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDataSourceFromRedshiftRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDataSourceFromRedshiftResponseUnmarshaller.Instance;return Invoke<CreateDataSourceFromRedshiftResponse>(request, options);}
public void ClearDFA(){for (int d = 0; d < decisionToDFA.Length; d++){decisionToDFA[d] = new DFA(atn.GetDecisionState(d), d);}}
public void RemoveName(string name) {int index = GetNameIndex(name);RemoveName(index);}
public string ToString() { var buffer = new StringBuilder(); buffer.Append("[RightMargin]\n"); buffer.Append("    .margin               = " ).Append(" (" ).Append( GetMargin() ).Append( " )\n" ); buffer.Append("[/RightMargin]\n"); return buffer.ToString(); }
public RefreshAllRecord clone() { return copy(); }
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) : base(queryConfig) {this.Add(new WildcardQueryNodeProcessor());this.Add(new MultiFieldQueryNodeProcessor());this.Add(new FuzzyQueryNodeProcessor());this.Add(new RegexpQueryNodeProcessor());this.Add(new MatchAllDocsQueryNodeProcessor());this.Add(new OpenRangeQueryNodeProcessor());this.Add(new PointQueryNodeProcessor());this.Add(new PointRangeQueryNodeProcessor());this.Add(new TermRangeQueryNodeProcessor());this.Add(new AllowLeadingWildcardProcessor());this.Add(new AnalyzerQueryNodeProcessor());this.Add(new PhraseSlopQueryNodeProcessor());this.Add(new BooleanQuery2ModifierNodeProcessor());this.Add(new NoChildOptimizationQueryNodeProcessor());this.Add(new RemoveDeletedQueryNodesProcessor());this.Add(new RemoveEmptyNonLeafQueryNodeProcessor());this.Add(new BooleanSingleChildOptimizationQueryNodeProcessor());this.Add(new DefaultPhraseSlopQueryNodeProcessor());this.Add(new BoostQueryNodeProcessor());this.Add(new MultiTermRewriteMethodProcessor());}
public string FormatAsString(string sheetName, bool useAbsoluteAddress) {StringBuilder sb = new StringBuilder();if (sheetName != null) {sb.Append(SheetNameFormatter.Format(sheetName));sb.Append("!");}CellReference cellRefFrom = new CellReference(GetFirstRow(), GetFirstColumn(), useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(GetLastRow(), GetLastColumn(), useAbsoluteAddress, useAbsoluteAddress);sb.Append(cellRefFrom.FormatAsString());if (!cellRefFrom.Equals(cellRefTo) || IsFullColumnRange() || IsFullRowRange()) {sb.Append(':');sb.Append(cellRefTo.FormatAsString());}return sb.ToString();}
public byte Put(int index, byte value) {throw new ReadOnlyBufferException();}
public void Mode(int m) {_mode = m;}
public ShortBuffer Slice() { return new ReadWriteShortArrayBuffer(Remaining(), backingArray, offset + position); }
public void Set(int index, long n) {if (count < index)throw new IndexOutOfRangeException(index);else if (count == index)Add(n);elseentries[index] = n;}
public byte[] PutFloat(float value) {throw new ReadOnlyBufferException();}
public static double Max(double[] values) { double max = double.MinValue; foreach (double value in values) { max = Math.Max(max, value); } return max; }
public UpdateRepoWebhookRequest() : base("cr", "2016-06-07", "UpdateRepoWebhook", "cr") { SetUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]"); SetMethod(MethodType.POST); }
public DeleteAttributesRequest(string domainName, string itemName, List<Attribute> attributes, UpdateCondition expected) {SetDomainName(domainName);SetItemName(itemName);SetAttributes(attributes);SetExpected(expected);}
public override string ToString(){StringBuilder sb = new StringBuilder();sb.Append("[SXPI]\n");for (int i = 0; i < _fieldInfos.Length; i++){sb.Append("    item[").Append(i).Append("]=");_fieldInfos[i].AppendDebugInfo(sb);sb.Append('\n');}sb.Append("[/SXPI]\n");return sb.ToString();}
public bool IsSuccessful() {if (mergeResult != null)return mergeResult.GetMergeStatus().IsSuccessful();else if (rebaseResult != null)return rebaseResult.Status.IsSuccessful();return true;}
public void SetBytesValue(byte[] value) {setBytesValue(new BytesRef(value));}
public virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeConnectionsResponse>(request, options);}
public DeletePhotosRequest() : base("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto") { SetProtocol(ProtocolType.HTTPS); }
public void Add(E obj) {iterator.Add(obj);subList.sizeChanged(true);end++;}
public static ByteBuffer Allocate(int capacity) {if (capacity < 0) {throw new ArgumentException();}return new ReadWriteHeapByteBuffer(capacity);}
public SrndQuery GetSubQuery(int qn) { return queries[qn]; }
public float CurrentScore(int docId, string field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) { if (numPayloadsSeen == 0) { return currentPayloadScore; } else { return Math.Min(currentPayloadScore, currentScore); } }
public string ToString(){StringBuilder sb = new StringBuilder();sb.Append("[BLANK]\n");sb.Append("    row= ").Append(HexDump.ShortToHex(GetRow())).Append("\n");sb.Append("    col= ").Append(HexDump.ShortToHex(GetColumn())).Append("\n");sb.Append("    xf = ").Append(HexDump.ShortToHex(GetXFIndex())).Append("\n");sb.Append("[/BLANK]\n");return sb.ToString();}
public virtual DescribeLogPatternResponse DescribeLogPattern(DescribeLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;return Invoke<DescribeLogPatternResponse>(request, options);}
public virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual GetPhoneNumberSettingsResponse GetPhoneNumberSettings(GetPhoneNumberSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;return Invoke<GetPhoneNumberSettingsResponse>(request, options);}
public ObjectId GetData() => data;
public bool IsDirect() {return false;}
public DeleteServerCertificateRequest(string serverCertificateName) { SetServerCertificateName(serverCertificateName); }
public String Append(double d) {RealToString.GetInstance().AppendDouble(this, d);return this;}
public virtual GetEvaluationResponse GetEvaluation(GetEvaluationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEvaluationResponseUnmarshaller.Instance;return Invoke<GetEvaluationResponse>(request, options);}
public LinkedDataRecord GetDataName() { return dataName; }
public bool Find(int start){findPos = start;if (findPos < regionStart){findPos = regionStart;}else if (findPos >= regionEnd){matchFound = false;return false;}matchFound = FindImpl(address, input, findPos, matchOffsets);if (matchFound){findPos = matchOffsets[1];}return matchFound;}
public GetLifecyclePolicyPreviewResponse GetLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) {request = BeforeClientExecution(request);return ExecuteGetLifecyclePolicyPreview(request);}
public SinglePositionTokenStream(string word){termAtt = AddAttribute(typeof(CharTermAttribute)) as ICharTermAttribute;posIncrAtt = AddAttribute(typeof(PositionIncrementAttribute)) as IPositionIncrementAttribute;this.word = word;returned = true;}
public void Serialize(LittleEndianOutput output) {output.WriteShort(field_1_print_gridlines);}
public String ToString() {var s = new StringBuilder();s.Append(Constants.typeString(getType()));s.Append(' ');s.Append(name());s.Append(' ');s.Append(commitTime);s.Append(' ');appendCoreFlags(s);return s.ToString();}
public LsRemoteCommand SetRemote(string remote) {CheckCallable();this.remote = remote;return this;}
public void CollapseRow(int rowNumber) {int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int nextRowIx = WriteHidden(rowRecord, startRow);RowRecord row = GetRow(nextRowIx);if (row == null) {row = CreateRow(nextRowIx);InsertRow(row);}row.SetColapsed(true);}
public AssociateSkillGroupWithRoomResponse AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request) { request = BeforeClientExecution(request); return ExecuteAssociateSkillGroupWithRoom(request); }
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[SERIESLIST]\n");buffer.Append("    .seriesNumbers= ").Append(" (").Append( String.Join(", ", getSeriesNumbers()) ).Append(" )");buffer.Append("\n");buffer.Append("[/SERIESLIST]\n");return buffer.ToString();}
public QueryConfigHandler GetQueryConfigHandler() {return this.queryConfig;}
public string GetClassArg() {if (originalArgs != null) {string className = originalArgs[CLASS_NAME];if (className != null) {return className;}}return this.GetType().Name;}
