public void serialize(LittleEndianOutput out1) { out1.writeShort(field_1_vcenter); }
public void addAll(NGit.Util.BlockList<T> src){if (src.size == 0){return;}int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++){addAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);}if (src.tailBlkIdx != 0){addAll(src.tailBlock, 0, src.tailBlkIdx);}}
public void writeByte(byte b){if (outerInstance.upto == outerInstance.blockSize){if (outerInstance.currentBlock != null){outerInstance.blocks.add(outerInstance.currentBlock);outerInstance.blockEnd.add(outerInstance.upto);}outerInstance.currentBlock = new byte[outerInstance.blockSize];outerInstance.upto = 0;}outerInstance.currentBlock[outerInstance.upto++] = (byte)b;}
public virtual ObjectId GetObjectId(){return objectId;}
public abstract DeleteDomainEntryResponse deleteDomainEntry(DeleteDomainEntryRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteDomainEntryRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteDomainEntryResponseUnmarshaller.INSTANCE);return invoke(new DeleteDomainEntryResponse(), request, options);}
public long ramBytesUsed(){return fst == null ? 0 : fst.getSizeInBytes();}
public String GetFullMessage() { byte[] raw = buffer; int msgB = RawParseUtils.TagMessage(raw, 0); if (msgB < 0) { return ""; } Encoding enc = RawParseUtils.ParseEncoding(raw); return RawParseUtils.Decode(enc, raw, msgB, raw.length); }
public POIFSFileSystem() {HeaderBlock headerBlock = new HeaderBlock(bigBlockSize);_property_table = new PropertyTable(headerBlock);_documents = new ArrayList();_root = null;}
public void Init(int address) { slice = pool.Buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT]; java.util.Objects.requireNonNull(slice, "slice must not be null"); upto = address & ByteBlockPool.BYTE_BLOCK_MASK; offset0 = address; java.util.Objects.requireNonNullElseGet(() -> { Debug.Assert(upto < slice.Length); return slice; }, () -> null); }
public abstract class NGitApiSubmoduleAddCommand {protected String path;public abstract NGitApiSubmoduleAddCommand setPath(String path);}
public abstract ListIngestionsResponse ListIngestions(ListIngestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;return Invoke<ListIngestionsResponse>(request, options);}
public QueryParserTokenManager(ICharStream stream, int lexState) { super(stream); SwitchTo(lexState); }
public abstract GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetShardIteratorRequestMarshaller.Instance;options.ResponseUnmarshaller = GetShardIteratorResponseUnmarshaller.Instance;return Invoke<GetShardIteratorResponse>(request, options);}
public ModifyStrategyRequest() {super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis", "openAPI");Method = MethodType.POST;}
public boolean ready() {synchronized (@lock) {if (@in == null) {throw new java.io.IOException("InputStreamReader is closed");}try {return bytes.hasRemaining() || @in.available() > 0;} catch (java.io.IOException) {return false;}}}
protected EscherOptRecord getOptRecord(){return _optRecord;}
public int read(byte[] buffer, int offset, int length) { synchronized (this) { if (buffer == null) { throw new IllegalArgumentException("buffer == null"); } java.util.Arrays.checkOffsetAndCount(buffer.length, offset, length); if (length == 0) { return 0; } int copylen = count - pos < length ? count - pos : length; for (int i = 0; i < copylen; i++) { buffer[offset + i] = (byte) this.buffer[pos + i]; } pos += copylen; return copylen; } }
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) { this.sentenceOp = sentenceOp; }
public void print(String str){write(str != null ? str : Sharpen.StringHelper.GetValueOf((Object)null));}
Output:public class NotImplementedFunctionException extends Exception {private final String functionName;public NotImplementedFunctionException(String functionName, Throwable cause) {super(functionName, cause);this.functionName = functionName;}public String getFunctionName() {return functionName;}}
public V next(){return this.nextEntry().value;}
public final void readBytes(byte[] b, int offset, int len, boolean useBuffer) {int available = bufferLength - bufferPosition;if (len <= available) {if (len > 0) {System.arraycopy(m_buffer, bufferPosition, b, offset, len);}bufferPosition += len;} else {if (available > 0) {System.arraycopy(m_buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize) {refill();if (bufferLength < len) {System.arraycopy(m_buffer, 0, b, offset, bufferLength);throw new EndOfStreamException("read past EOF: " + this);} else {System.arraycopy(m_buffer, 0, b, offset, len);bufferPosition = len;}} else {long after = bufferStart + bufferPosition + len;if (after > length) {throw new EndOfStreamException("read past EOF: " + this);}readInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;}}}
public virtual TagQueueResponse tagQueue(TagQueueRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = TagQueueRequestMarshaller.Instance; options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance; return Invoke<TagQueueResponse>(request, options); }
public void Remove() { throw new UnsupportedOperationException(); }
public abstract ModifyCacheSubnetGroupResponse modifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ModifyCacheSubnetGroupRequestMarshaller.Instance);options.setResponseUnmarshaller(ModifyCacheSubnetGroupResponseUnmarshaller.Instance);return invoke<ModifyCacheSubnetGroupResponse>(request, options);}
public void SetParams(String paramsStr) { super.SetParams(paramsStr); culture = ""; String ignore; StringTokenizer st = new StringTokenizer(paramsStr, ","); if (st.hasMoreTokens()) culture = st.nextToken(); if (st.hasMoreTokens()) culture += "-" + st.nextToken(); if (st.hasMoreTokens()) ignore = st.nextToken(); }
public DeleteDocumentationVersionResponse deleteDocumentationVersion(DeleteDocumentationVersionRequest request) {var options = new InvokeOptions();options.requestMarshaller = DeleteDocumentationVersionRequestMarshaller.Instance;options.responseUnmarshaller = DeleteDocumentationVersionResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationVersionResponse>(request, options);}
### Key actions:- Preserving method signature and return type- Preserving method name- Preserving variable names and identifiers- Preserving method parameter types and names- Preserving sequence of control structures- Preserving conditional logic- Preserving equality checks- Preserving loop constructspublic boolean equals(Object obj) { if (!(obj instanceof FacetLabel)) { return false; } FacetLabel other = (FacetLabel) obj; if (Length != other.Length) { return false; } for (int i = Length - 1; i >= 0; i--) { if (!Components[i].equals(other.Components[i], StringComparison.Ordinal)) { return false; } } return true; }
public GetInstanceAccessDetailsResponse getInstanceAccessDetails(GetInstanceAccessDetailsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetInstanceAccessDetailsRequestMarshaller.Instance);options.setResponseUnmarshaller(GetInstanceAccessDetailsResponseUnmarshaller.Instance);return invoke(request, options);}
public HSSFPolygon createPolygon(HSSFChildAnchor anchor) { HSSFPolygon shape = new HSSFPolygon(this, anchor); shape.setParent(this); shape.setAnchor(anchor); shapes.add(shape); onCreate(shape); return shape; }
public String GetSheetName(int sheetIndex) { return GetBoundSheetRec(sheetIndex).Sheetname; }
public virtual GetDashboardResponse GetDashboard(GetDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDashboardResponseUnmarshaller.Instance;return Invoke<GetDashboardResponse>(request, options);}
public virtual AssociateSigninDelegateGroupsWithAccountResponse associateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.requestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.responseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return invoke<AssociateSigninDelegateGroupsWithAccountResponse>(request, options);}
public void AddMultipleBlanks(MulBlankRecord mbr){for (int j = 0; j < mbr.NumColumns; j++){BlankRecord br = new BlankRecord();br.Column = j + mbr.FirstColumn;br.Row = mbr.Row;br.XFIndex = (mbr.GetXFAt(j));InsertCell(br);}}
public static String quote(String @string) {StringBuilder sb = new StringBuilder();sb.append("\\Q");int apos = 0;int k;while ((k = @string.indexOf("\\E", apos)) >= 0) {sb.append(@string.substring(apos, k + 2)).append("\\\\E\\Q");apos = k + 2;}return sb.append(@string.substring(apos)).append("\\E").toString();}
public java.nio.ByteBuffer putInt(int value) {throw new java.nio.ReadOnlyBufferException();}
public ArrayPtg(Object[][] values2d) {int nColumns = values2d[0].length;int nRows = values2d.length;_nColumns = (short)nColumns;_nRows = (short)nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++) {Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++) {vv[GetValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public abstract GetIceServerConfigResponse getIceServerConfig(GetIceServerConfigRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetIceServerConfigRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetIceServerConfigResponseUnmarshaller.getInstance());return invoke(new TypeToken<GetIceServerConfigResponse>(){}.getType(), request, options);}
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append(GetValueAsString());sb.append("]");return sb.toString();}
@Overridepublic String toString(String field) {return "ToChildBlockJoinQuery (" + _parentQuery + ")";}
public void IncRef(){refCount.incrementAndGet();}
public abstract UpdateConfigurationSetSendingEnabledResponse updateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request){var options = new InvokeOptions();options.requestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.instance;options.responseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.instance;return invoke<UpdateConfigurationSetSendingEnabledResponse>(request, options);}
public int GetNextXBATChainOffset() { return GetXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE; }
public void multiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.GetInstance(Math.abs(pow10));if (pow10 < 0) {mulShift(tp._divisor, tp._divisorShift);} else {mulShift(tp._multiplicand, tp._multiplierShift);}}
public String toString(){StringBuilder builder = new StringBuilder();int length = this.getLength();builder.append(File.separatorChar);for (int i = 0; i < length; i++){builder.append(this.getComponent(i));if (i < (length - 1)){builder.append(File.separatorChar);}}return builder.toString();}
public void withFetcher(ECSMetadataServiceCredentialsFetcher fetcher){this.fetcher = fetcher;this.fetcher.setRoleName(roleName);}
public void setProgressMonitor(ProgressMonitor pm){this.progressMonitor = pm;}
public void reset() { if (!first) { ptr = 0; if (!eof) { parseEntry(); } } }
public E previous(){if (iterator.previousIndex() >= start){return iterator.previous();}throw new NoSuchElementException();}
public String getNewPrefix() { return this.newPrefix; }
public abstract int indexOfValue(int value);for (int i = 0; i < mSize; i++) {if (mValues[i] == value) {return i;}}return -1;
import java.util.*;public List<CharsRef> UniqueStems(char[] word, int length) {List<CharsRef> stems = Stem(word, length);if (stems.size() < 2) {return stems;}CharArraySet terms = new CharArraySet(Collections.unmodifiableSet(dictionary.ignoreCase ? TrieHelper.parseCharArrayDictionary(dictionary.getDictionary(), "UTF-8") : dictionary.getDictionary()), 8, LuceneVersion.LUCENE_CURRENT);List<CharsRef> deduped = new ArrayList<>();for (CharsRef s : stems) {if (!terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}
public virtual GetGatewayResponsesResponse GetGatewayResponses(GetGatewayResponsesRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance; options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance; return Invoke<GetGatewayResponsesResponse>(request, options); }
public void setPosition(long position){currentBlockIndex = (int)(position >> outerInstance.blockBits);currentBlock = outerInstance.blocks[currentBlockIndex];currentBlockUpto = (int)(position & outerInstance.blockMask);}
public long skip(long n) {int s = (int)Math.min(Available(), Math.max(0, n));ptr += s;return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig){this._bootstrapActionConfig = bootstrapActionConfig;}
public void serialize(LEDataOutput out1) { out1.writeShort(field_1_row); out1.writeShort(field_2_col); out1.writeShort(field_3_flags); out1.writeShort(field_4_shapeid); out1.writeShort(field_6_author.length); out1.writeByte(field_5_hasMultibyte ? 0x01 : 0x00); if (field_5_hasMultibyte) { StringUtil.putUnicodeLE(field_6_author, out1); } else { StringUtil.putCompressedUnicode(field_6_author, out1); } if (field_7_padding != null) { out1.writeByte(Integer.parseInt(field_7_padding, Locale.ROOT)); } }
public int lastIndexOf(String str){return lastIndexOf(str, count);}
@Overridepublic boolean add(E object){return addLastImpl(object);}
public void unsetSection(String section, String subsection) {ConfigSnapshot src;ConfigSnapshot res;do {src = state.get();res = unsetSection(src, section, subsection);} while (!state.compareAndSet(src, res));}
public String getTagName(){return tagName;}
public void AddSubRecord(int index, SubRecord element) { subrecords.add(index, element); }
public synchronized boolean remove(Object object){synchronized(mutex){return c.remove(object);}}
public DoubleMetaphoneFilter create(TokenStream input){return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long Length(){return InCoreLength();}
public void setValue(boolean newValue){value = newValue;}
public Pair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}
public int Get(int i) { if (count <= i) { throw new IndexOutOfBoundsException(i); } return entries[i]; }
public CreateRepoRequest() {super("cr", "2016-06-07", "CreateRepo", "cr", "openAPI");this.UriPattern = "/repos";this.Method = MethodType.PUT;}
public boolean isDeltaBaseAsOffset(){return deltaBaseAsOffset;}
public void remove() { if (expectedModCount == list.modCount) { if (lastLink != null) { java.util.LinkedList.Link<ET> next_1 = lastLink.next; java.util.LinkedList.Link<ET> previous_1 = lastLink.previous; next_1.previous = previous_1; previous_1.next = next_1; if (lastLink == link) { pos--; } link = previous_1; lastLink = null; expectedModCount++; list._size--; list.modCount++; } else { throw new java.util.InvalidOperationException(); } } else { throw new java.util.ConcurrentModificationException(); } }
public MergeShardsResponse mergeShards(MergeShardsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(MergeShardsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(MergeShardsResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public virtual AllocateHostedConnectionResponse AllocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;return Invoke<AllocateHostedConnectionResponse>(request, options);}
public int getBeginIndex(){return start;}
public static WeightedTerm[] GetTerms(Query query) { return GetTerms(query, false); }
public ByteBuffer compact() { throw new ReadOnlyBufferException(); }
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (int)((byte0 >> 2) & 0xFF);int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | ((byte1 >> 4) & 0xFF);int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | ((byte2 >> 6) & 0xFF);values[valuesOffset++] = byte2 & 63;}}
public String GetHumanishName() { if (String.Empty.Equals(GetPath()) || GetPath() == null) { throw new ArgumentException(); } String s = GetPath(); String[] elements; if ("file".Equals(scheme) || LOCAL_FILE.matcher(s).matches()) { elements = s.split("[\\" + System.IO.Path.DirectorySeparatorChar + "/]"); } else { elements = s.split("/"); } if (elements.length == 0) { throw new ArgumentException(); } String result = elements[elements.length - 1]; if (Constants.DOT_GIT.equals(result)) { result = elements[elements.length - 2]; } else { if (result.endsWith(Constants.DOT_GIT_EXT)) { result = result.substring(0, result.length() - Constants.DOT_GIT_EXT.length); } } return result; }
public abstract DescribeNotebookInstanceLifecycleConfigResponse describeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance; return invoke<DescribeNotebookInstanceLifecycleConfigResponse>(request, options); }
public String getAccessKeySecret() { return AccessSecret; }
public CreateVpnConnectionResponse createVpnConnection(CreateVpnConnectionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateVpnConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnConnectionResponseUnmarshaller.Instance;return Invoke<CreateVpnConnectionResponse>(request, options);}
public DescribeVoicesResponse describeVoices(DescribeVoicesRequest request) {var options = new InvokeOptions();options.requestMarshaller = DescribeVoicesRequestMarshaller.INSTANCE;options.responseUnmarshaller = DescribeVoicesResponseUnmarshaller.INSTANCE;return Invoke<DescribeVoicesResponse>(request, options);}
public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance;return Invoke<ListMonitoringExecutionsResponse>(request, options);}
public DescribeJobRequest(String vaultName, String jobId) {_vaultName = vaultName;_jobId = jobId;}
public EscherRecord getEscherRecord(int index) { return escherRecords[index]; }
public GetApisResponse getApis(GetApisRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetApisRequestMarshaller.Instance);options.setResponseUnmarshaller(GetApisResponseUnmarshaller.Instance);return invoke(new TypeReference<GetApisResponse>() {}, request, options);}
public DeleteSmsChannelResponse deleteSmsChannel(DeleteSmsChannelRequest request){InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteSmsChannelRequestMarshaller.Instance);options.setResponseUnmarshaller(DeleteSmsChannelResponseUnmarshaller.Instance);return invoke(new TypeReference<DeleteSmsChannelResponse>(){}, request, options);}
public abstract TrackingRefUpdate getTrackingRefUpdate(){return trackingRefUpdate;}
public void print(boolean b){print(Boolean.toString(b));}
public IQueryNode getChild(){return getChildren()[0];}
public NotIgnoredFilter(int workdirTreeIndex) { this.index = workdirTreeIndex; }
public AreaRecord(RecordInputStream in1) { field_1_formatFlags = in1.ReadShort(); }
public GetThumbnailRequest() { super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto", "openAPI"); Protocol = ProtocolType.HTTPS; }
public native DescribeTransitGatewayVpcAttachmentsResponse describeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request);
public virtual PutVoiceConnectorStreamingConfigurationResponse PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = PutVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;return Invoke<PutVoiceConnectorStreamingConfigurationResponse>(request, options);}
public OrdRange getOrdRange(String dim) {OrdRange result;prefixToOrdRange.TryGetValue(dim, out result);return result;}
public String toString() {String symbol = "";if (startIndex >= 0 && startIndex < ((ICharStream) inputStream).getSize()) {symbol = ((ICharStream) inputStream).getText(Interval.of(startIndex, startIndex));symbol = Utils.escapeWhitespace(symbol, false);}return String.format(Locale.ROOT, "%s('%s')", Antlr4.Runtime.LexerNoViableAltException.class.getName(), symbol);}
public E peek() { return peekFirstImpl(); }
public CreateWorkspacesResponse createWorkspaces(CreateWorkspacesRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance; options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance; return Invoke<CreateWorkspacesResponse>(request, options); }
@Overridepublic Object Clone() {NumberFormatIndexRecord rec = new NumberFormatIndexRecord();rec.field_1_formatIndex = this.field_1_formatIndex;return rec;}
public DescribeRepositoriesResponse describeRepositories(DescribeRepositoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.INSTANCE;options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.INSTANCE;return invoke<DescribeRepositoriesResponse>(request, options);}
public SparseIntArray(int initialCapacity){initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}
public TokenStream create(TokenStream input) { return new HyphenatedWordsFilter(input); }
public CreateDistributionWithTagsResponse createDistributionWithTags(CreateDistributionWithTagsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance; options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance; return invoke<CreateDistributionWithTagsResponse>(request, options); }
public RandomAccessFile(String fileName, String mode) throws IOException { super(new java.io.File(fileName), mode); }
public DeleteWorkspaceImageResponse deleteWorkspaceImage(DeleteWorkspaceImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteWorkspaceImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteWorkspaceImageResponseUnmarshaller.Instance;return Invoke<DeleteWorkspaceImageResponse>(request, options);}
public static String toHex(int value){return toHex((long)value, 8);}
public UpdateDistributionResponse updateDistribution(UpdateDistributionRequest request){InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateDistributionRequestMarshaller.Instance);options.setResponseUnmarshaller(UpdateDistributionResponseUnmarshaller.Instance);return invoke<UpdateDistributionResponse>(request, options);}
private HSSFColor getColor(short index){if (index == HSSFColor.Automatic.Index)return HSSFColor.Automatic.GetInstance();else{byte[] b = palette.GetColor(index);if (b != null){return new CustomColor(index, b);}}return null;}
public ValueEval evaluate(ValueEval[] operands, int srcRow, int srcCol) throws NotImplementedFunctionException {throw new NotImplementedFunctionException(_functionName);}
public void serialize(ILittleEndianOutput out1){out1.writeShort((short)field_1_number_crn_records);out1.writeShort((short)field_2_sheet_table_index);}
public DescribeDBEngineVersionsResponse DescribeDBEngineVersions() { return DescribeDBEngineVersions(new DescribeDBEngineVersionsRequest()); }
public class FormatRun {private short _character;private short _fontIndex;public FormatRun(short character, short fontIndex){this._character = character;this._fontIndex = fontIndex;}}
public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte)(ch >> 8);result[resultIndex++] = (byte)ch;}return result;}
public abstract UploadArchiveResponse UploadArchive(UploadArchiveRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;return Invoke<UploadArchiveResponse>(request, options);}
public abstract List<IToken> getHiddenTokensToLeft(int tokenIndex){return getHiddenTokensToLeft(tokenIndex, -1);}
public boolean equals(Object obj){if (this == obj){return true;}if (!super.equals(obj)){return false;}if (getClass() != obj.getClass()){return false;}AutomatonQuery other = (AutomatonQuery)obj;if (!m_compiled.equals(other.m_compiled)){return false;}if (m_term == null){if (other.m_term != null){return false;}}else if (!m_term.equals(other.m_term)){return false;}return true;}
public SpanQuery makeSpanClause(){List<SpanQuery> spanQueries = new ArrayList<>();for (var wsq : weightBySpanQuery){wsq.getKey().setBoost(wsq.getValue());spanQueries.add(wsq.getKey());}if (spanQueries.size() == 1)return spanQueries.get(0);else{return new SpanOrQuery(spanQueries.toArray(new SpanQuery[0]));}}
public StashCreateCommand StashCreate(){return new StashCreateCommand(repo);}
public FieldInfo FieldInfo(String fieldName) { FieldInfo ret; byName.TryGetValue(fieldName, out ret); return ret; }
public DescribeEventSourceResponse describeEventSource(DescribeEventSourceRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeEventSourceRequestMarshaller.Instance);options.setResponseUnmarshaller(DescribeEventSourceResponseUnmarshaller.Instance);return invoke(DescribeEventSourceResponse.class, request, options);}
public virtual GetDocumentAnalysisResponse GetDocumentAnalysis(GetDocumentAnalysisRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentAnalysisResponseUnmarshaller.Instance;return Invoke<GetDocumentAnalysisResponse>(request, options);}
public CancelUpdateStackResponse cancelUpdateStack(CancelUpdateStackRequest request){var options = new InvokeOptions();options.requestMarshaller = CancelUpdateStackRequestMarshaller.Instance;options.responseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;return invoke<CancelUpdateStackResponse>(request, options);}
public abstract class ModifyLoadBalancerAttributesResponse{}public class ModifyLoadBalancerAttributesRequest{}public class InvokeOptions{}public class ModifyLoadBalancerAttributesRequestMarshaller{}public class ModifyLoadBalancerAttributesResponseUnmarshaller{}public abstract class ModifyLoadBalancerAttributesResponse{public virtual ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;return Invoke<ModifyLoadBalancerAttributesResponse>(request, options);}}
public SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = SetInstanceProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetInstanceProtectionResponseUnmarshaller.Instance;return Invoke<SetInstanceProtectionResponse>(request, options);}
public abstract ModifyDBProxyResponse modifyDBProxy(ModifyDBProxyRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance; options.ResponseUnmarshaller = ModifyDBProxyResponseUnmarshaller.Instance; return Invoke<ModifyDBProxyResponse>(request, options); }
public void add(char[] output, int offset, int len, int endOffset, int posLength) {if (count == outputs.length) {CharsRef[] next = new CharsRef[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];System.arraycopy(outputs, 0, next, 0, count);outputs = next;}if (count == endOffsets.length) {int[] next = new int[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];System.arraycopy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.length) {int[] next = new int[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];System.arraycopy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null) {outputs[count] = new CharsRef();}outputs[count].copyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}
public FetchLibrariesRequest() { super("CloudPhoto", "2017-07-11", "FetchLibraries", "cloudphoto", "openAPI");this.setProtocol(ProtocolType.HTTPS); }Please note that in Java, the keyword 'base' is replaced by 'super' to call the constructor of the superclass. Also, in Java, to set the Protocol, a setter method is used instead of directly assigning it, as Java follows the encapsulation principle.
public boolean exists() { return objects.exists(); }
public FilterOutputStream(java.io.OutputStream out){this.out = out;}
public ScaleClusterRequest() { super("CS", "2015-12-15", "ScaleCluster", "cs", "openAPI"); UriPattern = "/clusters/[ClusterId]"; Method = MethodType.PUT; }
public IDataValidationConstraint CreateTimeConstraint(int operatorType, String formula1, String formula2){return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2);}
public class ListObjectParentPathsResponse {}public class ListObjectParentPathsRequest {}public class InvokeOptions {}public class ListObjectParentPathsRequestMarshaller {}public class ListObjectParentPathsResponseUnmarshaller {}public ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListObjectParentPathsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectParentPathsResponseUnmarshaller.Instance;return Invoke<ListObjectParentPathsResponse>(request, options);}
public DescribeCacheSubnetGroupsResponse describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance; return Invoke<DescribeCacheSubnetGroupsResponse>(request, options); }
public void setSharedFormula(boolean flag){field_5_options = sharedFormula.setShortBoolean(field_5_options, flag);}
public abstract boolean isReuseObjects(){return reuseObjects;}
public IErrorNode addErrorNode(IToken badToken) {ErrorNodeImpl t = new ErrorNodeImpl(badToken);addChild(t);t.setParent(this);return t;}
public LatvianStemFilterFactory(Map<String, String> args) throws IllegalArgumentException { super(args); if (args.size() > 0) { throw new IllegalArgumentException("Unknown parameters: " + args); } }
public RemoveSourceIdentifierFromSubscriptionResponse removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance;options.ResponseUnmarshaller = RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance;return invoke<RemoveSourceIdentifierFromSubscriptionResponse>(request, options);}
public static TokenFilterFactory ForName(String name, Map<String, String> args){return loader.NewInstance(name, args);}
public AddAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto", "openAPI");this.Protocol = ProtocolType.HTTPS;}
public GetThreatIntelSetResponse GetThreatIntelSet(GetThreatIntelSetRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;return Invoke<GetThreatIntelSetResponse>(request, options);}
public AndTreeFilter.Binary clone(){return new AndTreeFilter.Binary(a.clone(), b.clone());}
public @Override boolean equals(Object o){return o instanceof ArmenianStemmer;}
public final boolean hasArray(){return protectedHasArray();}
public abstract UpdateContributorInsightsResponse updateContributorInsights(UpdateContributorInsightsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.INSTANCE;options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.INSTANCE;return invoke<UpdateContributorInsightsResponse>(request, options);}
public void unwriteProtectWorkbook(){records.remove(fileShare);records.remove(writeProtect);fileShare = null;writeProtect = null;}
public SolrSynonymParser(boolean dedup, boolean expand, Analyzer analyzer) { super(dedup, analyzer); this.expand = expand; }
public RequestSpotInstancesResponse requestSpotInstances(RequestSpotInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return invoke<RequestSpotInstancesResponse>(request, options);}
public byte[] GetObjectData() { return FindObjectRecord().GetObjectData(); }
public GetContactAttributesResponse getContactAttributes(GetContactAttributesRequest request) {var options = new InvokeOptions();options.requestMarshaller = GetContactAttributesRequestMarshaller.Instance;options.responseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;return Invoke<GetContactAttributesResponse>(request, options);}
public String toString() { return getKey() + ": " + getValue(); }
public ListTextTranslationJobsResponse listTextTranslationJobs(ListTextTranslationJobsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListTextTranslationJobsRequestMarshaller.Instance);options.setResponseUnmarshaller(ListTextTranslationJobsResponseUnmarshaller.Instance);return invoke(new TypeReference<ListTextTranslationJobsResponse>() {}, request, options);}
public virtual GetContactMethodsResponse GetContactMethods(GetContactMethodsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactMethodsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactMethodsResponseUnmarshaller.Instance;return Invoke<GetContactMethodsResponse>(request, options);}
public static short LookupIndexByName(String name) { FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name); if (fd == null) { return -1; } return (short) fd.Index; }
public class DescribeAnomalyDetectorsResponse {} public class DescribeAnomalyDetectorsRequest {} public class InvokeOptions {} public class DescribeAnomalyDetectorsRequestMarshaller {} public class DescribeAnomalyDetectorsResponseUnmarshaller {} public Class DescribeAnomalyDetectorsResponse describeAnomalyDetectors(DescribeAnomalyDetectorsRequest request){InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeAnomalyDetectorsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeAnomalyDetectorsResponseUnmarshaller.getInstance());return invoke(new Object[]{request}, options);}
public static String InsertId(String message, ObjectId changeId){return InsertId(message, changeId, false);}
public long getObjectSize(AnyObjectId objectId, int typeHint) { long sz = db.getObjectSize(this, objectId); if (sz < 0) { if (typeHint == OBJ_ANY) { throw new MissingObjectException(objectId.copy(), "unknown"); } throw new MissingObjectException(objectId.copy(), typeHint); } return sz; }
public abstract ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance; options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance; return Invoke<ImportInstallationMediaResponse>(request, options); }
public PutLifecycleEventHookExecutionStatusResponse PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResponseUnmarshaller.Instance;return Invoke<PutLifecycleEventHookExecutionStatusResponse>(request, options);}
public NumberPtg(ILittleEndianInput in1) { field_1_value = in1.readDouble(); }
public GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = GetFieldLevelEncryptionConfigRequestMarshaller.Instance; options.ResponseUnmarshaller = GetFieldLevelEncryptionConfigResponseUnmarshaller.Instance; return Invoke<GetFieldLevelEncryptionConfigResponse>(request, options); }
public DescribeDetectorResponse describeDetector(DescribeDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDetectorResponseUnmarshaller.Instance;return Invoke<DescribeDetectorResponse>(request, options);}
public virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance;return Invoke<ReportInstanceStatusResponse>(request, options);}
public DeleteAlarmResponse deleteAlarm(DeleteAlarmRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAlarmRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAlarmResponseUnmarshaller.Instance;return invoke<DeleteAlarmResponse>(request, options);}
public TokenStream create(TokenStream input){return new PortugueseStemFilter(input);}
public FtCblsSubRecord() {reserved = new byte[ENCODED_SIZE];}
public synchronized boolean remove(Object @object){synchronized (mutex){return c.remove(@object);}}
public GetDedicatedIpResponse getDedicatedIp(GetDedicatedIpRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetDedicatedIpRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDedicatedIpResponseUnmarshaller.getInstance());return invoke(request, options);}
public String toString(){return precedence + " >= _p";}
public ListStreamProcessorsResponse listStreamProcessors(ListStreamProcessorsRequest request){var options = new InvokeOptions();options.requestMarshaller = ListStreamProcessorsRequestMarshaller.INSTANCE;options.responseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.INSTANCE;return invoke<ListStreamProcessorsResponse>(request, options);}
public DeleteLoadBalancerPolicyRequest(String loadBalancerName, String policyName) {_loadBalancerName = loadBalancerName;_policyName = policyName;}
public WindowProtectRecord(int options){this._options = options;}
public UnbufferedCharStream(int bufferSize){n = 0;data = new int[bufferSize];}
public GetOperationsResponse GetOperations(GetOperationsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetOperationsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationsResponseUnmarshaller.Instance;return Invoke<GetOperationsResponse>(request, options);}
public void CopyRawTo(byte[] b, int o){NB.EncodeInt32(b, o, w1);NB.EncodeInt32(b, o + 4, w2);NB.EncodeInt32(b, o + 8, w3);NB.EncodeInt32(b, o + 12, w4);NB.EncodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in1){field_1_h_hold = in1.ReadShort();field_2_v_hold = in1.ReadShort();field_3_width = in1.ReadShort();field_4_height = in1.ReadShort();field_5_options = in1.ReadShort();field_6_active_sheet = in1.ReadShort();field_7_first_visible_tab = in1.ReadShort();field_8_num_selected_tabs = in1.ReadShort();field_9_tab_width_ratio = in1.ReadShort();}
public virtual StopWorkspacesResponse StopWorkspaces(StopWorkspacesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;return Invoke<StopWorkspacesResponse>(request, options);}
public void close() throws IOException { if (isOpen) { isOpen = false; try { dump(); } finally { try { channel.truncate(fileLength); } finally { try { channel.close(); } finally { fos.close(); } } } } }
public DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);}
public String getPronunciation(int wordId, char[] surface, int off, int len){return null; }
public String getPath(){return pathStr;}
public static double devsq(double[] v){double r = Double.NaN;if (v != null && v.length >= 1){double m = 0;double s = 0;int n = v.length;for (int i = 0; i < n; i++){s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++){s += (v[i] - m) * (v[i] - m);}r = (n == 1)? 0: s;}return r;}
public abstract DescribeResizeResponse describeResize(DescribeResizeRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeResizeRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeResizeResponseUnmarshaller.Instance; return invoke<DescribeResizeResponse>(request, options); }
public boolean hasPassedThroughNonGreedyDecision(){return passedThroughNonGreedyDecision;}
public int end(){return end(0);}
public void Traverse(ICellHandler handler){int firstRow = range.FirstRow;int lastRow = range.LastRow;int firstColumn = range.FirstColumn;int lastColumn = range.LastColumn;int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();IRow currentRow = null;ICell currentCell = null;for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber){currentRow = sheet.GetRow(ctx.rowNumber);if (currentRow == null){continue;}for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber){currentCell = currentRow.GetCell(ctx.colNumber);if (currentCell == null){continue;}if (IsEmpty(currentCell) && !traverseEmptyCells){continue;}ctx.ordinalNumber =(ctx.rowNumber - firstRow) * width +(ctx.colNumber - firstColumn + 1);handler.OnCell(currentCell, ctx);}}
public int getReadIndex() { return _ReadIndex; }
public int compareTo(ScoreTerm other) { if (Term.BytesEquals(other.Term)) { return 0; } if (this.Boost == other.Boost) { return other.Term.compareTo(this.Term); } else { return this.Boost.compareTo(other.Boost); } }
public abstract int Normalize(char[] s, int len) { for (int i = 0; i < len; i++) { switch (s[i]) { case FARSI_YEH: case YEH_BARREE: s[i] = YEH; break; case KEHEH: s[i] = KAF; break; case HEH_YEH: case HEH_GOAL: s[i] = HEH; break; case HAMZA_ABOVE: len = StemmerUtil.Delete(s, i, len); i--; break; default: break; } } return len; }
public void serialize(java.io.DataOutputStream out1) throws java.io.IOException { out1.writeShort(_options); }
public DiagnosticErrorListener(boolean exactOnly) { this.exactOnly = exactOnly; }
public KeySchemaElement(String attributeName, KeyType keyType) {_attributeName = attributeName; _keyType = keyType;}
public GetAssignmentResponse GetAssignment(GetAssignmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;return Invoke<GetAssignmentResponse>(request, options);}
public abstract boolean hasObject(AnyObjectId id) {return findOffset(id) != -1;}
public abstract GroupingSearch SetAllGroups(boolean allGroups){this.allGroups = allGroups;return this;}
public synchronized void setMultiValued(String dimName, boolean v) {synchronized (this) {if (!fieldTypes.containsKey(dimName)) {fieldTypes.put(dimName, new DimConfig { IsMultiValued = v });} else {fieldTypes.get(dimName).IsMultiValued = v;}}}
public int GetCellsVal() { int size = 0; for (char c : cells.keySet()) { Cell e = At(c); if (e.cmd >= 0) { size++; } } return size; }
public abstract DeleteVoiceConnectorResponse deleteVoiceConnector(DeleteVoiceConnectorRequest request){var options = new InvokeOptions();options.requestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;options.responseUnmarshaller = DeleteVoiceConnectorResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorResponse>(request, options);}
public DeleteLifecyclePolicyResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLifecyclePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLifecyclePolicyResponseUnmarshaller.Instance;return Invoke<DeleteLifecyclePolicyResponse>(request, options);}
public void Write(byte[] b) { int len = b.length; CheckPosition(len); System.arraycopy(b, 0, _buf, _writeIndex, len); _writeIndex += len; }
public RebaseResult getRebaseResult(){return this.rebaseResult;}
public static int GetNearestSetSize(int maxNumberOfValuesExpected, float desiredSaturation) {for (var t : _usableBitSetSizes) {int numSetBitsAtDesiredSaturation = (int) (t * desiredSaturation);int estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(t, numSetBitsAtDesiredSaturation);if (estimatedNumUniqueValues > maxNumberOfValuesExpected) {return t;}}return -1;}
public abstract DescribeDashboardResponse describeDashboard(DescribeDashboardRequest request){var options = new InvokeOptions();options.requestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.responseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return invoke<DescribeDashboardResponse>(request, options);}
public abstract CreateSegmentResponse CreateSegment(CreateSegmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSegmentResponseUnmarshaller.Instance;return Invoke<CreateSegmentResponse>(request, options);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[DBCELL]\n");buffer.append("    .rowoffset       = ").append(StringUtil.ToHexString(rowOffset)).append("\n");for (int k = 0; k < field_2_cell_offsets.length; k++) {buffer.append("    .cell_").append(k).append(" = ").append(HexDump.ShortToHex(field_2_cell_offsets[k])).append("\n");}buffer.append("[/DBCELL]\n");return buffer.toString();}
public List<String> getUndeletedList() { return undeletedList; }
public String toString() { return "[INTERFACEEND/]\n"; }
@Overridepublic Object clone() {return this;}
public PlainTextDictionary(TextReader reader){this.in = reader;}
public StringBuilder append(CharSequence csq){if (csq == null){appendNull();}else{append0(csq, 0, csq.length());}return this;}
public ListAssociatedStacksResponse listAssociatedStacks(ListAssociatedStacksRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance; options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance; return Invoke<ListAssociatedStacksResponse>(request, options); }
public static double avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.length; i < iSize; i++) {s += v[i];}m = s / v.length;s = 0;for (int i = 0, iSize = v.length; i < iSize; i++) {s += Math.abs(v[i] - m);}r = s / v.length;return r;}
public abstract DescribeByoipCidrsResponse describeByoipCidrs(DescribeByoipCidrsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeByoipCidrsRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.Instance; return Invoke<DescribeByoipCidrsResponse>(request, options); }
public abstract GetDiskResponse getDisk(GetDiskRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = GetDiskRequestMarshaller.Instance; options.ResponseUnmarshaller = GetDiskResponseUnmarshaller.Instance; return Invoke<GetDiskResponse>(request, options); }
public CreateDBClusterParameterGroupResponse createDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateDBClusterParameterGroupRequestMarshaller.Instance);options.setResponseUnmarshaller(CreateDBClusterParameterGroupResponseUnmarshaller.Instance);return invoke(new CreateDBClusterParameterGroupResponse(), request, options);}
import java.nio.CharBuffer;public static CharBuffer wrap(char[] array_1, int start, int charCount) {java.util.Arrays.checkOffsetAndCount(array_1.length, start, charCount);CharBuffer buf = new java.nio.ReadWriteCharArrayBuffer(array_1);buf._position = start;buf._limit = start + charCount;return buf;}
public SubmoduleStatusType getType(){return type;}
public abstract DescribeGameServerGroupResponse describeGameServerGroup(DescribeGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;return invoke<DescribeGameServerGroupResponse>(request, options);}
public java.util.regex.Pattern pattern(){return _pattern;}
public V setValue(V object) {throw new UnsupportedOperationException();}
public StringBuilder Stem(String word) {String cmd = stemmer.GetLastOnPath(word);if (cmd == null)return null;buffer.setLength(0);buffer.append(word);Diff.Apply(buffer, cmd);if (buffer.length() > 0)return buffer;elsereturn null;}
public RenameFaceRequest() { super("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto", "openAPI"); Protocol = ProtocolType.HTTPS; }
public char requireChar(Map<String, String> args, String name){return require(args, name)[0];}
public static String toStringTree(ITree t){return toStringTree(t, (List<String>)null);}
public String toString(){return "<deleted/>";}
public GetRepoWebhookLogListRequest() { super("cr", "2016-06-07", "GetRepoWebhookLogList", "cr", "openAPI"); UriPattern = "/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs"; Method = MethodType.GET; }
public GetJobUnlockCodeResponse getJobUnlockCode(GetJobUnlockCodeRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetJobUnlockCodeRequestMarshaller.Instance);options.setResponseUnmarshaller(GetJobUnlockCodeResponseUnmarshaller.Instance);return invoke(new GetJobUnlockCodeResponse(), request, options);}
public RemoveTagsRequest(String resourceId) {_resourceId = resourceId;}
public short GetGB2312Id(char ch){try{byte[] buffer = new String(new char[]{ch}).getBytes("GB2312");if (buffer.length != 2){return -1;}int b0 = (buffer[0] & 0x0FF) - 161; int b1 = (buffer[1] & 0x0FF) - 161; return (short)(b0 * 94 + b1);}catch (UnsupportedEncodingException e) {throw new Exception(e.toString(), e);}}
public NGit.BatchRefUpdate addCommand(Collection<ReceiveCommand> cmd) {Sharpen.Collections.addAll(commands, cmd);return this;}
public int CheckExternSheet(int sheetNumber){return OrCreateLinkTable.CheckExternSheet(sheetNumber);}
public boolean equals(Object @object){return c.equals(@object);}
public abstract Query build(IQueryNode queryNode) { AnyQueryNode andNode = (AnyQueryNode)queryNode; BooleanQuery bQuery = new BooleanQuery(); IList<IQueryNode> children = andNode.getChildren(); if (children != null) { for (IQueryNode child : children) { Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID); if (obj != null) { Query query = (Query)obj; try { bQuery.add(query, Occur.SHOULD); } catch (BooleanQuery.TooManyClausesException ex) { throw new QueryNodeException(new Message(QueryParserMessages.EMPTY_MESSAGE), ex); } } } } bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements()); return bQuery; }
public DescribeStreamProcessorResponse describeStreamProcessor(DescribeStreamProcessorRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeStreamProcessorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.Instance;return Invoke<DescribeStreamProcessorResponse>(request, options);}
public DescribeDashboardPermissionsResponse describeDashboardPermissions(DescribeDashboardPermissionsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardPermissionsResponseUnmarshaller.Instance;return invoke<DescribeDashboardPermissionsResponse>(request, options);}
public Ref peel(Ref ref) { try { return RefDatabase.peel(ref); } catch (IOException) { return ref; } }
public long ramBytesUsed() { return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + 2 * RamUsageEstimator.NUM_BYTES_INT32 + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.sizeOf(blocks); }
public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDomainSuggestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDomainSuggestionsResponseUnmarshaller.Instance;return Invoke<GetDomainSuggestionsResponse>(request, options);}
public abstract DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance; return Invoke<DescribeStackEventsResponse>(request, options); }
public void setRule(int idx, IConditionalFormattingRule cfRule) { setRule(idx, (HSSFConditionalFormattingRule)cfRule); }
public abstract CreateResolverRuleResponse createResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateResolverRuleRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateResolverRuleResponseUnmarshaller.getInstance());return invoke(new CreateResolverRuleResponse(), request, options);}
public SeriesIndexRecord(RecordInputStream in1){field_1_index = in1.ReadShort();}
public class GetStylesRequest extends Request {public GetStylesRequest() {super("lubancloud", "2018-05-09", "GetStyles", "luban", "openAPI");Method = MethodType.POST;}}
public void serialize(OutputStream out1) throws IOException { out1.writeShort(field_1_gridset_flag); }
public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } Toffs other = (Toffs) obj; if (StartOffset != other.StartOffset) { return false; } if (EndOffset != other.EndOffset) { return false; } return true; }
public abstract CreateGatewayGroupResponse CreateGatewayGroup(CreateGatewayGroupRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreateGatewayGroupRequestMarshaller.Instance; options.ResponseUnmarshaller = CreateGatewayGroupResponseUnmarshaller.Instance; return Invoke<CreateGatewayGroupResponse>(request, options); }
public CreateParticipantConnectionResponse createParticipantConnection(CreateParticipantConnectionRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance; options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance; return invoke<CreateParticipantConnectionResponse>(request, options); }
public static double irr(double[] income){return irr(income, 0.1);}
public RegisterWorkspaceDirectoryResponse registerWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request) { var options = new InvokeOptions(); options.requestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.INSTANCE; options.responseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.INSTANCE; return invoke(new RegisterWorkspaceDirectoryResponse(), request, options); }
public NGit.Api.RevertCommand include(Ref commit){CheckCallable();commits.addItem(commit);return this;}
### Checklist:- Ensure method name, return type, and parameters are preserved- Maintain variable names and identifiers as closely as possible- Preserve the logic and flow of the original code- Handle exceptions and return appropriate values- Use Java's String and Pattern classes for string manipulation and regex matching### Translated Java Code:```javaimport java.util.regex.Matcher;import java.util.regex.Pattern;public class YourClass {public static ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String iNumber = OperandResolver.coerceValueToString(veText1);Pattern complexNumberPattern = Pattern.compile(COMPLEX_NUMBER_PATTERN);Matcher m = complexNumberPattern.matcher(iNumber);boolean result = m.find() && m.group(0).length() > 0;String imaginary = "";if (result) {String imaginaryGroup = m.group(5);boolean hasImaginaryPart = imaginaryGroup.equals("i") || imaginaryGroup.equals("j");if (imaginaryGroup.length() == 0) {return new StringEval("0");}if (hasImaginaryPart) {String sign = "";String imaginarySign = m.group(GROUP3_IMAGINARY_SIGN);if (imaginarySign.length() != 0 && !(imaginarySign.equals("+"))) {sign = imaginarySign;}String groupImaginaryNumber = m.group(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE);if (groupImaginaryNumber.length() != 0) {imaginary = sign + groupImaginaryNumber;} else {imaginary = sign + "1";}}} else {return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}}```Reasoning:- The method signature and parameters are preserved- Variable names are closely followed, with necessary adjustments for Java conventions- The logic flow and exception handling are maintained- Regex matching is performed using Java's Pattern and Matcher classes
public E pollLast() { java.util.MapClass.Entry<E, Object> entry = backingMap.pollLastEntry(); return (entry == null) ? default(E) : entry.getKey(); }
public int ReadUShort() {int ch1 = ReadUByte();int ch2 = ReadUByte();return (ch2 << 8) + (ch1 << 0);}
public ModifySnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute, OperationType operationType) {_snapshotId = snapshotId;_attribute = attribute;_operationType = operationType;}
public ListBonusPaymentsResponse listBonusPayments(ListBonusPaymentsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListBonusPaymentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListBonusPaymentsResponseUnmarshaller.Instance;return invoke<ListBonusPaymentsResponse>(request, options);}
public V Get(char[] text) { if (text == null) { throw new ArgumentNullException("text"); } return null; }
public TokenStream create(TokenStream input) { var commonGrams = (CommonGramsFilter) super.create(input); return new CommonGramsQueryFilter(commonGrams); }
public String GetPath(){return path;}
public virtual InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = InitiateMultipartUploadResponseUnmarshaller.Instance;return Invoke<InitiateMultipartUploadResponse>(request, options);}
public java.lang.StringBuilder insert(int offset, int i) { insert0(offset, Integer.toString(i)); return this; }
public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 3);}}}
public TokenStream create(TokenStream input){return new ElisionFilter(input, articles);}
public boolean eat(Row in, int[] remap) {int sum = 0;for (Cell c : in.cells.values()) {sum += c.cnt;if (c.ref >= 0) {if (remap[c.ref] == 0) {c.ref = -1;}}}int frame = sum / 10;boolean live = false;for (Cell c : in.cells.values()) {if (c.cnt < frame && c.cmd >= 0) {c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.ref >= 0) {live |= true;}}return !live;}
public Token GetToken(int index){Token t = Token;for (int i = 0; i < index; i++){if (t.Next != null) t = t.Next;else t = t.Next = TokenSource.GetNextToken();}return t;}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append(" [ARRAY]\n");sb.append(" range=").append(this.range.toString()).append("\n");sb.append(" options=").append(HexDump.shortToHex(this._options)).append("\n");sb.append(" notUsed=").append(HexDump.intToHex(this._field3notUsed)).append("\n");sb.append(" formula:").append("\n");Ptg[] ptgs = this._formula.Tokens;for (int i = 0; i < ptgs.length; i++) {Ptg ptg = ptgs[i];sb.append(ptg.toString()).append(ptg.RVAType).append("\n");}sb.append("]");return sb.toString();}
public virtual GetFolderResponse getFolder(GetFolderRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = GetFolderRequestMarshaller.Instance; options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance; return Invoke<GetFolderResponse>(request, options); }
public void add(int location, E @object) { throw new java.lang.UnsupportedOperationException(); }
public PositiveScoresOnlyCollector(ICollector c) {this.c = c;}
public class CreateRepoBuildRuleRequest extends Request {public CreateRepoBuildRuleRequest() {super("cr", "2016-06-07", "CreateRepoBuildRule", "cr", "openAPI");this.uriPattern = "/repos/[RepoNamespace]/[RepoName]/rules";this.method = MethodType.PUT;}}
public BaseRef(RefEval re) {_refEval = re; _areaEval = null; _firstRowIndex = re.Row; _firstColumnIndex = re.Column; _height = 1; _width = 1;}
public class DrawingManager2 { private EscherDggRecord dgg; public DrawingManager2(EscherDggRecord dgg) { this.dgg = dgg; } }
public void Reset() { if (!First) { Reset(raw); } }
public java.nio.charset.CharsetDecoder reset(){status = INIT;implReset();return this;}
import java.io.Reader;import java.io.BufferedReader;import java.io.IOException;public class MySQLBufferedReader extends BufferedReader {private Reader in;private char[] buf;public MySQLBufferedReader(Reader in, int size) throws IOException {super(in);if (size <= 0) {throw new IllegalArgumentException("size <= 0");}this.in = in;buf = new char[size];}}
public DescribeCodeRepositoryResponse describeCodeRepository(DescribeCodeRepositoryRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance; return Invoke<DescribeCodeRepositoryResponse>(request, options); }
public virtual CreateDBSubnetGroupResponse CreateDBSubnetGroup(CreateDBSubnetGroupRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateDBSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBSubnetGroupResponseUnmarshaller.Instance;return Invoke<CreateDBSubnetGroupResponse>(request, options);}
public NGit.Api.RenameBranchCommand setOldName(String oldName) { checkCallable(); this.oldName = oldName; return this;}
public NGit.Api.DeleteBranchCommand setForce(boolean force) { checkCallable(); this.force = force; return this; }
public StopCompilationJobResponse stopCompilationJob(StopCompilationJobRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StopCompilationJobRequestMarshaller.Instance);options.setResponseUnmarshaller(StopCompilationJobResponseUnmarshaller.Instance);return invoke(StopCompilationJobResponse.class, request, options);}
public synchronized void incrementSecondaryProgressBy(int diff) {setSecondaryProgress(mSecondaryProgress + diff);}
public int[] clear(){return bytesStart = null;}
public String getRawPath(){return path;}
public GetUserSourceAccountRequest() { super("cr", "2016-06-07", "GetUserSourceAccount", "cr", "openAPI"); UriPattern = "/users/sourceAccount"; Method = MethodType.GET; }
public CreateExportJobResponse createExportJob(CreateExportJobRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreateExportJobRequestMarshaller.INSTANCE; options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.INSTANCE; return invoke<CreateExportJobResponse>(request, options); }
public CreateDedicatedIpPoolResponse createDedicatedIpPool(CreateDedicatedIpPoolRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;return Invoke<CreateDedicatedIpPoolResponse>(request, options);}
public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (obj instanceof HSSFCellStyle) { HSSFCellStyle other = (HSSFCellStyle) obj; if (_format == null) { if (other._format != null) return false; } else if (!_format.equals(other._format)) return false; if (index != other.index) return false; return true; } return false; }
public ReleaseHostsResponse releaseHosts(ReleaseHostsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ReleaseHostsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ReleaseHostsResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean equals(Object @object){if (this == @object){return true;}if (@object instanceof java.util.Set){java.util.Set s = (@java.util.Set)@object;try{return size() == s.size() && containsAll(s);}catch (System.ArgumentNullException){return false;}catch (System.InvalidCastException){return false;}}return false;}
public void setRefLogMessage(String msg, boolean appendStatus){if (msg == null && !appendStatus){disableRefLog();}else{if (msg == null && appendStatus){refLogMessage = "";refLogIncludeResult = true;}else{refLogMessage = msg;refLogIncludeResult = appendStatus;}}}
public StreamIDRecord(RecordInputStream in1){idstm = in1.ReadShort();}
public RecognizeCarRequest() {super("visionai-poc", "2020-04-08", "RecognizeCar");Method = MethodType.POST;}
public final java.nio.ByteOrder order(){return java.nio.ByteOrder.nativeOrder();}
public abstract int getAheadCount(){return aheadCount;}
public boolean isNewFragment(){return false;}
public virtual GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.Instance;return Invoke<GetCloudFrontOriginAccessIdentityConfigResponse>(request, options);}
public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol){return token == symbol;}
public virtual DeleteTransitGatewayResponse DeleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayResponseUnmarshaller.Instance;return Invoke<DeleteTransitGatewayResponse>(request, options);}
public static double[] Grow(double[] array, int minSize){assert minSize >= 0 : "size must be positive (got " + minSize + "): likely integer overflow?";if (array.length < minSize){double[] newArray = new double[Oversize(minSize, RamUsageEstimator.NUM_BYTES_DOUBLE)];System.arraycopy(array, 0, newArray, 0, array.length);return newArray;} else {return array;}}
public CreateTransactionRequest() { super("CloudPhoto", "2017-07-11", "CreateTransaction", "cloudphoto", "openAPI"); this.protocol = ProtocolType.HTTPS; }
public PersonIdent setRefLogIdent(PersonIdent pi) { refLogIdent = pi; return this; }
public abstract GetLaunchTemplateDataResponse getLaunchTemplateData(GetLaunchTemplateDataRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = GetLaunchTemplateDataRequestMarshaller.Instance; options.ResponseUnmarshaller = GetLaunchTemplateDataResponseUnmarshaller.Instance; return invoke<GetLaunchTemplateDataResponse>(request, options); }
public class ParseInfo {private ProfilingATNSimulator atnSimulator;public ParseInfo(ProfilingATNSimulator atnSimulator){this.atnSimulator = atnSimulator;}}
public class SimpleQQParser { private String[] qqNames; private String indexField; public SimpleQQParser(String[] qqNames, String indexField) { this.qqNames = qqNames; this.indexField = indexField; } }
public PromoteReadReplicaDBClusterResponse promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {var options = new InvokeOptions();options.requestMarshaller = PromoteReadReplicaDBClusterRequestMarshaller.INSTANCE;options.responseUnmarshaller = PromoteReadReplicaDBClusterResponseUnmarshaller.INSTANCE;return invoke<PromoteReadReplicaDBClusterResponse>(request, options);}
public DescribeCapacityReservationsResponse describeCapacityReservations(DescribeCapacityReservationsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeCapacityReservationsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeCapacityReservationsResponseUnmarshaller.getInstance());return invoke(request, options);}
public String toString() {return "IndexSearcher(" + reader + "; executor=" + executor + ")";}
public boolean incrementToken() {return false;}
public void Serialize(ILittleEndianOutput out1) { out1.WriteShort(main + 1); out1.WriteShort(subFrom); out1.WriteShort(subTo); }
public void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new UnsupportedOperationException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i) {long block = ReadInt64(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}
public boolean isExpectedToken(int symbol) {ATN atn = Interpreter.atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states[State];IntervalSet following = atn.getNextTokens(s);if (following.contains(symbol)) {return true;}if (!following.contains(TokenConstants.EPSILON)) {return false;}while (ctx != null && ctx.invokingState >= 0 && following.contains(TokenConstants.EPSILON)) {ATNState invokingState = atn.states[ctx.invokingState];RuleTransition rt = (RuleTransition) invokingState.transition(0);following = atn.getNextTokens(rt.followState);if (following.contains(symbol)) {return true;}ctx = (ParserRuleContext) ctx.getParent();}if (following.contains(TokenConstants.EPSILON) && symbol == TokenConstants.EOF) {return true;}return false;}
public virtual UpdateStreamResponse updateStream(UpdateStreamRequest request){var options = new InvokeOptions();options.requestMarshaller = UpdateStreamRequestMarshaller.Instance;options.responseUnmarshaller = UpdateStreamResponseUnmarshaller.Instance;return invoke<UpdateStreamResponse>(request, options);}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = TranslateErrorCodeToErrorTypeValue(e.getErrorEval().getErrorCode());return new NumberEval(result);}}
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getSimpleName()).append(" [");sb.append(_index).append(" ").append(_name);sb.append("]");return sb.toString();}
public ListAssignmentsForHITResponse ListAssignmentsForHIT(ListAssignmentsForHITRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<ListAssignmentsForHITResponse>(request, options);}
public DeleteAccessControlRuleResponse deleteAccessControlRule(DeleteAccessControlRuleRequest request) {var options = new InvokeOptions();options.requestMarshaller = DeleteAccessControlRuleRequestMarshaller.INSTANCE;options.responseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.INSTANCE;return invoke(deleteAccessControlRuleResponse.class, request, options);}
public FST.Arc<Long> getFirstArc(FST.Arc<Long> arc) { return fst.getFirstArc(arc); }
public void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16){values[valuesOffset++] = (int)(((long)((long)block >> shift)) & 65535);}}}
@Overridepublic long skip(long charCount) throws IllegalArgumentException {if (charCount < 0) {throw new IllegalArgumentException("charCount < 0: " + charCount);}synchronized (@lock) {checkNotClosed();if (charCount == 0) {return 0;}long inSkipped;int availableFromBuffer = buf.length - pos;if (availableFromBuffer > 0) {long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0) {pos += (int) (charCount);return charCount;}pos += availableFromBuffer;inSkipped = @in.skip(requiredFromIn);} else {inSkipped = @in.skip(charCount);}return inSkipped + availableFromBuffer;}}
public abstract Map<String, Ref> getRefsMap(){return advertisedRefs;}
public UpdateApiKeyResponse updateApiKey(UpdateApiKeyRequest request){var options = new InvokeOptions();options.requestMarshaller = UpdateApiKeyRequestMarshaller.Instance;options.responseUnmarshaller = UpdateApiKeyResponseUnmarshaller.Instance;return invoke<UpdateApiKeyResponse>(request, options);}
public ObjectStream openStream(){WindowCursor wc = new WindowCursor(db);InputStream in;try{in = new PackInputStream(pack, objectOffset + headerLength, wc);}catch (IOException){return wc.open(getObjectId(), type).openStream();}in = new BufferedInputStream(new InflaterInputStream(in, wc.getInflater(), 8192),8192);return new ObjectStream.Filter(type, size, in);}
public ArrayList(){array = libcore.util.EmptyArray.OBJECT;}
public virtual UpdateDetectorVersionResponse updateDetectorVersion(UpdateDetectorVersionRequest request){var options = new InvokeOptions();options.requestMarshaller = UpdateDetectorVersionRequestMarshaller.getInstance();options.responseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.getInstance();return invoke<UpdateDetectorVersionResponse>(request, options);}
public void resize(){resize(Double.MAX_VALUE);}
public RevFlagSet(ICollection<RevFlag> s) {this(); Sharpen.Collections.AddAll(this, s);}
public int size(){ return this._enclosing.size(); }
public final long getLong() {int newPosition = _position + libcore.io.SizeOf.LONG;if (newPosition > _limit) {throw new java.nio.BufferUnderflowException();}long result = libcore.io.Memory.peekLong(backingArray, offset + _position, _order);_position = newPosition;return result;}
public StringBuilder insert(int offset, long l){insert0(offset, Long.toString(l));return this;}
public TurkishLowerCaseFilter(TokenStream @in) { super(@in); termAtt = AddAttribute<ICharTermAttribute>(); }
public abstract ParseTreeMatch match(IParseTree tree, ParseTreePattern pattern){MultiMap<String, IParseTree> labels = new MultiMap<>();IParseTree mismatchedNode = matchImpl(tree, pattern.patternTree, labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}
public void addIfNoOverlap(WeightedPhraseInfo wpi) {for (WeightedPhraseInfo existWpi : PhraseList) {if (existWpi.isOffsetOverlap(wpi)) {existWpi.getTermsInfos().addAll(wpi.getTermsInfos());return;}}PhraseList.add(wpi);}
public Merger newMerger(Repository db){return new StrategySimpleTwoWayInCore.InCoreMerger(db);}
public float docScore(int docId, String field, int numPayloadsSeen, float payloadScore) { return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1; }
public override Collection<IParseTree> Evaluate(IParseTree t){return Trees.FindAllRuleNodes(t, ruleIndex);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[CFRULE]\n");buffer.append("    .condition_type   =").append(field_1_condition_type).append("\n");buffer.append("    OPTION FLAGS=0x").append(String.format("%08X",Options)).append("\n");if (ContainsFontFormattingBlock){buffer.append(_fontFormatting.toString()).append("\n");}if (ContainsBorderFormattingBlock){buffer.append(_borderFormatting.toString()).append("\n");}if (ContainsPatternFormattingBlock){buffer.append(_patternFormatting.toString()).append("\n");}buffer.append("    Formula 1 =").append(Arrays.toString(field_17_formula1.Tokens)).append("\n");buffer.append("    Formula 2 =").append(Arrays.toString(field_18_formula2.Tokens)).append("\n");buffer.append("[/CFRULE]\n");return buffer.toString();}
public DescribeServiceUpdatesResponse describeServiceUpdates(DescribeServiceUpdatesRequest request) { InvokeOptions options = new InvokeOptions(); options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance; return Invoke<DescribeServiceUpdatesResponse>(request, options); }
public String getNameName(int index) {String result = getNameAt(index).getNameName();return result;}
public virtual DescribeLocationsResponse DescribeLocations(){return DescribeLocations(new DescribeLocationsRequest());}
public String toString(){return "<phraseslop value='" + getValueString() + "'>" + "\n"+ getChild().toString() + "\n</phraseslop>";}
public DirCacheEntry getDirCacheEntry(){return currentSubtree == null ? currentEntry : null;}
public int put(int[] src, int srcOffset, int intCount) { java.util.Arrays.checkOffsetAndCount(src.length, srcOffset, intCount); if (intCount > remaining()) { throw new java.nio.BufferOverflowException(); } for (int i = srcOffset; i < srcOffset + intCount; ++i) { put(src[i]); } return this; }
public void trimToSize() { int s = _size; if (s == array.length) { return; } if (s == 0) { array = libcore.util.EmptyArray.OBJECT; } else { Object[] newArray = new Object[s]; System.arraycopy(array, 0, newArray, 0, s); array = newArray; } modCount++; }
public abstract DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeLocalGatewayVirtualInterfacesRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.Instance; return Invoke<DescribeLocalGatewayVirtualInterfacesResponse>(request, options); }
public RussianLightStemFilter create(TokenStream input){return new RussianLightStemFilter(input);}
public int[] ToArray(int[] a) {int[] rval;if (a.length == _limit) {System.arraycopy(_array, 0, a, 0, _limit);rval = a;} else {rval = ToArray();}return rval;}
public class BasicSessionCredentials {private String accessKeyId;private String accessKeySecret;private String sessionToken;private long roleSessionDurationSeconds;private long sessionStartedTimeInMilliSeconds;public BasicSessionCredentials(String accessKeyId, String accessKeySecret, String sessionToken, long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new IllegalArgumentException("Access key ID cannot be null.");}if (accessKeySecret == null) {throw new IllegalArgumentException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;sessionStartedTimeInMilliSeconds = System.currentTimeMillis();}}
public final short[] get(short[] dst, int dstOffset, int shortCount){if (shortCount > remaining()){throw new java.nio.BufferUnderflowException();}System.arraycopy(backingArray, offset + _position, dst, dstOffset, shortCount);_position += shortCount;return this;}
public abstract class ActivateEventSourceResponse activateEventSource(ActivateEventSourceRequest request){InvokeOptions options = new InvokeOptions();options.RequestMarshaller = ActivateEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateEventSourceResponseUnmarshaller.Instance;return Invoke<ActivateEventSourceResponse>(request, options);}
public DescribeReceiptRuleSetResponse describeReceiptRuleSet(DescribeReceiptRuleSetRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeReceiptRuleSetRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeReceiptRuleSetResponseUnmarshaller.Instance; return Invoke<DescribeReceiptRuleSetResponse>(request, options); }
public Filter(String name){_name = name;}
public double put(double c) {throw new ReadOnlyBufferException();}
public CreateTrafficPolicyInstanceResponse createTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyInstanceRequestMarshaller.instance;options.ResponseUnmarshaller = CreateTrafficPolicyInstanceResponseUnmarshaller.instance;return invoke<CreateTrafficPolicyInstanceResponse>(request, options);}
public JapaneseIterationMarkCharFilter(TextReader input, boolean normalizeKanji, boolean normalizeKana) { super(input); this.normalizeKanji = normalizeKanji; this.normalizeKana = normalizeKana; buffer.reset(input); }
public void WriteLong(long v) { WriteInt((int) (v >> 0)); WriteInt((int) (v >> 32)); }
public class FileResolver {private Map<String, Repository> exports = new ConcurrentHashMap<>();private List<FilePath> exportBase = new CopyOnWriteArrayList<>();}
public ValueEval GetRef3DEval(Ref3DPtg rptg) { SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.ExternSheetIndex); return new LazyRefEval(rptg.Row, rptg.Column, sre); }
public DeleteDatasetResponse deleteDataset(DeleteDatasetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDatasetRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDatasetResponseUnmarshaller.getInstance());return invoke(request, options);}
public abstract StartRelationalDatabaseResponse startRelationalDatabase(StartRelationalDatabaseRequest request){var options = new InvokeOptions();options.setRequestMarshaller(StartRelationalDatabaseRequestMarshaller.Instance);options.setResponseUnmarshaller(StartRelationalDatabaseResponseUnmarshaller.Instance);return invoke(new TypeToken<StartRelationalDatabaseResponse>(){}, request, options);}
public abstract DescribeReservedCacheNodesOfferingsResponse describeReservedCacheNodesOfferings(){return describeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}
private static double PMT(double r, int nper, double pv, double fv, int type) {double pmt = -r * (pv * Math.pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.pow(1 + r, nper) - 1));return pmt;}
public abstract DescribeDocumentVersionsResponse describeDocumentVersions(DescribeDocumentVersionsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance; return invoke<DescribeDocumentVersionsResponse>(request, options); }
public List<PublishingDestination> listPublishingDestinations(ListPublishingDestinationsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListPublishingDestinationsRequestMarshaller.Instance);options.setResponseUnmarshaller(ListPublishingDestinationsResponseUnmarshaller.Instance);return (List<PublishingDestination>)Invoke(request, options);}
public deleteAccountAliasRequest(String accountAlias) {_accountAlias = accountAlias;}
public static float[] Grow(float[] array){return Grow(array, 1 + array.length);}
public String OutputToString(Object output) {if (!(output instanceof List)) {return outputs.OutputToString((T) output);} else {List outputList = (List) output;StringBuilder b = new StringBuilder();b.append('[');for (int i = 0; i < outputList.size(); i++) {if (i > 0) {b.append(", ");}b.append(outputs.OutputToString((T) outputList.get(i)));}b.append(']');return b.toString();}}
public void NotifyDeleteCell(ICell cell) { _bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell(cell)); }
public StringBuilder replace(int start, int end, String str){replace0(start, end, str);return this;}
public virtual SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;return Invoke<SetIdentityPoolConfigurationResponse>(request, options);}
public static double kthSmallest(double[] v, int k) { double r = Double.NaN; k--; if (v != null && v.length > k && k >= 0) { Arrays.sort(v); r = v[k]; } return r; }
public void set(int index, long value) { int o = (int)((uint)index >> 5); int b = index & 31; int shift = b << 1; blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift); }
public String toString(){List<IQueryNode> children = getChildren();if (children == null || children.size() == 0)return "<boolean operation='and'/>";StringBuilder sb = new StringBuilder();sb.append("<boolean operation='and'>");for (IQueryNode child : children){sb.append("\n");sb.append(child.toString());}sb.append("\n</boolean>");return sb.toString();}
public int sumTokenSizes(int fromIx, int toIx){int result = 0;for (int i = fromIx; i < toIx; i++){result += _ptgs[i].size();}return result;}
public void setReadonly(boolean readonly) {if (this.readonly && !readonly) {throw new InvalidOperationException("can't alter readonly IntervalSet");}this.readonly = readonly;}
public void clearConsumingCell(FormulaCellCacheEntry cce) { if (!_consumingCells.remove(cce)) { throw new InvalidOperationException("Specified formula cell is not consumed by this cell"); } }
public java.util.List<E> subList(int start, int end){synchronized (mutex){return java.util.Collections.synchronizedList(list.subList(start, end));}}
public FileHeader getFileHeader() { return file; }
public virtual AttachLoadBalancersResponse attachLoadBalancers(AttachLoadBalancersRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance; options.ResponseUnmarshaller = AttachLoadBalancersResponseUnmarshaller.Instance; return Invoke<AttachLoadBalancersResponse>(request, options); }
public InitiateJobRequest(String accountId, String vaultName, JobParameters jobParameters) {_accountId = accountId;_vaultName = vaultName;_jobParameters = jobParameters;}
public String toString(){return "SPL";}
public ReplacableAttribute(String name, String value, boolean replace){this.name = name;this.value = value;this.replace = replace;}
public void add(IIndexableField field) {fields.add(field);}
public DeleteStackSetResponse deleteStackSet(DeleteStackSetRequest request) {var options = new InvokeOptions();options.requestMarshaller = DeleteStackSetRequestMarshaller.Instance;options.responseUnmarshaller = DeleteStackSetResponseUnmarshaller.Instance;return invoke(request, options);}
public GetRepoBuildRuleListRequest() { super("cr", "2016-06-07", "GetRepoBuildRuleList", "cr", "openAPI"); UriPattern = "/repos/[RepoNamespace]/[RepoName]/rules"; Method = MethodType.GET; }
public SparseArray(int initialCapacity){initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new Object[initialCapacity];mSize = 0;}
public InvokeServiceRequest() { super("industry-brain", "2018-07-12", "InvokeService"); Method = MethodType.POST; }
public ListAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto", "openAPI");Protocol = ProtocolType.HTTPS;}
public boolean hasPrevious(){return link != list.voidLink;}
public DeleteHsmConfigurationResponse deleteHsmConfiguration(DeleteHsmConfigurationRequest request) {var options = new InvokeOptions();options.requestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;options.responseUnmarshaller = DeleteHsmConfigurationResponseUnmarshaller.Instance;return Invoke<DeleteHsmConfigurationResponse>(request, options);}
public CreateLoadBalancerRequest(String loadBalancerName){_loadBalancerName = loadBalancerName;}
public String getUserInfo(){return decode(userInfo);}
public TagAttendeeResponse tagAttendee(TagAttendeeRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance; options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance; return invoke<TagAttendeeResponse>(request, options); }
public String getRefName(){return name;}
public WAH8DocIdSet build() { if (this.wordNum != -1) { AddWord(wordNum, (byte)word); } return super.build(); }
public abstract boolean isSubTotal(int rowIndex, int columnIndex);
public DescribeDBProxiesResponse describeDBProxies(DescribeDBProxiesRequest request){var options = new InvokeOptions();options.requestMarshaller = DescribeDBProxiesRequestMarshaller.Instance;options.responseUnmarshaller = DescribeDBProxiesResponseUnmarshaller.Instance;return invoke<DescribeDBProxiesResponse>(request, options);}
public GetVoiceConnectorProxyResponse getVoiceConnectorProxy(GetVoiceConnectorProxyRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance; options.ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance; return Invoke<GetVoiceConnectorProxyResponse>(request, options); }
public void FromConfig(Config rc) { SetPackedGitOpenFiles(rc.GetInt("core", null, "packedgitopenfiles", GetPackedGitOpenFiles())); SetPackedGitLimit(rc.GetLong("core", null, "packedgitlimit", GetPackedGitLimit())); SetPackedGitWindowSize(rc.GetInt("core", null, "packedgitwindowsize", GetPackedGitWindowSize())); SetPackedGitMMAP(rc.GetBoolean("core", null, "packedgitmmap", IsPackedGitMMAP())); SetDeltaBaseCacheLimit(rc.GetInt("core", null, "deltabasecachelimit", GetDeltaBaseCacheLimit())); long maxMem = Runtime.getRuntime().maxMemory(); long sft = rc.GetLong("core", null, "streamfilethreshold", GetStreamFileThreshold()); sft = Math.min(sft, maxMem / 4); sft = Math.min(sft, Integer.MAX_VALUE); SetStreamFileThreshold((int) sft); }
public static Date GetJavaDate(double date) { return GetJavaDate(date, false); }
public StartPersonTrackingResponse startPersonTracking(StartPersonTrackingRequest request){var options = new InvokeOptions();options.setRequestMarshaller(StartPersonTrackingRequestMarshaller.Instance);options.setResponseUnmarshaller(StartPersonTrackingResponseUnmarshaller.Instance);return Invoke<StartPersonTrackingResponse>(request, options);}
public int size(){return this._enclosing.size();}
public GetRouteResponse getRoute(GetRouteRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetRouteRequestMarshaller.Instance);options.setResponseUnmarshaller(GetRouteResponseUnmarshaller.Instance);return Invoke<GetRouteResponse>(request, options);}
public native DeleteClusterResponse DeleteCluster(DeleteClusterRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance; options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance; return Invoke<DeleteClusterResponse>(request, options); }
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[MMS]\n");buffer.append("    .addMenu        = ").append(StringUtil.toHexString(AddMenuCount)).append("\n");buffer.append("    .delMenu        = ").append(StringUtil.toHexString(DelMenuCount)).append("\n");buffer.append("[/MMS]\n");return buffer.toString();}
public FileBasedConfig(Config base, FilePath cfgLocation, FS fs) {super(base);configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.ZeroId;}
public int following(int pos) { if (pos < text.beginIndex || pos > text.endIndex) { throw new ArgumentException("offset out of bounds"); } else if (sentenceStarts.length == 0) { text.setIndex(text.beginIndex); return done; } else if (pos >= sentenceStarts[sentenceStarts.length - 1]) { text.setIndex(text.endIndex); currentSentence = sentenceStarts.length - 1; return done; } else { currentSentence = (sentenceStarts.length - 1) / 2; moveToSentenceAt(pos, 0, sentenceStarts.length - 2); text.setIndex(sentenceStarts[++currentSentence]); return current; } }
public UpdateParameterGroupResponse updateParameterGroup(UpdateParameterGroupRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UpdateParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.Instance;return invoke<UpdateParameterGroupResponse>(request, options);}
public Object clone() {SeriesChartGroupIndexRecord rec = new SeriesChartGroupIndexRecord(); rec.field_1_chartGroupIndex = field_1_chartGroupIndex; return rec;}
public static double CalcDistanceFromErrPct(IShape shape, double distErrPct, SpatialContext ctx){if (distErrPct < 0 || distErrPct > 0.5){throw new IllegalArgumentException("distErrPct " + distErrPct + " must be between [0 to 0.5]", "distErrPct");}if (distErrPct == 0 || shape instanceof IPoint){return 0;}IRectangle bbox = shape.BoundingBox;IPoint ctr = bbox.Center;double y = (ctr.getY() >= 0 ? bbox.getMaxY() : bbox.getMinY());double diagonalDist = ctx.getDistCalc().distance(ctr, bbox.getMaxX(), y);return diagonalDist * distErrPct;}
public abstract int codePointAt(int index){if (index < 0 || index >= count){throw indexAndLength(index);}return Sharpen.CharHelper.CodePointAt(value, index, count);}
public void setPasswordVerifier(int passwordVerifier) { this.passwordVerifier = passwordVerifier; }
public ListVaultsRequest(String accountId){this._accountId = accountId;}
public class SquashMessageFormatter { private GitDateFormatter dateFormatter; public SquashMessageFormatter() { dateFormatter = new GitDateFormatter(GitDateFormatter.Format.DEFAULT); } }
public GetVideoCoverRequest() { super("CloudPhoto", "2017-07-11", "GetVideoCover", "cloudphoto", "openAPI"); this.Protocol = Protocol.HTTPS; }
public int lastIndexOf(Object @object) {int pos = _size;java.util.LinkedList.Link<E> link = voidLink.previous;if (@object != null) {while (link != voidLink) {pos--;if (@object.equals(link.data)) {return pos;}link = link.previous;}} else {while (link != voidLink) {pos--;if ((Object)link.data == null) {return pos;}link = link.previous;}}return -1;}
public DescribeSpotFleetRequestsResponse describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request){InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeSpotFleetRequestsRequestMarshaller.Instance);options.setResponseUnmarshaller(DescribeSpotFleetRequestsResponseUnmarshaller.Instance);return invoke(new DescribeSpotFleetRequestsResponse(), request, options);}
public abstract IndexFacesResponse indexFaces(IndexFacesRequest request) {var options = new InvokeOptions();options.requestMarshaller = IndexFacesRequestMarshaller.Instance;options.responseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;return invoke<IndexFacesResponse>(request, options);}
public BreakIterator getBreakIterator(int script) { switch (script) { case UScript.JAPANESE: return (BreakIterator) cjkBreakIterator.clone(); case UScript.MYANMAR: if (myanmarAsWords) { return (BreakIterator) defaultBreakIterator.clone(); } else { return (BreakIterator) myanmarSyllableIterator.clone(); } default: return (BreakIterator) defaultBreakIterator.clone(); } }
public String toString() { StringBuilder b = new StringBuilder(); b.append("[DCONREF]\n"); b.append("    .ref\n"); b.append("        .firstrow   = ").append(firstRow).append("\n"); b.append("        .lastrow    = ").append(lastRow).append("\n"); b.append("        .firstcol   = ").append(firstCol).append("\n"); b.append("        .lastcol    = ").append(lastCol).append("\n"); b.append("    .cch            = ").append(charCount).append("\n"); b.append("    .stFile\n"); b.append("        .h          = ").append(charType).append("\n"); b.append("        .rgb        = ").append(ReadablePath).append("\n"); b.append("[/DCONREF]\n"); return b.toString(); }
public int getPackedGitOpenFiles(){return packedGitOpenFiles;}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[FEATURE HEADER]\n");buffer.append("[/FEATURE HEADER]\n");return buffer.toString();}
public static byte[] GetToUnicodeLE(String string1) { return string1.getBytes(StandardCharsets.UTF_16LE); }
public List<String> GetFooterLines(String keyName){return GetFooterLines(new FooterKey(keyName));}
@Overridepublic void Refresh(){super.Refresh();Rescan();}
public float get(int index) { checkIndex(index); return byteBuffer.getFloat(index * libcore.io.SizeOf.FLOAT); }
public DeleteDetectorResponse deleteDetector(DeleteDetectorRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteDetectorRequestMarshaller.Instance);options.setResponseUnmarshaller(DeleteDetectorResponseUnmarshaller.Instance);return invoke(new TypeReference<DeleteDetectorResponse>() {}, request, options);}
public int[] Grow(){assert bytesStart != null;return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.length + 1);}
public abstract ListExclusionsResponse listExclusions(ListExclusionsRequest request){var options = new InvokeOptions();options.requestMarshaller = ListExclusionsRequestMarshaller.INSTANCE;options.responseUnmarshaller = ListExclusionsResponseUnmarshaller.INSTANCE;return invoke<ListExclusionsResponse>(request, options);}
public static SpatialStrategy getSpatialStrategy(int roundNumber){SpatialStrategy result;if (!spatialStrategyCache.TryGetValue(roundNumber, out result) || result == null){throw new InvalidOperationException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}
public RestoreDBClusterToPointInTimeResponse restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance; options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance; return Invoke<RestoreDBClusterToPointInTimeResponse>(request, options); }
public void serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_categoryDataType);out1.writeShort(field_2_valuesDataType);out1.writeShort(field_3_numCategories);out1.writeShort(field_4_numValues);out1.writeShort(field_5_bubbleSeriesType);out1.writeShort(field_6_numBubbleValues);}
public abstract class PostAgentProfileResponse {}public class PostAgentProfileRequest {}public class InvokeOptions {}public class PostAgentProfileRequestMarshaller {}public class PostAgentProfileResponseUnmarshaller {}public class PostAgentProfileRequestHandler {public PostAgentProfileResponse PostAgentProfile(PostAgentProfileRequest request) {var options = new InvokeOptions();options.RequestMarshaller = PostAgentProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = PostAgentProfileResponseUnmarshaller.Instance;return Invoke<PostAgentProfileResponse>(request, options);}private <T> T Invoke<T>(PostAgentProfileRequest request, InvokeOptions options) {// Implementation of the Invoke methodreturn default(T);}}
public abstract class ParseTreePatternCompiler {public abstract RegexTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex);}
public BacktrackDBClusterResponse backtrackDBCluster(BacktrackDBClusterRequest request) {var options = new InvokeOptions();options.requestMarshaller = BacktrackDBClusterRequestMarshaller.Instance;options.responseUnmarshaller = BacktrackDBClusterResponseUnmarshaller.Instance;return invoke<BacktrackDBClusterResponse>(request, options);}
public String getName(){return strategyName;}
public void copyTo(byte[] b, int o){formatHexByte(b, o + 0, w1);formatHexByte(b, o + 8, w2);formatHexByte(b, o + 16, w3);formatHexByte(b, o + 24, w4);formatHexByte(b, o + 32, w5);}
public static IntList LineMap(byte[] buf, int ptr, int end){IntList map = new IntList((end - ptr) / 36);map.FillTo(1, int.MinValue);for (; ptr < end; ptr = NextLF(buf, ptr)){map.Add(ptr);}map.Add(end);return map;}
public abstract Set<ObjectId> getAdditionalHaves() { return Collections.emptySet(); }
public long RamBytesUsed() { return _termsCache.values().stream().mapToLong(simpleTextTerms -> (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0).sum(); }
public String toXml(String tab) { StringBuilder builder = new StringBuilder(); builder.append(tab).append("<").append(recordName).append(">\n"); for (Iterator iterator = escherRecords.iterator(); iterator.hasNext(); ) { EscherRecord escherRecord = (EscherRecord) iterator.next(); builder.append(escherRecord.toXml(tab + "\t")); } builder.append(tab).append("</").append(recordName).append(">\n"); return builder.toString(); }
public TokenStream create(TokenStream input) { return new GalicianMinimalStemFilter(input); }
@Overridepublic String toString() {StringBuilder r = new StringBuilder();r.append("Commit");r.append("={\n");r.append("tree ");r.append(treeId != null ? treeId.getName() : "NOT_SET");r.append("\n");for (ObjectId p : parentIds) {r.append("parent ");r.append(p.getName());r.append("\n");}r.append("author ");r.append(author != null ? author.toString() : "NOT_SET");r.append("\n");r.append("committer ");r.append(committer != null ? committer.toString() : "NOT_SET");r.append("\n");if (encoding != null && !encoding.equals(Constants.CHARSET)) {r.append("encoding ");r.append(encoding.name());r.append("\n");}r.append("\n");r.append(message != null ? message : "");r.append("}");return r.toString();}
public IndicNormalizationFilterFactory(Map<String, String> args) {super(args);if (args.size() > 0) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public CreateOptionGroupResponse createOptionGroup(CreateOptionGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateOptionGroupRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateOptionGroupResponseUnmarshaller.INSTANCE);return (CreateOptionGroupResponse) Invoke(request, options);}
public abstract AssociateMemberAccountResponse associateMemberAccount(AssociateMemberAccountRequest request){var options = new InvokeOptions();options.requestMarshaller = AssociateMemberAccountRequestMarshaller.instance;options.responseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.instance;return invoke<AssociateMemberAccountResponse>(request, options);}
public void run() { this._enclosing.doRefreshProgress(this.mId, this.mProgress, this.mFromUser, true); this._enclosing.mRefreshProgressRunnable = this; }
public SetTerminationProtectionResponse setTerminationProtection(SetTerminationProtectionRequest request){var options = new InvokeOptions();options.setRequestMarshaller(SetTerminationProtectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(SetTerminationProtectionResponseUnmarshaller.getInstance());return invoke(request, options);}
public String getErrorHeader(RecognitionException e){int line = e.getOffendingToken().getLine();int charPositionInLine = e.getOffendingToken().getColumn();return "line " + line + ":" + charPositionInLine;}
public java.nio.CharBuffer asReadOnlyBuffer(){java.nio.CharToByteBufferAdapter buf = new java.nio.CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf._limit = _limit;buf._position = _position;buf._mark = _mark;buf.byteBuffer._order = byteBuffer._order;return buf;}
public StopSentimentDetectionJobResponse stopSentimentDetectionJob(StopSentimentDetectionJobRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.INSTANCE;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.INSTANCE;return invoke<StopSentimentDetectionJobResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> getNewObjectIds() {if (newObjectIds != null) {return newObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
protected void clear() { hash = hash(new byte[0]); super.clear(); }
public synchronized void reset() {synchronized (@lock) {checkNotClosed();if (_mark == -1) {throw new java.io.IOException("Invalid mark");}pos = _mark;}}
public RefErrorPtg(ILittleEndianInput in1){field_1_reserved = in1.readInt();}
public SuspendGameServerGroupResponse suspendGameServerGroup(SuspendGameServerGroupRequest request) { var options = new InvokeOptions(); options.requestMarshaller = SuspendGameServerGroupRequestMarshaller.Instance; options.responseUnmarshaller = SuspendGameServerGroupResponseUnmarshaller.Instance; return invoke<SuspendGameServerGroupResponse>(request, options); }
public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex){if (args.length != 3){return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public GetRepoRequest() { super("cr", "2016-06-07", "GetRepo", "cr", "openAPI"); this.setUriPattern("/repos/[RepoNamespace]/[RepoName]"); this.setMethod(MethodType.GET); }
public void setDate(Date date){if (date != null){date = DateTools.dateToString(date, DateTools.Resolution.SECOND);}else{this.date = null;}}
public TokenStream create(TokenStream input){ return new GermanMinimalStemFilter(input); }
public Object[] toArray() { return (Object[])a.clone(); }
public void write(char[] buffer, int offset, int len) { java.util.Arrays.checkOffsetAndCount(buffer.length, offset, len); synchronized (@lock) { expand(len); System.arraycopy(buffer, offset, this.buf, this.count, len); this.count += len; } }
public static RevFilter After(long ts){return new CommitTimeRevFilterAfter(ts);}
public DeleteGroupPolicyRequest(String groupName, String policyName) {_groupName = groupName; _policyName = policyName;}
public DeregisterTransitGatewayMulticastGroupMembersResponse deregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.requestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.responseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public abstract BatchDeleteScheduledActionResponse BatchDeleteScheduledAction(BatchDeleteScheduledActionRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchDeleteScheduledActionRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDeleteScheduledActionResponseUnmarshaller.Instance;return Invoke<BatchDeleteScheduledActionResponse>(request, options);}
public abstract CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;return Invoke<CreateAlgorithmResponse>(request, options);}
public int ReadUByte(){CheckPosition(1);return _buf[_ReadIndex++] & 0xFF;}
public abstract void SetLength(int sz){NB.EncodeInt32(info, infoOffset + P_SIZE, sz);}
public DescribeScalingProcessTypesResponse describeScalingProcessTypes() { return describeScalingProcessTypes(new DescribeScalingProcessTypesRequest()); }
public ListResourceRecordSetsResponse listResourceRecordSets(ListResourceRecordSetsRequest request){var options = new InvokeOptions();options.requestMarshaller = ListResourceRecordSetsRequestMarshaller.instance;options.responseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.instance;return invoke<ListResourceRecordSetsResponse>(request, options);}
public IToken recoverInline(Parser recognizer) { InputMismatchException e = new InputMismatchException(recognizer); for (ParserRuleContext context = recognizer.getContext(); context != null; context = (ParserRuleContext)context.getParent()) { context.exception = e; } throw new ParseCanceledException(e); }
public SetTagsForResourceResponse setTagsForResource(SetTagsForResourceRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance; options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance; return Invoke<SetTagsForResourceResponse>(request, options); }
public ModifyStrategyRequest() { super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis", "openAPI"); Method = MethodType.POST; }
public DescribeVpcEndpointServicesResponse describeVpcEndpointServices(DescribeVpcEndpointServicesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeVpcEndpointServicesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeVpcEndpointServicesResponseUnmarshaller.getInstance());return invoke(new TypeReference<DescribeVpcEndpointServicesResponse>() {}, request, options);}
public EnableLoggingResponse enableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.requestMarshaller = EnableLoggingRequestMarshaller.instance;options.responseUnmarshaller = EnableLoggingResponseUnmarshaller.instance;return invoke<EnableLoggingResponse>(request, options);}
public boolean contains(Object o){return this._enclosing.containsValue(o);}
public class SheetRangeIdentifier extends NameIdentifier { private NameIdentifier _lastSheetIdentifier; public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) { super(bookName, firstSheetIdentifier); _lastSheetIdentifier = lastSheetIdentifier; } }
public DomainMetadataRequest(String domainName) {_domainName = domainName;}
public ParseException(Token currentToken, int[][] expectedTokenSequences, String[] tokenImage) {super(Initialize(currentToken, expectedTokenSequences, tokenImage));this.CurrentToken = currentToken;this.ExpectedTokenSequences = expectedTokenSequences;this.TokenImage = tokenImage;}
public class FetchPhotosRequest extends BaseRequest {public FetchPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto", "openAPI");this.Protocol = ProtocolType.HTTPS;}}
public java.io.PrintWriter writer(){return _writer;}
public class NGramTokenizerFactory {private int minGramSize;private int maxGramSize;public NGramTokenizerFactory(java.util.Map<String, String> args){super(args);minGramSize = getInt32(args, "minGramSize", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = getInt32(args, "maxGramSize", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (!args.isEmpty()){throw new java.lang.ArgumentException("Unknown parameters: " + args);}}private int getInt32(java.util.Map<String, String> args, String key, int defaultValue){if (args.containsKey(key)){return Integer.parseInt(args.get(key));} else {return defaultValue;}}}
public boolean isDirectoryFileConflict(){return dfConflict != null;}
public IndonesianStemFilter(TokenStream input, boolean stemDerivational) { super(input); this.stemDerivational = stemDerivational; termAtt = addAttribute(ICharTermAttribute.class); keywordAtt = addAttribute(IKeywordAttribute.class); }
public CreateTrafficPolicyResponse createTrafficPolicy(CreateTrafficPolicyRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateTrafficPolicyRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateTrafficPolicyResponseUnmarshaller.INSTANCE);return invoke(new CreateTrafficPolicyResponse(), request, options);}
public void serialize(OutputStream out1) throws IOException {out1.writeInt(fSD);out1.writeInt(passwordVerifier);StringUtil.writeString(out1, title);out1.write(securityDescriptor);}
public static double Floor(double n, double s) {double f;if ((n < 0 && s > 0) || (n > 0 && s < 0) || (s == 0 && n != 0)) {f = Double.NaN;} else {f = (n == 0 || s == 0) ? 0 : Math.floor(n / s) * s;}return f;}
public ByteArrayDataOutput(byte[] bytes, int offset, int len){reset(bytes, offset, len);}
public static List<ITree> GetChildren(ITree t) {List<ITree> kids = new ArrayList<ITree>();for (int i = 0; i < t.ChildCount; i++) {kids.add(t.GetChild(i));}return kids;}
public void clear() { this._enclosing.clear(); }
public RefreshAllRecord(boolean refreshAll) { this(0); RefreshAll = refreshAll; }
public DeleteNamedQueryResponse deleteNamedQuery(DeleteNamedQueryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNamedQueryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNamedQueryResponseUnmarshaller.Instance;return invoke<DeleteNamedQueryResponse>(request, options);}
public GraphvizFormatter(ConnectionCosts costs){this.costs = costs;this.bestPathMap = new HashMap<String, String>();sb.append(FormatHeader());sb.append("  init [style=invis]\n");sb.append("  init -> 0.0 [label=\"" + BOS_LABEL + "\"]\n");}
public CheckMultiagentRequest() { super("visionai-poc", "2020-04-08", "CheckMultiagent"); Method = MethodType.POST; }
public virtual ListUserProfilesResponse listUserProfiles(ListUserProfilesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListUserProfilesRequestMarshaller.Instance);options.setResponseUnmarshaller(ListUserProfilesResponseUnmarshaller.Instance);return invoke(request, options);}
public CreateRelationalDatabaseFromSnapshotResponse createRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance; options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance; return invoke<CreateRelationalDatabaseFromSnapshotResponse>(request, options); }
public virtual StartTaskResponse startTask(StartTaskRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StartTaskRequestMarshaller.Instance);options.setResponseUnmarshaller(StartTaskResponseUnmarshaller.Instance);return invoke(request, options);}
public abstract Collection<String> getIgnoredPaths() { return ignoredPaths; }
public FeatSmartTag(RecordInputStream in1){data = in1.ReadRemainder();}
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {_action = action; _resourceRecordSet = resourceRecordSet;}
public DeleteImageResponse deleteImage(DeleteImageRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteImageResponseUnmarshaller.Instance;return invoke<DeleteImageResponse>(request, options);}
public CreateConfigurationSetResponse createConfigurationSet(CreateConfigurationSetRequest request) {var options = new InvokeOptions();options.requestMarshaller = CreateConfigurationSetRequestMarshaller.instance;options.responseUnmarshaller = CreateConfigurationSetResponseUnmarshaller.instance;return invoke<CreateConfigurationSetResponse>(request, options);}
public java.util.Iterator<E> iterator() {E[] snapshot = elements;return new java.util.concurrent.CopyOnWriteArrayList.CowIterator<>(snapshot, 0, snapshot.length);}
public void visitContainedRecords(RecordVisitor rv) { if (_recs.size() == 0) { return; } rv.visitRecord(_bofRec); for (int i = 0; i < _recs.size(); i++) { RecordBase rb = _recs.get(i); if (rb instanceof RecordAggregate) { ((RecordAggregate)rb).visitContainedRecords(rv); } else { rv.visitRecord((Record)rb); } } rv.visitRecord(EOFRecord.instance); }
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[FtCbls ]").append("\n");buffer.append("  size     = ").append(DataSize).append("\n");buffer.append("  reserved = ").append(HexDump.toHex(reserved)).append("\n");buffer.append("[/FtCbls ]").append("\n");return buffer.toString();}
public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, boolean isXBAT) {BATBlock block = new BATBlock(bigBlockSize);if (isXBAT) {block.SetXBATChain(bigBlockSize, POIFSConstants.END_OF_CHAIN);}return block;}
public abstract TagResourceResponse tagResource(TagResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = TagResourceResponseUnmarshaller.Instance;return invoke<TagResourceResponse>(request, options);}
public DeleteMailboxPermissionsResponse deleteMailboxPermissions(DeleteMailboxPermissionsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteMailboxPermissionsRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DeleteMailboxPermissionsResponseUnmarshaller.INSTANCE);return invoke(DeleteMailboxPermissionsResponse.class, request, options);}
public ListDatasetGroupsResponse listDatasetGroups(ListDatasetGroupsRequest request) {var options = new InvokeOptions();options.requestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;options.responseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;return Invoke<ListDatasetGroupsResponse>(request, options);}
public ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ResumeProcessesRequestMarshaller.Instance;options.ResponseUnmarshaller = ResumeProcessesResponseUnmarshaller.Instance;return Invoke<ResumeProcessesResponse>(request, options);}
public virtual GetPersonTrackingResponse GetPersonTracking(GetPersonTrackingRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;return Invoke<GetPersonTrackingResponse>(request, options);}
public String ToFormulaString(String[] operands) { if (space.IsSet(field_1_options)) { return operands[0]; } else if (optiIf.IsSet(field_1_options)) { return ToFormulaString() + "(" + operands[0] + ")"; } else if (optiSkip.IsSet(field_1_options)) { return ToFormulaString() + operands[0]; } else { return ToFormulaString() + "(" + operands[0] + ")"; } }
public T merge(T first, T second) {throw new UnsupportedOperationException();}
public String toString(){return this.m_message.getKey() + ": " + getLocalizedMessage();}
public XPath(Parser parser, String path){this.parser = parser;this.path = path;elements = Split(path);}
public CreateAccountAliasRequest(String accountAlias) {_accountAlias = accountAlias;}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((int)block >> 7)) & 1;values[valuesOffset++] = ((int)((int)block >> 6)) & 1;values[valuesOffset++] = ((int)((int)block >> 5)) & 1;values[valuesOffset++] = ((int)((int)block >> 4)) & 1;values[valuesOffset++] = ((int)((int)block >> 3)) & 1;values[valuesOffset++] = ((int)((int)block >> 2)) & 1;values[valuesOffset++] = ((int)((int)block >> 1)) & 1;values[valuesOffset++] = block & 1;}}
public PushConnection openPush() throwsNotSupportedException {throw new NotSupportedError(JGitText.get().pushIsNotSupportedForBundleTransport);}
public static void StrCpy(char[] dst, int di, char[] src, int si) { while (src[si] != 0) { dst[di++] = src[si++]; } dst[di] = (char)0; }
public K getKey() {return mapEntry.getKey();}
public static int numNonnull(Object[] data) { int n = 0; if (data == null) { return n; } for (Object o : data) { if (o != null) { n++; } } return n; }
@Overridepublic void add(int location, E @object){if (location >= 0 && location <= _size){java.util.LinkedList.Link<E> link = voidLink;if (location < (_size / 2)){for (int i = 0; i <= location; i++){link = link.next;}} else {for (int i = _size; i > location; i--){link = link.previous;}}java.util.LinkedList.Link<E> previous = link.previous;java.util.LinkedList.Link<E> newLink = new java.util.LinkedList.Link<E>(@object, previous, link);previous.next = newLink;link.previous = newLink;_size++;modCount++;} else {throw new System.IndexOutOfRangeException();}}
public abstract DescribeDomainResponse describeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return invoke<DescribeDomainResponse>(request, options);}
public void flush() { throw new UnsupportedOperationException(); }
import java.util.Map;public class PersianCharFilterFactory extends Base {public PersianCharFilterFactory(Map<String, String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}}
public boolean incrementToken(){if (used){return false;}clearAttributes();termAttribute.append(value);offsetAttribute.setOffset(0, value.length());used = true;return true;}
public static java.nio.FloatBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new IllegalArgumentException();}return java.nio.ByteBuffer.allocateDirect(4 * capacity_1).asFloatBuffer();}
public NGit.Diff.Edit after(NGit.Diff.Edit cut){return new NGit.Diff.Edit(cut.endA, endA, cut.endB, endB);}
public abstract UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;return Invoke<UpdateRuleVersionResponse>(request, options);}
public ListVoiceConnectorTerminationCredentialsResponse listVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request){var options = new InvokeOptions();options.requestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.responseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);}
public GetDeploymentTargetResponse getDeploymentTarget(GetDeploymentTargetRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetDeploymentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDeploymentTargetResponseUnmarshaller.Instance;return Invoke<GetDeploymentTargetResponse>(request, options);}
public void setNoChildReport() { letChildReport = false; for (PerfTask task : tasks) { if (task instanceof TaskSequence) { ((TaskSequence) task).setNoChildReport(); } } }
public E get(int location) throws IndexOutOfBoundsException {try {return a[location];} catch (System.IndexOutOfRangeException e) {throw new IndexOutOfBoundsException("Index " + location + " out of bounds for length " + a.length);}}
public DescribeDataSetResponse describeDataSet(DescribeDataSetRequest request) {var options = new InvokeOptions();options.requestMarshaller = DescribeDataSetRequestMarshaller.INSTANCE;options.responseUnmarshaller = DescribeDataSetResponseUnmarshaller.INSTANCE;return invoke(request, options);}
public SkipWorkTreeFilter(int treeIdx) { this.treeIdx = treeIdx; }
public abstract DescribeNetworkInterfacesResponse describeNetworkInterfaces(){return describeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}
public boolean contains(int row, int col){return _firstRow <= row && _lastRow >= row&& _firstColumn <= col && _lastColumn >= col;}
public String toString(){return new String(this.chars);}
public abstract FileHeader.PatchType getPatchType(){return patchType;}
public java.util.Iterator<K> iterator(){return new java.util.Hashtable<K, V>.KeyIterator(this._enclosing);}
public CreateScriptResponse CreateScript(CreateScriptRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateScriptResponseUnmarshaller.Instance;return Invoke<CreateScriptResponse>(request, options);}
@Overridepublic BytesRef Next() {termUpto++;if (termUpto >= info.terms.size()) {return null;} else {info.terms.get(info.sortedTerms.get(termUpto), br);return br;}}
public String outputToString(CharsRef output){return output.toString();}
public AssociateWebsiteAuthorizationProviderResponse associateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){var options = new InvokeOptions();options.requestMarshaller = AssociateWebsiteAuthorizationProviderRequestMarshaller.Instance;options.responseUnmarshaller = AssociateWebsiteAuthorizationProviderResponseUnmarshaller.Instance;return invoke<AssociateWebsiteAuthorizationProviderResponse>(request, options);}
public void unpop(RevCommit c) {BlockRevQueue.Block b = head;if (b == null) {b = free.newBlock();b.resetToMiddle();b.add(c);head = b;tail = b;return;} else {if (b.canUnpop()) {b.unpop(c);return;}}b = free.newBlock();b.resetToEnd();b.unpop(c);b.next = head;head = b;}
public EdgeNGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt32(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = getInt32(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);side = get(args, "side", EdgeNGramTokenFilter.Side.FRONT.toString());if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public ModifyDBParameterGroupRequest(String dbParameterGroupName, List<Parameter> parameters) {_dbParameterGroupName = dbParameterGroupName; _parameters = parameters;}
public virtual GetHostedZoneLimitResponse GetHostedZoneLimit(GetHostedZoneLimitRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;return Invoke<GetHostedZoneLimitResponse>(request, options);}
public void set(int index, long value){int o = (int)((uint)index >> 6);int b = index & 63;int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
public RevFilter clone() { return new CommitterRevFilter.PatternSearch(Pattern()); }
public String toString() { return "spans(" + m_term.toString() + ")@" + (m_doc == -1 ? "START" : (m_doc == Integer.MAX_VALUE) ? "END" : m_doc + "-" + m_position); }
public boolean canAppendMatch() {for (int i = 0; i < heads.size(); i++) {if (heads.get(i) != LastHead.INSTANCE) {return true;}}return false;}
public int lastIndexOf(String subString, int start){synchronized (this){return super.lastIndexOf(subString, start);}}
public DeleteNetworkAclEntryResponse deleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteNetworkAclEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteNetworkAclEntryResponseUnmarshaller.getInstance());return invoke(request, options);}
public virtual AssociateMemberToGroupResponse associateMemberToGroup(AssociateMemberToGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberToGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.Instance;return Invoke<AssociateMemberToGroupResponse>(request, options);}
public static int Committer(byte[] b, int ptr){int sz = b.length;if (ptr == 0){ptr += 46;}while (ptr < sz && b[ptr] == 'p'){ptr += 48;}if (ptr < sz && b[ptr] == 'a'){ptr = NextLF(b, ptr);}return Match(b, ptr, ObjectChecker.committer);}
public int getLineNumber() { return row; }
public NGit.Api.SubmoduleUpdateCommand addPath(String path) { paths.addItem(path); return this; }
public GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance;return Invoke<GetPushTemplateResponse>(request, options);}
public abstract DescribeVaultResponse describeVault(DescribeVaultRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;return invoke<DescribeVaultResponse>(request, options);}
public DescribeVpcPeeringConnectionsResponse describeVpcPeeringConnections(){return describeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}
public java.nio.ByteBuffer putLong(int index, long value) { throw new UnsupportedOperationException(); }
public abstract RegisterDeviceResponse registerDevice(RegisterDeviceRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(new RegisterDeviceRequestMarshaller());options.setResponseUnmarshaller(new RegisterDeviceResponseUnmarshaller());return invoke(RegisterDeviceResponse.class, request, options);}
public static Format byId(int id) {for (Format format : Values) {if (format.getId() == id) {return format;}}throw new IllegalArgumentException("Unknown format id: " + id);}
public virtual DeleteAppResponse DeleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;return Invoke<DeleteAppResponse>(request, options);}
public abstract GetBaiduChannelResponse GetBaiduChannel(GetBaiduChannelRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBaiduChannelResponseUnmarshaller.Instance;return Invoke<GetBaiduChannelResponse>(request, options);}
public BytesReader getBytesReader(){return fst.getBytesReader();}
public static boolean isValidSchemeChar(int index, char c) { if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) { return true; } if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) { return true; } return false; }
public ListAppliedSchemaArnsResponse listAppliedSchemaArns(ListAppliedSchemaArnsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListAppliedSchemaArnsRequestMarshaller.Instance);options.setResponseUnmarshaller(ListAppliedSchemaArnsResponseUnmarshaller.Instance);return invoke(new com.amazonaws.services.cleanrooms.model.ListAppliedSchemaArnsResponse(request, options));}
public URI BaseUri { get; set; }
public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length < 1) {return ErrorEval.VALUE_INVALID;}boolean isA1style = false;String text = null;try {ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.RowIndex, ec.ColumnIndex);text = OperandResolver.CoerceValueToString(ve);switch (args.length) {case 1:isA1style = true;break;case 2:isA1style = EvaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}} catch (EvaluationException e) {return e.GetErrorEval();}return EvaluateIndirect(ec, text, isA1style);}
public int CompareTo(int[] bs, int p) {int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0) {return cmp;}return NB.CompareUInt32(w5, bs[p + 4]);}
public void RemoveName(int index){names.remove(index);workbook.RemoveName(index);}
public GetQueueAttributesRequest(String queueUrl, List<String> attributeNames) { _queueUrl = queueUrl; _attributeNames = attributeNames; }
public static boolean[] copyOf(boolean[] original, int newLength){if (newLength < 0){throw new java.lang.NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}
public static void setEnabled(boolean enabled){ENABLED = enabled;}
public DeleteLogPatternResponse deleteLogPattern(DeleteLogPatternRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;return Invoke<DeleteLogPatternResponse>(request, options);}
public boolean contains(char[] text, int offset, int length) {return map.containsKey(text, offset, length);}
public int getFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.getFirstInternalSheetIndexForExtIndex(externSheetNumber);}
public boolean handles(String commandLine) { return command.length() + 1 < commandLine.length() && commandLine.charAt(command.length()) == ' ' && commandLine.startsWith(command); }
public static void Register(MergeStrategy imp) { Register(imp.GetName(), imp); }
public long RamBytesUsed(){return ((index != null) ? index.GetSizeInBytes() : 0);}
public HostedZone(String id, String name, String callerReference) { _id = id; _name = name; _callerReference = callerReference; }
public virtual GetFindingsResponse GetFindings(GetFindingsRequest request){.InvokeOptions options = new InvokeOptions();options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFindingsResponseUnmarshaller.Instance;return Invoke<GetFindingsResponse>(request, options);}
public virtual DescribeTopicsDetectionJobResponse describeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;return invoke<DescribeTopicsDetectionJobResponse>(request, options);}
public boolean processMatch(ValueEval eval) {if (eval instanceof NumericValueEval) {if (minimumValue == null) {minimumValue = eval;} else {double currentValue = ((NumericValueEval) eval).getNumberValue();double oldValue = ((NumericValueEval) minimumValue).getNumberValue();if (currentValue < oldValue) {minimumValue = eval;}}}return true;}
public void write(ILittleEndianOutput out1) { out1.writeByte(sid + PtgClass); out1.writeShort(field_1_len_ref_subexpression); }
import java.io.IOException;import java.nio.file.DirectoryStream;import java.nio.file.Files;import java.nio.file.Path;import java.nio.file.Paths;import java.util.Scanner;public class Main {public static void main(String[] args) {boolean printTree = false;String path = null;for (int i = 0; i < args.length; i++) {if ("-printTree".equals(args[i])) {printTree = true;} else {path = args[i];}}if (args.length != (printTree ? 2 : 1)) {throw new IllegalArgumentException();}try (DirectoryStream<Path> stream = Files.newDirectoryStream(Paths.get(path))) {PrintStats(stream.iterator().next(), System.out, printTree);} catch (IOException e) {e.printStackTrace();}System.exit(0);}private static void PrintStats(Path path, Appendable out, boolean printTree) throws IOException {// Implementation of PrintStats method}}
public abstract void SetByteValue(byte value){if (!(FieldsData instanceof Byte)){throw new IllegalArgumentException("cannot change value type from " + FieldsData.getClass().getName() + " to Byte");}FieldsData = new Byte(value);}
public static int Initialize() { return Initialize(DefaultSeed); }
public CachingDoubleValueSource(ValueSource source) { this.m_source = source; this.m_cache = new java.util.HashMap<Integer, Double>(); }
public class AttributeDefinition { private String _attributeName; private ScalarAttributeType _attributeType; public AttributeDefinition(String attributeName, ScalarAttributeType attributeType) { this._attributeName = attributeName; this._attributeType = attributeType; } }
public static String join(ICollection<String> parts, String separator) { return NGit.Util.StringUtils.join(parts, separator, separator); }
public abstract ListTaskDefinitionFamiliesResponse listTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance; options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance; return invoke<ListTaskDefinitionFamiliesResponse>(request, options); }
public abstract ListComponentsResponse ListComponents(ListComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;return Invoke<ListComponentsResponse>(request, options);}
public ActivatePhotosRequest() { super("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto", "openAPI"); setProtocol(ProtocolType.HTTPS); }
public CreateMatchmakingRuleSetResponse createMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;return invoke(request, options);}
public ListAvailableManagementCidrRangesResponse listAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(ListAvailableManagementCidrRangesRequestMarshaller.Instance);options.setResponseUnmarshaller(ListAvailableManagementCidrRangesResponseUnmarshaller.Instance);return invoke(request, options);}
public abstract ObjectIdSubclassMap<ObjectId> GetBaseObjectIds(){if (baseObjectIds != null){return baseObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
public DeletePushTemplateResponse DeletePushTemplate(DeletePushTemplateRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;return Invoke<DeletePushTemplateResponse>(request, options);}
public CreateDomainEntryResponse createDomainEntry(CreateDomainEntryRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(CreateDomainEntryRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(CreateDomainEntryResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public static int GetEncodedSize(Object[] values) { int result = values.length * 1; for (int i = 0; i < values.length; i++) { result += GetEncodedSize(values[i]); } return result; }
public OpenNLPTokenizerFactory(Map<String, String> args) {super(args);sentenceModelFile = Require(args, SENTENCE_MODEL);tokenizerModelFile = Require(args, TOKENIZER_MODEL);if (!args.isEmpty()) {throw new ArgumentException("Unknown parameters: " + args);}}
public final int getInt(int index) { checkIndex(index, libcore.io.SizeOf.INT); return libcore.io.Memory.peekInt(backingArray, offset + index, _order); }
public List<Head> getNextHeads(char c){if (matches(c)){return newHeads;}else{return FileNameMatcher.EMPTY_HEAD_LIST;}}
public short putShort(short value) { throw new UnsupportedOperationException(); }
public abstract void writeUnshared(Object object) { throw new UnsupportedOperationException(); }
public int offsetByCodePoints(int index, int codePointOffset) { return Sharpen.CharHelper.OffsetByCodePoints(value, 0, count, index, codePointOffset); }
public static int GetUniqueAlt(Iterable<BitSet> altsets) {BitSet all = GetAlts(altsets);if (all.cardinality() == 1) {return all.nextSetBit(0);}return ATN.INVALID_ALT_NUMBER;}
public DateTime GetWhen(){return Sharpen.Extensions.CreateDate(when);}
public RuleTagToken(String ruleName, int bypassTokenType, String label) { if (ruleName == null || ruleName.isEmpty()) { throw new IllegalArgumentException("ruleName cannot be null or empty."); } this.ruleName = ruleName; this.bypassTokenType = bypassTokenType; this.label = label; }
public abstract DisableOrganizationAdminAccountResponse disableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableOrganizationAdminAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableOrganizationAdminAccountResponseUnmarshaller.Instance;return invoke<DisableOrganizationAdminAccountResponse>(request, options);}
public abstract CreateRoomResponse CreateRoom(CreateRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;return Invoke<CreateRoomResponse>(request, options);}
public DeleteReplicationGroupResponse deleteReplicationGroup(DeleteReplicationGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;return invoke<DeleteReplicationGroupResponse>(request, options);}
public java.nio.CharBuffer decode(java.nio.ByteBuffer buffer){try{return newDecoder().onMalformedInput(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).decode(buffer);}catch (java.nio.charset.CharacterCodingException ex){throw new System.Exception(ex.Message, ex);}}
public Distribution(String id, String status, String domainName) {_id = id;_status = status;_domainName = domainName;}
public final Object array(){return protectedArray();}
public DateWindow1904Record(RecordInputStream in1){field_1_window = in1.readShort();}
public DeleteDBSnapshotRequest(String dbSnapshotIdentifier) {_dbSnapshotIdentifier = dbSnapshotIdentifier;}
public ParserExtension getExtension(String key){if (key == null || !this.extensions.TryGetValue(key, out ParserExtension value)) return null;return value;}
public abstract void inform(IResourceLoader loader){try{if (chunkerModelFile != null){OpenNLPOpsFactory.getChunkerModel(chunkerModelFile, loader);}}catch (IOException e){throw new ArgumentException(e.toString(), e);}}
public abstract CompleteVaultLockResponse completeVaultLock(CompleteVaultLockRequest request){InvokeOptions options = new InvokeOptions();options.requestMarshaller = CompleteVaultLockRequestMarshaller.Instance;options.responseUnmarshaller = CompleteVaultLockResponseUnmarshaller.Instance;return Invoke<CompleteVaultLockResponse>(request, options);}
public int[] getCharIntervals() { return (int[])((Array)_points.Clone()); }
public long RamBytesUsed() { return RamUsageEstimator.AlignObjectSize(3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF + 2 * RamUsageEstimator.NUM_BYTES_INT32) + RamUsageEstimator.SizeOf(data) + positions.RamBytesUsed() + wordNums.RamBytesUsed(); }
public abstract RegisterInstancesWithLoadBalancerResponse registerInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.INSTANCE; options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.INSTANCE; return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options); }
public DescribeClusterUserKubeconfigRequest() { super("CS", "2015-12-15", "DescribeClusterUserKubeconfig", "cs", "openAPI"); UriPattern = "/k8s/[ClusterId]/user_config"; Method = MethodType.GET; }
public PrecisionRecord(RecordInputStream in1){field_1_precision = in1.readShort();}
public void serialize(ILittleEndianOutput out1) {out1.writeShort(LeftRowGutter);out1.writeShort(TopColGutter);out1.writeShort(RowLevelMax);out1.writeShort(ColLevelMax);}
public abstract DeleteVirtualInterfaceResponse deleteVirtualInterface(DeleteVirtualInterfaceRequest request){var options = new InvokeOptions();options.requestMarshaller = DeleteVirtualInterfaceRequestMarshaller.INSTANCE;options.responseUnmarshaller = DeleteVirtualInterfaceResponseUnmarshaller.INSTANCE;return invoke<DeleteVirtualInterfaceResponse>(request, options);}
public Entry GetEntry(String name){if (excludes.contains(name)){throw new FileNotFoundException(name);}Entry entry = directory.getEntry(name);return wrapEntry(entry);}
public String toString() { StringBuilder buffer = new StringBuilder(); buffer.append("[BACKUP]\n"); buffer.append("    .backup          = ").append(StringUtil.toHexString(backup)).append("\n"); buffer.append("[/BACKUP]\n"); return buffer.toString(); }
public DeleteVoiceConnectorOriginationResponse deleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request){var options = new InvokeOptions();options.requestMarshaller = DeleteVoiceConnectorOriginationRequestMarshaller.Instance;options.responseUnmarshaller = DeleteVoiceConnectorOriginationResponseUnmarshaller.Instance;return invoke<DeleteVoiceConnectorOriginationResponse>(request, options);}
public virtual OpenStringBuilder Append(char c){Write(c);return this;}
public static long GenerationFromSegmentsFileName(String fileName) {if (fileName.equals(IndexFileNames.SEGMENTS, StringComparison.Ordinal)) {return 0;} else if (fileName.startsWith(IndexFileNames.SEGMENTS, StringComparison.Ordinal)) {return Long.parseLong(fileName.substring(1 + IndexFileNames.SEGMENTS.length()), Character.MAX_RADIX);} else {throw new IllegalArgumentException("fileName \"" + fileName + "\" is not a segments file");}}
public static TagOpt FromOption(String o){if (o == null || o.length() == 0){return AUTO_FOLLOW;}for (TagOpt tagopt : values()){if (tagopt.Option().equals(o)){return tagopt;}}throw new ArgumentException(MessageFormat.format(JGitText.Get().invalidTagOption, o));}
public abstract StartContentModerationResponse startContentModeration(StartContentModerationRequest request){var options = new InvokeOptions();options.setRequestMarshaller(StartContentModerationRequestMarshaller.Instance);options.setResponseUnmarshaller(StartContentModerationResponseUnmarshaller.Instance);return invoke(StartContentModerationResponse.class, request, options);}
public static String quoteReplacement(String s) {java.lang.StringBuilder result = new java.lang.StringBuilder(s.length());for (int i = 0; i < s.length(); i++) {char c = s.charAt(i);if (c == '\\' || c == '$') {result.append('\\');}result.append(c);}return result.toString();}
public void set(V newValue){value = newValue;}
public class QueryParserTokenManager { private ICharStream m_input_stream; public QueryParserTokenManager(ICharStream stream) { InitBlock(); m_input_stream = stream; } }
public long valueFor(double elapsed) {double val;if (modBy == 0) {val = elapsed / factor;} else {val = elapsed / factor % modBy;}if (type == '0') {return (long)Math.round(val);} else {return (long)val;}}
public java.nio.LongBuffer get(long[] dst, int dstOffset, int longCount) {byteBuffer.limit(_limit * libcore.io.SizeOf.LONG);byteBuffer.position(_position * libcore.io.SizeOf.LONG);if (byteBuffer instanceof java.nio.DirectByteBuffer) {((java.nio.DirectByteBuffer) byteBuffer).get(dst, dstOffset, longCount);} else {((java.nio.HeapByteBuffer) byteBuffer).get(dst, dstOffset, longCount);}this._position += longCount;return this;}
public void removeErrorListeners(){listeners = new IAntlrErrorListener[0];}
public CommonTokenStream(ITokenSource tokenSource, int channel) { this(tokenSource); this.channel = channel; }
public abstract ListObjectPoliciesResponse listObjectPolicies(ListObjectPoliciesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListObjectPoliciesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListObjectPoliciesResponseUnmarshaller.getInstance());return invoke(request, options);}
public ObjectToPack(AnyObjectId src, int type) { super(src); flags = type << TYPE_SHIFT; }
public abstract int stem(char[] s, int len) {int numVowels_Renamed = numVowels(s, len);for (int i = 0; i < affixes.length; i++) {Affix affix = affixes[i];if (numVowels_Renamed > affix.vc && len >= affix.affix.length + 3 && StemmerUtil.endsWith(s, len, affix.affix)) {len -= affix.affix.length;return affix.palatalizes ? unpalatalize(s, len) : len;}}return len;}
public void recover(Parser recognizer, RecognitionException e) { if (lastErrorIndex == ((ITokenStream)recognizer.getInputStream()).index && lastErrorStates != null && lastErrorStates.contains(recognizer.getState())) { recognizer.consume(); } lastErrorIndex = ((ITokenStream)recognizer.getInputStream()).index; if (lastErrorStates == null) { lastErrorStates = new IntervalSet(); } lastErrorStates.add(recognizer.getState()); IntervalSet followSet = getErrorRecoverySet(recognizer); consumeUntil(recognizer, followSet); }
public String toFormulaString() {String value = field_3_string;int len = value.length();StringBuilder sb = new StringBuilder(len + 4);sb.append(FORMULA_DELIMITER);for (int i = 0; i < len; i++) {char c = value.charAt(i);if (c == FORMULA_DELIMITER) {sb.append(FORMULA_DELIMITER);}sb.append(c);}sb.append(FORMULA_DELIMITER);return sb.toString();}
public UnlinkFaceRequest() { super("LinkFace", "2018-07-20", "UnlinkFace"); Protocol = ProtocolType.HTTPS; Method = MethodType.POST; }
public class ConfigurationOptionSetting {private String _awsNamespace;private String _optionName;private String _value;public ConfigurationOptionSetting(String awsNamespace, String optionName, String value) {_awsNamespace = awsNamespace;_optionName = optionName;_value = value;}}
public String GetFully(String key) {StringBuilder result = new StringBuilder(m_tries.size() * 2);for (int i = 0; i < m_tries.size(); i++) {String r = m_tries.get(i).GetFully(key);if (r == null || (r.length() == 1 && r.charAt(0) == EOM)) {return result.toString();}result.append(r);}return result.toString();}
public DescribeMountTargetSecurityGroupsResponse describeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;return invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);}
public GetApiMappingResponse getApiMapping(GetApiMappingRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetApiMappingRequestMarshaller.Instance);options.setResponseUnmarshaller(GetApiMappingResponseUnmarshaller.Instance);return invoke(new GetApiMappingResponse(), options);}
public HttpRequest(String strUrl) { Url = strUrl; Headers = new HashMap<String, String>(); }
public MemFuncPtg(int subExprLen) {field_1_len_ref_subexpression = subExprLen;}
public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, String field, Comparator<TermStats> comparer) {TermStatsQueue tiq = null;if (field != null) {Fields fields = MultiFields.getFields(reader);if (fields == null) {throw new Exception("field " + field + " not found");}Terms terms = fields.getTerms(field);if (terms != null) {TermsEnum termsEnum = terms.iterator(null);tiq = new TermStatsQueue(numTerms, comparer);tiq.fill(field, termsEnum);}} else {Fields fields = MultiFields.getFields(reader);if (fields == null) {throw new Exception("no fields found for this index");}tiq = new TermStatsQueue(numTerms, comparer);for (String fieldName : fields) {Terms terms = fields.getTerms(fieldName);if (terms != null) {tiq.fill(fieldName, terms.iterator(null));}}}TermStats[] result = new TermStats[tiq.count()];int count = tiq.count() - 1;while (tiq.count() != 0) {result[count] = tiq.pop();count--;}return result;}
public abstract DeleteApnsVoipChannelResponse DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;return Invoke<DeleteApnsVoipChannelResponse>(request, options);}
public abstract ListFacesResponse listFaces(ListFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListFacesResponseUnmarshaller.Instance;return invoke<ListFacesResponse>(request, options);}
public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier) {this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}
public char get(int index) {checkIndex(index);return sequence[index];}
public UpdateConfigurationProfileResponse updateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.INSTANCE;options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.INSTANCE;return invoke<UpdateConfigurationProfileResponse>(request, options);}
public native DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLifecycleHooksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLifecycleHooksResponseUnmarshaller.Instance;return Invoke<DescribeLifecycleHooksResponse>(request, options);}
public DescribeHostReservationsResponse describeHostReservations(DescribeHostReservationsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeHostReservationsRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.Instance; return Invoke<DescribeHostReservationsResponse>(request, options); }
public static PredictionContext fromRuleContext(ATN atn, RuleContext outerContext) { if (outerContext == null) outerContext = ParserRuleContext.EMPTY; if (outerContext.Parent == null || outerContext == ParserRuleContext.EMPTY) return PredictionContext.EMPTY; PredictionContext parent = fromRuleContext(atn, outerContext.Parent); ATNState state = atn.states[outerContext.invokingState]; RuleTransition transition = (RuleTransition)state.Transition(0); return parent.getChild(transition.followState.stateNumber); }
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SXVDEX]\n");buffer.append("    .grbit1 =").append(HexDump.IntToHex(grbit1)).append("\n");buffer.append("    .grbit2 =").append(HexDump.ByteToHex(grbit2)).append("\n");buffer.append("    .citmShow =").append(HexDump.ByteToHex(citmShow)).append("\n");buffer.append("    .isxdiSort =").append(HexDump.ShortToHex(isxdiSort)).append("\n");buffer.append("    .isxdiShow =").append(HexDump.ShortToHex(isxdiShow)).append("\n");buffer.append("    .subName =").append(subName).append("\n");buffer.append("[/SXVDEX]\n");return buffer.toString();}
public String toString() {StringBuilder r = new StringBuilder();r.append("BlameResult: ");r.append(getResultPath());return r.toString();}
public abstract ListChangeSetsResponse listChangeSets(ListChangeSetsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance; options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance; return Invoke<ListChangeSetsResponse>(request, options); }
public boolean isAllowNonFastForwards() { return allowNonFastForwards; }
public FeatRecord() { futureHeader = new FtrHeader(); futureHeader.RecordType = (sid); }
public java.nio.ShortBuffer put(short c) { throw new java.nio.ReadOnlyBufferException(); }
public void setQuery(String query) { this.query = query; this.m_message = new Message(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, ""); }
public StashApplyCommand StashApply() { return new StashApplyCommand(repo); }
public Collection<String> NameSet() { return dictionaryNameToID.keySet(); }
public static int getEffectivePort(String scheme, int specifiedPort){if (specifiedPort != -1){return specifiedPort;}if (scheme.equalsIgnoreCase("http")){return 80;}else{if (scheme.equalsIgnoreCase("https")){return 443;}else{return -1;}}}
public abstract ListAssessmentTemplatesResponse listAssessmentTemplates(ListAssessmentTemplatesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListAssessmentTemplatesRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(ListAssessmentTemplatesResponseUnmarshaller.INSTANCE);return invoke(request, options);}
public RestoreFromClusterSnapshotResponse restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) { var options = new InvokeOptions(); options.requestMarshaller = RestoreFromClusterSnapshotRequestMarshaller.Instance; options.responseUnmarshaller = RestoreFromClusterSnapshotResponseUnmarshaller.Instance; return invoke<RestoreFromClusterSnapshotResponse>(request, options); }
public void addShape(HSSFShape shape) { shape.setPatriarch(this.getPatriarch()); shape.setParent(this); this.shapes.add(shape); }
public boolean equals(Object o) {if (this == o) return true;if (o == null || getClass() != o.getClass()) return false;FacetEntry that = (FacetEntry)o;if (count != that.count) return false;if (!value.equals(that.value)) return false;return true;}
public static int Prev(byte[] b, int ptr, char chrA){if (ptr == b.length){--ptr;}while (ptr >= 0){if (b[ptr--] == chrA){return ptr;}}return ptr;}
public boolean isDeltaRepresentation(){return deltaBase != null;}
public IToken emitEOF() {int cpos = getColumn();int line = getLine();IToken eof = _factory.create(_tokenFactorySourcePair, TokenConstants.EOF, null, TokenConstants.DefaultChannel, _input.index, _input.index - 1, line, cpos);emit(eof);return eof;}
public UpdateUserRequest(String userName) {_userName = userName;}
public virtual RevFilter Negate() { return NotRevFilter.Create(this); }
public void setTagger(PersonIdent taggerIdent){tagger = taggerIdent;}
public static BufferSize Automatic(){long max, total, free;try (var proc = Process.GetCurrentProcess()){max = proc.PeakVirtualMemorySize64;total = proc.VirtualMemorySize64;free = proc.PrivateMemorySize64;}long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes) {if (totalAvailableBytes / 2 > minBufferSizeBytes) {sortBufferByteSize = totalAvailableBytes / 2;} else{sortBufferByteSize = Math.max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.min((long)int.MaxValue, sortBufferByteSize));}
public static int trimTrailingWhitespace(byte[] raw, int start, int end) { int ptr = end - 1; while (start <= ptr && isWhitespace(raw[ptr])) { ptr--; } return ptr + 1; }
public TopMarginRecord(RecordInputStream in1){field_1_margin = in1.ReadDouble();}
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {_infoType = infoType;}
public CreatePlayerSessionsResponse createPlayerSessions(CreatePlayerSessionsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreatePlayerSessionsRequestMarshaller.Instance; options.ResponseUnmarshaller = CreatePlayerSessionsResponseUnmarshaller.Instance; return Invoke<CreatePlayerSessionsResponse>(request, options); }
public CreateProxySessionResponse CreateProxySession(CreateProxySessionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateProxySessionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProxySessionResponseUnmarshaller.Instance;return Invoke<CreateProxySessionResponse>(request, options);}
public int GetObjectType(){return type;}
public String getScheme() { return scheme; }
public void Characters(char[] ch, int start, int length) { contents.append(ch, start, length); }
public FetchAlbumTagPhotosRequest() { super("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto", "openAPI"); this.setProtocol(ProtocolType.HTTPS); }
public abstract DeleteMembersResponse deleteMembers(DeleteMembersRequest request){var options = new InvokeOptions();options.requestMarshaller = DeleteMembersRequestMarshaller.Instance;options.responseUnmarshaller = DeleteMembersResponseUnmarshaller.Instance;return invoke<DeleteMembersResponse>(request, options);}
public GetContactReachabilityStatusResponse getContactReachabilityStatus(GetContactReachabilityStatusRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetContactReachabilityStatusRequestMarshaller.Instance);options.setResponseUnmarshaller(GetContactReachabilityStatusResponseUnmarshaller.Instance);return invoke(GetContactReachabilityStatusResponse.class, request, options);}
public synchronized boolean remove(Object o){synchronized (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(o);return this._enclosing._size != oldSize;}}
public virtual E last(){return backingMap.lastKey();}
public CreateStreamingDistributionResponse createStreamingDistribution(CreateStreamingDistributionRequest request){var options = new InvokeOptions();options.requestMarshaller = CreateStreamingDistributionRequestMarshaller.Instance;options.responseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.Instance;return invoke<CreateStreamingDistributionResponse>(request, options);}
public boolean isAbsolute() {return absolute;}
public abstract DisableAddOnResponse disableAddOn(DisableAddOnRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance; options.ResponseUnmarshaller = DisableAddOnResponseUnmarshaller.Instance; return invoke<DisableAddOnResponse>(request, options); }
public abstract DescribeAliasResponse DescribeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;return Invoke<DescribeAliasResponse>(request, options);}
public void next(int delta) { while (--delta >= 0) { if (currentSubtree != null) { ptr += currentSubtree.getEntrySpan(); } else { ptr++; } if (eof) { break; } parseEntry(); } }
@Overridepublic RevFilter clone() { return new AndRevFilter.Binary(a.clone(), b.clone()); }
@Overridepublic TextReader Create(TextReader input) {return new PersianCharFilter(input);}
public String Option(){return option;}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder("[");for (var item : this) {if (sb.length() > 1) {sb.append(", ");}sb.append(item);}return sb.append(']').toString();}
public virtual DescribeSignalingChannelResponse DescribeSignalingChannel(DescribeSignalingChannelRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSignalingChannelResponseUnmarshaller.Instance;return Invoke<DescribeSignalingChannelResponse>(request, options);}
public virtual AttachStaticIpResponse AttachStaticIp(AttachStaticIpRequest request) {var options = new InvokeOptions();options.RequestMarshaller = AttachStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachStaticIpResponseUnmarshaller.Instance;return Invoke<AttachStaticIpResponse>(request, options);}
@Overridepublic String toString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.append(getType().getName());sb.append(" [").append(crA.formatAsString()).append(':').append(crB.formatAsString()).append("]");return sb.toString();}
public class BloomFilteringPostingsFormat extends OtherClass { private PostingsFormat _delegatePostingsFormat; private BloomFilterFactory _bloomFilterFactory; public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat, BloomFilterFactory bloomFilterFactory) { super(); this._delegatePostingsFormat = delegatePostingsFormat; this._bloomFilterFactory = bloomFilterFactory; } }
public ListTemplatesResponse listTemplates(ListTemplatesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;return Invoke<ListTemplatesResponse>(request, options);}
public TimerThread(long resolution, Counter counter) { super(THREAD_NAME); this.resolution = resolution; this.counter = counter; this.setDaemon(true); }
public DrawingRecord(){recordData = EMPTY_BYTE_ARRAY;}
public abstract ListDirectoriesResponse listDirectories(ListDirectoriesRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance; options.ResponseUnmarshaller = ListDirectoriesResponseUnmarshaller.Instance; return invoke<ListDirectoriesResponse>(request, options); }
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){byte block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((block >> 7) & 0x01));values[valuesOffset++] = ((int)((block >> 6) & 0x01));values[valuesOffset++] = ((int)((block >> 5) & 0x01));values[valuesOffset++] = ((int)((block >> 4) & 0x01));values[valuesOffset++] = ((int)((block >> 3) & 0x01));values[valuesOffset++] = ((int)((block >> 2) & 0x01));values[valuesOffset++] = ((int)((block >> 1) & 0x01));values[valuesOffset++] = block & 0x01;}}
public GroupingSearch disableCaching(){this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}
public static int idealByteArraySize(int need) {for (int i = 4; i < 32; i++) {if (need <= (1 << i) - 12) {return (1 << i) - 12;}}return need;}
public UpdateAssessmentTargetResponse updateAssessmentTarget(UpdateAssessmentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;return invoke<UpdateAssessmentTargetResponse>(request, options);}
public ModifyVolumeResponse modifyVolume(ModifyVolumeRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ModifyVolumeRequestMarshaller.Instance);options.setResponseUnmarshaller(ModifyVolumeResponseUnmarshaller.Instance);return invoke<ModifyVolumeResponse>(request, options);}
public Cell merge(Cell m, Cell e){if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {Cell c = new Cell(m);c.cnt += e.cnt;return c;} else {return null;}}
public ByteBuffer read(int length, long position) {if (position >= size) throw new IllegalArgumentException("Position " + position + " past the end of the file");ByteBuffer dst;int worked = -1;if (writable) {dst = ByteBuffer.createBuffer(length);worked = 0;} else {fileStream.position = position;dst = ByteBuffer.createBuffer(length);worked = IOUtils.readFully(fileStream, dst.buffer);}if (worked == -1) throw new IllegalArgumentException("Position " + position + " past the end of the file");dst.position = 0;return dst;}
public abstract RespondActivityTaskCompletedResponse respondActivityTaskCompleted(RespondActivityTaskCompletedRequest request){var options = new InvokeOptions();options.requestMarshaller = RespondActivityTaskCompletedRequestMarshaller.Instance;options.responseUnmarshaller = RespondActivityTaskCompletedResponseUnmarshaller.Instance;return invoke<RespondActivityTaskCompletedResponse>(request, options);}
public void incrementProgressBy(int diff){synchronized(this){setProgress(mProgress + diff);}}
public WorkingTreeIterator.MetadataDiff compareMetadata(DirCacheEntry entry){if (entry.isAssumeValid){return WorkingTreeIterator.MetadataDiff.EQUAL;}if (entry.isUpdateNeeded){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}if (!entry.isSmudged && entry.length != (int)getEntryLength()){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}if (isModeDifferent(entry.rawMode)){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}long cacheLastModified = entry.lastModified;long fileLastModified = getEntryLastModified();if (cacheLastModified % 1000 == 0 || fileLastModified % 1000 == 0){cacheLastModified = cacheLastModified - cacheLastModified % 1000;fileLastModified = fileLastModified - fileLastModified % 1000;}if (fileLastModified != cacheLastModified){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_TIMESTAMP;}else{if (!entry.isSmudged){return WorkingTreeIterator.MetadataDiff.EQUAL;}else{return WorkingTreeIterator.MetadataDiff.SMUDGED;}}}
public static NumberRecord ConvertToNumberRecord(RKRecord rk) { NumberRecord num = new NumberRecord(); num.Column = rk.Column; num.Row = rk.Row; num.XFIndex = rk.XFIndex; num.Value = rk.RKNumber; return num;}
public java.nio.CharBuffer put(char[] src, int srcOffset, int charCount) {byteBuffer.limit(_limit * libcore.io.SizeOf.CHAR);byteBuffer.position(_position * libcore.io.SizeOf.CHAR);if (byteBuffer instanceof java.nio.ReadWriteDirectByteBuffer) {((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, charCount);} else {((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, charCount);}this._position += charCount;return this;}
public int GetCells() { int size = 0; for (char c : cells.keySet()) { Cell e = At(c); if (e.cmd >= 0 || e.@ref >= 0) { size++; } } return size; }
public BeiderMorseFilterFactory(Map<String, String> args) { super(args);NameType nameType = (NameType) Enum.parseEnum(NameType.class, get(args, "nameType", NameType.GENERIC), true);RuleType ruleType = (RuleType) Enum.parseEnum(RuleType.class, get(args, "ruleType", RuleType.APPROX), true);boolean concat = getBoolean(args, "concat", true);engine = new PhoneticEngine(nameType, ruleType, concat);Set<String> langs = getSet(args, "languageSet");languageSet = (langs == null || (langs.size() == 1 && langs.contains("auto"))) ? null : LanguageSet.from(langs);if (!(args.size() == 0)) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public static double varp(double[] v){double r = Double.NaN;if (v != null && v.length > 1){r = devsq(v) / v.length;}return r;}
public PersianNormalizationFilterFactory(Map<String, String> args) { super(args); if (args.size() > 0) { throw new IllegalArgumentException("Unknown parameters: " + args); } }
public static WeightedTerm[] GetTerms(Query query, boolean prohibited, String fieldName){var terms = new HashSet<WeightedTerm>();if (fieldName != null){fieldName = fieldName.intern();}GetTerms(query, terms, prohibited, fieldName);return terms.toArray(new WeightedTerm[0]);}
public DeleteDocumentationPartResponse deleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;return invoke<DeleteDocumentationPartResponse>(request, options);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[CHART]\n");buffer.append("    .x                    = 0x").append(HexDump.toHex(X)).append(" (").append(X).append(" )\n");buffer.append("    .y                    = 0x").append(HexDump.toHex(Y)).append(" (").append(Y).append(" )\n");buffer.append("    .width                = 0x").append(HexDump.toHex(Width)).append(" (").append(Width).append(" )\n");buffer.append("    .height               = 0x").append(HexDump.toHex(Height)).append(" (").append(Height).append(" )\n");buffer.append("[/CHART]\n");return buffer.toString();}
public final short get(int index){checkIndex(index);return backingArray[offset + index];}
public String toString(){return Image;}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) { try { AreaEval reA = evaluateRef(arg0); AreaEval reB = evaluateRef(arg1); AreaEval result = resolveRange(reA, reB); if (result == null) { return ErrorEval.NULL_INTERSECTION; } return result; } catch (EvaluationException e) { return e.getErrorEval(); } }
public void clear() { weightBySpanQuery.clear(); }
public int FindEndOffset(StringBuilder buffer, int start) { if (start > buffer.length() || start < 0) return start; bi.SetText(buffer.substring(start)); return bi.Next() + start; }
public SrndQuery PrimaryQuery() {SrndQuery q;switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk) {case RegexpToken.LPAREN:Jj_consume_token(RegexpToken.LPAREN);q = FieldsQuery();Jj_consume_token(RegexpToken.RPAREN);break;case RegexpToken.OR: case RegexpToken.AND: case RegexpToken.W: case RegexpToken.N:q = PrefixOperatorQuery();break;case RegexpToken.TRUNCQUOTED: case RegexpToken.QUOTED: case RegexpToken.SUFFIXTERM: case RegexpToken.TRUNCTERM: case RegexpToken.TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;Jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);if (true) return q;throw new Exception("Missing return statement in function");}
public DeleteApiKeyResponse deleteApiKey(DeleteApiKeyRequest request) {var options = new InvokeOptions();options.requestMarshaller = DeleteApiKeyRequestMarshaller.instance;options.responseUnmarshaller = DeleteApiKeyResponseUnmarshaller.instance;return invoke(DeleteApiKeyResponse.class, request, options);}
public InsertTagsRequest() { super("Ots", "2016-06-20", "InsertTags", "ots", "openAPI"); Method = MethodType.POST; }
public virtual DeleteUserByPrincipalIdResponse DeleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteUserByPrincipalIdRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteUserByPrincipalIdResponseUnmarshaller.Instance;return Invoke<DeleteUserByPrincipalIdResponse>(request, options);}
public DescribeNetworkInterfacesResponse describeNetworkInterfaces(DescribeNetworkInterfacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeNetworkInterfacesRequestMarshaller.INSTANCE);options.setResponseUnmarshaller(DescribeNetworkInterfacesResponseUnmarshaller.INSTANCE);return invoke(new TypeReference<DescribeNetworkInterfacesResponse>() {}, request, options);}
public void serialize(int offset, byte[] data, EscherSerializationListener listener){listener.beforeRecordSerialize(offset, RecordId, this);LittleEndian.putShort(data, offset, Options);LittleEndian.putShort(data, offset + 2, RecordId);LittleEndian.putInt(data, offset + 4, 8);LittleEndian.putInt(data, offset + 8, field_1_numShapes);LittleEndian.putInt(data, offset + 12, field_2_lastMSOSPID);listener.afterRecordSerialize(offset + 16, RecordId, RecordSize, this);return RecordSize;}
public CreateSecurityConfigurationResponse createSecurityConfiguration(CreateSecurityConfigurationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSecurityConfigurationResponseUnmarshaller.Instance;return Invoke<CreateSecurityConfigurationResponse>(request, options);}
public DescribeClientVpnConnectionsResponse describeClientVpnConnections(DescribeClientVpnConnectionsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance; return Invoke<DescribeClientVpnConnectionsResponse>(request, options); }
public static void fill(double[] array, double value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}
public boolean hasNext(){return pos < maxColumn;}
public DocsEnum reset(int[] postings) { this.postings = postings; upto = -2; freq_Renamed = 0; return this; }
public boolean hasAll(RevFlagSet set) { return (flags & set.mask) == set.mask; }
public abstract ModifyAccountResponse modifyAccount(ModifyAccountRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ModifyAccountRequestMarshaller.INSTANCE;options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.INSTANCE;return invoke<ModifyAccountResponse>(request, options);}
public virtual IToken LT(int k){LazyInit();if (k == 0){return null;}if (k < 0){return Lb(-k);}int i = p + k - 1;Sync(i);if (i >= tokens.size()){return tokens.get(tokens.size() - 1);}return tokens.get(i);}
public void removeSheet(int sheetIndex){if (boundsheets.size() > sheetIndex){records.remove(records.bspos - (boundsheets.size() - 1) + sheetIndex);boundsheets.remove(sheetIndex);fixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for (int i = 0; i < NumNames; i++){NameRecord nr = getNameRecord(i);if (nr.sheetNumber == sheetNum1Based){nr.sheetNumber = (0);}else if (nr.sheetNumber > sheetNum1Based){nr.sheetNumber = (nr.sheetNumber - 1);}}if (linkTable != null){for (int i = sheetIndex + 1; i < NumSheets + 1; i++){linkTable.removeSheet(i);}}}
public void RemoveName(int index) { names.remove(index); workbook.removeName(index); }
public boolean equals(Object o){if (!(o instanceof Property)) return false;Property p = (Property) o;Object pValue = p.getValue();long pId = p.getID();if (id != pId || (id != 0 && !TypesAreEqual(type, p.getType()))) return false;if (value == null && pValue == null) return true;if (value == null || pValue == null) return false;Type valueClass = value.getClass();Type pValueClass = pValue.getClass();if (!(valueClass.isAssignableFrom(pValueClass)) && !(pValueClass.isAssignableFrom(valueClass))) return false;if (value instanceof byte[]) return Arrays.equals((byte[]) value, (byte[]) pValue);return value.equals(pValue);}
public class GetRepoBuildListRequest extends BaseRequest {public GetRepoBuildListRequest() {super("cr", "2016-06-07", "GetRepoBuildList", "cr", "openAPI");this.UriPattern = "/repos/[RepoNamespace]/[RepoName]/build";this.Method = MethodType.GET;}}
public MessageWriter(){buf = new ByteArrayOutputStream(); enc = new OutputStreamWriter(getRawStream(), Constants.CHARSET);}
public void append(RecordBase r){_recs.add(r);}
public void close() throws CorruptObjectException { if (this.read(this.skipBuffer) != -1 || this.actualSize != this.expectedSize) { throw new CorruptObjectException(String.format(JGitText.Get().packfileCorruptionDetected, JGitText.Get().wrongDecompressedLength)); } int used = this._enclosing.bAvail - this.inf.getRemainingInput(); if (0 < used) { this._enclosing.onObjectData(this.src, this._enclosing.buf, this.p, used); this._enclosing.use(used); } this.inf.reset(); }
public DescribeModelPackageResponse describeModelPackage(DescribeModelPackageRequest request) {var options = new InvokeOptions();options.requestMarshaller = DescribeModelPackageRequestMarshaller.Instance;options.responseUnmarshaller = DescribeModelPackageResponseUnmarshaller.Instance;return Invoke<DescribeModelPackageResponse>(request, options);}
public void construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec instanceof FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord) rec;StringRecord cachedText = null;Type nextClass = rs.peekNextClass();if (nextClass == typeof(StringRecord)) {cachedText = (StringRecord) rs.getNext();} else {cachedText = null;}insertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {insertCell(rec);}}
public Object clone() { return new DeflateDecompressor(); }
public abstract UpdateS3ResourcesResponse updateS3Resources(UpdateS3ResourcesRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateS3ResourcesRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateS3ResourcesResponseUnmarshaller.getInstance());return invoke(request, options);}
public GroupQueryNode(IQueryNode query){if (query == null){throw new QueryNodeError(new Message(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}Allocate();IsLeaf = false;Add(query);}
public String toQueryString(IEscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.append("/").append(getFirstPathElement());for (QueryText pathelement : getPathElements(1)) {String value = escaper.escape(new StringCharSequence(pathelement.getValue()), CultureInfo.InvariantCulture, EscapeQuerySyntaxType.STRING).toString();path.append("/\"").append(value).append("\"");}return path.toString();}
public void RemoveCellComment() { HSSFComment comment2 = _sheet.FindCellComment(_record.Row, _record.Column); comment = null; if (null == comment2) { return; } ((_sheet.DrawingPatriarch) as HSSFPatriarch).RemoveShape(comment2); }
public void Reset() { count = 0; assert forwardCount == 0 : "pos=" + pos + " forwardCount=" + forwardCount; }
public abstract ActivateUserResponse activateUser(ActivateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateUserResponseUnmarshaller.Instance;return Invoke<ActivateUserResponse>(request, options);}
public boolean isCharsetDetected() { throw new UnsupportedOperationException(); }
public abstract ModifySnapshotCopyRetentionPeriodResponse modifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;return invoke<ModifySnapshotCopyRetentionPeriodResponse>(request, options);}
public DeleteClusterSubnetGroupResponse deleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request){var options = new InvokeOptions();options.setRequestMarshaller(DeleteClusterSubnetGroupRequestMarshaller.Instance);options.setResponseUnmarshaller(DeleteClusterSubnetGroupResponseUnmarshaller.Instance);return invoke(new TypeReference<DeleteClusterSubnetGroupResponse>(){}, request, options);}
public static String decode(byte[] buffer) { return decode(buffer, 0, buffer.length); }
public int getDefaultPort(){return -1;}
public virtual StopTaskResponse StopTask(StopTaskRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke<StopTaskResponse>(request, options);}
public void seekExact(BytesRef target, TermState otherState){if (!target.equals(term_Renamed)){state.copyFrom(otherState);term_Renamed = BytesRef.deepCopyOf(target);seekPending = true;}}
/**/public SeriesToChartGroupRecord(RecordInputStream in1){field_1_chartGroupIndex = in1.ReadShort();}
public static void WriteUnicodeStringFlagAndData(OutputStream out1, String value) {boolean is16Bit = HasMultibyte(value);try {out1.write(is16Bit ? 0x01 : 0x00);if (is16Bit) {PutUnicodeLE(value, out1);} else {PutCompressedUnicode(value, out1);}} catch (IOException e) {e.printStackTrace();}}
public AuthorizeSecurityGroupIngressResponse authorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {var options = new InvokeOptions();options.requestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.INSTANCE;options.responseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.INSTANCE;return invoke<AuthorizeSecurityGroupIngressResponse>(request, options);}
public void addFile(String file) { checkFileNames(new String[] { file }); setFiles.add(file); }
public void setSize(int width, int height) { mWidth = width; mHeight = height; }
public void setPrecedenceFilterSuppressed(boolean value){if (value){this.reachesIntoOuterContext |= SUPPRESS_PRECEDENCE_FILTER;}else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}
public IntervalSet Look(ATNState s, RuleContext ctx) { return Look(s, null, ctx); }
public void serialize(ILittleEndianOutput out1) { out1.writeShort(OptionFlags); out1.writeShort(RowHeight); }
public Builder(boolean dedup) { this.dedup = dedup; }
public Hashtable(int capacity, float loadFactor) {if (loadFactor <= 0 || Float.isNaN(loadFactor)){throw new IllegalArgumentException("Load factor: " + loadFactor);}}
public abstract Object Get(String key){int bucket = normalCompletion.GetBucket(key);return bucket == -1 ? null : bucket;}
public abstract ListHyperParameterTuningJobsResponse ListHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;return Invoke<ListHyperParameterTuningJobsResponse>(request, options);}
public DeleteTableResponse DeleteTable(String tableName) { var request = new DeleteTableRequest(); request.TableName = tableName; return DeleteTable(request); }
protected boolean lessThan(TextFragment fragA, TextFragment fragB) {if (fragA.getScore() == fragB.getScore()) {return fragA.getFragNum() > fragB.getFragNum();} else {return fragA.getScore() < fragB.getScore();}}
public void freeBefore(int pos) {assert pos >= 0;assert pos <= nextPos;int newCount = nextPos - pos;assert newCount <= count : "newCount=" + newCount + " count=" + count;assert newCount <= buffer.length : "newCount=" + newCount + " buf.length=" + buffer.length;count = newCount;}
public UpdateHITTypeOfHITResponse updateHITTypeOfHIT(UpdateHITTypeOfHITRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance; options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance; return invoke<UpdateHITTypeOfHITResponse>(request, options); }
public abstract UpdateRecommenderConfigurationResponse updateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = UpdateRecommenderConfigurationRequestMarshaller.INSTANCE; options.ResponseUnmarshaller = UpdateRecommenderConfigurationResponseUnmarshaller.INSTANCE; return invoke<UpdateRecommenderConfigurationResponse>(request, options); }
public int compareTo(Object other) {BytesRef br = other instanceof BytesRef ? (BytesRef) other : null;assert br != null : "br should not be null";return utf8SortedAsUnicodeSortOrder.compare(this, br);}
public static int stem(char[] s, int len){if (len > 4 && s[len - 1] == 's'){len--;}if (len > 5 && (StemmerUtil.endsWith(s, len, "ene") || (StemmerUtil.endsWith(s, len, "ane") && useNynorsk))) {return len - 3;}if (len > 4 && (StemmerUtil.endsWith(s, len, "er") || StemmerUtil.endsWith(s, len, "en") || StemmerUtil.endsWith(s, len, "et") || (StemmerUtil.endsWith(s, len, "ar") && useNynorsk))) {return len - 2;}if (len > 3){switch (s[len - 1]){case 'a': case 'e': return len - 1;}}return len;}
public DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}
public class SortedSetDocValuesFacetField : FacetField {private string Dim { get; set; }private string Label { get; set; }public SortedSetDocValuesFacetField(string dim, string label) : base("dummy", TYPE) {FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.Dim = dim;this.Label = label;}}
public abstract CreateDocumentationPartResponse CreateDocumentationPart(CreateDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResponseUnmarshaller.Instance;return Invoke<CreateDocumentationPartResponse>(request, options);}
public abstract String getValue(){return value;}
public java.nio.ShortBuffer asReadOnlyBuffer(){return duplicate();}
public abstract UpdateDataSourcePermissionsResponse updateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(UpdateDataSourcePermissionsRequestMarshaller.Instance);options.setResponseUnmarshaller(UpdateDataSourcePermissionsResponseUnmarshaller.Instance);return invoke(new TypeReference<UpdateDataSourcePermissionsResponse>(){}, request, options);}
public static Record CreateSingleRecord(RecordInputStream in1){if (_recordCreatorsById.containsKey(in1.getSid())){I_RecordCreator constructor = _recordCreatorsById.get(in1.getSid());return constructor.create(in1);}else{return new UnknownRecord(in1);}}
public int getCount() { return this._enclosing.mTabLayout.getChildCount(); }
public DeleteApplicationReferenceDataSourceResponse deleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;return invoke<DeleteApplicationReferenceDataSourceResponse>(request, options);}
public CreateProjectVersionResponse CreateProjectVersion(CreateProjectVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProjectVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProjectVersionResponseUnmarshaller.Instance;return Invoke<CreateProjectVersionResponse>(request, options);}
public java.nio.IntBuffer slice(){return new java.nio.ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + _position);}
public final byte get() throws java.lang.NotImplementedException {throw new java.lang.NotImplementedException();}
public long put(int index, long c){checkIndex(index);backingArray[offset + index] = c;return this;}
public StoredField(String name, float value) { super(name, TYPE); FieldsData = new Single(value); }
public IntervalSet GetExpectedTokensWithinCurrentRule(){ATN atn = Interpreter.atn;ATNState s = atn.states[State];return atn.NextTokens(s);}
public String toString() { StringBuilder buffer = new StringBuilder(); buffer.append("[FILESHARING]\n"); buffer.append("    .Readonly       = ").append(ReadOnly == 1 ? "true" : "false").append("\n"); buffer.append("    .password       = ").append(StringUtil.toHexString(Password)).append("\n"); buffer.append("    .username       = ").append(Username).append("\n"); buffer.append("[/FILESHARING]\n"); return buffer.toString(); }
protected SubmoduleInitCommand(Repository repo) { super(repo); paths = new AList<String>(); }
public void include(String name, AnyObjectId id){if (!Repository.isValidRefName(name)){throw new ArgumentException(MessageFormat.format(JGitText.get().invalidRefName, name));}if (include.containsKey(name)){throw new InvalidOperationException(JGitText.get().duplicateRef + name);}include.put(name, id.toObjectId());}
public virtual EnableSnapshotCopyResponse enableSnapshotCopy(EnableSnapshotCopyRequest request) {var options = new InvokeOptions();options.requestMarshaller = EnableSnapshotCopyRequestMarshaller.Instance;options.responseUnmarshaller = EnableSnapshotCopyResponseUnmarshaller.Instance;return invoke<EnableSnapshotCopyResponse>(request, options);}
public abstract ValueFiller getValueFiller() { return new ValueFillerAnonymousInnerClassHelper(this); }
public void serialize(ILittleEndianOutput out1) { out1.writeByte(pane); out1.writeShort(activeCellRow); out1.writeShort(activeCellCol); out1.writeShort(activeCellRef); int nRefs = field_6_refs.length; out1.writeShort(nRefs); for (int i = 0; i < field_6_refs.length; i++) { field_6_refs[i].serialize(out1); } }
public static Counter newCounter(){return newCounter(false);}
public int get(String name, int dflt){int[] vals;Object temp;if (valByRound.TryGetValue(name, out temp) && temp != null){vals = (int[])temp;return vals[roundNumber % vals.Length];}String sval;if (!props.TryGetValue(name, out sval)){sval = dflt + "";}if (sval.indexOf(':') < 0){return Integer.parseInt(sval);}int k = sval.indexOf(':');String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = PropToInt32Array(sval);valByRound.put(name, vals);return vals[roundNumber % vals.Length];}
public void preSerialize(){if (records.tabpos > 0){TabIdRecord tir = (TabIdRecord)records[(records.tabpos)];if (tir.tabids.length < boundsheets.size()){fixTabIdRecord();}}}This code has been translated from C# to Java, adhering to the specifications provided in the instructions. The method names, variable names, identifiers, and method parameters have been preserved exactly as in the source code.
public LimitTokenCountAnalyzer(Analyzer @delegate, int maxTokenCount, boolean consumeAllTokens) { super(@delegate.getStrategy());this.@delegate = @delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}
public ExternalBookBlock(int numberOfSheets) {_externalBookRecord = SupBookRecord.CreateInternalReferences((short)numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[SCENARIOPROTECT]\n");buffer.append("    .protect         = ").append(protect).append("\n");buffer.append("[/SCENARIOPROTECT]\n");return buffer.toString();}
public abstract class NGit::{public virtual PushCommand SetThin(bool thin){CheckCallable();this.thin = thin;return this;}}
public int compareTo(SearcherTracker other){return other.recordTimeSec.compareTo(RecordTimeSec);}
public TokenStream create(TokenStream input){return new ReverseStringFilter(m_luceneMatchVersion, input);}
public class BlockList<T> { private NGit.Util.BlockList<T>[] directory; private NGit.Util.BlockList<T> tailBlock; public BlockList() { directory = new NGit.Util.BlockList<T>[256]; directory[0] = new NGit.Util.BlockList<T>(); tailBlock = directory[0]; } }
public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new HashMap<String, WeightedSpanTerm>(weightedTerms.length);for (WeightedSpanTerm t : weightedTerms) {if (!fieldWeightedSpanTerms.containsKey(t.getTerm()) || (fieldWeightedSpanTerms.get(t.getTerm()) == null) || (fieldWeightedSpanTerms.get(t.getTerm()).getWeight() < t.getWeight())) {fieldWeightedSpanTerms.put(t.getTerm(), t);maxTermWeight = Math.max(maxTermWeight, t.getWeight());}}skipInitExtractor = true;}
public boolean equals(Object other) {Debug.Assert(NeverEquals(other));if (other instanceof MergedGroup<T> otherMergedGroup) {if (groupValue == null) {return otherMergedGroup == null;} else {return groupValueIsValueType ?JCG.EqualityComparer<T>.Default.Equals(groupValue, otherMergedGroup.groupValue) :J2N.Collections.StructuralEqualityComparer.Default.Equals(groupValue, otherMergedGroup.groupValue);}} else {return false;}}
public java.nio.charset.Charset charset() { return cs; }
public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;return Invoke<DescribeExperimentResponse>(request, options);}
public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font("Arial", 10);this.foreground = forecolor;}
public String Pattern(){return patternText;}
public DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;return Invoke<DeleteRouteTableResponse>(request, options);}
public virtual AssociateVPCWithHostedZoneResponse associateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request){var options = new InvokeOptions();options.setRequestMarshaller(AssociateVPCWithHostedZoneRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateVPCWithHostedZoneResponseUnmarshaller.getInstance());return invoke(new Type[]{AssociateVPCWithHostedZoneResponse.class}, request, options);}
public abstract PutIntegrationResponse PutIntegration(PutIntegrationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke<PutIntegrationResponse>(request, options);}
public SimpleEntry(K theKey, V theValue) { key = theKey; value = theValue; }
public void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {int byte0 = blocks[blocksOffset++] & 0xFF;int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | ((int)((byte1 & 0xFF) >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}
public DisassociateConnectionFromLagResponse disassociateConnectionFromLag(DisassociateConnectionFromLagRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;return invoke<DisassociateConnectionFromLagResponse>(request, options);}
public abstract FileMode getOldMode(){return oldMode;}
public String toString(){return mapEntry.toString();}
public StopKeyPhrasesDetectionJobResponse stopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request){var options = new InvokeOptions();options.setRequestMarshaller(StopKeyPhrasesDetectionJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopKeyPhrasesDetectionJobResponseUnmarshaller.getInstance());return invoke(request, options);}
public String toString() { StringBuilder buffer = new StringBuilder("[Array Formula or Shared Formula]\n"); buffer.append("row = ").append(row).append("\n"); buffer.append("col = ").append(col).append("\n"); return buffer.toString(); }
public ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);}
public String toString(){return "slice start=" + Start + " length=" + Length + " readerIndex=" + ReaderIndex;}
public static int ParseHexInt4(byte digit) { byte r = digits16[digit]; if (r < 0) { throw new IndexOutOfBoundsException(); } return r; }
public class Attribute {private String _name;private String _value;public Attribute(String name, String value) {this._name = name;this._value = value;}}
public DescribeStackSetOperationResponse describeStackSetOperation(DescribeStackSetOperationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;return Invoke<DescribeStackSetOperationResponse>(request, options);}
public ICell getCell(short cellnum){int ushortCellNum = cellnum & 0x0000FFFF; return getCell(ushortCellNum);}
public void write(byte[] b) { writeContinueIfRequired(b.length); _ulrOutput.write(b); }
public ResetImageAttributeRequest(String imageId, ResetImageAttributeName attribute) {_imageId = imageId; _attribute = attribute;}
public void DiscardResultContents(){resultContents = null;}
public ObjectId GetPeeledObjectId() { return GetLeaf().GetPeeledObjectId(); }
public abstract UndeprecateDomainResponse UndeprecateDomain(UndeprecateDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = UndeprecateDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = UndeprecateDomainResponseUnmarshaller.Instance;return Invoke<UndeprecateDomainResponse>(request, options);}
public void Write(ILittleEndianOutput out1){out1.WriteByte((byte)(sid + PtgClass));out1.WriteByte((byte)field_3_string.Length);out1.WriteByte((byte)(_is16bitUnicode ? 0x01 : 0x00));if (_is16bitUnicode){StringUtil.PutUnicodeLE(field_3_string, out1);}else{StringUtil.PutCompressedUnicode(field_3_string, out1);}}
public abstract DeleteQueueResponse DeleteQueue(String queueUrl) { var request = new DeleteQueueRequest(); request.QueueUrl = queueUrl; return DeleteQueue(request); }
public void setCheckEofAfterPackFooter(boolean b) { checkEofAfterPackFooter = b; }
public void swap(){int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}
public abstract int getPackedGitWindowSize(){return packedGitWindowSize;}
public virtual PutMetricDataResponse putMetricData(PutMetricDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = PutMetricDataResponseUnmarshaller.Instance;return invoke<PutMetricDataResponse>(request, options);}
public abstract GetCelebrityRecognitionResponse GetCelebrityRecognition(GetCelebrityRecognitionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCelebrityRecognitionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCelebrityRecognitionResponseUnmarshaller.Instance;return Invoke<GetCelebrityRecognitionResponse>(request, options);}
public CreateQueueRequest(String queueName){_queueName = queueName;}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) { super(arearef); this.externalWorkbookNumber = externalWorkbookNumber; this.firstSheetName = sheetName.SheetId.Name; if (sheetName instanceof SheetRangeIdentifier) { this.lastSheetName = ((SheetRangeIdentifier)sheetName).LastSheetIdentifier.Name; } else { this.lastSheetName = null; } }
public void setBaseline(long clockTime) { t0 = clockTime; timeout = t0 + ticksAllowed; }
public abstract MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request) {var options = new InvokeOptions();options.RequestMarshaller = MoveAddressToVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.Instance;return Invoke<MoveAddressToVpcResponse>(request, options);}
public String toString(){String coll = m_collectionModel.getName();if (coll != null){return String.format("LM %s - %s", getName(), coll);}else{return String.format("LM %s", getName());}}
public DescribeLagsResponse describeLags(DescribeLagsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance; return invoke<DescribeLagsResponse>(request, options); }
public AreaEval Offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx){if (_refEval == null){return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}
### ShortBuffer.javapublic ShortBuffer put(short[] src, int srcOffset, int shortCount){byteBuffer.limit(_limit * libcore.io.SizeOf.SHORT);byteBuffer.position(_position * libcore.io.SizeOf.SHORT);if (byteBuffer instanceof ReadWriteDirectByteBuffer){((ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, shortCount);}else{((ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, shortCount);}this._position += shortCount;return this;}
public void initialize(String cat) { this._cat = cat; }
public void write(int oneByte) { throw new UnsupportedOperationException(); }
public DescribeImportImageTasksResponse describeImportImageTasks(DescribeImportImageTasksRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeImportImageTasksRequestMarshaller.Instance);options.setResponseUnmarshaller(DescribeImportImageTasksResponseUnmarshaller.Instance);return invoke(new Object(), options);}
public ColumnInfoRecord(RecordInputStream in1){_first_col = in1.ReadUShort();_last_col = in1.ReadUShort();_col_width = in1.ReadUShort();_xf_index = in1.ReadUShort();_options = in1.ReadUShort();switch (in1.Remaining){case 2: field_6_reserved = in1.ReadUShort();break;case 1:field_6_reserved = in1.ReadByte();break;case 0:field_6_reserved = 0;break;default:throw new Exception("Unusual record size remaining=(" + in1.Remaining + ")");}}
public Status(IndexDiff diff) {super();this.diff = diff;clean = diff.GetAdded().IsEmpty() && diff.GetChanged().IsEmpty() && diff.GetRemoved().IsEmpty() && diff.GetMissing().IsEmpty() && diff.GetModified().IsEmpty() && diff.GetUntracked().IsEmpty() && diff.GetConflicting().IsEmpty();}
public abstract CreateExperimentResponse createExperiment(CreateExperimentRequest request) {var options = new InvokeOptions(); options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance; options.ResponseUnmarshaller = CreateExperimentResponseUnmarshaller.Instance; return invoke<CreateExperimentResponse>(request, options);}
@Overridepublic Object clone() {return this;}
public java.nio.FloatBuffer slice() {byteBuffer.limit(_limit * libcore.io.SizeOf.FLOAT);byteBuffer.position(_position * libcore.io.SizeOf.FLOAT);java.nio.ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());java.nio.FloatBuffer result = new java.nio.FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}
public abstract DescribeSnapshotSchedulesResponse DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = DescribeSnapshotSchedulesRequestMarshaller.Instance; options.ResponseUnmarshaller = DescribeSnapshotSchedulesResponseUnmarshaller.Instance; return Invoke<DescribeSnapshotSchedulesResponse>(request, options); }
public ListImagesResponse ListImages(ListImagesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListImagesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;return Invoke<ListImagesResponse>(request, options);}
public Diff(int ins, int del, int rep, int noop){this.INSERT = ins;this.DELETE = del;this.REPLACE = rep;this.NOOP = noop;}
public String ToFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.append(operands[0]);buffer.append(",");buffer.append(operands[1]);return buffer.toString();}
public static void SetupEnvironment(String[] workbookNames, ForkedEvaluator[] evaluators) {WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.length];for (int i = 0; i < wbEvals.length; i++) {wbEvals[i] = evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.Setup(workbookNames, wbEvals);}
public ListPhotoTagsRequest() { super("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto", "openAPI"); this.protocol = ProtocolType.HTTPS; }
public class RandomSamplingFacetsCollector extends Object {private int sampleSize;private XORShift64Random random;private Object sampledDocs;public RandomSamplingFacetsCollector(int sampleSize, long seed) {super(false);this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}}
public AllocateStaticIpResponse allocateStaticIp(AllocateStaticIpRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(AllocateStaticIpRequestMarshaller.Instance);options.setResponseUnmarshaller(AllocateStaticIpResponseUnmarshaller.Instance);return invoke(request, options);}
public FeatRecord(RecordInputStream in1) {futureHeader = new FtrHeader(in1);isf_sharedFeatureType = in1.readShort();reserved1 = (byte) in1.readByte();reserved2 = in1.readInt();int cref = in1.readUShort();cbFeatData = in1.readInt();reserved3 = in1.readShort();cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.length; i++) {cellRefs[i] = new CellRangeAddress(in1);}switch (isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in1);break;default:logger.log(POILogger.ERROR, "Unknown Shared Feature " + isf_sharedFeatureType + " found!");break;}}
public RevCommit TryFastForward(RevCommit newCommit){Ref head = repo.getRef(Constants.HEAD);if (head == null || head.getObjectId() == null){throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, Constants.HEAD));}ObjectId headId = head.getObjectId();if (headId == null){throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, Constants.HEAD));}RevCommit headCommit = walk.lookupCommit(headId);if (walk.isMergedInto(newCommit, headCommit)){return newCommit;}String headName;if (head.isSymbolic()){headName = head.getTarget().getName();}else{headName = "detached HEAD";}return TryFastForward(headName, headCommit, newCommit);}
public CreateSnapshotScheduleResponse createSnapshotSchedule(CreateSnapshotScheduleRequest request){var options = new InvokeOptions();options.requestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.responseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke<CreateSnapshotScheduleResponse>(request, options);}
public Record GetNext(){if (_nextIndex >= _list.size()){throw new Exception("Attempt to Read past end of record stream");}_countRead++;return (Record)_list.get(_nextIndex++);}
public String toString(){return RawParseUtils.decode(buf.toByteArray());}
public ListTablesRequest(String exclusiveStartTableName){this._exclusiveStartTableName = exclusiveStartTableName;}
public virtual EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableAlarmActionsRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableAlarmActionsResponseUnmarshaller.Instance;return Invoke<EnableAlarmActionsResponse>(request, options);}
public Builder() {super();lastDocID = -1;wordNum = -1;word = 0;}
public boolean equals(Object obj) { State other = (State) obj; return is_final == other.is_final && Arrays.equals(this.labels, other.labels) && ReferenceEquals(this.states, other.states); }
public TokenStream create(TokenStream input){return new EnglishPossessiveFilter(m_luceneMatchVersion, input);}
public void clearFormatting(){_string = cloneStringIfRequired();_string.clearFormatting();addToSSTIfRequired();}
public int Get(int index, long[] arr, int off, int len) {if (len <= 0) throw new IllegalArgumentException("len must be > 0 (got " + len + ")");if (index < 0 || index >= valueCount) throw new IndexOutOfBoundsException();len = Math.min(len, valueCount - index);Arrays.fill(arr, off, off + len, 0);return len;}
public DeleteRouteResponseResponse deleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseResponseUnmarshaller.Instance;return invoke<DeleteRouteResponseResponse>(request, options);}
public String toPrivateString(){return format(true, false);}
public abstract CreatePresignedDomainUrlResponse CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance; options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance; return Invoke<CreatePresignedDomainUrlResponse>(request, options); }
@Overridepublic void write(int oneChar) {doWrite(new char[] { (char) oneChar }, 0, 1);}
public SSTRecord getSSTRecord(){return sstRecord;}
public String toString(){return "term=" + term + ",field=" + field + ",value=" + value;}
@Overridepublic boolean isSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) {return bloomFilter.getSaturation() > 0.9f;}
public Builder(boolean ignoreCase){this.ignoreCase = ignoreCase;}
public String toString() { return getClass().getName() + "(maxBasicQueries: " + maxBasicQueries + ", queriesMade: " + queriesMade + ")"; }
public virtual DeleteDataSourceResponse DeleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteDataSourceResponse>(request, options);}
public RebootNodeResponse RebootNode(RebootNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootNodeResponseUnmarshaller.Instance;return Invoke<RebootNodeResponse>(request, options);}
public void processChildRecords(){convertRawBytesToEscherRecords();}
public CreateOrUpdateTagsResponse createOrUpdateTags(CreateOrUpdateTagsRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance; options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance; return Invoke<CreateOrUpdateTagsResponse>(request, options); }
public FileSnapshot getSnapShot(){return snapShot;}
public InputStream openResource(String resource) { InputStream stream = this.clazz.getTypeInfo().getAssembly().findAndGetManifestResourceStream(clazz, resource); if (stream == null) { throw new IOException("Resource not found: " + resource); } return stream; }
import java.util.Arrays;public class ClassName {private short _sid;private byte[] _data;public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(this.getClass().getSimpleName()).append(" [");sb.append("sid=").append(HexDump.shortToHex(_sid));sb.append(" size=").append(_data.length);sb.append(" : ").append(HexDump.toHex(_data));sb.append("]\n");return sb.toString();}}
public int nextIndex(){return index;}
public String toQueryString(IEscapeQuerySyntax escaper) { if (isDefaultField(this.m_field)) { return "\"" + getTermEscapeQuoted(escaper) + "\""; } else { return this.m_field + ":" + "\"" + getTermEscapeQuoted(escaper) + "\""; } }
public Object clone() throws CloneNotSupportedException { CalcModeRecord rec = new CalcModeRecord(); rec.field_1_calcmode = field_1_calcmode; return rec; }
public boolean isOutput(){return output;}
public abstract CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkInterfaceResponseUnmarshaller.Instance;return Invoke<CreateNetworkInterfaceResponse>(request, options);}
public void serialize(INDPWriter out1) { out1.writeShort(field_1_password); }
public StopDominantLanguageDetectionJobResponse stopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);}
public void withConnectionTimeout(int milliseconds){connectionTimeoutInMilliseconds = milliseconds;}
public GetGatewayGroupResponse GetGatewayGroup(GetGatewayGroupRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayGroupResponseUnmarshaller.Instance;return Invoke<GetGatewayGroupResponse>(request, options);}
public java.nio.FloatBuffer slice(){return new java.nio.ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset +_position);}
public static String Join(Iterable<String> parts, String separator, String lastSeparator){StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = tstream(parts).count() - 1;for (String part : parts){sb.append(part);if (i == lastIndex - 1){sb.append(lastSeparator);} else {if (i != lastIndex){sb.append(separator);}}i++;}return sb.toString();}
@Overridepublic String toString(){return "(" + a.toString() + " AND " + b.toString() + ")";}
public ListSubscriptionsByTopicRequest(String topicArn, String nextToken) {_topicArn = topicArn; _nextToken = nextToken;}
public byte readByte(){return bytes[pos--];}
public TerminateClientVpnConnectionsResponse terminateClientVpnConnections(TerminateClientVpnConnectionsRequest request){var options = new InvokeOptions();options.requestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.INSTANCE;options.responseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.INSTANCE;return Invoke<>(request, options);}
public ReceiveMessageRequest(String queueUrl){_queueUrl = queueUrl;}
public void serialize(ILittleEndianOutputStream out1) { out1.writeShort(field_1_barSpace); out1.writeShort(field_2_categorySpace); out1.writeShort(field_3_formatFlags); }
public Object common(Object output1, Object output2){return outputs.common((T)output1, (T)output2);}
public abstract CreateVariableResponse createVariable(CreateVariableRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = CreateVariableRequestMarshaller.Instance; options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance; return Invoke<CreateVariableResponse>(request, options); }
public static int Match(byte[] b, int ptr, byte[] src) { if (ptr + src.length > b.length) { return -1; } for (int i = 0; i < src.length; i++, ptr++) { if (b[ptr] != src[i]) { return -1; } } return ptr; }
public int FillFields(byte[] data, int offset, IEscherRecordFactory recordFactory) {int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.getInt(data, pos + size);size += 4;field_2_rectY1 = LittleEndian.getInt(data, pos + size);size += 4;field_3_rectX2 = LittleEndian.getInt(data, pos + size);size += 4;field_4_rectY2 = LittleEndian.getInt(data, pos + size);size += 4;bytesRemaining -= size;if (bytesRemaining != 0) throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);return 8 + size + bytesRemaining;}
public CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.Instance;return Invoke<CreateCloudFrontOriginAccessIdentityResponse>(request, options);}
public boolean isNamespaceAware() { return getFeature(org.xmlpull.v1.XmlPullParserClass.FEATURE_PROCESS_NAMESPACES); }
public void setOverridable(boolean on) { overridable = on; }
public String getClassName(){return className;}
public synchronized IndexReader GetIndexReader(){synchronized (this){if (indexReader != null){indexReader.IncRef();}return indexReader;}}
public int indexOfKey(int key){ return binarySearch(mKeys, 0, mSize, key); }
public BlankRecord(RecordInputStream in1) { field_1_row = in1.readUShort(); field_2_col = in1.readShort(); field_3_xf = in1.readShort(); }
public long length(){return length_Renamed;}
public PasswordRecord(RecordInputStream in1){field_1_password = in1.readShort();}
public HashMap(int capacity, float loadFactor) {this(capacity); if (loadFactor <= 0 || Float.isNaN(loadFactor)) { throw new IllegalArgumentException("Load factor: " + loadFactor); }}
```public void run() {long lastReopenStartNS = DateTime.UtcNow.Ticks * 100;while (!finish) {boolean hasWaiting;synchronized (this) {hasWaiting = waitingGen > searchingGen;}long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - System.nanoTime();if (sleepNS > 0) {#if !NETSTANDARD1_6try {#endifreopenCond.awaitMillis(sleepNS / 1000000L);#if !NETSTANDARD1_6} catch (InterruptedException ie) {Thread.currentThread().interrupt();return;}#endifif (finish) {break;}lastReopenStartNS = System.nanoTime();refreshStartGen = writer.getAndIncrementGeneration();try {manager.maybeRefreshBlocking();} catch (IOException ioe) {throw new Exception(ioe.getMessage(), ioe);}}refreshDone();}}
public DeleteLoginProfileRequest(String userName){_userName = userName;}
public E pollFirst() {return (_size == 0) ? null : removeFirstImpl();}
```public class CreatePhotoRequest extends BaseRequest {public CreatePhotoRequest() {super("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto", "openAPI");Protocol = ProtocolType.HTTPS;}}
public String GetName(){return "resolve";}
public abstract int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.length() || start < 0) return start;int offset, count = m_maxScan;for (offset = start; offset < buffer.length() && count > 0; count--){if (m_boundaryChars.contains(buffer.charAt(offset))) return offset;offset++;}return start;}
public void SetObjectChecker(ObjectChecker oc) { objCheck = oc; }
public BaseRef(AreaEval ae) {_refEval = null; _areaEval = ae; _firstRowIndex = ae.FirstRow; _firstColumnIndex = ae.FirstColumn; _height = ae.LastRow - ae.FirstRow + 1; _width = ae.LastColumn - ae.FirstColumn + 1;}
public CreateVpcEndpointResponse createVpcEndpoint(CreateVpcEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return invoke<CreateVpcEndpointResponse>(request, options);}
public abstract DeregisterWorkspaceDirectoryResponse DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<DeregisterWorkspaceDirectoryResponse>(request, options);}
public ChartFRTInfoRecord(RecordInputStream in1) {rt = in1.readShort();grbitFrt = in1.readShort();verOriginator = (byte) in1.readByte();verWriter = (byte) in1.readByte();int cCFRTID = in1.readShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++) {rgCFRTID[i] = new CFRTID(in1);}}
public Merger newMerger(Repository db) { return new StrategyOneSided.OneSide(db, treeIndex); }
public CreateDataSourceFromRedshiftResponse createDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request){var options = new InvokeOptions();options.setRequestMarshaller(CreateDataSourceFromRedshiftRequestMarshaller.Instance);options.setResponseUnmarshaller(CreateDataSourceFromRedshiftResponseUnmarshaller.Instance);return invoke(new CreateDataSourceFromRedshiftResponse(), request, options);}
public void clearDFA() { for (int d = 0; d < decisionToDFA.length; d++) { decisionToDFA[d] = new DFA(atn.getDecisionState(d), d); } }
public void removeName(String name) { int index = getNameIndex(name); removeName(index); }
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[RightMargin]\n");buffer.append("    .margin               = ").append(" (").append(margin).append(" )\n");buffer.append("[/RightMargin]\n");return buffer.toString();}
public Object clone(){return new RefreshAllRecord(_options);}
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) { super(queryConfig); add(new WildcardQueryNodeProcessor()); add(new MultiFieldQueryNodeProcessor()); add(new FuzzyQueryNodeProcessor()); add(new MatchAllDocsQueryNodeProcessor()); add(new OpenRangeQueryNodeProcessor()); add(new NumericQueryNodeProcessor()); add(new NumericRangeQueryNodeProcessor()); add(new LowercaseExpandedTermsQueryNodeProcessor()); add(new TermRangeQueryNodeProcessor()); add(new AllowLeadingWildcardProcessor()); add(new AnalyzerQueryNodeProcessor()); add(new PhraseSlopQueryNodeProcessor()); add(new BooleanQuery2ModifierNodeProcessor()); add(new NoChildOptimizationQueryNodeProcessor()); add(new RemoveDeletedQueryNodesProcessor()); add(new RemoveEmptyNonLeafQueryNodeProcessor()); add(new BooleanSingleChildOptimizationQueryNodeProcessor()); add(new DefaultPhraseSlopQueryNodeProcessor()); add(new BoostQueryNodeProcessor()); add(new MultiTermRewriteMethodProcessor()); }
public String FormatAsString(String sheetName, boolean useAbsoluteAddress){StringBuilder sb = new StringBuilder();if (sheetName != null){sb.append(SheetNameFormatter.Format(sheetName));sb.append("!");}CellReference cellRefFrom = new CellReference(FirstRow, FirstColumn,useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(LastRow, LastColumn,useAbsoluteAddress, useAbsoluteAddress);sb.append(cellRefFrom.FormatAsString());if (!cellRefFrom.equals(cellRefTo)|| IsFullColumnRange || IsFullRowRange){sb.append(':');sb.append(cellRefTo.FormatAsString());}return sb.toString();}
public byte put(int index, byte value){throw new UnsupportedOperationException();}
public abstract void Mode(int m){_mode = m;}
public java.nio.ShortBuffer slice(){return new java.nio.ReadWriteShortArrayBuffer(remaining(), backingArray, offset + _position);}
public void set(int index, long n) { if (count < index) { throw new IndexOutOfBoundsException(); } else { if (count == index) { add(n); } else { entries[index] = n; } } }
public float putFloat(float value) { throw new ReadOnlyBufferException(); }
public static double Max(double[] values){double max = Double.NEGATIVE_INFINITY;for (int i = 0, iSize = values.Length; i < iSize; i++){max = Math.max(max, values[i]);}return max;}
public class UpdateRepoWebhookRequest extends BaseRequest {public UpdateRepoWebhookRequest() {super("cr", "2016-06-07", "UpdateRepoWebhook", "cr", "openAPI");this.uriPattern = "/repos/{RepoNamespace}/{RepoName}/webhooks/{WebhookId}";this.method = MethodType.POST;}}
public DeleteAttributesRequest(String domainName, String itemName, List<Attribute> attributes, UpdateCondition expected) {_domainName = domainName;_itemName = itemName;_attributes = attributes;_expected = expected;}
public String toString(){StringBuilder sb = new StringBuilder();sb.append("[SXPI]\n");for (int i = 0; i < _fieldInfos.length; i++){sb.append("    item[").append(i).append("]=");_fieldInfos[i].appendDebugInfo(sb);sb.append('\n');}sb.append("[/SXPI]\n");return sb.toString();}
public boolean isSuccessful(){if (mergeResult != null){return mergeResult.getMergeStatus().isSuccessful();}else{if (rebaseResult != null){return rebaseResult.getStatus().isSuccessful();}}return true;}
public void setBytesValue(byte[] value) { setBytesValue(new BytesRef(value)); }
public abstract DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeConnectionsResponse>(request, options);}
public DeletePhotosRequest() { super("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto", "openAPI"); Protocol = ProtocolType.HTTPS; }
public void add(E object) { iterator.add(object); subList.sizeChanged(true); end++; }
public static java.nio.ByteBuffer allocate(int capacity_1) {if (capacity_1 < 0) {throw new IllegalArgumentException();}return java.nio.ByteBuffer.allocate(capacity_1);}
public SrndQuery getSubQuery(int qn) { return m_queries[qn]; }
public float CurrentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {if (numPayloadsSeen == 0) {return currentPayloadScore;} else {return Math.min(currentPayloadScore, currentScore);}}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[BLANK]\n");buffer.append("row       = ").append(HexDump.shortToHex(Row)).append("\n");buffer.append("col       = ").append(HexDump.shortToHex(Column)).append("\n");buffer.append("xf        = ").append(HexDump.shortToHex(XFIndex)).append("\n");buffer.append("[/BLANK]\n");return buffer.toString();}
public DescribeLogPatternResponse describeLogPattern(DescribeLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;return invoke<DescribeLogPatternResponse>(request, options);}
public RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request) {var options = new InvokeOptions();options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public GetPhoneNumberSettingsResponse getPhoneNumberSettings(GetPhoneNumberSettingsRequest request){var options = new InvokeOptions();options.setRequestMarshaller(GetPhoneNumberSettingsRequestMarshaller.Instance);options.setResponseUnmarshaller(GetPhoneNumberSettingsResponseUnmarshaller.Instance);return invoke<GetPhoneNumberSettingsResponse>(request, options);}
public abstract String getData(){return data;}
public boolean isDirect(){return false;}
public DeleteServerCertificateRequest(String serverCertificateName) {_serverCertificateName = serverCertificateName;}
public java.lang.StringBuffer append(boolean b){return append(b ? "true" : "false");}
public GetEvaluationResponse getEvaluation(GetEvaluationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEvaluationResponseUnmarshaller.Instance;return invoke<GetEvaluationResponse>(request, options);}
public BRAIRecord getDataName() { return dataName; }
public boolean find(int start_1) {findPos = start_1;if (findPos < _regionStart) {findPos = _regionStart;} else {if (findPos >= _regionEnd) {matchFound = false;return false;}}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}
public abstract GetLifecyclePolicyPreviewResponse getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) { var options = new InvokeOptions(); options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance; options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance; return Invoke<GetLifecyclePolicyPreviewResponse>(request, options);}
public class SinglePositionTokenStream {private ICharTermAttribute termAtt;private IPositionIncrementAttribute posIncrAtt;private string word;private bool returned;public SinglePositionTokenStream(string word) {termAtt = AddAttribute<ICharTermAttribute>();posIncrAtt = AddAttribute<IPositionIncrementAttribute>();this.word = word;returned = true;}}
public void serialize(ILittleEndianOutput out1) { out1.writeShort(field_1_print_gridlines); }
public String toString() { StringBuilder s = new StringBuilder(); s.append(Constants.TypeString(Type)); s.append(' '); s.append(Name); s.append(' '); s.append(commitTime); s.append(' '); AppendCoreFlags(s); return s.toString(); }
public NGit.Api.LsRemoteCommand setRemote(String remote) {checkCallable(); this.remote = remote; return this;}
public void CollapseRow(int rowNumber) {int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int lastRow = WriteHidden(rowRecord, startRow, true);if (GetRow(lastRow + 1) != null) {GetRow(lastRow + 1).Collapsed = true;} else {RowRecord row = CreateRow(lastRow + 1);row.Collapsed = true;InsertRow(row);}}
public virtual AssociateSkillGroupWithRoomResponse AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request) {var options = new InvokeOptions();options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;return Invoke<AssociateSkillGroupWithRoomResponse>(request, options);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[SERIESLIST]\n");buffer.append("    .seriesNumbers        = ").append(" (").append(SeriesNumbers).append(" )");buffer.append(System.lineSeparator());buffer.append("[/SERIESLIST]\n");return buffer.toString();}
public QueryConfigHandler getQueryConfigHandler(){return this.queryConfig;}
public abstract String GetClassArg() {if (originalArgs != null) {String className = originalArgs.get(CLASS_NAME);if (className != null) {return className;}}return this.getClass().getSimpleName();}
