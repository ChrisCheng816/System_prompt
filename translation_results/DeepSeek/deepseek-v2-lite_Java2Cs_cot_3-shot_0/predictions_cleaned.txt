public void Serialize(LittleEndianOutput out) { out.WriteShort(field_1_vcenter); }
public void AddAll(BlockList<T> src){if (src.Size == 0) return;int srcDirIdx = 0;for (; srcDirIdx < src.TailDirIdx; srcDirIdx++) AddAll(src.Directory[srcDirIdx], 0, BLOCK_SIZE);if (src.TailBlkIdx != 0) AddAll(src.TailBlock, 0, src.TailBlkIdx);}
public void WriteByte(byte b){if (upto == blockSize){if (currentBlock != null){AddBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}currentBlock[upto++] = b;}
public ObjectId GetObjectId(){return objectId;}
public virtual DeleteDomainEntryResult DeleteDomainEntry(DeleteDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDomainEntryResponseUnmarshaller.Instance;return Invoke<DeleteDomainEntryResult>(request, options);}
public long RamBytesUsed(){return ((termOffsets != null) ? termOffsets.RamBytesUsed() : 0) + ((termsDictOffsets != null) ? termsDictOffsets.RamBytesUsed() : 0);}
public final string GetFullMessage(){byte[] raw = buffer;int msgB = RawParseUtils.TagMessage(raw, 0);if (msgB < 0) {return ""; }return RawParseUtils.Decode(guessEncoding(), raw, msgB, raw.Length);}
public POIFSFileSystem(){this(true);_header.SetBatCount(1);_header.SetBatArray(new int[]{1});BATBlock bb = BATBlock.CreateEmptyBATBlock(bigBlockSize, false);bb.SetOurBlockIndex(1);_bat_blocks.Add(bb);SetNextBlock(0, POIFSConstants.END_OF_CHAIN);SetNextBlock(1, POIFSConstants.FAT_SECTOR_BLOCK);_property_table.SetStartBlock(0);}
public void Init(int address){slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];System.Diagnostics.Contracts.Assert(slice != null);upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;System.Diagnostics.Contracts.Assert(upto < slice.Length);}
public SubmoduleAddCommand SetPath(string path) { this.path = path; return this; }
public virtual ListIngestionsResponse ListIngestions(ListIngestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;return Invoke<ListIngestionsResponse>(request, options);}
public QueryParserTokenManager(CharStream stream, int lexState){this(stream);SwitchTo(lexState);}
public virtual GetShardIteratorResult GetShardIterator(GetShardIteratorRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetShardIteratorRequestMarshaller.Instance;options.ResponseUnmarshaller = GetShardIteratorResultUnmarshaller.Instance;return Invoke<GetShardIteratorResult>(request, options);}
public ModifyStrategyRequest() {base("aegis", "2016-11-11", "ModifyStrategy", "vipaegis");SetMethod(MethodType.POST);}
public bool Ready() {lock (lock) {if (in == null) {throw new IOException("InputStreamReader is closed");}try {return bytes.HasRemaining() || in.Available() > 0;} catch (IOException e) {return false;}}}
public EscherOptRecord GetOptRecord(){return _optRecord;}
public virtual int Read(byte[] buffer, int offset, int length){if (buffer == null){throw new ArgumentNullException(nameof(buffer), "buffer == null");}System.Array.ConstrainedCopy(Array.Empty<byte>(), 0, buffer, offset, buffer.Length);if (length == 0){return 0;}int copylen = count - pos < length ? count - pos : length;for (int i = 0; i < copylen; i++){buffer[offset + i] = (byte) this.buffer.Chars[pos + i];}pos += copylen;return copylen;}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp){this.sentenceOp = sentenceOp;}
public void Print(string str){write(str != null ? str : string.IsNullOrEmpty(str) ? null : str);}
public NotImplementedFunctionException(string functionName, NotImplementedException cause) : base(functionName, cause){this.functionName = functionName;}
public V Next(){return base.NextEntry().Value;}
public final void ReadBytes(byte[] b, int offset, int len, bool useBuffer){int available = bufferLength - bufferPosition;if (len <= available){if (len > 0) System.ArrayCopy(buffer, bufferPosition, b, offset, len);bufferPosition += len;}else{if (available > 0){System.ArrayCopy(buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize){Refill();if (bufferLength < len){System.ArrayCopy(buffer, 0, b, offset, bufferLength);throw new EOFException("read past EOF: " + this);}else{System.ArrayCopy(buffer, 0, b, offset, len);bufferPosition = len;}}else{long after = bufferStart + bufferPosition + len;if (after > Length()) throw new EOFException("read past EOF: " + this);ReadInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;}}}
public virtual TagQueueResponse TagQueue(TagQueueRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance;return Invoke<TagQueueResponse>(request, options);}
public void Remove(){throw new System.NotSupportedException();}
public virtual ModifyCacheSubnetGroupResponse ModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyCacheSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyCacheSubnetGroupResponseUnmarshaller.Instance;return Invoke<ModifyCacheSubnetGroupResponse>(request, options);}
public void SetParams(string params) {base.SetParams(params);language = country = variant = "";StringTokenizer st = new StringTokenizer(params, ",");if (st.HasMoreTokens()) language = st.NextToken();if (st.HasMoreTokens()) country = st.NextToken();if (st.HasMoreTokens()) variant = st.NextToken();}
public virtual DeleteDocumentationVersionResult DeleteDocumentationVersion(DeleteDocumentationVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationVersionResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationVersionResult>(request, options);}
public bool Equals(Object obj) {if (!(obj is FacetLabel)) {return false;}FacetLabel other = (FacetLabel)obj;if (length != other.length) {return false;}for (int i = length - 1; i >= 0; i--) {if (!components[i].Equals(other.components[i])) {return false;}}return true;}
public virtual GetInstanceAccessDetailsResult GetInstanceAccessDetails(GetInstanceAccessDetailsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetInstanceAccessDetailsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetInstanceAccessDetailsResponseUnmarshaller.Instance;return Invoke<GetInstanceAccessDetailsResult>(request, options);}
public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor){HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.SetParent(this);shape.SetAnchor(anchor);shapes.Add(shape);OnCreate(shape);return shape;}
public string GetSheetName(int sheetIndex) { return GetBoundSheetRec(sheetIndex).Sheetname; }
public virtual GetDashboardResponse GetDashboard(GetDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDashboardResponseUnmarshaller.Instance;return Invoke<GetDashboardResponse>(request, options);}
public virtual AssociateSigninDelegateGroupsWithAccountResult AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return Invoke<AssociateSigninDelegateGroupsWithAccountResult>(request, options);}
public void AddMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.NumColumns(); j++) {BlankRecord br = new BlankRecord();br.Column = (short)(j + mbr.FirstColumn());br.Row = mbr.Row();br.XFIndex = mbr.XFAt(j);InsertCell(br);}}
public static string Quote(string string) {StringBuilder sb = new StringBuilder();sb.Append("\\Q");int apos = 0;int k;while ((k = string.IndexOf("\\E", apos)) >= 0) {sb.Append(string.Substring(apos, k + 2)).Append("\\\\E\\Q");apos = k + 2;}return sb.Append(string.Substring(apos)).Append("\\E").ToString();}
public byte[] PutInt(int value) { throw new ReadOnlyBufferException(); }
public ArrayPtg(object[][] values2d) {int nColumns = values2d[0].Length;int nRows = values2d.Length;_nColumns = (short)nColumns;_nRows = (short)nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++) {Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++) {vv[GetValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public virtual GetIceServerConfigResponse GetIceServerConfig(GetIceServerConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetIceServerConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIceServerConfigResponseUnmarshaller.Instance;return Invoke<GetIceServerConfigResponse>(request, options);}
public string ToString(){return GetType().Name + " [" +GetValueAsString() +"]";}
public string ToString(string field){return "ToChildBlockJoinQuery (" + parentQuery.ToString() + ")";}
public void IncRef(){refCount.IncrementAndGet();}
public virtual UpdateConfigurationSetSendingEnabledResult UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationSetSendingEnabledResult>(request, options);}
public int GetNextXBATChainOffset(){return getXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}
public void MultiplyByPowerOfTen(int pow10){TenPower tp = TenPower.GetInstance(Math.Abs(pow10));if (pow10 < 0){MulShift(tp._divisor, tp._divisorShift);} else {MulShift(tp._multiplicand, tp._multiplierShift);}}
public string ToString(){var b = new StringBuilder();var l = Length();b.Append(Path.DirectorySeparatorChar);for (int i = 0; i < l; i++){b.Append(GetComponent(i));if (i < l - 1){b.Append(Path.DirectorySeparatorChar);}}return b.ToString();}
public InstanceProfileCredentialsProvider WithFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.SetRoleName(roleName);return this;}
public void SetProgressMonitor(ProgressMonitor pm){progressMonitor = pm;}
public void Reset(){if (!First()) {ptr = 0;if (!Eof())ParseEntry();}}
public E Previous(){if (Iterator.PreviousIndex() >= Start){return Iterator.Previous();}throw new NoSuchElementException();}
public string GetNewPrefix(){return this.newPrefix;}
public int IndexOfValue(int value){for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;return -1;}
public List<CharsRef> UniqueStems(char[] word, int length) {List<CharsRef> stems = Stem(word, length);if (stems.Count < 2) {return stems;}CharArraySet terms = new CharArraySet(8, dictionary.IgnoreCase);List<CharsRef> deduped = new ArrayList<CharsRef>();foreach (CharsRef s in stems) {if (!terms.Contains(s)) {deduped.Add(s);terms.Add(s);}}return deduped;}
public virtual GetGatewayResponsesResponse GetGatewayResponses(GetGatewayResponsesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance;return Invoke<GetGatewayResponsesResponse>(request, options);}
public void SetPosition(long pos){currentBlockIndex = (int) (pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int) (pos & blockMask);}
public long skip(long n) {int s = (int)Math.Min(available(), Math.Max(0, n));ptr += s;return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig){SetBootstrapActionConfig(bootstrapActionConfig);}
public void Serialize(LittleEndianOutput out) {out.WriteShort(field_1_row);out.WriteShort(field_2_col);out.WriteShort(field_3_flags);out.WriteShort(field_4_shapeid);out.WriteShort(field_6_author.Length());out.WriteByte(field_5_hasMultibyte ? (byte)0x01 : (byte)0x00);if (field_5_hasMultibyte) {StringUtil.PutUnicodeLE(field_6_author, out);} else {StringUtil.PutCompressedUnicode(field_6_author, out);}if (field_7_padding != null) {out.WriteByte((byte)field_7_padding.IntValue());}}
public int LastIndexOf(string string){return LastIndexOf(string, count);}
public bool Add(E object) { return AddLastImpl(object); }
public void UnsetSection(string section, string subsection){ConfigSnapshot src, res;do {src = state.get();res = UnsetSection(src, section, subsection);} while (!state.compareAndSet(src, res));}
public final string GetTagName(){return tagName;}
public void AddSubRecord(int index, SubRecord element){subrecords.Insert(index, element);}
public bool Remove(object o){lock (mutex) {return delegate().Remove(o);}}
public DoubleMetaphoneFilter Create(TokenStream input){return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long Length(){return inCoreLength();}
public void SetValue(bool newValue){value = newValue;}
public Pair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}
public int Get(int i){if (count <= i)throw new ArgumentOutOfRangeException(nameof(i), $"Index {i} is out of range.");return entries[i];}
public CreateRepoRequest() : base("cr", "2016-06-07", "CreateRepo", "cr"){SetUriPattern("/repos");SetMethod(MethodType.PUT);}
public bool IsDeltaBaseAsOffset(){return deltaBaseAsOffset;}
public void Remove(){if (expectedModCount == list.modCount){if (lastLink != null){Link<ET> next = lastLink.Next;Link<ET> previous = lastLink.Previous;next.Previous = previous;previous.Next = next;if (lastLink == link){pos--;}link = previous;lastLink = null;expectedModCount++;list.Size--;list.ModCount++;}else{throw new System.InvalidOperationException();}}else{throw new System.InvalidOperationException();}}
public virtual MergeShardsResponse MergeShards(MergeShardsRequest request){var options = new InvokeOptions();options.RequestMarshaller = MergeShardsRequestMarshaller.Instance;options.ResponseUnmarshaller = MergeShardsResponseUnmarshaller.Instance;return Invoke<MergeShardsResponse>(request, options);}
public virtual AllocateHostedConnectionResult AllocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResultUnmarshaller.Instance;return Invoke<AllocateHostedConnectionResult>(request, options);}
public int GetBeginIndex(){return start;}
public static WeightedTerm[] GetTerms(Query query){return GetTerms(query, false);}
public System.Nullable<byte>[] Compact(){throw new System.InvalidOperationException("This buffer is read-only.");}
public void Decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >> 2;if (blocksOffset < blocks.Length) {long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 & 3) << 4 | (byte1 >> 4);if (blocksOffset < blocks.Length) {long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte1 & 15) << 2 | (byte2 >> 6);values[valuesOffset++] = byte2 & 63;} else {values[valuesOffset++] = (byte1 & 15) << 2;values[valuesOffset++] = 64; // padding for short block}} else {values[valuesOffset++] = (byte0 & 3) << 4;values[valuesOffset++] = 64; // padding for short blockvalues[valuesOffset++] = 64; // padding for short block}}}
public string GetHumanishName(){string s = GetPath();if (s == "/" || s == "")s = GetHost();if (s == null)throw new ArgumentException();string[] elements;if (scheme == "file" || LOCAL_FILE.Match(s).Success)elements = s.Split(new char[] { Path.DirectorySeparatorChar, '/' });elseelements = s.Split(new char[] { '/' }, StringSplitOptions.RemoveEmptyEntries);if (elements.Length == 0)throw new ArgumentException();string result = elements[elements.Length - 1];if (Constants.DOT_GIT.Equals(result))result = elements[elements.Length - 2];else if (result.EndsWith(Constants.DOT_GIT_EXT))result = result.Substring(0, result.Length - Constants.DOT_GIT_EXT.Length);return result;}
public virtual DescribeNotebookInstanceLifecycleConfigResult DescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance;return Invoke<DescribeNotebookInstanceLifecycleConfigResult>(request, options);}
public string GetAccessKeySecret(){return this.accessKeySecret;}
public virtual CreateVpnConnectionResult CreateVpnConnection(CreateVpnConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpnConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnConnectionResponseUnmarshaller.Instance;return Invoke<CreateVpnConnectionResult>(request, options);}
public virtual DescribeVoicesResponse DescribeVoices(DescribeVoicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVoicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVoicesResponseUnmarshaller.Instance;return Invoke<DescribeVoicesResponse>(request, options);}
public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance;return Invoke<ListMonitoringExecutionsResponse>(request, options);}
public DescribeJobRequest(string vaultName, string jobId){SetVaultName(vaultName);SetJobId(jobId);}
public EscherRecord GetEscherRecord(int index){return escherRecords.get(index);}
public virtual GetApisResponse GetApis(GetApisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApisResponseUnmarshaller.Instance;return Invoke<GetApisResponse>(request, options);}
public virtual DeleteSmsChannelResponse DeleteSmsChannel(DeleteSmsChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteSmsChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteSmsChannelResponseUnmarshaller.Instance;return Invoke<DeleteSmsChannelResponse>(request, options);}
public TrackingRefUpdate GetTrackingRefUpdate(){return trackingRefUpdate;}
public void print(bool b) { print(Convert.ToString(b)); }
public QueryNode GetChild(){return GetChildren().First();}
public NotIgnoredFilter(int workdirTreeIndex) {this.index = workdirTreeIndex;}
public AreaRecord(RecordInputStream in) { Field1FormatFlags = in.ReadShort(); }
public GetThumbnailRequest() : base("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTransitGatewayVpcAttachmentsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.Instance;return Invoke<DescribeTransitGatewayVpcAttachmentsResponse>(request, options);}
public virtual PutVoiceConnectorStreamingConfigurationResult PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;return Invoke<PutVoiceConnectorStreamingConfigurationResult>(request, options);}
public OrdRange GetOrdRange(string dim) { return prefixToOrdRange.get(dim); }
public string ToString(){string symbol = "";if (startIndex >= 0 && startIndex < getInputStream().size()){symbol = getInputStream().getText(Interval.of(startIndex, startIndex));symbol = Utils.escapeWhitespace(symbol, false);}return string.Format(System.Globalization.CultureInfo.InvariantCulture, "%s('%s')", typeof(LexerNoViableAltException).Name, symbol);}
public E Peek() {return PeekFirstImpl();}
public virtual CreateWorkspacesResponse CreateWorkspaces(CreateWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance;return Invoke<CreateWorkspacesResponse>(request, options);}
public NumberFormatIndexRecord Clone(){return Copy();}
public virtual DescribeRepositoriesResponse DescribeRepositories(DescribeRepositoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.Instance;return Invoke<DescribeRepositoriesResponse>(request, options);}
public SparseIntArray(int initialCapacity){initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}
public HyphenatedWordsFilter Create(TokenStream input) {return new HyphenatedWordsFilter(input);}
public virtual CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateDistributionWithTagsResponse>(request, options);}
public RandomAccessFile(string fileName, string mode) { this(new File(fileName), mode); }Thought steps:# Step 1: The method is named 'RandomAccessFile' and follows Java lowerCamelCase naming.# Step 2: In C#, rename the method to 'RandomAccessFile' to follow PascalCase naming.# Step 3: The method has two parameters: 'fileName' and 'mode'. Both are of type 'string' in C#.# Step 4: The method invokes another constructor of the same class with a new 'File' object created using 'fileName' and 'mode' as arguments.# Step 5: The 'throws FileNotFoundException' clause in Java is replaced by exception handling in C#, where FileNotFoundException is caught or handled appropriately in the constructor call.# Step 6: Apply C# naming conventions and formatting for parameter types and method calls.
public virtual DeleteWorkspaceImageResult DeleteWorkspaceImage(DeleteWorkspaceImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteWorkspaceImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteWorkspaceImageResponseUnmarshaller.Instance;return Invoke<DeleteWorkspaceImageResult>(request, options);}
public static string ToHex(long value) {StringBuilder sb = new StringBuilder(16);WriteHex(sb, value, 16, "");return sb.ToString();}
public virtual UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDistributionResponseUnmarshaller.Instance;return Invoke<UpdateDistributionResponse>(request, options);}
public CustomColor GetColor(short index){if (index == HSSFColorPredefined.AUTOMATIC.getIndex()){return HSSFColorPredefined.AUTOMATIC.getColor();}byte[] b = _palette.GetColor(index);return (b == null) ? null : new CustomColor(index, b);}
public ValueEval Evaluate(ValueEval[] operands, int srcRow, int srcCol){throw new NotImplementedFunctionException(_functionName);}
public void Serialize(LittleEndianOutput out) {out.WriteShort((short)field_1_number_crn_records);out.WriteShort((short)field_2_sheet_table_index);}
public DescribeDBEngineVersionsResponse DescribeDBEngineVersions(){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBEngineVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBEngineVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDBEngineVersionsResponse>(new DescribeDBEngineVersionsRequest(), options);}
public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}
public static byte[] ToBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte) (ch >> 8);result[resultIndex++] = (byte) ch;}return result;}
public virtual UploadArchiveResponse UploadArchive(UploadArchiveRequest request){var options = new InvokeOptions();options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;return Invoke<UploadArchiveResponse>(request, options);}
public List<Token> GetHiddenTokensToLeft(int tokenIndex){return GetHiddenTokensToLeft(tokenIndex, -1);}
public override bool Equals(object obj){if (this == obj) return true;if (!base.Equals(obj)) return false;if (this.GetType() != obj.GetType()) return false;AutomatonQuery other = (AutomatonQuery)obj;if (!compiled.Equals(other.compiled)) return false;if (term == null){if (other.term != null) return false;}else if (!term.Equals(other.term)) return false;return true;}
public SpanQuery MakeSpanClause(){SpanQuery[] spanQueries = new SpanQuery[Size()];Iterator<SpanQuery> sqi = WeightBySpanQuery.KeySet().GetEnumerator();int i = 0;while (sqi.MoveNext()){SpanQuery sq = sqi.Current;float boost = WeightBySpanQuery[sq];if (boost != 1f){sq = new SpanBoostQuery(sq, boost);}spanQueries[i++] = sq;}if (spanQueries.Length == 1)return spanQueries[0];elsereturn new SpanOrQuery(spanQueries);}
public StashCreateCommand StashCreate() {return new StashCreateCommand(repo);}
public FieldInfo FieldInfo(string fieldName) {return byName.Get(fieldName);}
public virtual DescribeEventSourceResult DescribeEventSource(DescribeEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeEventSourceResponseUnmarshaller.Instance;return Invoke<DescribeEventSourceResult>(request, options);}
public virtual GetDocumentAnalysisResult GetDocumentAnalysis(GetDocumentAnalysisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentAnalysisResultUnmarshaller.Instance;return Invoke<GetDocumentAnalysisResult>(request, options);}
public virtual CancelUpdateStackResponse CancelUpdateStack(CancelUpdateStackRequest request){var options = new InvokeOptions();options.RequestMarshaller = CancelUpdateStackRequestMarshaller.Instance;options.ResponseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;return Invoke<CancelUpdateStackResponse>(request, options);}
public virtual ModifyLoadBalancerAttributesResult ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;return Invoke<ModifyLoadBalancerAttributesResult>(request, options);}
public virtual SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetInstanceProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetInstanceProtectionResponseUnmarshaller.Instance;return Invoke<SetInstanceProtectionResponse>(request, options);}
public virtual ModifyDBProxyResult ModifyDBProxy(ModifyDBProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBProxyResponseUnmarshaller.Instance;return Invoke<ModifyDBProxyResult>(request, options);}
public void Add(char[] output, int offset, int len, int endOffset, int posLength){if (Count == outputs.Length){outputs = ArrayUtil.Grow(outputs, Count + 1);}if (Count == endOffsets.Length){var next = new int[ArrayUtil.Oversize(1 + Count, Integer.BYTES)];System.arraycopy(endOffsets, 0, next, 0, Count);endOffsets = next;}if (Count == posLengths.Length){var next = new int[ArrayUtil.Oversize(1 + Count, Integer.BYTES)];System.arraycopy(posLengths, 0, next, 0, Count);posLengths = next;}if (outputs[Count] == null){outputs[Count] = new CharsRefBuilder();}outputs[Count].CopyChars(output, offset, len);endOffsets[Count] = endOffset;posLengths[Count] = posLength;Count++;}
public FetchLibrariesRequest() : base("CloudPhoto", "2017-07-11", "FetchLibraries", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public bool Exists(){return fs.Exists(objects);}
public FilterOutputStream(System.IO.Stream out) { this.out = out; }
public ScaleClusterRequest() : base("CS", "2015-12-15", "ScaleCluster", "csk"){SetUriPattern("/clusters/[ClusterId]");SetMethod(MethodType.PUT);}
public DataValidationConstraint CreateTimeConstraint(int operatorType, string formula1, string formula2) {return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2);}
public virtual ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectParentPathsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectParentPathsResponseUnmarshaller.Instance;return Invoke<ListObjectParentPathsResponse>(request, options);}
public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeCacheSubnetGroupsResponse>(request, options);}
public void SetSharedFormula(bool flag){field_5_options = sharedFormula.SetShortBoolean(field_5_options, flag);}
public bool IsReuseObjects() {return reuseObjects;}
public ErrorNode AddErrorNode(Token badToken){ErrorNodeImpl t = new ErrorNodeImpl(badToken);AddAnyChild(t);t.SetParent(this);return t;}
public LatvianStemFilterFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){if (!args.IsEmpty){throw new System.ArgumentException($"Unknown parameters: {args}");}}
public virtual RemoveSourceIdentifierFromSubscriptionResponse RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){var options = new InvokeOptions();options.RequestMarshaller = RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance;options.ResponseUnmarshaller = RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance;return Invoke<RemoveSourceIdentifierFromSubscriptionResponse>(request, options);}
public static TokenFilterFactory ForName(string name, System.Collections.Generic.Dictionary<string, string> args){return loader.newInstance(name, args);}
public AddAlbumPhotosRequest() {base("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public virtual GetThreatIntelSetResponse GetThreatIntelSet(GetThreatIntelSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;return Invoke<GetThreatIntelSetResponse>(request, options);}
public RevFilter Clone(){return new Binary((BinaryFilter)a.Clone(), (BinaryFilter)b.Clone());}
public bool Equals(Object o) { return o is ArmenianStemmer; }
public final bool hasArray(){return protectedHasArray();}
public virtual UpdateContributorInsightsResult UpdateContributorInsights(UpdateContributorInsightsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.Instance;return Invoke<UpdateContributorInsightsResult>(request, options);}
public void UnwriteProtectWorkbook(){records.Remove(fileShare);records.Remove(writeProtect);fileShare = null;writeProtect = null;}
public SolrSynonymParser(bool dedup, bool expand, Analyzer analyzer) : base(dedup, analyzer){this.expand = expand;}
public virtual RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return Invoke<RequestSpotInstancesResponse>(request, options);}
public byte[] GetObjectData(){return FindObjectRecord().GetObjectData();}
public virtual GetContactAttributesResponse GetContactAttributes(GetContactAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;return Invoke<GetContactAttributesResponse>(request, options);}
public string ToString() { return GetKey() + ": " + GetValue(); }
public virtual ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTextTranslationJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTextTranslationJobsResponseUnmarshaller.Instance;return Invoke<ListTextTranslationJobsResponse>(request, options);}
public virtual GetContactMethodsResponse GetContactMethods(GetContactMethodsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactMethodsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactMethodsResponseUnmarshaller.Instance;return Invoke<GetContactMethodsResponse>(request, options);}
public static short LookupIndexByName(string name) {FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);if (fd == null) {fd = GetInstanceCetab().GetFunctionByNameInternal(name);if (fd == null) {return -1;}}return (short) fd.GetIndex();}
public virtual DescribeAnomalyDetectorsResponse DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAnomalyDetectorsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAnomalyDetectorsResponseUnmarshaller.Instance;return Invoke<DescribeAnomalyDetectorsResponse>(request, options);}
public static string InsertId(string message, ObjectId changeId) {return InsertId(message, changeId, false);}
public long GetObjectSize(AnyObjectId objectId, int typeHint){var options = new InvokeOptions();options.RequestMarshaller = GetObjectSizeRequestMarshaller.Instance;options.ResponseUnmarshaller = GetObjectSizeResponseUnmarshaller.Instance;var request = new GetObjectSizeRequest { ObjectId = objectId, TypeHint = typeHint };var response = Invoke<GetObjectSizeResponse>(request, options);long sz = response.Size;if (sz < 0){if (typeHint == OBJ_ANY)throw new MissingObjectException(objectId.Copy(), JGitText.Get().unknownObjectType2);throw new MissingObjectException(objectId.Copy(), typeHint);}return sz;}
public virtual ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request){var options = new InvokeOptions();options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance;options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance;return Invoke<ImportInstallationMediaResponse>(request, options);}
public virtual PutLifecycleEventHookExecutionStatusResult PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResultUnmarshaller.Instance;return Invoke<PutLifecycleEventHookExecutionStatusResult>(request, options);}
public NumberPtg(LittleEndianInput in)  {this(in.ReadDouble());}
public virtual GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFieldLevelEncryptionConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFieldLevelEncryptionConfigResponseUnmarshaller.Instance;return Invoke<GetFieldLevelEncryptionConfigResponse>(request, options);}
public virtual DescribeDetectorResult DescribeDetector(DescribeDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDetectorResponseUnmarshaller.Instance;return Invoke<DescribeDetectorResult>(request, options);}
public virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance;return Invoke<ReportInstanceStatusResponse>(request, options);}
public virtual DeleteAlarmResponse DeleteAlarm(DeleteAlarmRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAlarmRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAlarmResponseUnmarshaller.Instance;return Invoke<DeleteAlarmResponse>(request, options);}
public PortugueseStemFilter Create(TokenStream input) {return new PortugueseStemFilter(input);}
public FtCblsSubRecord() { Reserved = new byte[ENCODED_SIZE]; }
public override bool Remove(object object) {lock (mutex) {return c.Remove(object);}}
public virtual GetDedicatedIpResponse GetDedicatedIp(GetDedicatedIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDedicatedIpRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDedicatedIpResponseUnmarshaller.Instance;return Invoke<GetDedicatedIpResponse>(request, options);}
public string ToString(){return precedence + " >= _p";}
public virtual ListStreamProcessorsResponse ListStreamProcessors(ListStreamProcessorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListStreamProcessorsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.Instance;return Invoke<ListStreamProcessorsResponse>(request, options);}
public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName) {SetLoadBalancerName(loadBalancerName);SetPolicyName(policyName);}
public WindowProtectRecord(int options) { _options = options; }
public UnbufferedCharStream(int bufferSize){n = 0;data = new int[bufferSize];}
public virtual GetOperationsResponse GetOperations(GetOperationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOperationsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationsResponseUnmarshaller.Instance;return Invoke<GetOperationsResponse>(request, options);}
public void CopyRawTo(byte[] b, int o){NB.EncodeInt32(b, o, w1);NB.EncodeInt32(b, o + 4, w2);NB.EncodeInt32(b, o + 8, w3);NB.EncodeInt32(b, o + 12, w4);NB.EncodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in){field_1_h_hold            = in.ReadShort();field_2_v_hold            = in.ReadShort();field_3_width             = in.ReadShort();field_4_height            = in.ReadShort();field_5_options           = in.ReadShort();field_6_active_sheet      = in.ReadShort();field_7_first_visible_tab = in.ReadShort();field_8_num_selected_tabs = in.ReadShort();field_9_tab_width_ratio   = in.ReadShort();}
public virtual StopWorkspacesResponse StopWorkspaces(StopWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;return Invoke<StopWorkspacesResponse>(request, options);}
public void Close() {if (isOpen) {isOpen = false;try {Dump();} finally {try {channel.Truncate(fileLength);} finally {try {channel.Close();} finally {fos.Close();}}}}}
public virtual DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);}
public string GetPronunciation(int wordId, char[] surface, int off, int len) { return null; }
public string GetPath(){return pathStr;}
public static double Devsq(double[] v) {double r = double.NaN;if (v != null && v.Length >= 1) {double m = 0;double s = 0;int n = v.Length;for (int i = 0; i < n; i++) {s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++) {s += (v[i] - m) * (v[i] - m);}r = (n == 1) ? 0 : s;}return r;}
public virtual DescribeResizeResult DescribeResize(DescribeResizeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResizeRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResizeResponseUnmarshaller.Instance;return Invoke<DescribeResizeResult>(request, options);}
public bool HasPassedThroughNonGreedyDecision(){return passedThroughNonGreedyDecision;}
public int End(){return End(0);}
public void Traverse(CellHandler handler){int firstRow = range.FirstRow;int lastRow = range.LastRow;int firstColumn = range.FirstColumn;int lastColumn = range.LastColumn;final int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();Row currentRow = null;Cell currentCell = null;for (ctx.RowNumber = firstRow; ctx.RowNumber <= lastRow; ++ctx.RowNumber){currentRow = sheet.GetRow(ctx.RowNumber);if (currentRow == null){continue;}for (ctx.ColNumber = firstColumn; ctx.ColNumber <= lastColumn; ++ctx.ColNumber){currentCell = currentRow.GetCell(ctx.ColNumber);if (currentCell == null){continue;}if (IsEmpty(currentCell) && !traverseEmptyCells){continue;}long rowSize = ArithmeticUtils.MulAndCheck((long)ArithmeticUtils.SubAndCheck(ctx.RowNumber, firstRow), (long)width);ctx.OrdinalNumber = ArithmeticUtils.AddAndCheck(rowSize, (ctx.ColNumber - firstColumn + 1));handler.OnCell(currentCell, ctx);}}}
public int GetReadIndex(){return pos;}
public int CompareTo(ScoreTerm other){if (this.Boost == other.Boost){return other.Bytes.Get().CompareTo(this.Bytes.Get());}else{return float.Compare(this.Boost, other.Boost);}}
public int Normalize(char[] s, int len) {for (int i = 0; i < len; i++) {switch (s[i]) {case 'ﻑ': case 'ﺎ': s[i] = 'ﻱ'; break;case 'ک ﻵ': s[i] = 'ک'; break;case 'ﻩ': case 'ڕ': s[i] = 'ﻩ'; break;case 'ﭘ': len = Delete(s, i, len); i--; break;default: break;}}return len;}
public void Serialize(LittleEndianOutput out) { out.WriteShort(_options); }
public DiagnosticErrorListener(bool exactOnly) {this.exactOnly = exactOnly;}
public KeySchemaElement(string attributeName, KeyType keyType){SetAttributeName(attributeName);SetKeyType(keyType.ToString());}
public virtual GetAssignmentResponse GetAssignment(GetAssignmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;return Invoke<GetAssignmentResponse>(request, options);}
public bool hasObject(AnyObjectId id){return findOffset(id) != -1;}
public virtual GroupingSearchResponse SetAllGroups(bool allGroups){this.allGroups = allGroups;return this;}
public virtual void SetMultiValued(string dimName, bool v) {if (!fieldTypes.TryGetValue(dimName, out DimConfig ft)) {ft = new DimConfig();fieldTypes[dimName] = ft;}ft.multiValued = v;}
public int GetCellsVal() {Iterator<char> i = cells.Keys.GetEnumerator();int size = 0;while (i.MoveNext()) {char c = i.Current;Cell e = at(c);if (e.cmd >= 0) {size++;}}return size;}
public virtual DeleteVoiceConnectorResult DeleteVoiceConnector(DeleteVoiceConnectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorResultUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorResult>(request, options);}
public virtual DeleteLifecyclePolicyResult DeleteLifecyclePolicy(DeleteLifecyclePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLifecyclePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLifecyclePolicyResponseUnmarshaller.Instance;return Invoke<DeleteLifecyclePolicyResult>(request, options);}
public void Write(byte[] b){int len = b.Length;CheckPosition(len);System.Array.Copy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}
public RebaseResult GetRebaseResult(){return this.rebaseResult;}
public static int GetNearestSetSize(int maxNumberOfValuesExpected, float desiredSaturation){for (int i = 0; i < usableBitSetSizes.Length; i++) {int numSetBitsAtDesiredSaturation = (int) (usableBitSetSizes[i] * desiredSaturation);int estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(usableBitSetSizes[i], numSetBitsAtDesiredSaturation);if (estimatedNumUniqueValues > maxNumberOfValuesExpected) {return usableBitSetSizes[i];}}return -1;}
public virtual DescribeDashboardResponse DescribeDashboard(DescribeDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return Invoke<DescribeDashboardResponse>(request, options);}
public virtual CreateSegmentResult CreateSegment(CreateSegmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSegmentResultUnmarshaller.Instance;return Invoke<CreateSegmentResult>(request, options);}
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[DBCELL]\n");buffer.Append("    .rowoffset = ").Append(HexDump.IntToHex(field_1_row_offset)).Append("\n");for (int k = 0; k < field_2_cell_offsets.Length; k++) {buffer.Append("    .cell_").Append(k).Append(" = ").Append(HexDump.ShortToHex(field_2_cell_offsets[k])).Append("\n");}buffer.Append("[/DBCELL]\n");return buffer.ToString();}
public List<String> GetUndeletedList(){return undeletedList;}
public string ToString(){return "[INTERFACEEND/]\n";}
public virtual MergeScheduler Clone(){return this;}
public PlainTextDictionary(System.IO.TextReader reader){in = new System.IO.StreamReader(reader);}
public StringBuilder Append(string csq) {if (csq == null) {AppendNull();} else {Append0(csq, 0, csq.Length);}return this;}
public virtual ListAssociatedStacksResponse ListAssociatedStacks(ListAssociatedStacksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance;return Invoke<ListAssociatedStacksResponse>(request, options);}
public static double Avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++) {s += v[i];}m = s / v.Length;s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++) {s += Math.Abs(v[i] - m);}r = s / v.Length;return r;}
public virtual DescribeByoipCidrsResponse DescribeByoipCidrs(DescribeByoipCidrsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeByoipCidrsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.Instance;return Invoke<DescribeByoipCidrsResponse>(request, options);}
public virtual GetDiskResponse GetDisk(GetDiskRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDiskRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDiskResponseUnmarshaller.Instance;return Invoke<GetDiskResponse>(request, options);}
public virtual CreateDBClusterParameterGroupResponse CreateDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBClusterParameterGroupResponseUnmarshaller.Instance;return Invoke<CreateDBClusterParameterGroupResponse>(request, options);}
public static CharBuffer Wrap(char[] array, int start, int charCount) {Arrays.CheckOffsetAndCount(array.Length, start, charCount);CharBuffer buf = new ReadWriteCharArrayBuffer(array);buf.Position = start;buf.Limit = start + charCount;return buf;}
public SubmoduleStatusType GetType(){return type;}
public virtual DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;return Invoke<DescribeGameServerGroupResponse>(request, options);}
public Pattern Pattern(){return pattern;}
public V SetValue(V object) { throw new System.NotSupportedException(); }
public StringBuilder Stem(string word){string cmd = Stemmer.GetLastOnPath(word);if (cmd == null)return null;StringBuilder buffer = new StringBuilder();buffer.Append(word);Diff.Apply(buffer, cmd);if (buffer.Length > 0)return buffer;elsereturn null;}
public RenameFaceRequest() : base("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public char RequireChar(System.Collections.Generic.IDictionary<string, string> args, string name){return Require(args, name)[0];}
public static string ToStringTree(Tree t) {return ToStringTree(t, (List<string>)null);}
public string ToString(){return "<deleted/>";}
public GetRepoWebhookLogListRequest() {base("cr", "2016-06-07", "GetRepoWebhookLogList", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs");setMethod(MethodType.GET);}
public virtual GetJobUnlockCodeResponse GetJobUnlockCode(GetJobUnlockCodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobUnlockCodeRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobUnlockCodeResponseUnmarshaller.Instance;return Invoke<GetJobUnlockCodeResponse>(request, options);}
public RemoveTagsRequest(string resourceId) { SetResourceId(resourceId); }
public short GetGB2312Id(char ch) {try {byte[] buffer = System.Text.Encoding.GetEncoding("GB2312").GetBytes(new char[] { ch });if (buffer.Length != 2) {return -1;}int b0 = (buffer[0] & 0x0FF) - 161;int b1 = (buffer[1] & 0x0FF) - 161;return (short) (b0 * 94 + b1);} catch (System.Text.EncoderFallbackException e) {throw new System.InvalidOperationException("Unsupported encoding", e);}}
public BatchRefUpdate AddCommand(Collection<ReceiveCommand> cmd) {commands.AddRange(cmd);return this;}
public short CheckExternSheet(int sheetNumber){return (short)GetOrCreateLinkTable().CheckExternSheet(sheetNumber);}
public bool Equals(object object){return c.Equals(object);}
public bool Build(QueryNode queryNode){AnyQueryNode andNode = (AnyQueryNode)queryNode;BooleanQuery.Builder bQuery = new BooleanQuery.Builder();var children = andNode.GetChildren();if (children != null) {foreach (QueryNode child in children) {var obj = child.GetTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null) {var query = (Query)obj;try {bQuery.Add(query, BooleanClause.Occur.SHOULD);} catch (TooManyClauses ex) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.SetMinimumNumberShouldMatch(andNode.GetMinimumMatchingElements());return bQuery.Build();}
public virtual DescribeStreamProcessorResponse DescribeStreamProcessor(DescribeStreamProcessorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStreamProcessorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.Instance;return Invoke<DescribeStreamProcessorResponse>(request, options);}
public virtual DescribeDashboardPermissionsResponse DescribeDashboardPermissions(DescribeDashboardPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardPermissionsResponseUnmarshaller.Instance;return Invoke<DescribeDashboardPermissionsResponse>(request, options);}
public Ref Peel(Ref ref) {try {return getRefDatabase().Peel(ref);} catch (IOException e) {return ref;}}
public long RamBytesUsed(){return RamUsageEstimator.AlignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + 2 * Integer.BYTES + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.SizeOf(blocks);}
public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDomainSuggestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDomainSuggestionsResponseUnmarshaller.Instance;return Invoke<GetDomainSuggestionsResponse>(request, options);}
public virtual DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance;return Invoke<DescribeStackEventsResponse>(request, options);}
public void SetRule(int idx, ConditionalFormattingRule cfRule){setRule(idx, (HSSFConditionalFormattingRule)cfRule);}
public virtual CreateResolverRuleResult CreateResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverRuleResultUnmarshaller.Instance;return Invoke<CreateResolverRuleResult>(request, options);}
public SeriesIndexRecord(RecordInputStream in) {this.Index = in.ReadShort();}
public GetStylesRequest() : base("lubancloud", "2018-05-09", "GetStyles", "luban"){SetMethod(MethodType.POST);}
public void Serialize(LittleEndianOutput out) {out.WriteShort(field_1_gridset_flag);}
public bool Equals(object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (GetType() != obj.GetType()) {return false;}Toffs other = (Toffs)obj;if (GetStartOffset() != other.GetStartOffset()) {return false;}if (GetEndOffset() != other.GetEndOffset()) {return false;}return true;}
public virtual CreateGatewayGroupResult CreateGatewayGroup(CreateGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateGatewayGroupResultUnmarshaller.Instance;return Invoke<CreateGatewayGroupResult>(request, options);}
public virtual CreateParticipantConnectionResult CreateParticipantConnection(CreateParticipantConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance;return Invoke<CreateParticipantConnectionResult>(request, options);}
public static double Irr(double[] income) {return Irr(income, 0.1d);}
public virtual RegisterWorkspaceDirectoryResponse RegisterWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<RegisterWorkspaceDirectoryResponse>(request, options);}
public RevertCommand Include(AnyObjectId commit) {return Include(commit.getName(), commit);}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE){ValueEval veText1;try{veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);}catch (EvaluationException e){return e.GetErrorEval();}string iNumber = OperandResolver.CoerceValueToString(veText1);System.Text.RegularExpressions.Match m = COMPLEX_NUMBER_PATTERN.Match(iNumber);bool result = m.Success;string imaginary = "";if (result){string imaginaryGroup = m.Groups[5].Value;bool hasImaginaryPart = imaginaryGroup.Equals("i") || imaginaryGroup.Equals("j");if (imaginaryGroup.Length == 0){return new StringEval(System.String.Format("{0}", 0));}if (hasImaginaryPart){string sign = "";string imaginarySign = m.Groups[GROUP3_IMAGINARY_SIGN].Value;if (imaginarySign.Length != 0 && !imaginarySign.Equals("+")){sign = imaginarySign;}string groupImaginaryNumber = m.Groups[GROUP4_IMAGINARY_INTEGER_OR_DOUBLE].Value;if (groupImaginaryNumber.Length != 0){imaginary = sign + groupImaginaryNumber;}else{imaginary = sign + "1";}}}else{return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}
public TKey PollLast(){var entry = backingMap.PollLastEntry();return (entry == null) ? default(TKey) : entry.Key;}
public int ReadUShort(){int ch1 = ReadUByte();int ch2 = ReadUByte();return (ch2 << 8) + (ch1 << 0);}
public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType) {SetSnapshotId(snapshotId);SetAttribute(attribute.ToString());SetOperationType(operationType.ToString());}
public virtual ListBonusPaymentsResponse ListBonusPayments(ListBonusPaymentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListBonusPaymentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListBonusPaymentsResponseUnmarshaller.Instance;return Invoke<ListBonusPaymentsResponse>(request, options);}
public T Get(string cs) {if (cs == null)throw new ArgumentNullException(nameof(cs));return default(T);}
public virtual CommonGramsQueryFilter Create(TokenStream input){CommonGramsFilter commonGrams = (CommonGramsFilter) base.Create(input);return new CommonGramsQueryFilter(commonGrams);}
public string GetPath(){return path;}
public virtual InitiateMultipartUploadResult InitiateMultipartUpload(InitiateMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = InitiateMultipartUploadResultUnmarshaller.Instance;return Invoke<InitiateMultipartUploadResult>(request, options);}
public StringBuilder Insert(int offset, int i) {var str = i.ToString();var options = new InvokeOptions();options.RequestMarshaller = IntegerToStringRequestMarshaller.Instance;options.ResponseUnmarshaller = StringResponseUnmarshaller.Instance;return Invoke<StringBuilder>(str, options);}
public void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int) ((block >> shift) & 3);}}}
public TokenStream Create(TokenStream input) {var options = new InvokeOptions();options.RequestMarshaller = ElisionFilterRequestMarshaller.Instance;options.ResponseUnmarshaller = ElisionFilterResponseUnmarshaller.Instance;return Invoke<TokenStream>(input, options);}
public bool Eat(Row in, int[] remap) {int sum = 0;foreach (var c in in.cells.Values) {sum += c.cnt;if (c.ref >= 0) {if (remap[c.ref] == 0) {c.ref = -1;}}}int frame = sum / 10;bool live = false;foreach (var c in in.cells.Values) {if (c.cnt < frame && c.cmd >= 0) {c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.ref >= 0) {live = true;}}return !live;}
public Token GetToken(int index) {Token t = jj_lookingAhead ? jj_scanpos : token;for (int i = 0; i < index; i++) {if (t.next != null) t = t.next;else t = t.next = token_source.GetNextToken();}return t;}
public override string ToString(){StringBuilder sb = new StringBuilder();sb.Append(GetType().Name).Append(" [ARRAY]\n");sb.Append(" range=").Append(Range).Append("\n");sb.Append(" options=").Append(HexDump.ShortToHex(_options)).Append("\n");sb.Append(" notUsed=").Append(HexDump.IntToHex(_field3notUsed)).Append("\n");sb.Append(" formula:").Append("\n");Ptg[] ptgs = _formula.GetTokens();for (int i = 0; i < ptgs.Length; i++){Ptg ptg = ptgs[i];sb.Append(ptg).Append(ptg.GetRVAType()).Append("\n");}sb.Append("]");return sb.ToString();}
public virtual GetFolderResponse GetFolder(GetFolderRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFolderRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance;return Invoke<GetFolderResponse>(request, options);}
public override void Add(int location, E object){throw new NotSupportedException();}
public PositiveScoresOnlyCollector(Collector in) : base(in) { }
public CreateRepoBuildRuleRequest() {base("cr", "2016-06-07", "CreateRepoBuildRule", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/rules");setMethod(MethodType.PUT);}
public BaseRef(AreaEval ae){_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}
public DrawingManager2(EscherDggRecord dgg){this.dgg = dgg;}
public void Reset(){if (!First()) Reset(raw);}
public final CharsetDecoder Reset(){status = INIT;ImplReset();return this;}
public BufferedReader(System.IO.TextReader @in, int size) : base(@in){if (size <= 0){throw new ArgumentException("size <= 0");}this.@in = @in;buf = new char[size];}
public virtual DescribeCodeRepositoryResponse DescribeCodeRepository(DescribeCodeRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance;return Invoke<DescribeCodeRepositoryResponse>(request, options);}
public virtual CreateDBSubnetGroupResponse CreateDBSubnetGroup(CreateDBSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBSubnetGroupResponseUnmarshaller.Instance;return Invoke<CreateDBSubnetGroupResponse>(request, options);}
public RenameBranchCommand SetOldName(string oldName){CheckCallable(); this.oldName = oldName; return this;}
public virtual DeleteBranchCommand SetForce(bool force){CheckCallable();this.force = force;return this;}
public virtual StopCompilationJobResponse StopCompilationJob(StopCompilationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopCompilationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopCompilationJobResponseUnmarshaller.Instance;return Invoke<StopCompilationJobResponse>(request, options);}
public virtual void IncrementSecondaryProgressBy(int diff){SetSecondaryProgress(mSecondaryProgress + diff);}
public int[] Clear(){return bytesStart = null;}
public string GetRawPath(){return path;}
public GetUserSourceAccountRequest(){base("cr", "2016-06-07", "GetUserSourceAccount", "cr");UriPattern = "/users/sourceAccount";Method = MethodType.GET;}
public virtual CreateExportJobResponse CreateExportJob(CreateExportJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExportJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.Instance;return Invoke<CreateExportJobResponse>(request, options);}
public virtual CreateDedicatedIpPoolResponse CreateDedicatedIpPool(CreateDedicatedIpPoolRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;return Invoke<CreateDedicatedIpPoolResponse>(request, options);}
public bool Equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (obj is HSSFCellStyle) {var other = (HSSFCellStyle)obj;if (_format == null) {if (other._format != null) {return false;}} else if (!_format.Equals(other._format)) {return false;}if (_index != other._index) {return false;}return true;}return false;}
public virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReleaseHostsRequestMarshaller.Instance;options.ResponseUnmarshaller = ReleaseHostsResponseUnmarshaller.Instance;return Invoke<ReleaseHostsResponse>(request, options);}
public bool Equals(object obj) {if (this == obj) {return true;}if (obj is System.Collections.IEnumerable s) {try {var size = this.Count;var otherSize = s.Count();if (size != otherSize) return false;foreach (var item in s) {if (!this.Contains(item)) return false;}return true;} catch (System.NullReferenceException) {return false;} catch (System.InvalidCastException) {return false;}}return false;}
public void SetRefLogMessage(string msg, bool appendStatus) {customRefLog = true;if (msg == null && !appendStatus) {DisableRefLog();} else if (msg == null && appendStatus) {refLogMessage = ""; refLogIncludeResult = true;} else {refLogMessage = msg;refLogIncludeResult = appendStatus;}}
public StreamIDRecord(RecordInputStream in){idstm = in.ReadShort();}
public RecognizeCarRequest() {base("visionai-poc", "2020-04-08", "RecognizeCar");SetMethod(MethodType.POST);}
public ByteOrder Order() { return ByteOrder.NativeOrder(); }
public int GetAheadCount(){return aheadCount;}
public bool isNewFragment(){return false;}
public virtual GetCloudFrontOriginAccessIdentityConfigResult GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.Instance;return Invoke<GetCloudFrontOriginAccessIdentityConfigResult>(request, options);}
public bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return label == symbol;}
public virtual DeleteTransitGatewayResult DeleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayResultUnmarshaller.Instance;return Invoke<DeleteTransitGatewayResult>(request, options);}
public static byte[] Grow(byte[] array, int minSize) {if (minSize < 0) {throw new ArgumentException("Size must be positive", nameof(minSize));}if (array.Length < minSize) {return GrowExact(array, Oversize(minSize, Byte.MinValue));} else {return array;}}private static byte[] GrowExact(byte[] array, int newSize) {byte[] newArray = new byte[newSize];Array.Copy(array, 0, newArray, 0, array.Length);return newArray;}private static int Oversize(int minSize, byte elementSize) {return (minSize / elementSize + 1) * elementSize;}
public CreateTransactionRequest(){base("CloudPhoto", "2017-07-11", "CreateTransaction", "cloudphoto");SetProtocol(ProtocolType.HTTPS);}
public BatchRefUpdate SetRefLogIdent(PersonIdent pi) {refLogIdent = pi;return this;}
public virtual GetLaunchTemplateDataResult GetLaunchTemplateData(GetLaunchTemplateDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLaunchTemplateDataRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLaunchTemplateDataResponseUnmarshaller.Instance;return Invoke<GetLaunchTemplateDataResult>(request, options);}
public ParseInfo(ProfilingATNSimulator atnSimulator){this.atnSimulator = atnSimulator;}
public SimpleQQParser(string[] qqNames, string indexField) {this.qqNames = qqNames;this.indexField = indexField;}
public virtual PromoteReadReplicaDBClusterResponse PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = PromoteReadReplicaDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = PromoteReadReplicaDBClusterResponseUnmarshaller.Instance;return Invoke<PromoteReadReplicaDBClusterResponse>(request, options);}
public virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCapacityReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCapacityReservationsResponseUnmarshaller.Instance;return Invoke<DescribeCapacityReservationsResponse>(request, options);}
public string ToString(){return $"IndexSearcher({reader}; executor={executor}; sliceExecutionControlPlane {sliceExecutor})";}
public final bool IncrementToken() { return false; }
public void Serialize(LittleEndianOutput out){out.WriteShort(main + 1);out.WriteShort(subFrom);out.WriteShort(subTo);}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new System.NotSupportedException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i) {long block = readLong(blocks, blocksOffset);blocksOffset += 8;valuesOffset = decode(block, values, valuesOffset);}}
public bool IsExpectedToken(int symbol) {ATN atn = GetInterpreter().Atn;ParserRuleContext ctx = _ctx;ATNState s = atn.States[getState()];IntervalSet following = atn.NextTokens(s);if (following.Contains(symbol)) {return true;}if (!following.Contains(Token.EPSILON)) return false;while (ctx != null && ctx.InvokingState >= 0 && following.Contains(Token.EPSILON)) {ATNState invokingState = atn.States[ctx.InvokingState];RuleTransition rt = (RuleTransition)invokingState.Transition(0);following = atn.NextTokens(rt.FollowState);if (following.Contains(symbol)) {return true;}ctx = (ParserRuleContext)ctx.Parent;}if (following.Contains(Token.EPSILON) && symbol == Token.EOF) {return true;}return false;}
public virtual UpdateStreamResponse UpdateStream(UpdateStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateStreamResponseUnmarshaller.Instance;return Invoke<UpdateStreamResponse>(request, options);}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = TranslateErrorCodeToErrorTypeValue(e.ErrorEval.ErrorCode);return new NumberEval(result);}}
public string ToString(){return GetType().Name + " [" + _index + " " + _name + "]";}
public virtual ListAssignmentsForHITResponse listAssignmentsForHIT(ListAssignmentsForHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<ListAssignmentsForHITResponse>(request, options);}
public virtual DeleteAccessControlRuleResult DeleteAccessControlRule(DeleteAccessControlRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.Instance;return Invoke<DeleteAccessControlRuleResult>(request, options);}
public Arc<long> GetFirstArc(FST.Arc<long> arc) {return fst.GetFirstArc(arc);}
public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){final long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16){values[valuesOffset++] = (int)((block >> shift) & 65535);}}}
public long Skip(long charCount){if (charCount < 0){throw new ArgumentException("charCount < 0: " + charCount);}lock (lock){CheckNotClosed();if (charCount == 0){return 0;}long inSkipped;int availableFromBuffer = buf.Length - pos;if (availableFromBuffer > 0){long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0){pos += charCount;return charCount;}pos += availableFromBuffer;inSkipped = in.Skip(requiredFromIn);}else{inSkipped = in.Skip(charCount);}return inSkipped + availableFromBuffer;}}
public virtual Map<string, Ref> GetRefsMap(){return advertisedRefs;}
public virtual UpdateApiKeyResponse UpdateApiKey(UpdateApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateApiKeyResponseUnmarshaller.Instance;return Invoke<UpdateApiKeyResponse>(request, options);}
public virtual ObjectStream OpenStream(){PackInputStream packIn;DfsReader ctx = db.NewReader();try{try{packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);ctx = null;}catch (IOException packGone){ObjectId obj = pack.GetReverseIdx(ctx).FindObject(objectOffset);return ctx.Open(obj, type).OpenStream();}}finally{if (ctx != null){ctx.Close();}}int bufsz = 8192;InputStream in = new BufferedInputStream(new InflaterInputStream(packIn, packIn.Ctx.Inflater(), bufsz), bufsz);return new ObjectStream.Filter(type, size, in);}
public ArrayList() {array = EmptyArray.OBJECT;}
public virtual UpdateDetectorVersionResponse UpdateDetectorVersion(UpdateDetectorVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDetectorVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.Instance;return Invoke<UpdateDetectorVersionResponse>(request, options);}
public void Resize(){Resize(Double.MaxValue);}
public RevFlagSet(System.Collections.Generic.IEnumerable<RevFlag> s) {this();AddRange(s);}
public int Size(){return size;}
public final long GetLong() {int newPosition = position + SizeOf.LONG;if (newPosition > limit) {throw new BufferUnderflowException();}long result = Memory.peekLong(backingArray, offset + position, order);position = newPosition;return result;}
public StringBuilder Insert(int offset, long l) {insert0(offset, Long.ToString(l));return this;}
public TurkishLowerCaseFilter(TokenStream @in) : base(@in) {}
public ParseTreeMatch Match(ParseTree tree, ParseTreePattern pattern){var labels = new MultiMap<string, ParseTree>();var mismatchedNode = MatchImpl(tree, pattern.GetPatternTree(), labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}
public void AddIfNoOverlap(WeightedPhraseInfo wpi){foreach(WeightedPhraseInfo existWpi in GetPhraseList()){if(existWpi.IsOffsetOverlap(wpi)){existWpi.GetTermsInfos().AddRange(wpi.GetTermsInfos());return;}}GetPhraseList().Add(wpi);}
public ThreeWayMerger NewMerger(Repository db) {return new InCoreMerger(db);}
public float DocScore(int docId, string field, int numPayloadsSeen, float payloadScore){return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}
public Collection<ParseTree> Evaluate(ParseTree t) {return Trees.FindAllRuleNodes(t, ruleIndex);}
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.AppendLine("[CFRULE]");buffer.Append("    .condition_type   =").Append(GetConditionType()).AppendLine();buffer.Append("    OPTION FLAGS=0x").Append(Convert.ToString(GetOptions(), 16)).AppendLine();if (ContainsFontFormattingBlock()) {buffer.Append(_fontFormatting).AppendLine();}if (ContainsBorderFormattingBlock()) {buffer.Append(_borderFormatting).AppendLine();}if (ContainsPatternFormattingBlock()) {buffer.Append(_patternFormatting).AppendLine();}buffer.Append("    Formula 1 =").Append(string.Join(", ", GetFormula1().GetTokens())).AppendLine();buffer.Append("    Formula 2 =").Append(string.Join(", ", GetFormula2().GetTokens())).AppendLine();buffer.Append("[/CFRULE]");return buffer.ToString();}
public virtual DescribeServiceUpdatesResponse DescribeServiceUpdates(DescribeServiceUpdatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance;return Invoke<DescribeServiceUpdatesResponse>(request, options);}
public string GetNameName(int index){return GetNameAt(index).GetNameName();}
public DescribeLocationsResult DescribeLocations(){return DescribeLocations(new DescribeLocationsRequest());}
public string ToString() {return $"<phraseslop value='{GetValueString()}'>\n{GetChild().ToString()}\n</phraseslop>";}
public DirCacheEntry GetDirCacheEntry(){return currentSubtree == null ? currentEntry : null;}
public Microsoft.Azure.CosmosDB.Buffers.ArraySegmentByteBuf put(int[] src, int srcOffset, int intCount) {System.Diagnostics.Contracts.Contract.Assert(src != null);System.Diagnostics.Contracts.Contract.Assert(srcOffset >= 0);System.Diagnostics.Contracts.Contract.Assert(intCount >= 0 && intCount <= src.Length - srcOffset);if (intCount > remaining()) {throw new System.BufferOverflowException();}for (int i = srcOffset; i < srcOffset + intCount; ++i) {put(src[i]);}return this;}
public void TrimToSize(){int s = size;if (s == array.Length) {return;}if (s == 0) {array = EmptyArray.OBJECT;} else {Object[] newArray = new Object[s];System.Array.Copy(array, 0, newArray, 0, s);array = newArray;}modCount++;}
public virtual DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLocalGatewayVirtualInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeLocalGatewayVirtualInterfacesResponse>(request, options);}
public RussianLightStemFilter Create(TokenStream input){return new RussianLightStemFilter(input);}
public int[] ToArray(final int[] a){int[] rval;if (a.Length == _limit){System.Array.Copy(_array, 0, a, 0, _limit);rval = a;}else{rval = ToArray();}return rval;}
public BasicSessionCredentials(string accessKeyId, string accessKeySecret, string sessionToken, long roleSessionDurationSeconds){if (accessKeyId == null){throw new ArgumentException("Access key ID cannot be null.");}if (accessKeySecret == null){throw new ArgumentException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = DateTimeOffset.UtcNow.ToUnixTimeMilliseconds();}
public final ShortBuffer Get(short[] dst, int dstOffset, int shortCount){if (shortCount > Remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, Offset + Position, dst, dstOffset, shortCount);Position += shortCount;return this;}
public virtual ActivateEventSourceResponse ActivateEventSource(ActivateEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateEventSourceResponseUnmarshaller.Instance;return Invoke<ActivateEventSourceResponse>(request, options);}
public virtual DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReceiptRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReceiptRuleSetResponseUnmarshaller.Instance;return Invoke<DescribeReceiptRuleSetResponse>(request, options);}
public Filter(string name) { SetName(name); }
public ReadOnlyBufferException Put(double c){throw new ReadOnlyBufferException();}
public virtual CreateTrafficPolicyInstanceResponse CreateTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyInstanceResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyInstanceResponse>(request, options);}
public JapaneseIterationMarkCharFilter(System.IO.TextReader input, bool normalizeKanji, bool normalizeKana) : base(input){this.NormalizeKanji = normalizeKanji;this.NormalizeKana = normalizeKana;buffer.Reset(input);}
public void WriteLong(long v) {WriteInt((int)(v >> 0));WriteInt((int)(v >> 32));}
public FileResolver() {exports = new ConcurrentHashMap<string, object>();exportBase = new List<string>();}
public ValueEval GetRef3DEval(Ref3DPxg rptg) {SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.SheetName, rptg.LastSheetName, rptg.ExternalWorkbookNumber);return new LazyRefEval(rptg.Row, rptg.Column, sre);}
public virtual DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDatasetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDatasetResponseUnmarshaller.Instance;return Invoke<DeleteDatasetResponse>(request, options);}
public virtual StartRelationalDatabaseResult StartRelationalDatabase(StartRelationalDatabaseRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartRelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = StartRelationalDatabaseResultUnmarshaller.Instance;return Invoke<StartRelationalDatabaseResult>(request, options);}
public DescribeReservedCacheNodesOfferingsResponse DescribeReservedCacheNodesOfferings(){var options = new InvokeOptions();options.RequestMarshaller = DescribeReservedCacheNodesOfferingsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReservedCacheNodesOfferingsResponseUnmarshaller.Instance;return Invoke<DescribeReservedCacheNodesOfferingsResponse>(new DescribeReservedCacheNodesOfferingsRequest(), options);}
public double Pmt(double r, int nper, double pv, double fv, int type) {return -r * (pv * Math.Pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.Pow(1 + r, nper) - 1));}
public virtual DescribeDocumentVersionsResult DescribeDocumentVersions(DescribeDocumentVersionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDocumentVersionsResult>(request, options);}
public virtual ListPublishingDestinationsResponse ListPublishingDestinations(ListPublishingDestinationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListPublishingDestinationsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListPublishingDestinationsResponseUnmarshaller.Instance;return Invoke<ListPublishingDestinationsResponse>(request, options);}
public DeleteAccountAliasRequest(string accountAlias) { SetAccountAlias(accountAlias); }
public static long[] Grow(long[] array) { return Grow(array, 1 + array.Length); }
public string OutputToString(object output){if (!(output is List<T>)){return outputs.OutputToString((T)output);}else{List<T> outputList = (List<T>)output;StringBuilder b = new StringBuilder();b.Append('[');for (int i = 0; i < outputList.Count; i++){if (i > 0){b.Append(", ");}b.Append(outputs.OutputToString(outputList[i]));}b.Append(']');return b.ToString();}}
public void NotifyDeleteCell(Cell cell){_bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell((HSSFCell)cell));}
public StringBuilder Replace(int start, int end, string str){Replace0(start, end, str);return this;}
public virtual SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;return Invoke<SetIdentityPoolConfigurationResponse>(request, options);}
public static double KthSmallest(double[] v, int k) {double r = double.NaN;int index = k - 1;if (v != null && v.Length > index && index >= 0) {Array.Sort(v);r = v[index];}return r;}
public void Set(int index, long value){int o = index >> 5;int b = index & 31;int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}
public string ToString(){if (GetChildren() == null || GetChildren().Count == 0)return "<boolean operation='and'/>";StringBuilder sb = new StringBuilder();sb.Append("<boolean operation='and'>");foreach (QueryNode child in GetChildren()) {sb.Append("\n");sb.Append(child.ToString());}sb.Append("\n</boolean>");return sb.ToString();}
public int SumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i = fromIx; i < toIx; i++) {result += _ptgs[i].GetSize();}return result;}
public void SetReadonly(bool readonly){if (this.readonly && !readonly) throw new InvalidOperationException("can't alter readonly IntervalSet");this.readonly = readonly;}
public final void ClearConsumingCell(FormulaCellCacheEntry cce) {if (!_consumingCells.Remove(cce)) {throw new InvalidOperationException("Specified formula cell is not consumed by this cell");}}
public override List<E> SubList(int start, int end){lock (mutex){return new SynchronizedRandomAccessList<E>(list.SubList(start, end), mutex);}}
public FileHeader GetFileHeader(){return file;}
public virtual AttachLoadBalancersResponse AttachLoadBalancers(AttachLoadBalancersRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachLoadBalancersResponseUnmarshaller.Instance;return Invoke<AttachLoadBalancersResponse>(request, options);}
public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters){SetAccountId(accountId);SetVaultName(vaultName);SetJobParameters(jobParameters);}
public override string ToString() { return "SPL"; }
public ReplaceableAttribute(string name, string value, bool replace){SetName(name);SetValue(value);SetReplace(replace);}
public final void Add(IndexableField field) { fields.Add(field); }
public virtual DeleteStackSetResult DeleteStackSet(DeleteStackSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteStackSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteStackSetResultUnmarshaller.Instance;return Invoke<DeleteStackSetResult>(request, options);}
public GetRepoBuildRuleListRequest() {var options = new InvokeOptions();options.RequestMarshaller = GetRepoBuildRuleListRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRepoBuildRuleListResponseUnmarshaller.Instance;options.UriParser = GetRepoBuildRuleListUriParser.Instance;setMethod(MethodType.GET);}
public SparseArray(int initialCapacity){initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new Object[initialCapacity];mSize = 0;}
public InvokeServiceRequest() : base("industry-brain", "2018-07-12", "InvokeService"){SetMethod(MethodType.POST);}
public ListAlbumPhotosRequest() {base("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public bool hasPrevious(){return link != list.voidLink;}
public virtual DeleteHsmConfigurationResponse DeleteHsmConfiguration(DeleteHsmConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteHsmConfigurationResponseUnmarshaller.Instance;return Invoke<DeleteHsmConfigurationResponse>(request, options);}
public CreateLoadBalancerRequest(string loadBalancerName) { SetLoadBalancerName(loadBalancerName); }
public string GetUserInfo(){return decode(userInfo);}
public virtual TagAttendeeResponse TagAttendee(TagAttendeeRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance;options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance;return Invoke<TagAttendeeResponse>(request, options);}
public string GetRefName(){return name;}
public SpanNearQuery Build(){return new SpanNearQuery(clauses.ToArray(new SpanQuery[clauses.Count]), slop, ordered);}
public bool isSubTotal(int rowIndex, int columnIndex){return false;}
public virtual DescribeDBProxiesResponse DescribeDBProxies(DescribeDBProxiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBProxiesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBProxiesResponseUnmarshaller.Instance;return Invoke<DescribeDBProxiesResponse>(request, options);}
public virtual GetVoiceConnectorProxyResponse GetVoiceConnectorProxy(GetVoiceConnectorProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance;return Invoke<GetVoiceConnectorProxyResponse>(request, options);}
public WindowCacheConfig FromConfig(Config rc) {SetPackedGitUseStrongRefs(rc.GetBoolean(CONFIG_CORE_SECTION, CONFIG_KEY_PACKED_GIT_USE_STRONGREFS, IsPackedGitUseStrongRefs()));SetPackedGitOpenFiles(rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_OPENFILES, GetPackedGitOpenFiles()));SetPackedGitLimit(rc.GetLong(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_LIMIT, GetPackedGitLimit()));SetPackedGitWindowSize(rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_WINDOWSIZE, GetPackedGitWindowSize()));SetPackedGitMMAP(rc.GetBoolean(CONFIG_CORE_SECTION, null, CONFIG_KEY_PACKED_GIT_MMAP, IsPackedGitMMAP()));SetDeltaBaseCacheLimit(rc.GetInt(CONFIG_CORE_SECTION, null, CONFIG_KEY_DELTA_BASE_CACHE_LIMIT, GetDeltaBaseCacheLimit()));long maxMem = Runtime.GetRuntime().MaxMemory();long sft = rc.GetLong(CONFIG_CORE_SECTION, null, CONFIG_KEY_STREAM_FILE_TRESHOLD, GetStreamFileThreshold());sft = Math.Min(sft, maxMem / 4);sft = Math.Min(sft, int.MaxValue);SetStreamFileThreshold((int)sft);return this;}
public static DateTime GetJavaDate(double date) { return GetJavaDate(date, false, null, false); }
public virtual StartPersonTrackingResponse StartPersonTracking(StartPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = StartPersonTrackingResponseUnmarshaller.Instance;return Invoke<StartPersonTrackingResponse>(request, options);}
public override int Size(){return totalSize;}
public virtual GetRouteResponse GetRoute(GetRouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRouteResponseUnmarshaller.Instance;return Invoke<GetRouteResponse>(request, options);}
public virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance;return Invoke<DeleteClusterResponse>(request, options);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[MMS]\n");buffer.Append("    .addMenu        = ").Append(Convert.ToString(getAddMenuCount(), 16)).Append("\n");buffer.Append("    .delMenu        = ").Append(Convert.ToString(getDelMenuCount(), 16)).Append("\n");buffer.Append("[/MMS]\n");return buffer.ToString();}
public FileBasedConfig(Config base, File cfgLocation, FS fs) {super(base);configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.zeroId();}
public int Following(int pos){if (pos < text.GetBeginIndex() || pos > text.GetEndIndex()){throw new ArgumentException("offset out of bounds");}else if (sentenceStarts.Length == 0){text.SetIndex(text.GetBeginIndex());return DONE;}else if (pos >= sentenceStarts[sentenceStarts.Length - 1]){text.SetIndex(text.GetEndIndex());currentSentence = sentenceStarts.Length - 1;return DONE;}else { currentSentence = (sentenceStarts.Length - 1) / 2; MoveToSentenceAt(pos, 0, sentenceStarts.Length - 2);text.SetIndex(sentenceStarts[++currentSentence]);return Current();}}
public virtual UpdateParameterGroupResult UpdateParameterGroup(UpdateParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.Instance;return Invoke<UpdateParameterGroupResult>(request, options);}
public SeriesChartGroupIndexRecord Clone(){return Copy();}
public static double CalcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0.5) {throw new ArgumentException("distErrPct " + distErrPct + " must be between [0 to 0.5]");}if (distErrPct == 0 || shape is Point) {return 0;}Rectangle bbox = shape.GetBoundingBox();Point ctr = bbox.GetCenter();double y = (ctr.Y >= 0 ? bbox.MaxY : bbox.MinY);double diagonalDist = ctx.GetDistCalc().Distance(ctr, bbox.MaxX, y);return diagonalDist * distErrPct;}
public int codePointAt(int index){if (index < 0 || index >= count) {throw indexAndLength(index);}return Character.codePointAt(value, index, count);}
public void SetPasswordVerifier(int passwordVerifier) { this.passwordVerifier = passwordVerifier; }
public ListVaultsRequest(string accountId) { SetAccountId(accountId); }
public SquashMessageFormatter() {dateFormatter = new GitDateFormatter(Format.DEFAULT);}
public GetVideoCoverRequest() {base("CloudPhoto", "2017-07-11", "GetVideoCover", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public int LastIndexOf(object obj) {int pos = size;Link<E> link = voidLink.Previous;if (obj != null) {while (link != voidLink) {pos--;if (obj.Equals(link.Data)) {return pos;}link = link.Previous;}} else {while (link != voidLink) {pos--;if (link.Data == null) {return pos;}link = link.Previous;}}return -1;}
public virtual DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSpotFleetRequestsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSpotFleetRequestsResponseUnmarshaller.Instance;return Invoke<DescribeSpotFleetRequestsResponse>(request, options);}
public virtual IndexFacesResponse IndexFaces(IndexFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = IndexFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;return Invoke<IndexFacesResponse>(request, options);}
public RuleBasedBreakIterator GetBreakIterator(int script) {switch (script) {case UScript.JAPANESE:return (RuleBasedBreakIterator)cjkBreakIterator.Clone();case UScript.MYANMAR:if (myanmarAsWords) {return (RuleBasedBreakIterator)defaultBreakIterator.Clone();} else {return (RuleBasedBreakIterator)myanmarSyllableIterator.Clone();}default:return (RuleBasedBreakIterator)defaultBreakIterator.Clone();}}
public string ToString(){StringBuilder b = new StringBuilder();b.AppendLine("[DCONREF]");b.AppendLine("    .ref");b.AppendLine("        .firstrow   = " + firstRow);b.AppendLine("        .lastrow    = " + lastRow);b.AppendLine("        .firstcol   = " + firstCol);b.AppendLine("        .lastcol    = " + lastCol);b.AppendLine("    .cch            = " + charCount);b.AppendLine("    .stFile");b.AppendLine("        .h          = " + charType);b.AppendLine("        .rgb        = " + getReadablePath());b.AppendLine("[/DCONREF]");return b.ToString();}
public int GetPackedGitOpenFiles(){return packedGitOpenFiles;}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[FEATURE HEADER]\n");buffer.Append("[/FEATURE HEADER]\n");return buffer.ToString();}
public static byte[] GetToUnicodeLE(string str){return System.Text.Encoding.Unicode.GetBytes(str);}
public final List<string> GetFooterLines(string keyName){return GetFooterLines(new FooterKey(keyName));}
public void Refresh(){base.Refresh();ClearReferences();}
public float Get(int index){checkIndex(index);return byteBuffer.GetFloat(index * SizeOf.FLOAT);}
public virtual DeleteDetectorResult DeleteDetector(DeleteDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDetectorResponseUnmarshaller.Instance;return Invoke<DeleteDetectorResult>(request, options);}
public int[] Grow(){assert bytesStart != null;return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.Length + 1);}
public virtual ListExclusionsResponse ListExclusions(ListExclusionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListExclusionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListExclusionsResponseUnmarshaller.Instance;return Invoke<ListExclusionsResponse>(request, options);}
public static SpatialStrategy GetSpatialStrategy(int roundNumber){SpatialStrategy result = spatialStrategyCache.Get(roundNumber);if (result == null) {throw new InvalidOperationException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}
public virtual RestoreDBClusterToPointInTimeResponse RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance;return Invoke<RestoreDBClusterToPointInTimeResponse>(request, options);}
public void Serialize(LittleEndianOutput out) {out.WriteShort(Field_1_categoryDataType);out.WriteShort(Field_2_valuesDataType);out.WriteShort(Field_3_numCategories);out.WriteShort(Field_4_numValues);out.WriteShort(Field_5_bubbleSeriesType);out.WriteShort(Field_6_numBubbleValues);}
public virtual PostAgentProfileResponse PostAgentProfile(PostAgentProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = PostAgentProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = PostAgentProfileResponseUnmarshaller.Instance;return Invoke<PostAgentProfileResponse>(request, options);}
public ParseTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex) {if (GetTokenStream() != null) {TokenSource tokenSource = GetTokenStream().GetTokenSource();if (tokenSource is Lexer) {Lexer lexer = (Lexer)tokenSource;return CompileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new System.NotSupportedException("Parser can't discover a lexer to use");}
public virtual BacktrackDBClusterResponse BacktrackDBCluster(BacktrackDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = BacktrackDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = BacktrackDBClusterResponseUnmarshaller.Instance;return Invoke<BacktrackDBClusterResponse>(request, options);}
public string GetName(){return strategyName;}
public void CopyTo(byte[] b, int o) {formatHexByte(b, o + 0, w1);formatHexByte(b, o + 8, w2);formatHexByte(b, o + 16, w3);formatHexByte(b, o + 24, w4);formatHexByte(b, o + 32, w5);}
public static IntList LineMap(byte[] buf, int ptr, int end) {IntList map = new IntList((end - ptr) / 36);map.FillTo(1, int.MinValue);for (; ptr < end; ptr = NextLF(buf, ptr)) {map.Add(ptr);}map.Add(end);return map;}
public HashSet<ObjectId> GetAdditionalHaves(){return new HashSet<ObjectId>();}
public virtual long RamBytesUsed(){long sizeInBytes = BASE_RAM_BYTES_USED + fields.size() * 2 * RamUsageEstimator.NUM_BYTES_OBJECT_REF;foreach(SimpleTextTerms simpleTextTerms in termsCache.Values){sizeInBytes += (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0;}return sizeInBytes;}
public string ToXml(string tab) {StringBuilder builder = new StringBuilder();builder.Append(tab).Append("<").Append(GetRecordName()).Append(">\n");foreach (EscherRecord escherRecord in GetEscherRecords()){builder.Append(escherRecord.ToXml(tab + "\t"));}builder.Append(tab).Append("</").Append(GetRecordName()).Append(">\n");return builder.ToString();}
public GalicianMinimalStemFilter Create(TokenStream input){return new GalicianMinimalStemFilter(input);}
public string ToString() {StringBuilder r = new StringBuilder();r.Append("Commit");r.Append("={\n");r.Append("tree ");r.Append(treeId != null ? treeId.Name() : "NOT_SET");r.Append("\n");foreach (ObjectId p in parentIds) {r.Append("parent ");r.Append(p.Name());r.Append("\n");}r.Append("author ");r.Append(author != null ? author.ToString() : "NOT_SET");r.Append("\n");r.Append("committer ");r.Append(committer != null ? committer.ToString() : "NOT_SET");r.Append("\n");r.Append("gpgSignature ");r.Append(gpgSignature != null ? gpgSignature.ToString() : "NOT_SET");r.Append("\n");if (encoding != null && !References.IsSameObject(encoding, UTF_8)) {r.Append("encoding ");r.Append(encoding.Name());r.Append("\n");}r.Append("\n");r.Append(message != null ? message : "");r.Append("}");return r.ToString();}
public IndicNormalizationFilterFactory(System.Collections.Generic.Dictionary<string, string> args) : base(args){if (!args.IsEmpty){throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public virtual CreateOptionGroupResponse CreateOptionGroup(CreateOptionGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOptionGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOptionGroupResponseUnmarshaller.Instance;return Invoke<CreateOptionGroupResponse>(request, options);}
public virtual AssociateMemberAccountResult AssociateMemberAccount(AssociateMemberAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.Instance;return Invoke<AssociateMemberAccountResult>(request, options);}
public void Run(){doRefreshProgress(mId, mProgress, mFromUser, true);mRefreshProgressRunnable = this;}
public virtual SetTerminationProtectionResponse SetTerminationProtection(SetTerminationProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTerminationProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTerminationProtectionResponseUnmarshaller.Instance;return Invoke<SetTerminationProtectionResponse>(request, options);}
public string GetErrorHeader(RecognitionException e) {int line = e.OffendingToken.Line;int charPositionInLine = e.OffendingToken.CharPositionInLine;return "line " + line + ":" + charPositionInLine;}
public CharBuffer AsReadOnlyBuffer(){CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.AsReadOnlyBuffer());buf.Limit = limit;buf.Position = position;buf.Mark = mark;buf.ByteBuffer.Order = byteBuffer.Order;return buf;}
public virtual StopSentimentDetectionJobResponse StopSentimentDetectionJob(StopSentimentDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke<StopSentimentDetectionJobResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> GetNewObjectIds(){if (newObjectIds != null)return newObjectIds;return new ObjectIdSubclassMap<ObjectId>();}
public void Clear(){hash = Hash(new byte[0]);base.Clear();}
public void Reset() {lock (lock) {CheckNotClosed();if (mark == -1) {throw new IOException("Invalid mark");}pos = mark;}}
public RefErrorPtg(LittleEndianInput in) { field_1_reserved = in.ReadInt(); }
public virtual SuspendGameServerGroupResponse SuspendGameServerGroup(SuspendGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = SuspendGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = SuspendGameServerGroupResponseUnmarshaller.Instance;return Invoke<SuspendGameServerGroupResponse>(request, options);}
public final ValueEval Evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex){if (args.Length != 3){return ErrorEval.VALUE_INVALID;}return Evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public GetRepoRequest() : base("cr", "2016-06-07", "GetRepo", "cr"){SetUriPattern("/repos/[RepoNamespace]/[RepoName]");SetMethod(MethodType.GET);}
public void SetDate(DateTime date) {if (date != null) {SetDate(DateTools.DateToString(date, DateTools.Resolution.Second));} else {this.date = null;}}
public TokenStream Create(TokenStream input) {return new GermanMinimalStemFilter(input);}
public object[] ToArray(){return a.Clone();}
public void Write(char[] buffer, int offset, int len){Array.ConstrainedCopy(buffer, offset, this.buf, this.count, len);Arrays.CheckOffsetAndCount(buffer.Length, offset, len);lock (lock){Expand(len);System.ArrayCopy(buffer, offset, this.buf, this.count, len);this.count += len;}}
public static RevFilter After(DateTime ts){return After(ts.ToUniversalTime().Ticks);}
public DeleteGroupPolicyRequest(string groupName, string policyName) {SetGroupName(groupName);SetPolicyName(policyName);}
public virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual BatchDeleteScheduledActionResponse BatchDeleteScheduledAction(BatchDeleteScheduledActionRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchDeleteScheduledActionRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDeleteScheduledActionResponseUnmarshaller.Instance;return Invoke<BatchDeleteScheduledActionResponse>(request, options);}
public virtual CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;return Invoke<CreateAlgorithmResponse>(request, options);}
public int ReadUByte(){return readByte() & 0x00FF;}
public void SetLength(int sz) {NB.EncodeInt32(info, infoOffset + P_SIZE, sz);}
public DescribeScalingProcessTypesResponse DescribeScalingProcessTypes(){var options = new InvokeOptions();options.RequestMarshaller = DescribeScalingProcessTypesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeScalingProcessTypesResponseUnmarshaller.Instance;return Invoke<DescribeScalingProcessTypesResponse>(new DescribeScalingProcessTypesRequest(), options);}
public virtual ListResourceRecordSetsResponse ListResourceRecordSets(ListResourceRecordSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListResourceRecordSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.Instance;return Invoke<ListResourceRecordSetsResponse>(request, options);}
public void RecoverInline(Parser recognizer){InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.getContext(); context != null; context = context.getParent()) {context.exception = e;}throw new ParseCancellationException(e);}
public virtual SetTagsForResourceResult SetTagsForResource(SetTagsForResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance;return Invoke<SetTagsForResourceResult>(request, options);}
public ModifyStrategyRequest() {base("CloudCallCenter", "2017-07-05", "ModifyStrategy", "CloudCallCenter", "innerAPI");}
public virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcEndpointServicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcEndpointServicesResponseUnmarshaller.Instance;return Invoke<DescribeVpcEndpointServicesResponse>(request, options);}
public virtual EnableLoggingResponse EnableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableLoggingRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableLoggingResponseUnmarshaller.Instance;return Invoke<EnableLoggingResponse>(request, options);}
public bool Contains(object o){return ConcurrentHashMap.this.ContainsValue(o);}
public SheetRangeIdentifier(string bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) : base(bookName, firstSheetIdentifier) {_lastSheetIdentifier = lastSheetIdentifier;}
public DomainMetadataRequest(string domainName) {SetDomainName(domainName);}
public ParseException(Token currentTokenVal, int[][] expectedTokenSequencesVal, string[] tokenImageVal) : base(new MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal))) {this.CurrentToken = currentTokenVal;this.ExpectedTokenSequences = expectedTokenSequencesVal;this.TokenImage = tokenImageVal;}
public FetchPhotosRequest() : base("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public System.IO.TextWriter Writer() { return writer; }
public NGramTokenizerFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){minGramSize = GetInt(args, "minGramSize", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = GetInt(args, "maxGramSize", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public bool IsDirectoryFileConflict(){return dfConflict != null;}
public IndonesianStemFilter(TokenStream input, bool stemDerivational) {super(input);this.stemDerivational = stemDerivational;}
public virtual CreateTrafficPolicyResponse CreateTrafficPolicy(CreateTrafficPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyResponse>(request, options);}
public void Serialize(LittleEndianOutput out) {out.WriteInt(fSD);out.WriteInt(passwordVerifier);StringUtil.WriteUnicodeString(out, title);out.Write(securityDescriptor);}
public static double Floor(double n, double s) {if (s == 0 && n != 0) {return double.NaN;} else {return (n == 0 || s == 0) ? 0 : Math.Floor(n / s) * s;}}
public ByteArrayDataOutput(byte[] bytes, int offset, int len){reset(bytes, offset, len);}
public static List<Tree> GetChildren(Tree t) {List<Tree> kids = new List<Tree>();for (int i = 0; i < t.GetChildCount(); i++) {kids.Add(t.GetChild(i));}return kids;}
public void Clear(){Hashtable.this.Clear();}
public void RefreshAllRecord(bool refreshAll){this(0);setRefreshAll(refreshAll);}
public virtual DeleteNamedQueryResult DeleteNamedQuery(DeleteNamedQueryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNamedQueryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNamedQueryResponseUnmarshaller.Instance;return Invoke<DeleteNamedQueryResult>(request, options);}
public GraphvizFormatter(ConnectionCosts costs){this.costs = costs;this.bestPathMap = new Dictionary<string, string>();sb.Append(formatHeader());sb.Append("  init [style=invis]\n");sb.Append("  init -> 0.0 [label=\"" + BOS_LABEL + "\"]\n");}
public CheckMultiagentRequest() : base("visionai-poc", "2020-04-08", "CheckMultiagent"){SetMethod(MethodType.POST);}
public virtual ListUserProfilesResponse ListUserProfiles(ListUserProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListUserProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListUserProfilesResponseUnmarshaller.Instance;return Invoke<ListUserProfilesResponse>(request, options);}
public virtual CreateRelationalDatabaseFromSnapshotResult CreateRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance;return Invoke<CreateRelationalDatabaseFromSnapshotResult>(request, options);}
public virtual StartTaskResponse StartTask(StartTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StartTaskResponseUnmarshaller.Instance;return Invoke<StartTaskResponse>(request, options);}
public HashSet<string> GetIgnoredPaths(){return ignoredPaths;}
public FeatSmartTag(RecordInputStream in){data = in.ReadRemainder();}
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet){SetAction(action.ToString());SetResourceRecordSet(resourceRecordSet);}
public virtual DeleteImageResponse DeleteImage(DeleteImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteImageResponseUnmarshaller.Instance;return Invoke<DeleteImageResponse>(request, options);}
public virtual CreateConfigurationSetResult CreateConfigurationSet(CreateConfigurationSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateConfigurationSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateConfigurationSetResultUnmarshaller.Instance;return Invoke<CreateConfigurationSetResult>(request, options);}
public Iterator<E> iterator() {Object[] snapshot = elements;return new CowIterator<E>(snapshot, 0, snapshot.length);}
public void VisitContainedRecords(RecordVisitor rv) {if (_recs.Count == 0) {return;}rv.VisitRecord(_bofRec);for (int i = 0; i < _recs.Count; i++) {RecordBase rb = _recs[i];if (rb is RecordAggregate) {((RecordAggregate)rb).VisitContainedRecords(rv);} else {rv.VisitRecord((org.apache.poi.hssf.record.Record)rb);}}rv.VisitRecord(EOFRecord.Instance);}
public string ToString(){var buffer = new StringBuilder();buffer.Append("[FtCbls ]").Append("\n");buffer.Append("  size     = ").Append(GetDataSize()).Append("\n");buffer.Append("  reserved = ").Append(HexDump.ToHex(reserved)).Append("\n");buffer.Append("[/FtCbls ]").Append("\n");return buffer.ToString();}
public static BATBlock CreateEmptyBATBlock(final POIFSBigBlockSize bigBlockSize, bool isXBAT){BATBlock block = new BATBlock(bigBlockSize);if(isXBAT){final int _entries_per_xbat_block = bigBlockSize.GetXBATEntriesPerBlock();block._values[_entries_per_xbat_block] = POIFSConstants.END_OF_CHAIN;}return block;}
public virtual TagResourceResult TagResource(TagResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = TagResourceResultUnmarshaller.Instance;return Invoke<TagResourceResult>(request, options);}
public virtual DeleteMailboxPermissionsResult DeleteMailboxPermissions(DeleteMailboxPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMailboxPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMailboxPermissionsResponseUnmarshaller.Instance;return Invoke<DeleteMailboxPermissionsResult>(request, options);}
public virtual ListDatasetGroupsResult ListDatasetGroups(ListDatasetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;return Invoke<ListDatasetGroupsResult>(request, options);}
public virtual ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResumeProcessesRequestMarshaller.Instance;options.ResponseUnmarshaller = ResumeProcessesResponseUnmarshaller.Instance;return Invoke<ResumeProcessesResponse>(request, options);}
public virtual GetPersonTrackingResponse GetPersonTracking(GetPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;return Invoke<GetPersonTrackingResponse>(request, options);}
public string ToFormulaString(string[] operands){if(space.IsSet(_options)){return operands[0];}else if(optiIf.IsSet(_options)){return ToFormulaString() + "(" + operands[0] + ")";}else if(optiSkip.IsSet(_options)){return ToFormulaString() + operands[0];}else{return ToFormulaString() + "(" + operands[0] + ")";}}
public T Merge(T first, T second) { throw new NotImplementedException(); }
public string ToString() {return this.message.Key + ": " + GetLocalizedMessage();}
public XPath(Parser parser, string path) {this.parser = parser;this.path = path;elements = split(path);}
public CreateAccountAliasRequest(string accountAlias) { SetAccountAlias(accountAlias); }
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >> 7) & 1;values[valuesOffset++] = (block >> 6) & 1;values[valuesOffset++] = (block >> 5) & 1;values[valuesOffset++] = (block >> 4) & 1;values[valuesOffset++] = (block >> 3) & 1;values[valuesOffset++] = (block >> 2) & 1;values[valuesOffset++] = (block >> 1) & 1;values[valuesOffset++] = block & 1;}}
public TcpPushConnection OpenPush(){return new TcpPushConnection();}
public static void Strcpy(char[] dst, int di, char[] src, int si){while (src[si] != '\0'){dst[di++] = src[si++];}dst[di] = '\0';}
public override K GetKey(){return mapEntry.Key;}
public static int NumNonnull(object[] data) {int n = 0;if (data == null) return n;foreach (var o in data) {if (o != null) n++;}return n;}
public void Add(int location, E object){if (location >= 0 && location <= size){Link<E> link = voidLink;if (location < (size / 2)){for (int i = 0; i <= location; i++){link = link.Next;}else{for (int i = size; i > location; i--){link = link.Previous;}}}Link<E> previous = link.Previous;Link<E> newLink = new Link<E>(object, previous, link);previous.Next = newLink;link.Previous = newLink;size++;modCount++;} else {throw new IndexOutOfBoundsException();}}
public virtual DescribeDomainResult DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResult>(request, options);}
public void Flush(){base.Flush();}
public PersianCharFilterFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){if (!args.IsEmpty){throw new System.ArgumentException("Unknown parameters: " + args);}}
public bool IncrementToken() {if (used) {return false;}ClearAttributes();termAttribute.Append(value);offsetAttribute.SetOffset(0, length);used = true;return true;}
public static ReadWriteFloatBuffer Allocate(int capacity) {if (capacity < 0) {throw new ArgumentException("capacity must be non-negative");}return new ReadWriteFloatArrayBuffer(capacity);}
public final Edit After(Edit cut) {return new Edit(cut.EndA, endA, cut.EndB, endB);}
public virtual UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;return Invoke<UpdateRuleVersionResponse>(request, options);}
public virtual ListVoiceConnectorTerminationCredentialsResponse ListVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return Invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);}
public virtual GetDeploymentTargetResponse GetDeploymentTarget(GetDeploymentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDeploymentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDeploymentTargetResponseUnmarshaller.Instance;return Invoke<GetDeploymentTargetResponse>(request, options);}
public void SetNoChildReport(){letChildReport = false;foreach (var task in tasks){if (task is TaskSequence){((TaskSequence)task).SetNoChildReport();}}}
public T Get(int location){try{return a[location];}catch(IndexOutOfRangeException e){throw new System.ArgumentOutOfRangeException("location", location, "Index was out of range. Must be non-negative and less than the size of the collection.");}}
public virtual DescribeDataSetResponse DescribeDataSet(DescribeDataSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance;return Invoke<DescribeDataSetResponse>(request, options);}
public SkipWorkTreeFilter(int treeIdx){this.treeIdx = treeIdx;}
public DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResponse>(new DescribeNetworkInterfacesRequest(), options);}
public bool Contains(int row, int col) {return _firstRow <= row && _lastRow >= row && _firstColumn <= col && _lastColumn >= col;}
public string ToString() {return new string(this.chars);}
public Type GetPatchType(){return patchType;}
public System.Collections.Generic.IEnumerable<K> iterator(){return new KeyIterator();}
public virtual CreateScriptResult CreateScript(CreateScriptRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateScriptResultUnmarshaller.Instance;return Invoke<CreateScriptResult>(request, options);}
public BytesRef Next() {termUpto++;if (termUpto >= info.terms.size()) {return null;} else {info.terms.Get(info.sortedTerms[termUpto], br);return br;}}
public string outputToString(CharsRef output){return output.ToString();}
public virtual AssociateWebsiteAuthorizationProviderResult AssociateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateWebsiteAuthorizationProviderRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateWebsiteAuthorizationProviderResponseUnmarshaller.Instance;return Invoke<AssociateWebsiteAuthorizationProviderResult>(request, options);}
public void Unpop(RevCommit c) {Block b = head;if (b == null) {b = free.NewBlock();b.ResetToMiddle();b.Add(c);head = b;tail = b;return;} else if (b.CanUnpop()) {b.Unpop(c);return;}b = free.NewBlock();b.ResetToEnd();b.Unpop(c);b.Next = head;head = b;}
public EdgeNGramTokenizerFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){minGramSize = GetInt(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = GetInt(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public ModifyDBParameterGroupRequest(string dBParameterGroupName, List<Parameter> parameters) {SetDBParameterGroupName(dBParameterGroupName);SetParameters(parameters);}
public virtual GetHostedZoneLimitResponse GetHostedZoneLimit(GetHostedZoneLimitRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;return Invoke<GetHostedZoneLimitResponse>(request, options);}
public void Set(int index, long value) {int o = index >> 6;int b = index & 63;int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
public RevFilter Clone(){return new PatternSearch(pattern());}
public string ToString(){return "spans(" + term.ToString() + ")@" +(doc == -1 ? "START" : (doc == NO_MORE_DOCS) ? "ENDDOC": doc + " - " + (position == NO_MORE_POSITIONS ? "ENDPOS" : position));}
public bool CanAppendMatch(){foreach (Head head in heads){if (head != LastHead.INSTANCE){return true;}}return false;}
public int LastIndexOf(string subString, int start) { return base.LastIndexOf(subString, start); }
public virtual DeleteNetworkAclEntryResult DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNetworkAclEntryResponseUnmarshaller.Instance;return Invoke<DeleteNetworkAclEntryResult>(request, options);}
public virtual AssociateMemberToGroupResponse AssociateMemberToGroup(AssociateMemberToGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberToGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.Instance;return Invoke<AssociateMemberToGroupResponse>(request, options);}
public static int Committer(byte[] b, int ptr) {int sz = b.Length;if (ptr == 0) ptr += 46;while (ptr < sz && b[ptr] == 'p') ptr += 48;if (ptr < sz && b[ptr] == 'a') ptr = NextLF(b, ptr);return Match(b, ptr, "committer");}
public int GetLineNumber(){ return row; }
public SubmoduleUpdateCommand AddPath(string path) { paths.Add(path); return this; }
public virtual GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance;return Invoke<GetPushTemplateResponse>(request, options);}
public virtual DescribeVaultResponse DescribeVault(DescribeVaultRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;return Invoke<DescribeVaultResponse>(request, options);}
public virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections(){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcPeeringConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcPeeringConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeVpcPeeringConnectionsResponse>(new DescribeVpcPeeringConnectionsRequest(), options);}
public ReadOnlySpan<byte> PutLong(int index, long value) { throw new ReadOnlyBufferException(); }
public virtual RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterDeviceRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterDeviceResponseUnmarshaller.Instance;return Invoke<RegisterDeviceResponse>(request, options);}
public static Format ById(int id){foreach (Format format in Format.values()){if (format.getId() == id){return format;}}throw new ArgumentException("Unknown format id: " + id);}
public virtual DeleteAppResult DeleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;return Invoke<DeleteAppResult>(request, options);}
public virtual GetBaiduChannelResult GetBaiduChannel(GetBaiduChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBaiduChannelResultUnmarshaller.Instance;return Invoke<GetBaiduChannelResult>(request, options);}
public FST.BytesReader GetBytesReader(){return fst.GetBytesReader();}
public static bool IsValidSchemeChar(int index, char c){if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {return true;}return false;}
public virtual ListAppliedSchemaArnsResponse ListAppliedSchemaArns(ListAppliedSchemaArnsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAppliedSchemaArnsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.Instance;return Invoke<ListAppliedSchemaArnsResponse>(request, options);}
public string Name(){return this.name;}
public TResult Evaluate(TArg[] args, OperationEvaluationContext ec){if (args.Length < 1){return ErrorEval.VALUE_INVALID;}bool isA1style;string text;try{ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.RowIndex, ec.ColumnIndex);text = OperandResolver.CoerceValueToString(ve);switch (args.Length){case 1:isA1style = true;break;case 2:isA1style = EvaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}}catch (EvaluationException e){return e.GetErrorEval();}return EvaluateIndirect(ec, text, isA1style);}
public final int CompareTo(int[] bs, int p){int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0)return cmp;cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0)return cmp;cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0)return cmp;cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0)return cmp;return NB.CompareUInt32(w5, bs[p + 4]);}
public void RemoveName(int index){names.RemoveAt(index);workbook.RemoveName(index);}
public GetQueueAttributesRequest(string queueUrl, System.Collections.Generic.List<string> attributeNames) { SetQueueUrl(queueUrl); SetAttributeNames(attributeNames); }
public static bool[] CopyOf(bool[] original, int newLength) {if (newLength < 0) {throw new System.ArgumentOutOfRangeException("newLength", "Array length must be non-negative.");}return CopyOfRange(original, 0, newLength);}
public static void SetEnabled(bool enabled){ENABLED = enabled;}
public virtual DeleteLogPatternResult DeleteLogPattern(DeleteLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;return Invoke<DeleteLogPatternResult>(request, options);}
public bool Contains(char[] text, int off, int len) {return map.ContainsKey(text, off, len);}
public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber);}
public bool Handles(string commandLine) {return command.Length + 1 < commandLine.Length && commandLine[command.Length] == ' ' && commandLine.StartsWith(command);}
public static void register(MergeStrategy imp){register(imp.getName(), imp);}
public long RamBytesUsed(){return BASE_RAM_BYTES_USED + ((index != null) ? index.RamBytesUsed() : 0);}
public HostedZone(string id, string name, string callerReference){SetId(id);SetName(name);SetCallerReference(callerReference);}
public virtual GetFindingsResult GetFindings(GetFindingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFindingsResultUnmarshaller.Instance;return Invoke<GetFindingsResult>(request, options);}
public virtual DescribeTopicsDetectionJobResult DescribeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;return Invoke<DescribeTopicsDetectionJobResult>(request, options);}
public bool ProcessMatch(ValueEval eval){if(eval is NumericValueEval){if(minimumValue == null){minimumValue = eval;}else{double currentValue = ((NumericValueEval)eval).GetNumberValue();double oldValue = ((NumericValueEval)minimumValue).GetNumberValue();if(currentValue < oldValue){minimumValue = eval;}}}return true;}
public void Write(LittleEndianOutput out) {out.WriteByte((byte)(sid + GetPtgClass()));out.WriteShort(field_1_len_ref_subexpression);}
public static class Program{public static void Main(string[] args){bool printTree = false;string path = null;for (int i = 0; i < args.Length; i++){if (args[i].Equals("-printTree")){printTree = true;}else{path = args[i];}}if (args.Length != (printTree ? 2 : 1)){Console.WriteLine("\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\n");System.Environment.Exit(1);}var dir = FSDirectory.Open(new DirectoryInfo(path));var r = new DirectoryTaxonomyReader(dir);PrintStats(r, Console.Out, printTree);r.Close();dir.Close();}private static void PrintStats(TaxonomyReader r, TextWriter writer, bool printTree){if (printTree){PrintCategoryPathTree(r, writer);}else{PrintSimpleStats(r, writer);}}private static void PrintCategoryPathTree(TaxonomyReader r, TextWriter writer){PrintCategoryPathTreeRecursive(r.GetRootCategories(), writer, 0);}private static void PrintCategoryPathTreeRecursive(IList<FacetCategoryPath> paths, TextWriter writer, int indentLevel){foreach (var path in paths){writer.WriteLine(new string(' ', indentLevel * 2) + path);
public void SetByteValue(byte value){if (!(fieldsData is Byte)) {throw new ArgumentException("cannot change value type from " + fieldsData.GetType().Name + " to Byte");}fieldsData = Byte.ValueOf(value);}
public static int Initialize(){return Initialize(DEFAULT_SEED);}
public CachingDoubleValueSource(DoubleValuesSource source) {this.source = source;cache = new Dictionary<string, double>();}
public AttributeDefinition(string attributeName, ScalarAttributeType attributeType) {SetAttributeName(attributeName);SetAttributeType(attributeType.ToString());}
public static string Join(System.Collections.Generic.IEnumerable<string> parts, string separator){return StringUtils.Join(parts, separator, separator);}
public virtual ListTaskDefinitionFamiliesResponse ListTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance;return Invoke<ListTaskDefinitionFamiliesResponse>(request, options);}
public virtual ListComponentsResponse ListComponents(ListComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;return Invoke<ListComponentsResponse>(request, options);}
public ActivatePhotosRequest() {base("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public virtual CreateMatchmakingRuleSetResult CreateMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;return Invoke<CreateMatchmakingRuleSetResult>(request, options);}
public virtual ListAvailableManagementCidrRangesResponse ListAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;return Invoke<ListAvailableManagementCidrRangesResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> GetBaseObjectIds(){if (baseObjectIds != null)return baseObjectIds;return new ObjectIdSubclassMap<ObjectId>();}
public virtual DeletePushTemplateResult DeletePushTemplate(DeletePushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;return Invoke<DeletePushTemplateResult>(request, options);}
public virtual CreateDomainEntryResponse CreateDomainEntry(CreateDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDomainEntryResponseUnmarshaller.Instance;return Invoke<CreateDomainEntryResponse>(request, options);}
public static int GetEncodedSize(object[] values) {int result = values.Length * 1;for (object value : values) {result += GetEncodedSize(value);}return result;}
public OpenNLPTokenizerFactory(System.Collections.Generic.IDictionary<string, string> args){base(args);SentenceModelFile = require(args, SENTENCE_MODEL);TokenizerModelFile = require(args, TOKENIZER_MODEL);if (args.Count > 0) {throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public int GetInt(int index) { CheckIndex(index, SizeOf.INT); return Memory.peekInt(backingArray, offset + index, order); }
public List<Head> GetNextHeads(char c){if (Matches(c)){return newHeads;}return FileNameMatcher.EMPTY_HEAD_LIST;}
public ByteBuffer PutShort(short value){throw new ReadOnlyBufferException();}
public void WriteUnshared(object object){WriteObject(object, true);}
public int OffsetByCodePoints(int index, int codePointOffset){return Character.OffsetByCodePoints(value, 0, count, index, codePointOffset);}
public static int GetUniqueAlt(System.Collections.Generic.IEnumerable<System.Collections.BitArray> altsets){System.Collections.BitArray all = GetAlts(altsets);if (all.Count == 1) return all.NextSetBit(0);return ATN.INVALID_ALT_NUMBER;}
public DateTime GetWhen(){return new DateTime(when);}
public RuleTagToken(string ruleName, int bypassTokenType, string label){if (ruleName == null || ruleName.Length == 0){throw new ArgumentException("ruleName cannot be null or empty.");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}
public virtual DisableOrganizationAdminAccountResponse DisableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableOrganizationAdminAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableOrganizationAdminAccountResponseUnmarshaller.Instance;return Invoke<DisableOrganizationAdminAccountResponse>(request, options);}
public virtual CreateRoomResponse CreateRoom(CreateRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;return Invoke<CreateRoomResponse>(request, options);}
public virtual DeleteReplicationGroupResponse DeleteReplicationGroup(DeleteReplicationGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;return Invoke<DeleteReplicationGroupResponse>(request, options);}
public final CharBuffer Decode(ByteBuffer buffer){try{return newDecoder().OnMalformedInput(CodingErrorAction.Replace).OnUnmappableCharacter(CodingErrorAction.Replace).Decode(buffer);}catch(CharacterCodingException ex){throw new Exception(ex.Message, ex);}}
public Distribution(string id, string status, string domainName) { SetId(id); SetStatus(status); SetDomainName(domainName); }
public final double[] Array(){return ProtectedArray();}
public DateWindow1904Record(RecordInputStream in) {field_1_window = in.ReadInt16();}
public DeleteDBSnapshotRequest(string dBSnapshotIdentifier){SetDBSnapshotIdentifier(dBSnapshotIdentifier);}
public final ParserExtension GetExtension(string key) { return this.extensions.Get(key); }
public void Inform(ResourceLoader loader){try{if (chunkerModelFile != null){OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);}}catch (IOException e){throw new System.ArgumentException(e.Message);}}
public virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteVaultLockRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteVaultLockResponseUnmarshaller.Instance;return Invoke<CompleteVaultLockResponse>(request, options);}
public final int[] GetCharIntervals(){return points.Clone();}
public long RamBytesUsed(){return values.RamBytesUsed() + base.RamBytesUsed() + Long.BYTES + RamUsageEstimator.NUM_BYTES_OBJECT_REF;}
public virtual RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.Instance;return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options);}
public DescribeClusterUserKubeconfigRequest() : base("CS", "2015-12-15", "DescribeClusterUserKubeconfig", "csk") {setUriPattern("/k8s/[ClusterId]/user_config");setMethod(MethodType.GET);}
public PrecisionRecord(RecordInputStream in){Field_1_precision = in.ReadShort();}
public void Serialize(LittleEndianOutput out){out.WriteShort(GetLeftRowGutter());out.WriteShort(GetTopColGutter());out.WriteShort(GetRowLevelMax());out.WriteShort(GetColLevelMax());}
public virtual DeleteVirtualInterfaceResult DeleteVirtualInterface(DeleteVirtualInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVirtualInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVirtualInterfaceResultUnmarshaller.Instance;return Invoke<DeleteVirtualInterfaceResult>(request, options);}
public Entry GetEntry(string name) {if (excludes.Contains(name)) {throw new FileNotFoundException(name);}Entry entry = directory.GetEntry(name);return WrapEntry(entry);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.AppendLine("[BACKUP]");buffer.Append("    .backup          = ").Append(Convert.ToString(getBackup(), 16)).AppendLine();buffer.AppendLine("[/BACKUP]");return buffer.ToString();}
public virtual DeleteVoiceConnectorOriginationResponse DeleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorOriginationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorOriginationResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorOriginationResponse>(request, options);}
public Appendable Append(char c) { Write(c); return this; }
public static long GenerationFromSegmentsFileName(string fileName) {if (fileName.Equals(OLD_SEGMENTS_GEN)) {throw new ArgumentException($"\"{OLD_SEGMENTS_GEN}\" is not a valid segment file name since 4.0");} else if (fileName.Equals(IndexFileNames.SEGMENTS)) {return 0;} else if (fileName.StartsWith(IndexFileNames.SEGMENTS)) {return long.Parse(fileName.Substring(1 + IndexFileNames.SEGMENTS.Length()), System.Globalization.NumberStyles.HexNumber);} else {throw new ArgumentException($"fileName \"{fileName}\" is not a segments file");}}
public static TagOpt FromOption(string o) {if (o == null || o.Length == 0)return AUTO_FOLLOW;foreach (TagOpt tagopt in Enum.GetValues(typeof(TagOpt))) {if (tagopt.Option().Equals(o))return tagopt;}throw new ArgumentException($"{JGitText.Get().invalidTagOption} {o}");}
public virtual StartContentModerationResponse StartContentModeration(StartContentModerationRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartContentModerationRequestMarshaller.Instance;options.ResponseUnmarshaller = StartContentModerationResponseUnmarshaller.Instance;return Invoke<StartContentModerationResponse>(request, options);}
public static string QuoteReplacement(string s){StringBuilder result = new StringBuilder(s.Length);for (int i = 0; i < s.Length; i++){char c = s[i];if (c == '\\' || c == '$'){result.Append('\\');}result.Append(c);}return result.ToString();}
public void Set(V newValue) { value = newValue; }
public QueryParserTokenManager(CharStream stream){input_stream = stream;}
public long valueFor(double elapsed) {double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return (long)Math.Round(val);elsereturn (long)val;}
public ByteBuffer Get(long[] dst, int dstOffset, int longCount) {byteBuffer.Limit(limit * SizeOf.LONG);byteBuffer.Position(position * SizeOf.LONG);if (byteBuffer is DirectByteBuffer) {((DirectByteBuffer) byteBuffer).Get(dst, dstOffset, longCount);} else {((HeapByteBuffer) byteBuffer).Get(dst, dstOffset, longCount);}this.position += longCount;return this;}
public void RemoveErrorListeners(){_listeners.Clear();}
public CommonTokenStream(TokenSource tokenSource, int channel){this(tokenSource);this.channel = channel;}
public virtual ListObjectPoliciesResponse ListObjectPolicies(ListObjectPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectPoliciesResponseUnmarshaller.Instance;return Invoke<ListObjectPoliciesResponse>(request, options);}
public ObjectToPack(AnyObjectId src, int type) : base(src){Flags = type << TYPE_SHIFT;}
public int Stem(char[] s, int len) {int numVowels = NumVowels(s, len);for (int i = 0; i < affixes.Length; i++) {Affix affix = affixes[i];if (numVowels > affix.Vc && len >= affix.Affix.Length + 3 && EndsWith(s, len, affix.Affix)) {len -= affix.Affix.Length;return affix.Palatalizes ? Unpalatalize(s, len) : len;}}return len;}
public void Recover(Parser recognizer, RecognitionException e){if ( lastErrorIndex == recognizer.InputStream.Index && lastErrorStates != null && lastErrorStates.Contains(recognizer.State) ){recognizer.Consume();}lastErrorIndex = recognizer.InputStream.Index;if ( lastErrorStates == null ){lastErrorStates = new IntervalSet();}lastErrorStates.Add(recognizer.State);IntervalSet followSet = GetErrorRecoverySet(recognizer);ConsumeUntil(recognizer, followSet);}
public string ToFormulaString(){string value = field_3_string;int len = value.Length;StringBuilder sb = new StringBuilder(len + 4);sb.Append(FORMULA_DELIMITER);for (int i = 0; i < len; i++){char c = value[i];if (c == FORMULA_DELIMITER){sb.Append(FORMULA_DELIMITER);}sb.Append(c);}sb.Append(FORMULA_DELIMITER);return sb.ToString();}
public UnlinkFaceRequest() : base("LinkFace", "2018-07-20", "UnlinkFace") {SetProtocol(ProtocolType.HTTPS);SetMethod(MethodType.POST);}
public ConfigurationOptionSetting(string namespace, string optionName, string value) {SetNamespace(namespace);SetOptionName(optionName);SetValue(value);}
public string GetFully(string key) {StringBuilder result = new StringBuilder(tries.Count * 2);for (int i = 0; i < tries.Count; i++) {var r = tries[i].GetFully(key);if (r == null || (r.Length == 1 && r[0] == EOM)) {return result.ToString();}result.Append(r);}return result.ToString();}
public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);}
public virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApiMappingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApiMappingResponseUnmarshaller.Instance;return Invoke<GetApiMappingResponse>(request, options);}
public HttpRequest(string strUrl) : base(strUrl) {}
public MemFuncPtg(int subExprLen) { this.field_1_len_ref_subexpression = subExprLen; }
public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, string field, Comparator<TermStats> comparator){TermStatsQueue tiq = null;if (field != null){Terms terms = MultiTerms.GetTerms(reader, field);if (terms == null){throw new Exception("field " + field + " not found");}TermsEnum termsEnum = terms.Iterator();tiq = new TermStatsQueue(numTerms, comparator);tiq.Fill(field, termsEnum);}else{Collection<string> fields = FieldInfos.GetIndexedFields(reader);if (fields.Count == 0){throw new Exception("no fields found for this index");}tiq = new TermStatsQueue(numTerms, comparator);foreach (string fieldName in fields){Terms terms = MultiTerms.GetTerms(reader, fieldName);if (terms != null){tiq.Fill(fieldName, terms.Iterator());}}}TermStats[] result = new TermStats[tiq.Size()];int count = tiq.Size() - 1;while (tiq.Size() != 0){result[count] = tiq.Pop();count--;}return result;}
public virtual DeleteApnsVoipChannelResult DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;return Invoke<DeleteApnsVoipChannelResult>(request, options);}
public virtual ListFacesResponse ListFaces(ListFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListFacesResponseUnmarshaller.Instance;return Invoke<ListFacesResponse>(request, options);}
public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<Point> provider, Point from, double multiplier) {this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}
public char Get(int index){CheckIndex(index);return sequence.Chars[index];}
public virtual UpdateConfigurationProfileResponse UpdateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationProfileResponse>(request, options);}
public virtual DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLifecycleHooksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLifecycleHooksResponseUnmarshaller.Instance;return Invoke<DescribeLifecycleHooksResponse>(request, options);}
public virtual DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHostReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.Instance;return Invoke<DescribeHostReservationsResponse>(request, options);}
public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext) {if (outerContext == null) outerContext = RuleContext.Empty;if (outerContext.Parent == null || outerContext == RuleContext.Empty) {return PredictionContext.Empty;}PredictionContext parent = null;parent = PredictionContext.FromRuleContext(atn, outerContext.Parent);ATNState state = atn.States[outerContext.InvokingState];RuleTransition transition = (RuleTransition)state.Transition(0);return SingletonPredictionContext.Create(parent, transition.FollowState.StateNumber);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[SXVDEX]\n");buffer.Append("    .grbit1 =").Append(HexDump.IntToHex(_grbit1)).Append("\n");buffer.Append("    .grbit2 =").Append(HexDump.ByteToHex(_grbit2)).Append("\n");buffer.Append("    .citmShow =").Append(HexDump.ByteToHex(_citmShow)).Append("\n");buffer.Append("    .isxdiSort =").Append(HexDump.ShortToHex(_isxdiSort)).Append("\n");buffer.Append("    .isxdiShow =").Append(HexDump.ShortToHex(_isxdiShow)).Append("\n");buffer.Append("    .subtotalName =").Append(_subtotalName).Append("\n");buffer.Append("[/SXVDEX]\n");return buffer.ToString();}
public string ToString(){StringBuilder r = new StringBuilder();r.Append("BlameResult: "); r.Append(GetResultPath());return r.ToString();}
public virtual ListChangeSetsResponse ListChangeSets(ListChangeSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance;return Invoke<ListChangeSetsResponse>(request, options);}
public bool isAllowNonFastForwards() {return allowNonFastForwards;}
public FeatRecord(){FutureHeader header = new FutureHeader();header.RecordType = sid;}
public short Put(short c){throw new ReadOnlyBufferException();}
public void SetQuery(CharSequence query) {this.query = query;this.message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, "");}
public StashApplyCommand StashApply(){return new StashApplyCommand(repo);}
public HashSet<string> NameSet(){return new HashSet<string>(dictionary.Values);}
public static int GetEffectivePort(string scheme, int specifiedPort) {if (specifiedPort != -1) {return specifiedPort;}if (scheme.Equals("http", StringComparison.OrdinalIgnoreCase)) {return 80;} else if (scheme.Equals("https", StringComparison.OrdinalIgnoreCase)) {return 443;} else {return -1;}}
public virtual ListAssessmentTemplatesResponse ListAssessmentTemplates(ListAssessmentTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssessmentTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssessmentTemplatesResponseUnmarshaller.Instance;return Invoke<ListAssessmentTemplatesResponse>(request, options);}
public virtual RestoreFromClusterSnapshotResponse RestoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreFromClusterSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreFromClusterSnapshotResponseUnmarshaller.Instance;return Invoke<RestoreFromClusterSnapshotResponse>(request, options);}
public void AddShape(HSSFShape shape) {shape.setPatriarch(this.getPatriarch());shape.setParent(this);shapes.Add(shape);}
public bool Equals(Object o) {if (this == o) return true;if (o == null || GetType() != o.GetType()) return false;FacetEntry that = (FacetEntry) o;if (count != that.count) return false;if (!value.Equals(that.value)) return false;return true;}
public static int Prev(byte[] b, int ptr, char chrA){if (ptr == b.Length)--ptr;while (ptr >= 0){if (b[ptr--] == (byte)chrA)return ptr;}return ptr;}
public final bool IsDeltaRepresentation(){return deltaBase != null;}
public Token EmitEOF(){int cpos = GetCharPositionInLine();int line = GetLine();Token eof = _factory.Create(_tokenFactorySourcePair, Token.EOF, null, Token.DEFAULT_CHANNEL, _input.Index(), _input.Index()-1, line, cpos);Emit(eof);return eof;}
public UpdateUserRequest(string userName) { setUserName(userName); }
public RevFilter Negate(){return NotRevFilter.Create(this);}
public void SetTagger(PersonIdent taggerIdent){tagger = taggerIdent;}
public static BufferSize Automatic(){Runtime rt = Runtime.getRuntime();final long max = rt.MaxMemory(); final long total = rt.TotalMemory(); final long free = rt.FreeMemory(); final long totalAvailableBytes = max - total + free;long sortBufferByteSize = free/2;final long minBufferSizeBytes = MIN_BUFFER_SIZE_MB*MB;if (sortBufferByteSize <  minBufferSizeBytes|| totalAvailableBytes > 10 * minBufferSizeBytes) { if (totalAvailableBytes/2 > minBufferSizeBytes) { sortBufferByteSize = totalAvailableBytes/2; } else {sortBufferByteSize = Math.Max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.Min((long)int.MaxValue, sortBufferByteSize));}
public static int TrimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr])) ptr--;return ptr + 1;}
public TopMarginRecord(RecordInputStream in) { Field_1_margin = in.ReadDouble(); }
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType){SetInfoType(infoType.ToString());}
public virtual CreatePlayerSessionsResponse CreatePlayerSessions(CreatePlayerSessionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePlayerSessionsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePlayerSessionsResponseUnmarshaller.Instance;return Invoke<CreatePlayerSessionsResponse>(request, options);}
public virtual CreateProxySessionResult CreateProxySession(CreateProxySessionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProxySessionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProxySessionResultUnmarshaller.Instance;return Invoke<CreateProxySessionResult>(request, options);}
public int GetObjectType(){return type;}
public string GetScheme() { return scheme; }
public void Characters(char[] ch, int start, int length){contents.Append(ch, start, length);}
public FetchAlbumTagPhotosRequest() {base("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public virtual DeleteMembersResponse DeleteMembers(DeleteMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMembersResponseUnmarshaller.Instance;return Invoke<DeleteMembersResponse>(request, options);}
public virtual GetContactReachabilityStatusResponse GetContactReachabilityStatus(GetContactReachabilityStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactReachabilityStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactReachabilityStatusResponseUnmarshaller.Instance;return Invoke<GetContactReachabilityStatusResponse>(request, options);}
public override bool Remove(object o){return Impl.this.Remove(o) != null;}
public T last() {return backingMap.lastKey();}
public virtual CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamingDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.Instance;return Invoke<CreateStreamingDistributionResponse>(request, options);}
public bool isAbsolute(){return absolute;}
public virtual DisableAddOnResult DisableAddOn(DisableAddOnRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableAddOnResponseUnmarshaller.Instance;return Invoke<DisableAddOnResult>(request, options);}
public virtual DescribeAliasResult DescribeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;return Invoke<DescribeAliasResult>(request, options);}
public void Next(int delta) {while (--delta >= 0) {if (currentSubtree != null)ptr += currentSubtree.GetEntrySpan();elseptr++;if (Eof())break;ParseEntry();}}
public RevFilter Clone(){return new Binary(a.Clone(), b.Clone());}
public PersianCharFilter Create(Reader input) {return new PersianCharFilter(input);}
public string Option(){return option;}
public string ToString() {var sb = new StringBuilder("[");var first = true;foreach (var item in this) {if (!first) sb.Append(", ");if (item is char[]) {sb.Append((char[])item);} else {sb.Append(item);}first = false;}return sb.Append(']').ToString();}
public virtual DescribeSignalingChannelResult DescribeSignalingChannel(DescribeSignalingChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSignalingChannelResultUnmarshaller.Instance;return Invoke<DescribeSignalingChannelResult>(request, options);}
public virtual AttachStaticIpResult AttachStaticIp(AttachStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachStaticIpResultUnmarshaller.Instance;return Invoke<AttachStaticIpResult>(request, options);}
public string ToString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.Append(GetType().Name);sb.Append(" [").Append(crA.FormatAsString()).Append(':').Append(crB.FormatAsString()).Append("]");return sb.ToString();}
public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat, BloomFilterFactory bloomFilterFactory){this.delegatePostingsFormat = delegatePostingsFormat;this.bloomFilterFactory = bloomFilterFactory;}
public virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;return Invoke<ListTemplatesResponse>(request, options);}
public TimerThread(long resolution, Counter counter) : base(THREAD_NAME) {this.resolution = resolution;this.counter = counter;this.IsDaemon = true;}
public DrawingRecord() {recordData = Array.Empty<byte>();}
public virtual ListDirectoriesResponse ListDirectories(ListDirectoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDirectoriesResponseUnmarshaller.Instance;return Invoke<ListDirectoriesResponse>(request, options);}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >> 7) & 1;values[valuesOffset++] = (block >> 6) & 1;values[valuesOffset++] = (block >> 5) & 1;values[valuesOffset++] = (block >> 4) & 1;values[valuesOffset++] = (block >> 3) & 1;values[valuesOffset++] = (block >> 2) & 1;values[valuesOffset++] = (block >> 1) & 1;values[valuesOffset++] = block & 1;}}
public GroupingSearch DisableCaching(){this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}
public static int IdealByteArraySize(int need) {for (int i = 4; i < 32; i++)if (need <= (1 << i) - 12)return (1 << i) - 12;return need;}
public virtual UpdateAssessmentTargetResponse UpdateAssessmentTarget(UpdateAssessmentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;return Invoke<UpdateAssessmentTargetResponse>(request, options);}
public virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;return Invoke<ModifyVolumeResponse>(request, options);}
public Cell Merge(Cell m, Cell e) {if (m.Cmd == e.Cmd && m.Ref == e.Ref && m.Skip == e.Skip) {Cell c = new Cell(m);c.Cnt += e.Cnt;return c;} else {return null;}}
public MemoryStream Read(int length, long position) {if (position >= Size()) {throw new IndexOutOfBoundsException("Position " + position + " past the end of the file");}MemoryStream dst;if (Writable) {dst = new MemoryStream(Channel.Map(FileMapping.MapMode.ReadWrite, position, length));BuffersToClean.Add(dst);} else {Channel.Position = position;dst = new MemoryStream(length);int worked = IOUtils.ReadFully(Channel, dst);if (worked == -1) {throw new IndexOutOfBoundsException("Position " + position + " past the end of the file");}}dst.Position = 0;return dst;}
public void RespondActivityTaskCompleted(RespondActivityTaskCompletedRequest request){var options = new InvokeOptions();options.RequestMarshaller = RespondActivityTaskCompletedRequestMarshaller.Instance;options.ResponseUnmarshaller = RespondActivityTaskCompletedResponseUnmarshaller.Instance;return Invoke<RespondActivityTaskCompletedResponse>(request, options);}
public virtual void IncrementProgressBy(int diff){SetProgress(mProgress + diff);}
public MetadataDiff CompareMetadata(DirCacheEntry entry) {if (entry.isAssumeValid())return MetadataDiff.EQUAL;if (entry.isUpdateNeeded())return MetadataDiff.DIFFER_BY_METADATA;if (isModeDifferent(entry.getRawMode()))return MetadataDiff.DIFFER_BY_METADATA;int type = mode & FileMode.TYPE_MASK;if (type == FileMode.TYPE_TREE || type == FileMode.TYPE_GITLINK)return MetadataDiff.EQUAL;if (!entry.isSmudged() && entry.getLength() != (int) getEntryLength())return MetadataDiff.DIFFER_BY_METADATA;Instant cacheLastModified = entry.getLastModifiedInstant();Instant fileLastModified = getEntryLastModifiedInstant();if (timestampComparator.compare(cacheLastModified, fileLastModified, getOptions().getCheckStat() == CheckStat.MINIMAL) != 0) {return MetadataDiff.DIFFER_BY_TIMESTAMP;}if (entry.isSmudged()) {return MetadataDiff.SMUDGED;}return MetadataDiff.EQUAL;}
public static NumberRecord ConvertToNumberRecord(RKRecord rk) {NumberRecord num = new NumberRecord();num.Column = rk.Column;num.Row = rk.Row;num.XFIndex = rk.XFIndex;num.Value = rk.RKNumber;return num;}
public CharBuffer Put(char[] src, int srcOffset, int charCount) {byteBuffer.Limit(limit * SizeOf.CHAR);byteBuffer.Position(position * SizeOf.CHAR);if (byteBuffer is ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer)byteBuffer).Put(src, srcOffset, charCount);} else {((ReadWriteHeapByteBuffer)byteBuffer).Put(src, srcOffset, charCount);}this.position += charCount;return this;}
public int GetCells(){Iterator<Character> i = cells.Keys.GetEnumerator();int size = 0;foreach (Character c in i){Cell e = cells[c];if (e.cmd >= 0 || e.ref >= 0){size++;}}return size;}
public BeiderMorseFilterFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){var nameType = NameType.Parse(System.Globalization.CultureInfo.InvariantCulture, get(args, "nameType", NameType.Generic.ToString()), out var nameTypeParsed) ? nameTypeParsed : NameType.Generic;var ruleType = RuleType.Parse(System.Globalization.CultureInfo.InvariantCulture, get(args, "ruleType", RuleType.Approx.ToString()), out var ruleTypeParsed) ? ruleTypeParsed : RuleType.Approx;var concat = getBoolean(args, "concat", true);engine = new PhoneticEngine(nameType, ruleType, concat);var langs = getSet(args, "languageSet");languageSet = (langs == null || (langs.Count == 1 && langs.Contains("auto"))) ? (HashSet<string>)null : LanguageSet.From(langs);if (!args.Any()){throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public static double Varp(double[] v) {double r = double.NaN;if (v != null && v.Length > 1) {r = Devsq(v) / v.Length;}return r;}
public PersianNormalizationFilterFactory(System.Collections.Generic.Dictionary<string, string> args) : base(args){if (!args.IsEmpty){throw new System.ArgumentException("Unknown parameters: " + args);}}
public static WeightedTerm[] GetTerms(Query query, bool prohibited, string fieldName){HashSet<WeightedTerm> terms = new HashSet<WeightedTerm>();Predicate<string> fieldSelector = fieldName == null ? f => true : fieldName.Equals;query.Visit(new BoostedTermExtractor(1, terms, prohibited, fieldSelector));return terms.ToArray(new WeightedTerm[0]);}
public virtual DeleteDocumentationPartResult DeleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationPartResult>(request, options);}
public string ToString(){StringBuilder sb = new StringBuilder();sb.AppendLine("[CHART]");sb.Append("    .x     = ").Append(GetX()).Append('\n');sb.Append("    .y     = ").Append(GetY()).Append('\n');sb.Append("    .width = ").Append(GetWidth()).Append('\n');sb.Append("    .height= ").Append(GetHeight()).Append('\n');sb.AppendLine("[/CHART]");return sb.ToString();}
public short Get(int index){CheckIndex(index);return backingArray[offset + index];}
public string ToString(){return image;}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = EvaluateRef(arg0);AreaEval reB = EvaluateRef(arg1);AreaEval result = ResolveRange(reA, reB);if (result == null) {return ErrorEval.NULL_INTERSECTION;}return result;} catch (EvaluationException e) {return e.GetErrorEval();}}
public void Clear(){weightBySpanQuery.Clear();}
public int FindEndOffset(StringBuilder buffer, int start) {if (start > buffer.Length || start < 0) return start;bi.Text = buffer.ToString(start, buffer.Length - start);return bi.Next() + start;}
public SrndQuery PrimaryQuery(){SrndQuery q;switch ((jj_ntk == -1) ? jj_ntk : jj_ntk) {case LPAREN:jj_consume_token(LPAREN);q = FieldsQuery();jj_consume_token(RPAREN);break;case OR:case AND:case W:case N:q = PrefixOperatorQuery();break;case TRUNCQUOTED:case QUOTED:case SUFFIXTERM:case TRUNCTERM:case TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);return q;}
public virtual DeleteApiKeyResponse DeleteApiKey(DeleteApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApiKeyResponseUnmarshaller.Instance;return Invoke<DeleteApiKeyResponse>(request, options);}
public InsertTagsRequest() : base("Ots", "2016-06-20", "InsertTags", "ots") { Method = MethodType.POST; }
public virtual DeleteUserByPrincipalIdResult DeleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteUserByPrincipalIdRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteUserByPrincipalIdResponseUnmarshaller.Instance;return Invoke<DeleteUserByPrincipalIdResult>(request, options);}
public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResponse>(request, options);}
public int Serialize(int offset, byte[] data, EscherSerializationListener listener){listener.BeforeRecordSerialize(offset, GetRecordId(), this);LittleEndian.PutShort(data, offset, GetOptions());LittleEndian.PutShort(data, offset + 2, GetRecordId());LittleEndian.PutInt(data, offset + 4, 8);LittleEndian.PutInt(data, offset + 8, Field_1_NumShapes);LittleEndian.PutInt(data, offset + 12, Field_2_LastMSOSPID);listener.AfterRecordSerialize(offset + 16, GetRecordId(), GetRecordSize(), this);return GetRecordSize();}
public virtual CreateSecurityConfigurationResult CreateSecurityConfiguration(CreateSecurityConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSecurityConfigurationResultUnmarshaller.Instance;return Invoke<CreateSecurityConfigurationResult>(request, options);}
public virtual DescribeClientVpnConnectionsResult DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeClientVpnConnectionsResult>(request, options);}
public static void Fill(double[] array, double value){for (int i = 0; i < array.Length; i++) {array[i] = value;}}
public bool hasNext(){return nextId < cells.Length;}
public PostingsEnum Reset(int[] postings) { this.postings = postings; upto = -2; freq = 0; return this; }
public final bool hasAll(RevFlagSet set) {return (flags & set.mask) == set.mask;}
public virtual ModifyAccountResponse ModifyAccount(ModifyAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.Instance;return Invoke<ModifyAccountResponse>(request, options);}
public Token LT(int k) { lazyInit(); if (k == 0) return null; if (k < 0) return LB(-k); int i = p + k - 1; sync(i); if (i >= tokens.size()) { return tokens[tokens.Count - 1]; } return tokens[i]; }
public void RemoveSheet(int sheetIndex) {if (boundsheets.Count > sheetIndex) {records.Remove(records.GetBspos() - (boundsheets.Count - 1) + sheetIndex);boundsheets.RemoveAt(sheetIndex);FixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for (int i = 0; i < GetNumNames(); i++) {NameRecord nr = GetNameRecord(i);if (nr.GetSheetNumber() == sheetNum1Based) {nr.SetSheetNumber(0);} else if (nr.GetSheetNumber() > sheetNum1Based) {nr.SetSheetNumber(nr.GetSheetNumber() - 1);}}if (linkTable != null) {linkTable.RemoveSheet(sheetIndex);}}
public void RemoveName(string name){int index = GetNameIndex(name);RemoveName(index);}
public bool Equals(final Object o) {if (!(o is Property)) {return false;}final Property p = (Property) o;final Object pValue = p.GetValue();final long pId = p.GetID();if (id != pId || (id != 0 && !TypesAreEqual(type, p.GetType()))) {return false;}if (value == null && pValue == null) {return true;}if (value == null || pValue == null) {return false;}final Type valueClass = value.GetType();final Type pValueClass = pValue.GetType();if (!(valueClass.IsAssignableFrom(pValueClass)) && !(pValueClass.IsAssignableFrom(valueClass))) {return false;}if (value is byte[]) {byte[] thisVal = (byte[]) value;byte[] otherVal = (byte[]) pValue;int len = UnpaddedLength(thisVal);if (len != UnpaddedLength(otherVal)) {return false;}for (int i = 0; i < len; i++) {if (thisVal[i] != otherVal[i]) {return false;}}return true;}return value.Equals(pValue);}
public GetRepoBuildListRequest() {base("cr", "2016-06-07", "GetRepoBuildList", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/build");setMethod(MethodType.GET);}
public MessageWriter(){buf = new System.IO.MemoryStream();enc = new System.IO.StreamWriter(GetRawStream(), System.Text.Encoding.UTF8);}
public void Append(RecordBase r){_recs.Add(r);}
public void Close() throws IOException {if (Read(skipBuffer) != -1 || actualSize != expectedSize) {throw new CorruptObjectException(string.Format(JGitText.get().packfileCorruptionDetected, JGitText.get().wrongDecompressedLength));}int used = bAvail - inf.getRemaining();if (0 < used) {OnObjectData(src, buf, p, used);Use(used);}inf.Reset();}
public virtual DescribeModelPackageResponse DescribeModelPackage(DescribeModelPackageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeModelPackageRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeModelPackageResponseUnmarshaller.Instance;return Invoke<DescribeModelPackageResponse>(request, options);}
public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec is FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText;Class<? extends Record> nextClass = rs.PeekNextClass();if (nextClass == typeof(StringRecord)) {cachedText = (StringRecord)rs.GetNext();} else {cachedText = null;}InsertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {InsertCell(rec);}}
public Deflator Clone(){return new DeflateDecompressor();}
public virtual UpdateS3ResourcesResponse UpdateS3Resources(UpdateS3ResourcesRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateS3ResourcesRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateS3ResourcesResponseUnmarshaller.Instance;return Invoke<UpdateS3ResourcesResponse>(request, options);}
public GroupQueryNode(QueryNode query){if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}allocate();setLeaf(false);add(query);}
public string ToQueryString(EscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.Append("/").Append(GetFirstPathElement());foreach (QueryText pathelement in GetPathElements(1)) {string value = escaper.Escape(pathelement.value, System.Globalization.CultureInfo.CurrentCulture, Type.STRING);path.Append("/\\\"").Append(value).Append("\\\"");}return path.ToString();}
public void RemoveCellComment(){HSSFComment comment = _sheet.FindCellComment(_record.GetRow(), _record.GetColumn());_comment = null;if (null == comment){return;}_sheet.GetDrawingPatriarch().RemoveShape(comment);}
public void Reset(){arriving = -1;leaving = -1;}
public virtual ActivateUserResult ActivateUser(ActivateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateUserResultUnmarshaller.Instance;return Invoke<ActivateUserResult>(request, options);}
public bool isCharsetDetected(){throw new NotSupportedException();}
public virtual ModifySnapshotCopyRetentionPeriodResponse ModifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;return Invoke<ModifySnapshotCopyRetentionPeriodResponse>(request, options);}
public virtual DeleteClusterSubnetGroupResult DeleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterSubnetGroupResponseUnmarshaller.Instance;return Invoke<DeleteClusterSubnetGroupResult>(request, options);}
public static string Decode(byte[] buffer) { return Decode(buffer, 0, buffer.Length); }
public int GetDefaultPort(){return -1;}
public virtual StopTaskResponse StopTask(StopTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke<StopTaskResponse>(request, options);}
public void SeekExact(BytesRef target, TermState otherState) {if (otherState == null || !(otherState is BlockTermState)) {throw new ArgumentNullException(nameof(otherState));}if (!doOrd || ((BlockTermState)otherState).ord < numTerms) {state.CopyFrom(otherState);seekPending = true;indexIsCurrent = false;term.CopyBytes(target);}}
public SeriesToChartGroupRecord(RecordInputStream in){field_1_chartGroupIndex = in.ReadInt16();}
public static void WriteUnicodeStringFlagAndData(LittleEndianOutput out, string value){bool is16Bit = HasMultibyte(value);out.WriteByte(is16Bit ? (byte)0x01 : (byte)0x00);if (is16Bit){PutUnicodeLE(value, out);}else{PutCompressedUnicode(value, out);}}
public virtual AuthorizeSecurityGroupIngressResult AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request){var options = new InvokeOptions();options.RequestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeSecurityGroupIngressResultUnmarshaller.Instance;return Invoke<AuthorizeSecurityGroupIngressResult>(request, options);}
public void AddFile(string file){checkFileNames(new List<string> { file });setFiles.Add(namedForThisSegment(file));}
public void SetSize(int width, int height) { mWidth = width; mHeight = height; }
public void SetPrecedenceFilterSuppressed(bool value){if (value){this.ReachesIntoOuterContext |= 0x40000000;}else{this.ReachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}
public IntervalSet LOOK(ATNState s, RuleContext ctx){return LOOK(s, null, ctx);}
public void Serialize(LittleEndianOutput out) {out.WriteShort(GetOptionFlags());out.WriteShort(GetRowHeight());}
public Builder(bool dedup) { this.dedup = dedup; }
public Hashtable(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || float.IsNaN(loadFactor)) {throw new ArgumentException("Load factor: " + loadFactor);}}
public object Get(string key) {var options = new InvokeOptions();options.RequestMarshaller = GetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetResponseUnmarshaller.Instance;return Invoke<object>(key, options);}
public virtual ListHyperParameterTuningJobsResponse ListHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;return Invoke<ListHyperParameterTuningJobsResponse>(request, options);}
public DeleteTableResult DeleteTable(string tableName) {return DeleteTable(new DeleteTableRequest().WithTableName(tableName));}
public final bool LessThan(TextFragment fragA, TextFragment fragB){if (fragA.GetScore() == fragB.GetScore())return fragA.FragNum > fragB.FragNum;elsereturn fragA.GetScore() < fragB.GetScore();}
public void FreeBefore(int pos) {System.Diagnostics.Contracts.Contract.Requires(pos >= 0);System.Diagnostics.Contracts.Contract.Requires(pos <= nextPos);int newCount = nextPos - pos;System.Diagnostics.Contracts.Contract.Assert(newCount <= count, "newCount=" + newCount + " count=" + count);System.Diagnostics.Contracts.Contract.Assert(newCount <= buffer.Length, "newCount=" + newCount + " buf.length=" + buffer.Length);count = newCount;}
public virtual UpdateHITTypeOfHITResponse UpdateHITTypeOfHIT(UpdateHITTypeOfHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;return Invoke<UpdateHITTypeOfHITResponse>(request, options);}
public virtual UpdateRecommenderConfigurationResponse UpdateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRecommenderConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRecommenderConfigurationResponseUnmarshaller.Instance;return Invoke<UpdateRecommenderConfigurationResponse>(request, options);}
public int CompareTo(BytesRef other){return Arrays.CompareUnsigned(this.bytes, this.offset, this.offset + this.length, other.bytes, other.offset, other.offset + other.length);}
public int Stem(char[] s, int len) {if (len > 4 && s[len - 1] == 's') len--;if (len > 5 && (EndsWith(s, len, "ene") || (EndsWith(s, len, "ane") && useNynorsk))) return len - 3;if (len > 4 && (EndsWith(s, len, "er") || EndsWith(s, len, "en") || EndsWith(s, len, "et") || (EndsWith(s, len, "ar") && useNynorsk))) return len - 2;if (len > 3) {switch (s[len - 1]) {case 'a':case 'e':return len - 1;}}return len;}
public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}
public SortedSetDocValuesFacetField(string dim, string label){base("dummy", TYPE);FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.dim = dim;this.label = label;}
public virtual CreateDocumentationPartResult CreateDocumentationPart(CreateDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResultUnmarshaller.Instance;return Invoke<CreateDocumentationPartResult>(request, options);}
public string GetValue(){return value;}
public ReadOnlyBuffer<byte> asReadOnlyBuffer() { return Duplicate(); }
public virtual UpdateDataSourcePermissionsResult UpdateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDataSourcePermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDataSourcePermissionsResponseUnmarshaller.Instance;return Invoke<UpdateDataSourcePermissionsResult>(request, options);}
public static org.apache.poi.hssf.record.Record CreateSingleRecord(RecordInputStream in){I_RecordCreator constructor = _recordCreatorsById.Get(in.GetSid());if (constructor == null) {return new UnknownRecord(in);}return constructor.Create(in);}
public int GetCount(){return mTabs.Count;}
public virtual DeleteApplicationReferenceDataSourceResult DeleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteApplicationReferenceDataSourceResult>(request, options);}
public virtual CreateProjectVersionResult CreateProjectVersion(CreateProjectVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProjectVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProjectVersionResponseUnmarshaller.Instance;return Invoke<CreateProjectVersionResult>(request, options);}
public IntBuffer Slice() {return new ReadOnlyIntArrayBuffer(Remaining(), BackingArray, Offset + Position);}
public final byte Get() {if (position == limit) {throw new BufferUnderflowException();}return this.block.PeekByte(offset + position++);}
public virtual Java.Nio.Buffer.LongBuffer Put(int index, long c){this.CheckIndex(index);this.BackingArray[this.Offset + index] = c;return this;}
public StoredField(string name, float value) : base(name, TYPE) { fieldsData = value; }
public IntervalSet GetExpectedTokensWithinCurrentRule(){ATN atn = GetInterpreter().Atn;ATNState s = atn.States.get(GetState());return atn.NextTokens(s);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.AppendLine("[FILESHARING]");buffer.Append("    .readonly       = ").Append(GetReadOnly() == 1 ? "true" : "false").AppendLine();buffer.Append("    .password       = ").Append(Convert.ToString(GetPassword(), 16)).AppendLine();buffer.Append("    .username       = ").Append(GetUsername()).AppendLine();buffer.Append("[/FILESHARING]");return buffer.ToString();}
public SubmoduleInitCommand(Repository repo){super(repo);paths = new List<string>();}
public void Include(string name, AnyObjectId id){bool validRefName = Repository.IsValidRefName(name) || Constants.HEAD.Equals(name);if (!validRefName)throw new ArgumentException(string.Format(JGitText.Get().invalidRefName, name));if (include.ContainsKey(name))throw new InvalidOperationException(JGitText.Get().duplicateRef + name);include.Add(name, id.ToObjectId());}
public virtual EnableSnapshotCopyResponse EnableSnapshotCopy(EnableSnapshotCopyRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableSnapshotCopyRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableSnapshotCopyResponseUnmarshaller.Instance;return Invoke<EnableSnapshotCopyResponse>(request, options);}
public ValueFiller getValueFiller(){return new ValueFiller(){private readonly MutableValueFloat mval = new MutableValueFloat();@OverrideThought steps:# Step 1: The method is named 'getValueFiller' and follows Java lowerCamelCase naming.# Step 2: In C#, rename the method to 'GetValueFiller' to follow PascalCase naming.# Step 3: The return type 'ValueFiller' is a class, and it uses an anonymous inner class in Java.# Step 4: In C#, anonymous classes are replaced with lambda expressions or anonymous delegates.# Step 5: Define the return type as `ValueFiller` and use an anonymous class to implement it.# Step 6: Initialize a private field `mval` of type `MutableValueFloat` within the anonymous class.# Step 7: Use the C# syntax for overriding the method.# Step 8: Adjust the formatting and ensure it follows C# coding conventions.# Step 9: Apply any necessary access modifiers or property initializers.
public void Serialize(LittleEndianOutput out) {out.WriteByte(GetPane());out.WriteShort(GetActiveCellRow());out.WriteShort(GetActiveCellCol());out.WriteShort(GetActiveCellRef());int nRefs = Field_6_refs.Length;out.WriteShort(nRefs);foreach (CellRangeAddress8Bit field_6_ref in Field_6_refs) {field_6_ref.Serialize(out);}}
public static Counter NewCounter(){return newCounter(false);}
public bool Get(string name, bool dflt) {bool[] vals = (bool[])valByRound.Get(name);if (vals != null) {return vals[roundNumber % vals.Length];}string sval = props.GetProperty(name, dflt.ToString());if (sval.IndexOf(":") < 0) {return bool.Parse(sval);}int k = sval.IndexOf(":");string colName = sval.Substring(0, k);sval = sval.Substring(k + 1);colForValByRound.Put(name, colName);vals = PropToBooleanArray(sval);valByRound.Put(name, vals);return vals[roundNumber % vals.Length];}
public void PreSerialize(){if(Records.GetTabpos() > 0) {TabIdRecord tir = (TabIdRecord)Records.Get(Records.GetTabpos());if(tir._tabids.Length < Boundsheets.Count()) {FixTabIdRecord();}}}
public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, bool consumeAllTokens) : base(delegate.GetReuseStrategy()){this.delegate = delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}
public ExternalBookBlock(int numberOfSheets){_externalBookRecord = SupBookRecord.CreateInternalReferences((short)numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[SCENARIOPROTECT]\n");buffer.Append("    .protect         = ").Append(GetProtect()).Append("\n");buffer.Append("[/SCENARIOPROTECT]\n");return buffer.ToString();}
public ThinPushCommand SetThin(bool thin) { CheckCallable(); this.thin = thin; return this; }
public int CompareTo(SearcherTracker other){return Double.Compare(other.recordTimeSec, recordTimeSec);}
public ReverseStringFilter Create(TokenStream in){return new ReverseStringFilter(in);}
public BlockList() {directory = BlockList<T>.NewDirectory(256);directory[0] = BlockList<T>.NewBlock();tailBlock = directory[0];}
public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new Dictionary<string, WeightedSpanTerm>(weightedTerms.Length);for (int i = 0; i < weightedTerms.Length; i++) {WeightedSpanTerm existingTerm = null;if (fieldWeightedSpanTerms.TryGetValue(weightedTerms[i].term, out existingTerm)) {if (existingTerm.weight < weightedTerms[i].weight) {fieldWeightedSpanTerms[weightedTerms[i].term] = weightedTerms[i];}} else {fieldWeightedSpanTerms[weightedTerms[i].term] = weightedTerms[i];}maxTermWeight = Math.Max(maxTermWeight, weightedTerms[i].getWeight());}skipInitExtractor = true;}
public bool Equals(object _other) { Assert.IsFalse(_other is MergedGroup<object>); if (_other is MergedGroup<object> other) { if (groupValue == null) { return other == null; } else { return groupValue.Equals(other); } } else { return false; }}
public final System.Text.Encoding charset(){return System.Text.Encoding.Default;}
public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;return Invoke<DescribeExperimentResponse>(request, options);}
public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel) {this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font("Arial", 0, 10);this.foreground = forecolor;}
public string Pattern(){return patternText;}
public virtual DeleteRouteTableResult DeleteRouteTable(DeleteRouteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;return Invoke<DeleteRouteTableResult>(request, options);}
public virtual AssociateVPCWithHostedZoneResult AssociateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateVPCWithHostedZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateVPCWithHostedZoneResponseUnmarshaller.Instance;return Invoke<AssociateVPCWithHostedZoneResult>(request, options);}
public virtual PutIntegrationResponse PutIntegration(PutIntegrationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke<PutIntegrationResponse>(request, options);}
public SimpleEntry(K theKey, V theValue) { key = theKey; value = theValue; }
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final byte byte0 = (byte)(blocks[blocksOffset++] & 0xFF);final byte byte1 = (byte)(blocks[blocksOffset++] & 0xFF);values[valuesOffset++] = ((long)byte0 << 4) | ((long)(byte1 >>> 4) & 0xFF);final byte byte2 = (byte)(blocks[blocksOffset++] & 0xFF);values[valuesOffset++] = ((long)(byte1 & 15) << 8) | byte2;}}
public virtual DisassociateConnectionFromLagResult DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResultUnmarshaller.Instance;return Invoke<DisassociateConnectionFromLagResult>(request, options);}
public FileMode GetOldMode(){return oldMode;}
public override string ToString() { return m.ToString(); }
public virtual StopKeyPhrasesDetectionJobResponse StopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopKeyPhrasesDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopKeyPhrasesDetectionJobResponseUnmarshaller.Instance;return Invoke<StopKeyPhrasesDetectionJobResponse>(request, options);}
public string ToString(){return "[Array Formula or Shared Formula]\n" + "row = " + GetRow() + "\n" + "col = " + GetColumn() + "\n";}
public virtual ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);}
public string ToString(){return "slice start=" + start + " length=" + length + " readerIndex=" + readerIndex;}
public static int ParseHexInt4(byte digit){byte r = digits16[digit];if (r < 0) throw new IndexOutOfRangeException();return r;}
public Attribute(string name, string value){SetName(name);SetValue(value);}
public virtual DescribeStackSetOperationResponse DescribeStackSetOperation(DescribeStackSetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;return Invoke<DescribeStackSetOperationResponse>(request, options);}
public HSSFCell GetCell(int cellnum){return GetCell(cellnum, book.GetMissingCellPolicy());}
public void write(byte[] b){writeContinueIfRequired(b.Length);_ulrOutput.write(b);}
public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute){SetImageId(imageId); SetAttribute(attribute.ToString());}
public void DiscardResultContents(){resultContents = null;}
public object GetPeeledObjectId(){return GetLeaf().GetPeeledObjectId();}
public void UndeprecateDomain(UndeprecateDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = UndeprecateDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = UndeprecateDomainResponseUnmarshaller.Instance;return Invoke<UndeprecateDomainResponse>(request, options);}
public void Write(LittleEndianOutput out) {out.WriteByte((byte)(sid + GetPtgClass()));out.WriteByte((byte)field_3_string.Length); out.WriteByte(_is16bitUnicode ? (byte)0x01 : (byte)0x00);if (_is16bitUnicode) {StringUtil.PutUnicodeLE(field_3_string, out);} else {StringUtil.PutCompressedUnicode(field_3_string, out);}}
public DeleteQueueResult DeleteQueue(string queueUrl){return DeleteQueue(new DeleteQueueRequest().WithQueueUrl(queueUrl));}
public void SetCheckEofAfterPackFooter(bool b) { checkEofAfterPackFooter = b; }
public void Swap(){int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}
public int GetPackedGitWindowSize(){return packedGitWindowSize;}
public virtual PutMetricDataResult PutMetricData(PutMetricDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = PutMetricDataResultUnmarshaller.Instance;return Invoke<PutMetricDataResult>(request, options);}
public virtual GetCelebrityRecognitionResponse GetCelebrityRecognition(GetCelebrityRecognitionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCelebrityRecognitionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCelebrityRecognitionResponseUnmarshaller.Instance;return Invoke<GetCelebrityRecognitionResponse>(request, options);}
public CreateQueueRequest(string queueName) { SetQueueName(queueName); }
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) : base(arearef) {this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.getSheetIdentifier().getName();if (sheetName instanceof SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier)sheetName).getLastSheetIdentifier().getName();} else {this.lastSheetName = null;}}
public void SetBaseline(long clockTime) { t0 = clockTime; timeout = t0 + ticksAllowed; }
public virtual MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = MoveAddressToVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.Instance;return Invoke<MoveAddressToVpcResponse>(request, options);}
public string ToString(){string coll = collectionModel.Name;if (coll != null) {return string.Format(System.Globalization.CultureInfo.InvariantCulture, "LM {0} - {1}", GetName(), coll);} else {return string.Format(System.Globalization.CultureInfo.InvariantCulture, "LM {0}", GetName());}}
public virtual DescribeLagsResponse DescribeLags(DescribeLagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance;return Invoke<DescribeLagsResponse>(request, options);}
public AreaEval Offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx) {if (_refEval == null) {return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}
public ShortBuffer Put(short[] src, int srcOffset, int shortCount) {byteBuffer.Limit(limit * SizeOf.SHORT);byteBuffer.Position(position * SizeOf.SHORT);if (byteBuffer is ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer)byteBuffer).Put(src, srcOffset, shortCount);} else {((ReadWriteHeapByteBuffer)byteBuffer).Put(src, srcOffset, shortCount);}this.position += shortCount;return this;}
public void Initialize(string cat) { this._cat = cat; }
public void Write(int oneByte) throws IOException { out.Write(oneByte); written++; }
public virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeImportImageTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeImportImageTasksResponseUnmarshaller.Instance;return Invoke<DescribeImportImageTasksResponse>(request, options);}
public ColumnInfoRecord(RecordInputStream in){_firstCol = in.readUShort();_lastCol  = in.readUShort();_colWidth = in.readUShort();_xfIndex  = in.readUShort();_options   = in.readUShort();switch(in.remaining()) {case 2: field_6_reserved  = in.readUShort();break;case 1:field_6_reserved  = in.readByte();break;case 0:field_6_reserved  = 0;break;default:throw new InvalidOperationException("Unusual record size remaining=(" + in.remaining() + ")");}}
public Status(IndexDiff diff) : base(){this.diff = diff;hasUncommittedChanges = !diff.getAdded().IsEmpty() || !diff.getChanged().IsEmpty() || !diff.getRemoved().IsEmpty() || !diff.getMissing().IsEmpty() || !diff.getModified().IsEmpty() || !diff.getConflicting().IsEmpty();clean = !hasUncommittedChanges && diff.getUntracked().IsEmpty();}
public virtual CreateExperimentResult CreateExperiment(CreateExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExperimentResultUnmarshaller.Instance;return Invoke<CreateExperimentResult>(request, options);}
public UnknownRecord Clone(){return Copy();}
public FloatBuffer Slice(){byteBuffer.Limit(limit * SizeOf.FLOAT);byteBuffer.Position(position * SizeOf.FLOAT);ByteBuffer bb = byteBuffer.Slice().Order(byteBuffer.Order());FloatBuffer result = new FloatToByteBufferAdapter(bb);byteBuffer.Clear();return result;}
public virtual DescribeSnapshotSchedulesResponse DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSnapshotSchedulesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSnapshotSchedulesResponseUnmarshaller.Instance;return Invoke<DescribeSnapshotSchedulesResponse>(request, options);}
public virtual ListImagesResponse ListImages(ListImagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListImagesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;return Invoke<ListImagesResponse>(request, options);}
public Diff(int ins, int del, int rep, int noop){INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}
public string toFormulaString(string[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[0]);buffer.Append(",");buffer.Append(operands[1]);return buffer.ToString();}
public static void SetupEnvironment(string[] workbookNames, ForkedEvaluator[] evaluators){WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.Length];for (int i = 0; i < wbEvals.Length; i++){wbEvals[i] = evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.Setup(workbookNames, wbEvals);}
public ListPhotoTagsRequest(): base("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto") {SetProtocol(ProtocolType.HTTPS);}
public RandomSamplingFacetsCollector(int sampleSize, long seed) : base(false) {this.SampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}
public virtual AllocateStaticIpResponse AllocateStaticIp(AllocateStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;return Invoke<AllocateStaticIpResponse>(request, options);}
public FeatRecord(RecordInputStream in) {futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.readShort();reserved1 = in.readByte();reserved2 = in.readInt();int cref = in.readUShort();cbFeatData = in.readInt();reserved3 = in.readShort();cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.Length; i++) {cellRefs[i] = new CellRangeAddress(in);}switch (isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in);break;default:logger.Log(POILogger.ERROR, "Unknown Shared Feature " + isf_sharedFeatureType + " found!");break;}}
public RevCommit TryFastForward(RevCommit newCommit) {var options = new InvokeOptions();options.RequestMarshaller = TryFastForwardRequestMarshaller.Instance;options.ResponseUnmarshaller = TryFastForwardResponseUnmarshaller.Instance;return Invoke<RevCommit>(newCommit, options);}
public virtual CreateSnapshotScheduleResult CreateSnapshotSchedule(CreateSnapshotScheduleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke<CreateSnapshotScheduleResult>(request, options);}
public T GetNext() {if (!HasNext()) {throw new System.Exception("Attempt to read past end of record stream");}_countRead++;return _list[_nextIndex++];}
public string ToString(){return RawParseUtils.Decode(buf.ToByteArray());}
public ListTablesRequest(string exclusiveStartTableName){SetExclusiveStartTableName(exclusiveStartTableName);}
public virtual EnableAlarmActionsResult EnableAlarmActions(EnableAlarmActionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableAlarmActionsRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableAlarmActionsResultUnmarshaller.Instance;return Invoke<EnableAlarmActionsResult>(request, options);}
public Builder() { this(true); }Thought steps:# Step 1: The method is named 'Builder' and follows Java lowerCamelCase naming.# Step 2: In C#, rename the method to 'Builder' to follow PascalCase naming, as constructors in C# do not use a return type.# Step 3: The Java constructor calls another constructor within the same class with a boolean parameter 'true'.# Step 4: In C#, the equivalent call can be made directly by using the parameter name in the constructor initializer.# Step 5: Follow C# naming conventions and syntax for constructors.# Step 6: Apply C# formatting, method modifiers, and ensure visibility/access semantics match C# usage.# Step 7: The final summary: Translate the Java constructor call into a C# constructor initializer.
public bool Equals(object obj) {if (obj == null || GetType() != obj.GetType()) {return false;}State other = (State)obj;return this.is_final == other.is_final &&this.labels.SequenceEqual(other.labels) &&ReferenceEquals(this.states, other.states);}
public TokenStream Create(TokenStream input){return new EnglishPossessiveFilter(input);}
public void ClearFormatting(){_string = CloneStringIfRequired();_string.ClearFormatting();AddToSSTIfRequired();}
public int Get(int index, long[] arr, int off, int len) {if (len <= 0) {throw new ArgumentException("len must be > 0 (got " + len + ")");}if (index < 0 || index >= valueCount) {throw new ArgumentOutOfRangeException(nameof(index), "Index must be >= 0 and < valueCount");}len = Math.Min(len, valueCount - index);Array.Clear(arr, off, len);return len;}
public virtual DeleteRouteResponseResult DeleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseResponseUnmarshaller.Instance;return Invoke<DeleteRouteResponseResult>(request, options);}
public string ToPrivateString(){return format(true, false);}
public virtual CreatePresignedDomainUrlResponse CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance;return Invoke<CreatePresignedDomainUrlResponse>(request, options);}
public void Write(int oneChar){doWrite(new char[] { (char) oneChar }, 0, 1);}
public SSTRecord GetSSTRecord(){return sstRecord;}
public string ToString(){return "term=" + term + ",field=" + field + ",value=" + ValueToString() + ",docIDUpto=" + docIDUpto;}
public bool isSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo){return bloomFilter.getSaturation() > 0.9f;}
public Builder(bool ignoreCase) { this.ignoreCase = ignoreCase; }
public string ToString(){return GetType().Name + "(maxBasicQueries: " + maxBasicQueries + ", queriesMade: " + queriesMade + ")";}
public virtual DeleteDataSourceResult DeleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteDataSourceResult>(request, options);}
public virtual RebootNodeResult RebootNode(RebootNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootNodeResponseUnmarshaller.Instance;return Invoke<RebootNodeResult>(request, options);}
public void ProcessChildRecords(){ConvertRawBytesToEscherRecords();}
public virtual CreateOrUpdateTagsResponse CreateOrUpdateTags(CreateOrUpdateTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance;return Invoke<CreateOrUpdateTagsResponse>(request, options);}
public FileSnapshot GetSnapShot(){return snapShot;}
public System.IO.Stream OpenResource(string resource) {var stream = (clazz != null) ? clazz.GetResource(resource) : loader.GetResource(resource);if (stream == null)throw new System.IO.IOException("Resource not found: " + resource);return stream;}
public string ToString() {StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(" [");sb.Append("sid=").Append(HexDump.ShortToHex(_sid));sb.Append(" size=").Append(_data.Length);sb.Append(" : ").Append(HexDump.ToHex(_data));sb.Append("]\n");return sb.ToString();}
public int NextIndex(){return index;}
public string ToQueryString(EscapeQuerySyntax escaper) {if (IsDefaultField(this.field)) {return "\"" + GetTermEscapeQuoted(escaper) + "\"";} else {return this.field + ":" + "\"" + GetTermEscapeQuoted(escaper) + "\"";}}
public CalcModeRecord Clone(){return Copy();}
public bool isOutput() {return output;}
public virtual CreateNetworkInterfaceResult CreateNetworkInterface(CreateNetworkInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkInterfaceResultUnmarshaller.Instance;return Invoke<CreateNetworkInterfaceResult>(request, options);}
public void Serialize(LittleEndianOutput out) { out.WriteShort(Field_1_Password); }
public virtual StopDominantLanguageDetectionJobResponse StopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);}
public ECSMetadataServiceCredentialsFetcher WithConnectionTimeout(int milliseconds) {this.connectionTimeoutInMilliseconds = milliseconds;return this;}
public virtual GetGatewayGroupResponse GetGatewayGroup(GetGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayGroupResponseUnmarshaller.Instance;return Invoke<GetGatewayGroupResponse>(request, options);}
public FloatBuffer Slice(){return new ReadOnlyFloatArrayBuffer(Remaining(), backingArray, offset + Position);}
public static string Join(System.Collections.Generic.IEnumerable<string> parts, string separator, string lastSeparator){System.Text.StringBuilder sb = new System.Text.StringBuilder();int i = 0;int lastIndex = parts.Count() - 1;foreach (string part in parts){sb.Append(part);if (i == lastIndex - 1){sb.Append(lastSeparator);}else if (i != lastIndex){sb.Append(separator);}i++;}return sb.ToString();}
public string ToString() { return "(" + a.ToString() + " AND " + b.ToString() + ")"; }
public ListSubscriptionsByTopicRequest(string topicArn, string nextToken) { TopicArn = topicArn; NextToken = nextToken; }
public byte ReadByte(){return bytes[pos--];}
public virtual TerminateClientVpnConnectionsResponse TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<TerminateClientVpnConnectionsResponse>(request, options);}
public ReceiveMessageRequest(string queueUrl) { SetQueueUrl(queueUrl); }
public void Serialize(LittleEndianOutput out) {out.WriteShort(field_1_barSpace);out.WriteShort(field_2_categorySpace);out.WriteShort(field_3_formatFlags);}
public T Common<T>(T output1, T output2) { return outputs.common((T) output1, (T) output2); }
public virtual CreateVariableResponse CreateVariable(CreateVariableRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;return Invoke<CreateVariableResponse>(request, options);}
public static int Match(byte[] b, int ptr, byte[] src) {if (ptr + src.Length > b.Length)return -1;for (int i = 0; i < src.Length; i++, ptr++)if (b[ptr] != src[i])return -1;return ptr;}
public int FillFields(byte[] data, int offset, EscherRecordFactory recordFactory){int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;Field_1_RectX1 = LittleEndian.GetInt(data, pos + size);size += 4;Field_2_RectY1 = LittleEndian.GetInt(data, pos + size);size += 4;Field_3_RectX2 = LittleEndian.GetInt(data, pos + size);size += 4;Field_4_RectY2 = LittleEndian.GetInt(data, pos + size);size += 4;bytesRemaining -= size;if (bytesRemaining != 0){throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);}return 8 + size + bytesRemaining;}
public virtual CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.Instance;return Invoke<CreateCloudFrontOriginAccessIdentityResponse>(request, options);}
public bool IsNamespaceAware(){return GetFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES);}
public void SetOverridable(bool on) { overridable = on; }
public string GetClassName() { return className; }
public virtual DirectoryReader GetIndexReader(){if (indexReader != null){indexReader.IncRef();}return indexReader;}
public int IndexOfKey(int key){return BinarySearch(mKeys, 0, mSize, key);}
public BlankRecord(RecordInputStream in){field_1_row = in.ReadUInt16();field_2_col = in.ReadInt16();field_3_xf  = in.ReadInt16();}
public long Length(){return length;}
public PasswordRecord(RecordInputStream in) { this.field_1_password = in.readShort(); }
public Dictionary<object, object> HashMap(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || float.IsNaN(loadFactor)) {throw new ArgumentException("Load factor: " + loadFactor);}}
public void Run(){long lastReopenStartNS = System.nanoTime();while (!finish){while (!finish){reopenLock.Lock();try{bool hasWaiting = waitingGen > searchingGen;long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - System.nanoTime();if (sleepNS > 0){reopenCond.AwaitNanos(sleepNS);}else{break;}}catch (InterruptedException ie){Thread.CurrentThread.Interrupt();return;}finally{reopenLock.Unlock();}}if (finish){break;}lastReopenStartNS = System.nanoTime();refreshStartGen = writer.GetMaxCompletedSequenceNumber();try{manager.MaybeRefreshBlocking();}catch (IOException ioe){throw new System.Exception($"IOException: {ioe.Message}");}}}
public DeleteLoginProfileRequest(string userName) { SetUserName(userName); }
public T PollFirst(){return (size == 0) ? default(T) : RemoveFirstImpl();}
public CreatePhotoRequest() : base("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public string GetName(){return "resolve";}
public int FindEndOffset(StringBuilder buffer, int start){if(start > buffer.Length || start < 0) return start;int offset, count = maxScan;for(offset = start; offset < buffer.Length && count > 0; count--){if(boundaryChars.Contains(buffer.charAt(offset))) return offset;offset++;}return start;}
public void SetObjectChecker(ObjectChecker oc) { objCheck = oc; }
public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}
public virtual CreateVpcEndpointResult CreateVpcEndpoint(CreateVpcEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return Invoke<CreateVpcEndpointResult>(request, options);}
public virtual DeregisterWorkspaceDirectoryResponse DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<DeregisterWorkspaceDirectoryResponse>(request, options);}
public ChartFRTInfoRecord(RecordInputStream in){rt = in.ReadShort();grbitFrt = in.ReadShort();verOriginator = in.ReadByte();verWriter = in.ReadByte();int cCFRTID = in.ReadShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++) {rgCFRTID[i] = new CFRTID(in);}}
public OneSide NewMerger(Repository db) {return new OneSide(db, treeIndex);}
public virtual CreateDataSourceFromRedshiftResult CreateDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDataSourceFromRedshiftRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDataSourceFromRedshiftResponseUnmarshaller.Instance;return Invoke<CreateDataSourceFromRedshiftResult>(request, options);}
public void ClearDFA(){for (int d = 0; d < decisionToDFA.Length; d++){decisionToDFA[d] = new DFA(atn.GetDecisionState(d), d);}}
public void RemoveName(string name){int index = GetNameIndex(name);RemoveName(index);}
public override string ToString(){StringBuilder buffer = new StringBuilder();buffer.AppendLine("[RightMargin]");buffer.Append("    .margin               = ").Append("(").Append(GetMargin()).Append(")");buffer.AppendLine();return buffer.ToString();}
public RefreshAllRecord Clone(){return Copy();}
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig){super(queryConfig);Add(new WildcardQueryNodeProcessor());Add(new MultiFieldQueryNodeProcessor());Add(new FuzzyQueryNodeProcessor());Add(new RegexpQueryNodeProcessor());Add(new MatchAllDocsQueryNodeProcessor());Add(new OpenRangeQueryNodeProcessor());Add(new PointQueryNodeProcessor());Add(new PointRangeQueryNodeProcessor());Add(new TermRangeQueryNodeProcessor());Add(new AllowLeadingWildcardProcessor());Add(new AnalyzerQueryNodeProcessor());Add(new PhraseSlopQueryNodeProcessor());Add(new BooleanQuery2ModifierNodeProcessor());Add(new NoChildOptimizationQueryNodeProcessor());Add(new RemoveDeletedQueryNodesProcessor());Add(new RemoveEmptyNonLeafQueryNodeProcessor());Add(new BooleanSingleChildOptimizationQueryNodeProcessor());Add(new DefaultPhraseSlopQueryNodeProcessor());Add(new BoostQueryNodeProcessor());Add(new MultiTermRewriteMethodProcessor());}
public string FormatAsString(string sheetName, bool useAbsoluteAddress){StringBuilder sb = new StringBuilder();if (sheetName != null) {sb.Append(SheetNameFormatter.Format(sheetName));sb.Append("!");}CellReference cellRefFrom = new CellReference(GetFirstRow(), GetFirstColumn(), useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(GetLastRow(), GetLastColumn(), useAbsoluteAddress, useAbsoluteAddress);sb.Append(cellRefFrom.FormatAsString());if (!cellRefFrom.Equals(cellRefTo) || IsFullColumnRange() || IsFullRowRange()){sb.Append(':');sb.Append(cellRefTo.FormatAsString());}return sb.ToString();}
public ReadOnlyBufferException Put(int index, byte value){throw new ReadOnlyBufferException();}
public void Mode(int m) {_mode = m;}
public ReadWriteShortArrayBuffer Slice(){return new ReadWriteShortArrayBuffer(Remaining(), backingArray, offset + Position);}
public void Set(int index, long n){if (count < index)throw new System.IndexOutOfRangeException(index.ToString());else if (count == index)Add(n);elseentries[index] = n;}
public byte[] PutFloat(float value) { throw new ReadOnlyBufferException(); }
public static double Max(double[] values) {double max = double.NegativeInfinity;foreach (double value in values) {max = Math.Max(max, value);}return max;}
public UpdateRepoWebhookRequest() {base("cr", "2016-06-07", "UpdateRepoWebhook", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]");setMethod(MethodType.POST);}
public DeleteAttributesRequest(string domainName, string itemName, List<Attribute> attributes, UpdateCondition expected){SetDomainName(domainName);SetItemName(itemName);SetAttributes(attributes);SetExpected(expected);}
public string ToString(){StringBuilder sb = new StringBuilder();sb.AppendLine("[SXPI]");for (int i = 0; i < _fieldInfos.Length; i++){sb.Append("    item[").Append(i).Append("]=");_fieldInfos[i].AppendDebugInfo(sb);sb.AppendLine();}sb.AppendLine("[/SXPI]");return sb.ToString();}
public bool IsSuccessful(){if (mergeResult != null)return mergeResult.getMergeStatus().isSuccessful();else if (rebaseResult != null)return rebaseResult.getStatus().isSuccessful();return true;}
public void setBytesValue(byte[] value){setBytesValue(new BytesRef(value));}
public virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeConnectionsResponse>(request, options);}
public DeletePhotosRequest() : base("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto") {setProtocol(ProtocolType.HTTPS);}
public void Add(E object){iterator.Add(object);subList.SizeChanged(true);end++;}
public static Memory<byte> Allocate(int capacity) {if (capacity < 0) {throw new ArgumentException("Capacity must be non-negative.");}return new ReadWriteHeapByteBuffer(capacity);}
public SrndQuery GetSubQuery(int qn) {return queries.get(qn);}
public float CurrentScore(int docId, string field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore){if (numPayloadsSeen == 0){return currentPayloadScore;}else{return Math.Min(currentPayloadScore, currentScore);}}
public string ToString(){var sb = new StringBuilder();sb.Append("[BLANK]\n");sb.Append("    row= ").Append(HexDump.ShortToHex(GetRow())).Append("\n");sb.Append("    col= ").Append(HexDump.ShortToHex(GetColumn())).Append("\n");sb.Append("    xf = ").Append(HexDump.ShortToHex(GetXFIndex())).Append("\n");sb.Append("[/BLANK]\n");return sb.ToString();}
public virtual DescribeLogPatternResponse DescribeLogPattern(DescribeLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;return Invoke<DescribeLogPatternResponse>(request, options);}
public virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual GetPhoneNumberSettingsResponse GetPhoneNumberSettings(GetPhoneNumberSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;return Invoke<GetPhoneNumberSettingsResponse>(request, options);}
public ObjectId GetData(){return data;}
public bool isDirect(){return false;}
public DeleteServerCertificateRequest(string serverCertificateName) {SetServerCertificateName(serverCertificateName);}
public string Append(double d){RealToString.GetInstance().AppendDouble(this, d);return this;}
public virtual GetEvaluationResponse GetEvaluation(GetEvaluationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEvaluationResponseUnmarshaller.Instance;return Invoke<GetEvaluationResponse>(request, options);}
public LinkedDataRecord GetDataName(){return dataName;}
public bool Find(int start){findPos = start;if (findPos < regionStart){findPos = regionStart;}else if (findPos >= regionEnd){matchFound = false;return false;}matchFound = FindImpl(address, input, findPos, matchOffsets);if (matchFound){findPos = matchOffsets[1];}return matchFound;}
public virtual GetLifecyclePolicyPreviewResult GetLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance;return Invoke<GetLifecyclePolicyPreviewResult>(request, options);}
public SinglePositionTokenStream(string word) {termAtt = addAttribute(CharTermAttribute.class);posIncrAtt = addAttribute(PositionIncrementAttribute.class);this.word = word;returned = true;}
public void Serialize(LittleEndianOutput out) {out.WriteShort(field_1_print_gridlines);}
public string ToString(){var s = new StringBuilder();s.Append(Constants.TypeString(GetType()));s.Append(' ');s.Append(Name());s.Append(' ');s.Append(CommitTime);s.Append(' ');s.Append(CoreFlags);return s.ToString();}
public LsRemoteCommand SetRemote(string remote){CheckCallable();this.remote = remote;return this;}
public void CollapseRow(int rowNumber){int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int nextRowIx = WriteHidden(rowRecord, startRow);RowRecord row = GetRow(nextRowIx);if (row == null){row = CreateRow(nextRowIx);InsertRow(row);}row.SetColapsed(true);}
public virtual AssociateSkillGroupWithRoomResult AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;return Invoke<AssociateSkillGroupWithRoomResult>(request, options);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[SERIESLIST]\n");buffer.Append("    .seriesNumbers= ").Append(" (").Append( string.Join(", ", getSeriesNumbers()) ).Append(" )");buffer.Append("\n");buffer.Append("[/SERIESLIST]\n");return buffer.ToString();}
public QueryConfigHandler GetQueryConfigHandler(){return this.queryConfig;}
public string GetClassArg(){if(originalArgs != null){string className = originalArgs.Get(CLASS_NAME);if(className != null){return className;}}return this.GetType().Name;}
