public void serialize(LittleEndianOutput out) {out.writeShort(field_1_vcenter);}
public void addAll(NGit.Util.BlockList<T> src) {if (src.size == 0) {return;}int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++) {addAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);}if (src.tailBlkIdx != 0) {addAll(src.tailBlock, 0, src.tailBlkIdx);}}
public void writeByte(byte b) {if (outerInstance.upto == outerInstance.blockSize) {if (outerInstance.currentBlock != null) {outerInstance.blocks.add(outerInstance.currentBlock);outerInstance.blockEnd.add(outerInstance.upto);}outerInstance.currentBlock = new byte[outerInstance.blockSize];outerInstance.upto = 0;}outerInstance.currentBlock[outerInstance.upto++] = (byte) b;}
public ObjectId getObjectId() {return objectId;}
public DeleteDomainEntryResponse deleteDomainEntry(DeleteDomainEntryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDomainEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDomainEntryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public long ramBytesUsed() {return fst == null ? 0 : fst.getSizeInBytes();}
public String getFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.tagMessage(raw, 0);if (msgB < 0) {return "";}Encoding enc = RawParseUtils.parseEncoding(raw);return RawParseUtils.decode(enc, raw, msgB, raw.length);}
public POIFSFileSystem() {HeaderBlock headerBlock = new HeaderBlock(bigBlockSize);_property_table = new PropertyTable(headerBlock);_documents = new ArrayList<>();_root = null;}
public void init(int address) {slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];assert slice != null;upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;assert upto < slice.length;}
public SubmoduleAddCommand setPath(String path) {this.path = path;return this;}
public ListIngestionsResult listIngestions(ListIngestionsRequest request) {request = beforeClientExecution(request);return executeListIngestions(request);}
public QueryParserTokenManager(CharStream stream, int lexState){this(stream);SwitchTo(lexState);}
public GetShardIteratorResult getShardIterator(GetShardIteratorRequest request) {request = beforeClientExecution(request);return executeGetShardIterator(request);}
public ModifyStrategyRequest() {super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis");setMethod(MethodType.POST);}
public boolean ready() {synchronized (@lock) {if (@in == null) {throw new IOException("InputStreamReader is closed");}try {return bytes.hasRemaining() || @in.available() > 0;} catch (IOException e) {return false;}}}
protected EscherOptRecord getOptRecord() {return _optRecord;}
public synchronized int read(byte[] buffer, int offset, int length) throws IOException {if (buffer == null) {throw new NullPointerException("buffer == null");}Arrays.checkOffsetAndCount(buffer.length, offset, length);if (length == 0) {return 0;}int copylen = count - pos < length ? count - pos : length;for (int i = 0; i < copylen; i++) {buffer[offset + i] = this.buffer[pos + i];}pos += copylen;return copylen;}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}
public void print(String str) {write(str != null ? str : String.valueOf((Object)null));}
public NotImplementedFunctionException(String functionName, NotImplementedException cause) {super(functionName, cause);this.functionName = functionName;}
public V next() { return this.nextEntry().value; }
public synchronized void readBytes(byte[] b, int offset, int len, boolean useBuffer) throws IOException {int available = bufferLength - bufferPosition;if (len <= available) {if (len > 0) {System.arraycopy(m_buffer, bufferPosition, b, offset, len);}bufferPosition += len;} else {if (available > 0) {System.arraycopy(m_buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize) {refill();if (bufferLength < len) {System.arraycopy(m_buffer, 0, b, offset, bufferLength);throw new EOFException("read past EOF: " + this);} else {System.arraycopy(m_buffer, 0, b, offset, len);bufferPosition = len;}} else {long after = bufferStart + bufferPosition + len;if (after > Length) {throw new EOFException("read past EOF: " + this);}readInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;}}}
public TagQueueResult tagQueue(TagQueueRequest request) {request = beforeClientExecution(request);return executeTagQueue(request);}
public void remove() throws IOException {throw new UnsupportedOperationException("Remove not supported");}
public ModifyCacheSubnetGroupResponse modifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ModifyCacheSubnetGroupRequestMarshaller.getInstance();options.ResponseUnmarshaller = ModifyCacheSubnetGroupResponseUnmarshaller.getInstance();return Invoke.invoke(request, options);}
public void setParams(String params) {super.setParams(params);culture = "";String ignore;StringTokenizer st = new StringTokenizer(params, ",");if (st.hasMoreTokens()) culture = st.nextToken();if (st.hasMoreTokens()) culture += "-" + st.nextToken();if (st.hasMoreTokens()) ignore = st.nextToken();}
public DeleteDocumentationVersionResponse deleteDocumentationVersion(DeleteDocumentationVersionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDocumentationVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDocumentationVersionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean equals(Object obj) {if (!(obj instanceof FacetLabel)) {return false;}FacetLabel other = (FacetLabel) obj;if (Length != other.Length) {return false;}for (int i = Length - 1; i >= 0; i--) {if (!Components[i].equals(other.Components[i], StringComparison.Ordinal)) {return false;}}return true;}
public GetInstanceAccessDetailsResponse getInstanceAccessDetails(GetInstanceAccessDetailsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(GetInstanceAccessDetailsRequestMarshaller.instance);options.setResponseUnmarshaller(GetInstanceAccessDetailsResponseUnmarshaller.instance);return Invoke.invoke(request, options);}
public HSSFPolygon createPolygon(HSSFChildAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.setParent(this);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);return shape;}
public String getSheetName(int sheetIndex) {return getBoundSheetRec(sheetIndex).sheetname;}
public GetDashboardResponse getDashboard(GetDashboardRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetDashboardRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDashboardResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public AssociateSigninDelegateGroupsWithAccountResponse associateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {request = beforeClientExecution(request);return executeAssociateSigninDelegateGroupsWithAccount(request);}
public void addMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.setColumn(j + mbr.getFirstColumn());br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));insertCell(br);}}
public static String quote(String str){StringBuilder sb = new StringBuilder();sb.append("\\Q");int apos = 0;int k;while ((k = str.indexOf("\\E", apos)) >= 0){sb.append(str.substring(apos, k + 2)).append("\\\\E\\Q");apos = k + 2;}return sb.append(str.substring(apos)).append("\\E").toString();}
public ByteBuffer putInt(int value) {throw new ReadOnlyBufferException();}
public ArrayPtg(Object[][] values2d) {int nColumns = values2d[0].length;int nRows = values2d.length;_nColumns = (short) nColumns;_nRows = (short) nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++) {Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++) {vv[getValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public GetIceServerConfigResponse getIceServerConfig(GetIceServerConfigRequest request) {request = beforeClientExecution(request);return executeGetIceServerConfig(request);}
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append(getValueAsString()).append("]");return sb.toString();}
public String toString(String field) {return "ToChildBlockJoinQuery (" + _parentQuery + ")";}
public void incRef() {refCount.incrementAndGet();}
public UpdateConfigurationSetSendingEnabledResult updateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationSetSendingEnabled(request);}
public int getNextXBATChainOffset() {return getXBATEntriesPerBlock() * 4;}
public void multiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.getInstance(Math.abs(pow10));if (pow10 < 0) {mulShift(tp._divisor, tp._divisorShift);} else {mulShift(tp._multiplicand, tp._multiplierShift);}}
public String toString() {StringBuilder builder = new StringBuilder();int length = this.length;builder.append(Path.getDirectorySeparatorChar());for (int i = 0; i < length; i++) {builder.append(this.getComponent(i));if (i < (length - 1)) {builder.append(Path.getDirectorySeparatorChar());}}return builder.toString();}
public void withFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.setRoleName(roleName);}
public void setProgressMonitor(ProgressMonitor pm) {this.progressMonitor = pm;}
public void reset() {if (!isFirst()) {ptr = 0;if (!isEof()) {parseEntry();}}}
public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new java.util.NoSuchElementException();}
public String getNewPrefix() {return this.newPrefix;}
public int indexOfValue(int value){for (int i = 0; i < mSize; i++){if (mValues[i] == value){return i;}}return -1;}
public class YourStemmerClass {public List<CharsRef> uniqueStems(char[] word, int length) {List<CharsRef> stems = stem(word, length);if (stems.size() < 2) {return stems;}Set<CharsRef> terms = new HashSet<>(LuceneVersion.LUCENE_CURRENT, 8, dictionary.ignoreCase);List<CharsRef> deduped = new ArrayList<>();for (CharsRef s : stems) {if (!terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}}
public GetGatewayResponsesResult getGatewayResponses(GetGatewayResponsesRequest request) {request = beforeClientExecution(request);return executeGetGatewayResponses(request);}
public void setPosition(long position) {currentBlockIndex = (int) (position >>> outerInstance.blockBits);currentBlock = outerInstance.blocks[currentBlockIndex];currentBlockUpto = (int) (position & outerInstance.blockMask);}
public long skip(long n) throws IOException {int s = (int)Math.Min(available(), Math.Max(0, n));ptr += s;return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {setBootstrapActionConfig(bootstrapActionConfig);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_row);out.writeShort(field_2_col);out.writeShort(field_3_flags);out.writeShort(field_4_shapeid);out.writeShort(field_6_author.length());out.writeByte(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.putUnicodeLE(field_6_author, out);} else {StringUtil.putCompressedUnicode(field_6_author, out);}if (field_7_padding != null) {out.writeByte(Integer.parseInt(field_7_padding, CultureInfo.InvariantCulture));}}
public int lastIndexOf(String string) {return lastIndexOf(string, count);}
public boolean add(E object) {return addLastImpl(object);}
public void unsetSection(String section, String subsection) {ConfigSnapshot src;ConfigSnapshot res;do {src = state.get();res = unsetSection(src, section, subsection);} while (!state.compareAndSet(src, res));}
public String getTagName() {return tagName;}
public void addSubRecord(int index, SubRecord element) {subrecords.add(index, element);}
public boolean remove(Object object) {synchronized (mutex) {return c.remove(object);}}
public TokenStream create(TokenStream input) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long length() {return inCoreLength();}
public void setValue(boolean newValue) {value = newValue;}
public Pair(ContentSource oldSource, ContentSource newSource) {this.oldSource = oldSource;this.newSource = newSource;}
public int get(int i) {if (count <= i) {throw new IndexOutOfBoundsException(String.valueOf(i));}return entries[i];}
public CreateRepoRequest() {super("cr", "2016-06-07", "CreateRepo", "cr");setUriPattern("/repos");setMethod(MethodType.PUT);}
public boolean isDeltaBaseAsOffset() {return deltaBaseAsOffset;}
public void remove() {if (expectedModCount == list.modCount) {if (lastLink != null) {Link<ET> next_1 = lastLink.next;Link<ET> previous_1 = lastLink.previous;next_1.previous = previous_1;previous_1.next = next_1;if (lastLink == link) {pos--;}link = previous_1;lastLink = null;expectedModCount++;list._size--;list.modCount++;} else {throw new IllegalStateException();}} else {throw new ConcurrentModificationException();}}
public MergeShardsResult mergeShards(MergeShardsRequest request) {request = beforeClientExecution(request);return executeMergeShards(request);}
public AllocateHostedConnectionResponse allocateHostedConnection(AllocateHostedConnectionRequest request) {var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public int getBeginIndex() {return start;}
public static WeightedTerm[] getTerms(Query query) {return getTerms(query, false);}
public ByteBuffer compact() {throw new ReadOnlyBufferException();}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >> 2;int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >> 4);int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >> 6);values[valuesOffset++] = byte2 & 63;}}
public String GetHumanishName() {if ("" .equals(GetPath()) || GetPath() == null) {throw new IllegalArgumentException();}String s = GetPath();String[] elements;if ("file".equals(scheme) || LOCAL_FILE.matcher(s).matches()) {elements = s.split("[" + FilePath.separatorChar + "/]");} else {elements = s.split("/");}if (elements.length == 0) {throw new IllegalArgumentException();}String result = elements[elements.length - 1];if (Constants.DOT_GIT.equals(result)) {result = elements[elements.length - 2];} else {if (result.endsWith(Constants.DOT_GIT_EXT)) {result = result.substring(0, result.length() - Constants.DOT_GIT_EXT.length());}}return result;}
public DescribeNotebookInstanceLifecycleConfigResponse describeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeNotebookInstanceLifecycleConfigRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String getAccessKeySecret() {return this.accessSecret;}
public CreateVpnConnectionResult createVpnConnection(CreateVpnConnectionRequest request) {request = beforeClientExecution(request);return executeCreateVpnConnection(request);}
public DescribeVoicesResponse describeVoices(DescribeVoicesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeVoicesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeVoicesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListMonitoringExecutionsResponse listMonitoringExecutions(ListMonitoringExecutionsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListMonitoringExecutionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListMonitoringExecutionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeJobRequest(String vaultName, String jobId) {setVaultName(vaultName);setJobId(jobId);}
public EscherRecord getEscherRecord(int index) {return escherRecords[index];}
public GetApisResponse getApis(GetApisRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetApisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApisResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public DeleteSmsChannelResponse deleteSmsChannel(DeleteSmsChannelRequest request) {request = beforeClientExecution(request);return executeDeleteSmsChannel(request);}
public TrackingRefUpdate getTrackingRefUpdate() {return trackingRefUpdate;}
public void print(boolean b) {print(String.valueOf(b));}
public QueryNode getChild() {return getChildren().get(0);}
public NotIgnoredFilter(int workdirTreeIndex) {this.index = workdirTreeIndex;}
public AreaRecord(RecordInputStream in) {field_1_formatFlags = in.readShort();}
public GetThumbnailRequest() {super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public DescribeTransitGatewayVpcAttachmentsResponse describeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeTransitGatewayVpcAttachmentsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public PutVoiceConnectorStreamingConfigurationResult putVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorStreamingConfiguration(request);}
public OrdRange getOrdRange(String dim) {OrdRange result;if (prefixToOrdRange.containsKey(dim)) {result = prefixToOrdRange.get(dim);} else {result = null;}return result;}
public String toString() {String symbol = "";if (startIndex >= 0 && startIndex < ((ICharStream) InputStream).Size) {symbol = ((ICharStream) InputStream).GetText(Interval.Of(startIndex, startIndex));symbol = Utils.EscapeWhitespace(symbol, false);}return String.format(CultureInfo.CurrentCulture, "%s('%s')", Antlr4.Runtime.LexerNoViableAltException.class.getName(), symbol);}
public E peek() {return peekFirstImpl();}
public CreateWorkspacesResult createWorkspaces(CreateWorkspacesRequest request) {request = beforeClientExecution(request);return executeCreateWorkspaces(request);}
public NumberFormatIndexRecord clone() {NumberFormatIndexRecord rec = new NumberFormatIndexRecord();rec.field_1_formatIndex = field_1_formatIndex;return rec;}
public DescribeRepositoriesResponse describeRepositories(DescribeRepositoriesRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DescribeRepositoriesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeRepositoriesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public SparseIntArray(int initialCapacity) {initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}
public TokenStream create(TokenStream input) {return new HyphenatedWordsFilter(input);}
public CreateDistributionWithTagsResult createDistributionWithTags(CreateDistributionWithTagsRequest request) {request = beforeClientExecution(request);return executeCreateDistributionWithTags(request);}
public RandomAccessFile(String fileName, String mode) throws FileNotFoundException {this(new java.io.File(fileName), mode);}
public DeleteWorkspaceImageResult deleteWorkspaceImage(DeleteWorkspaceImageRequest request) {request = beforeClientExecution(request);return executeDeleteWorkspaceImage(request);}
public static String toHex(int value) {StringBuilder sb = new StringBuilder(8);writeHex(sb, value & 0xFFFFFFFFL, 8, "");return sb.toString();}
public UpdateDistributionResult updateDistribution(UpdateDistributionRequest request) {request = beforeClientExecution(request);return executeUpdateDistribution(request);}
public HSSFColor getColor(short index){if (index == HSSFColor.Automatic.getIndex())return HSSFColor.Automatic.getInstance();else{byte[] b = _palette.getColor(index);if (b != null){return new CustomColor(index, b);}}return null;}
public Object evaluate(Object[] operands, int srcRow, int srcCol) {throw new NotImplementedFunctionException(_functionName);}
public void serialize(LittleEndianOutput out) {out.writeShort((short)field_1_number_crn_records);out.writeShort((short)field_2_sheet_table_index);}
public DescribeDBEngineVersionsResult describeDBEngineVersions() {return describeDBEngineVersions(new DescribeDBEngineVersionsRequest());}
public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}
public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte) (ch >> 8);result[resultIndex++] = (byte) ch;}return result;}
public UploadArchiveResponse uploadArchive(UploadArchiveRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UploadArchiveRequestMarshaller.getInstance());options.setResponseUnmarshaller(UploadArchiveResponseUnmarshaller.getInstance());return invoke(request, options);}
public List<Token> getHiddenTokensToLeft(int tokenIndex) {return getHiddenTokensToLeft(tokenIndex, -1);}
public boolean equals(Object obj) {if (this == obj) {return true;}if (!super.equals(obj)) {return false;}if (getClass() != obj.getClass()) {return false;}AutomatonQuery other = (AutomatonQuery) obj;if (m_compiled == null) {if (other.m_compiled != null) {return false;}} else if (!m_compiled.equals(other.m_compiled)) {return false;}if (m_term == null) {if (other.m_term != null) {return false;}} else if (!m_term.equals(other.m_term)) {return false;}return true;}
public SpanQuery makeSpanClause() {List<SpanQuery> spanQueries = new ArrayList<>();for (Map.Entry<SpanQuery, double> wsq : weightBySpanQuery.entrySet()) {wsq.getKey().setBoost(wsq.getValue());spanQueries.add(wsq.getKey());}if (spanQueries.size() == 1) return spanQueries.get(0);else return new SpanOrQuery(spanQueries.toArray(new SpanQuery[0]));}
public StashCreateCommand stashCreate() {return new StashCreateCommand(repo);}
public FieldInfo fieldInfo(String fieldName) {FieldInfo ret;byName.tryGetValue(fieldName, out ret);return ret;}
public DescribeEventSourceResponse describeEventSource(DescribeEventSourceRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeEventSourceResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public GetDocumentAnalysisResult getDocumentAnalysis(GetDocumentAnalysisRequest request) {request = beforeClientExecution(request);return executeGetDocumentAnalysis(request);}
public CancelUpdateStackResult cancelUpdateStack(CancelUpdateStackRequest request) {request = beforeClientExecution(request);return executeCancelUpdateStack(request);}
public ModifyLoadBalancerAttributesResult modifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request) {request = beforeClientExecution(request);return executeModifyLoadBalancerAttributes(request);}
public SetInstanceProtectionResult setInstanceProtection(SetInstanceProtectionRequest request) {request = beforeClientExecution(request);return executeSetInstanceProtection(request);}
public ModifyDBProxyResult modifyDBProxy(ModifyDBProxyRequest request) {request = beforeClientExecution(request);return executeModifyDBProxy(request);}
public void add(char[] output, int offset, int len, int endOffset, int posLength) {if (count == outputs.length) {CharsRef[] next = new CharsRef[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];System.arraycopy(outputs, 0, next, 0, count);outputs = next;}if (count == endOffsets.length) {int[] next = new int[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];System.arraycopy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.length) {int[] next = new int[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];System.arraycopy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null) {outputs[count] = new CharsRef();}outputs[count].copyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}
public FetchLibrariesRequest() {super("CloudPhoto", "2017-07-11", "FetchLibraries", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public boolean exists() {return objects.exists();}
public FilterOutputStream(java.io.OutputStream out) {this.out = out;}
public ScaleClusterRequest() {super("CS", "2015-12-15", "ScaleCluster", "cs");setUriPattern("/clusters/[ClusterId]");setMethod(MethodType.PUT);}
public DataValidationConstraint createTimeConstraint(int operatorType, String formula1, String formula2) {return DVConstraint.createTimeConstraint(operatorType, formula1, formula2);}
public ListObjectParentPathsResult listObjectParentPaths(ListObjectParentPathsRequest request) {request = beforeClientExecution(request);return executeListObjectParentPaths(request);}
public DescribeCacheSubnetGroupsResult describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeCacheSubnetGroups(request);}
public void setSharedFormula(boolean flag){field_5_options =sharedFormula.setShortBoolean(field_5_options, flag);}
public boolean isReuseObjects() {return reuseObjects;}
public ErrorNode addErrorNode(Token badToken) {ErrorNodeImpl t = new ErrorNodeImpl(badToken);addChild(t);t.setParent(this);return t;}
public LatvianStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public RemoveSourceIdentifierFromSubscriptionResult removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) {request = beforeClientExecution(request);return executeRemoveSourceIdentifierFromSubscription(request);}
public static TokenFilterFactory forName(String name, Map<String,String> args) {return loader.newInstance(name, args);}
public AddAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public GetThreatIntelSetResult getThreatIntelSet(GetThreatIntelSetRequest request) {request = beforeClientExecution(request);return executeGetThreatIntelSet(request);}
public TreeFilter clone() {return new Binary(a.clone(), b.clone());}
public boolean equals(Object o) {return o instanceof ArmenianStemmer;}
public final boolean hasArray() {return protectedHasArray();}
public UpdateContributorInsightsResponse updateContributorInsights(UpdateContributorInsightsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public void unwriteProtectWorkbook() {records.remove(fileShare);records.remove(writeProtect);fileShare = null;writeProtect = null;}
public SolrSynonymParser(boolean dedup, boolean expand, Analyzer analyzer) {super(dedup, analyzer);this.expand = expand;}
public RequestSpotInstancesResponse requestSpotInstances(RequestSpotInstancesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public byte[] getObjectData() {return findObjectRecord().objectData;}
public GetContactAttributesResult getContactAttributes(GetContactAttributesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetContactAttributesRequestMarshaller.getInstance();options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.getInstance();return Invoke.invoke(request, options);}
public String toString() {return getKey() + ": " + getValue();}
public ListTextTranslationJobsResponse listTextTranslationJobs(ListTextTranslationJobsRequest request) {request = beforeClientExecution(request);return executeListTextTranslationJobs(request);}
public GetContactMethodsResult getContactMethods(GetContactMethodsRequest request) {request = beforeClientExecution(request);return executeGetContactMethods(request);}
public static short lookupIndexByName(String name) {FunctionMetadata fd = getInstance().getFunctionByNameInternal(name);if (fd == null) {return -1;}return (short) fd.getIndex();}
public DescribeAnomalyDetectorsResult describeAnomalyDetectors(DescribeAnomalyDetectorsRequest request) {request = beforeClientExecution(request);return executeDescribeAnomalyDetectors(request);}
public static String insertId(String message, ObjectId changeId) {return insertId(message, changeId, false);}
public long getObjectSize(AnyObjectId objectId, int typeHint) {long size = db.getObjectSize(this, objectId);if (size < 0) {if (typeHint == OBJ_ANY) {throw new MissingObjectException(objectId.copy(), "unknown");}throw new MissingObjectException(objectId.copy(), typeHint);}return size;}
public ImportInstallationMediaResponse importInstallationMedia(ImportInstallationMediaRequest request) {request = beforeClientExecution(request);return executeImportInstallationMedia(request);}
public PutLifecycleEventHookExecutionStatusResponse putLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public NumberPtg(ILittleEndianInput in) {field_1_value = in.readDouble();}
public GetFieldLevelEncryptionConfigResult getFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) {request = beforeClientExecution(request);return executeGetFieldLevelEncryptionConfig(request);}
public DescribeDetectorResult describeDetector(DescribeDetectorRequest request) {request = beforeClientExecution(request);return executeDescribeDetector(request);}
public ReportInstanceStatusResult reportInstanceStatus(ReportInstanceStatusRequest request) {request = beforeClientExecution(request);return executeReportInstanceStatus(request);}
public DeleteAlarmResult deleteAlarm(DeleteAlarmRequest request) {request = beforeClientExecution(request);return executeDeleteAlarm(request);}
public TokenStream create(TokenStream input) {return new PortugueseStemFilter(input);}
public FtCblsSubRecord() {reserved = new byte[ENCODED_SIZE];}
public boolean remove(Object object) {synchronized (mutex) {return c.remove(object);}}
public GetDedicatedIpResponse getDedicatedIp(GetDedicatedIpRequest request) {request = beforeClientExecution(request);return executeGetDedicatedIp(request);}
public String toString() {return precedence + " >= _p";}
public ListStreamProcessorsResult listStreamProcessors(ListStreamProcessorsRequest request) {request = beforeClientExecution(request);return executeListStreamProcessors(request);}
public DeleteLoadBalancerPolicyRequest(String loadBalancerName, String policyName) {this.loadBalancerName = loadBalancerName;this.policyName = policyName;}
public WindowProtectRecord(int options) {_options = options;}
public UnbufferedCharStream(int bufferSize) {n = 0;data = new int[bufferSize];}
public GetOperationsResult getOperations(GetOperationsRequest request) {request = beforeClientExecution(request);return executeGetOperations(request);}
public void copyRawTo(byte[] b, int o) {NB.encodeInt32(b, o, w1);NB.encodeInt32(b, o + 4, w2);NB.encodeInt32(b, o + 8, w3);NB.encodeInt32(b, o + 12, w4);NB.encodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in) {field_1_h_hold = in.readShort();field_2_v_hold = in.readShort();field_3_width = in.readShort();field_4_height = in.readShort();field_5_options = in.readShort();field_6_active_sheet = in.readShort();field_7_first_visible_tab = in.readShort();field_8_num_selected_tabs = in.readShort();field_9_tab_width_ratio = in.readShort();}
public StopWorkspacesResult stopWorkspaces(StopWorkspacesRequest request) {request = beforeClientExecution(request);return executeStopWorkspaces(request);}
public void close() throws IOException {if (isOpen) {isOpen = false;try {dump();} finally {try {channel.truncate(fileLength);} finally {try {channel.close();} finally {fos.close();}}}}}
public DescribeMatchmakingRuleSetsResult describeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {request = beforeClientExecution(request);return executeDescribeMatchmakingRuleSets(request);}
public String getPronunciation(int wordId, char[] surface, int off, int len) {return null;}
public String getPath() {return pathStr;}
public static double devsq(double[] v) {double r = Double.NaN;if (v != null && v.length >= 1) {double m = 0;double s = 0;int n = v.length;for (int i = 0; i < n; i++) {s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++) {s += (v[i] - m) * (v[i] - m);}r = (n == 1) ? 0 : s;}return r;}
public DescribeResizeResult describeResize(DescribeResizeRequest request) {request = beforeClientExecution(request);return executeDescribeResize(request);}
public boolean hasPassedThroughNonGreedyDecision() {return passedThroughNonGreedyDecision;}
public int end() {return end(0);}
public void traverse(ICellHandler handler) {int firstRow = range.getFirstRow();int lastRow = range.getLastRow();int firstColumn = range.getFirstColumn();int lastColumn = range.getLastColumn();int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();IRow currentRow = null;ICell currentCell = null;for (ctx.setRowNumber(firstRow); ctx.getRowNumber() <= lastRow; ++ctx.setRowNumber(ctx.getRowNumber())) {currentRow = sheet.getRow(ctx.getRowNumber());if (currentRow == null) {continue;}for (ctx.setColNumber(firstColumn); ctx.getColNumber() <= lastColumn; ++ctx.setColNumber(ctx.getColNumber())) {currentCell = currentRow.getCell(ctx.getColNumber());if (currentCell == null) {continue;}if (isEmpty(currentCell) && !traverseEmptyCells) {continue;}ctx.setOrdinalNumber((ctx.getRowNumber() - firstRow) * width + (ctx.getColNumber() - firstColumn + 1));handler.onCell(currentCell, ctx);}}}
public int getReadIndex() {return _ReadIndex;}
public int compareTo(ScoreTerm o) {if (Term.bytesEquals(o.term)) {return 0;}if (this.boost == o.boost) {return o.term.compareTo(this.term);} else {return this.boost.compareTo(o.boost);}}
public int normalize(char s[], int len) {for (int i = 0; i < len; i++) {switch (s[i]) {case FARSI_YEH:case YEH_BARREE:s[i] = YEH;break;case KEHEH:s[i] = KAF;break;case HEH_YEH:case HEH_GOAL:s[i] = HEH;break;case HAMZA_ABOVE:len = delete(s, i, len);i--;break;default:break;}}return len;}
public void serialize(LittleEndianOutput out) {out.writeShort(_options);}
public DiagnosticErrorListener(boolean exactOnly) {this.exactOnly = exactOnly;}
public KeySchemaElement(String attributeName, KeyType keyType) {this.attributeName = attributeName; this.keyType = keyType;}
public GetAssignmentResult getAssignment(GetAssignmentRequest request) {request = beforeClientExecution(request);return executeGetAssignment(request);}
public boolean HasObject(AnyObjectId id) {return FindOffset(id) != -1;}
public GroupingSearch setAllGroups(boolean allGroups) {this.allGroups = allGroups;return this;}
public synchronized void setMultiValued(String dimName, boolean v) {DimConfig ft = fieldTypes.get(dimName);if (ft == null) {ft = new DimConfig();fieldTypes.put(dimName, ft);}ft.setIsMultiValued(v);}
public int getCellsVal(){int size = 0;for (char c : cells.keySet()){Cell e = at(c);if (e.cmd >= 0){size++;}}return size;}
public DeleteVoiceConnectorResult deleteVoiceConnector(DeleteVoiceConnectorRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnector(request);}
public DeleteLifecyclePolicyResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteLifecyclePolicyRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteLifecyclePolicyResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void write(byte[] b) {int len = b.length;checkPosition(len);System.arraycopy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}
public RebaseResult getRebaseResult() {return this.rebaseResult;}
public static int getNearestSetSize(int maxNumberOfValuesExpected, double desiredSaturation) {for (int t : _usableBitSetSizes.stream().map(size -> new AbstractMap.SimpleEntry<>(size, (int) (size * desiredSaturation))).map(entry -> new AbstractMap.SimpleEntry<>(entry.getKey(), GetEstimatedNumberUniqueValuesAllowingForCollisions(entry.getKey(), entry.getValue()))).filter(entry -> entry.getValue() > maxNumberOfValuesExpected).map(Map.Entry::getKey).collect(Collectors.toList())) {return t;}return -1;}
public DescribeDashboardResponse describeDashboard(DescribeDashboardRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public CreateSegmentResult createSegment(CreateSegmentRequest request) {request = beforeClientExecution(request);return executeCreateSegment(request);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[DBCELL]\n");buffer.append("    .rowoffset       = ").append(StringUtil.toHexString(getRowOffset())).append("\n");for (int k = 0; k < field_2_cell_offsets.length; k++) {buffer.append("    .cell_").append(k).append(" = ").append(HexDump.shortToHex(field_2_cell_offsets[k])).append("\n");}buffer.append("[/DBCELL]\n");return buffer.toString();}
public List<String> getUndeletedList() {return undeletedList;}
public String toString() {return "[INTERFACEEND/]\n";}
public Object clone() {return this;}
public PlainTextDictionary(java.io.Reader reader) {in = reader;}
public StringBuilder append(CharSequence csq) {if (csq == null) {appendNull();} else {append0(csq, 0, csq.length());}return this;}
public ListAssociatedStacksResponse listAssociatedStacks(ListAssociatedStacksRequest request) {request = beforeClientExecution(request);return executeListAssociatedStacks(request);}
public static double avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.length; i < iSize; i++) {s += v[i];}m = s / v.length;s = 0;for (int i = 0, iSize = v.length; i < iSize; i++) {s += Math.abs(v[i] - m);}r = s / v.length;return r;}
public DescribeByoipCidrsResult describeByoipCidrs(DescribeByoipCidrsRequest request) {request = beforeClientExecution(request);return executeDescribeByoipCidrs(request);}
public GetDiskResponse getDisk(GetDiskRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetDiskRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDiskResponseUnmarshaller.getInstance());return invoke(request, options);}
public DBClusterParameterGroup createDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBClusterParameterGroup(request);}
public static java.nio.CharBuffer wrap(char[] array, int start, int charCount) {java.util.Arrays.checkOffsetAndCount(array.length, start, charCount);java.nio.CharBuffer buf = new java.nio.ReadWriteCharArrayBuffer(array);buf._position = start;buf._limit = start + charCount;return buf;}
public Status getType() {return type;}
public DescribeGameServerGroupResult describeGameServerGroup(DescribeGameServerGroupRequest request) {request = beforeClientExecution(request);return executeDescribeGameServerGroup(request);}
public Pattern pattern() {return pattern;}
public V setValue(V object) throws UnsupportedOperationException {throw new UnsupportedOperationException();}
public StringBuilder stem(String word) {String cmd = stemmer.getLastOnPath(word);if (cmd == null) return null;buffer.setLength(0);buffer.append(word);Diff.apply(buffer, cmd);if (buffer.length() > 0) return buffer;else return null;}
public RenameFaceRequest() {super("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public char requireChar(Map<String, String> args, String name) {return require(args, name).get(0);}
public static String toStringTree(ITree t) {return toStringTree(t, (List<String>)null);}
public String toString() {return "<deleted/>";}
public GetRepoWebhookLogListRequest() {super("cr", "2016-06-07", "GetRepoWebhookLogList", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs");setMethod(MethodType.GET);}
public GetJobUnlockCodeResponse getJobUnlockCode(GetJobUnlockCodeRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetJobUnlockCodeRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobUnlockCodeResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public RemoveTagsRequest(String resourceId) {this.resourceId = resourceId;}
public short getGB2312Id(char ch) {try {byte[] buffer = java.nio.charset.StandardCharsets.getEncoding("GB2312").encode(java.nio.CharBuffer.wrap(ch)).array();if (buffer.length != 2) {return -1;}int b0 = (buffer[0] & 0x0FF) - 161;int b1 = (buffer[1] & 0x0FF) - 161;return (short) (b0 * 94 + b1);} catch (java.nio.charset.MalformedInputException | java.nio.charset.UnmappableCharacterException e) {throw new Exception(e.toString(), e);}}
public BatchRefUpdate addCommand(Collection<ReceiveCommand> cmd) {Collections.addAll(commands, cmd);return this;}
public int checkExternSheet(int sheetNumber) {return OrCreateLinkTable.checkExternSheet(sheetNumber);}
public boolean equals(Object object) {return c.equals(object);}
public Query build(QueryNode queryNode) {AnyQueryNode andNode = (AnyQueryNode) queryNode;BooleanQuery bQuery = new BooleanQuery();List<QueryNode> children = andNode.getChildren();if (children != null) {for (QueryNode child : children) {Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null) {Query query = (Query) obj;try {bQuery.add(query, BooleanClause.Occur.SHOULD);} catch (BooleanQuery.TooManyClausesException ex) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());return bQuery;}
public DescribeStreamProcessorResponse describeStreamProcessor(DescribeStreamProcessorRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeStreamProcessorRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeStreamProcessorResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeDashboardPermissionsResult describeDashboardPermissions(DescribeDashboardPermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeDashboardPermissions(request);}
public Ref peel(Ref ref) throws IOException {try {return getRefDatabase().peel(ref);} catch (IOException e) {return ref;}}
public long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER +2 * RamUsageEstimator.NUM_BYTES_INT32 +3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.sizeOf(blocks);}
public GetDomainSuggestionsResult getDomainSuggestions(GetDomainSuggestionsRequest request) {request = beforeClientExecution(request);return executeGetDomainSuggestions(request);}
public DescribeStackEventsResult describeStackEvents(DescribeStackEventsRequest request) {request = beforeClientExecution(request);return executeDescribeStackEvents(request);}
public void setRule(int idx, IConditionalFormattingRule cfRule){setRule(idx, (HSSFConditionalFormattingRule)cfRule);}
public CreateResolverRuleResponse createResolverRule(CreateResolverRuleRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverRuleResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public SeriesIndexRecord(RecordInputStream in) {field_1_index = in.readShort();}
public GetStylesRequest() {super("lubancloud", "2018-05-09", "GetStyles", "luban");setMethod(MethodType.POST);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_gridset_flag);}
public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (getClass() != obj.getClass()) {return false;}Toffs other = (Toffs) obj;if (startOffset != other.startOffset) {return false;}if (endOffset != other.endOffset) {return false;}return true;}
public CreateGatewayGroupResponse createGatewayGroup(CreateGatewayGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateGatewayGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateGatewayGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateParticipantConnectionResult createParticipantConnection(CreateParticipantConnectionRequest request) {request = beforeClientExecution(request);return executeCreateParticipantConnection(request);}
public static double irr(double[] income) {return irr(income, 0.1d);}
public RegisterWorkspaceDirectoryResult registerWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request) {request = beforeClientExecution(request);return executeRegisterWorkspaceDirectory(request);}
public RevertCommand include(Ref commit) {checkCallable();commits.addItem(commit);return this;}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String iNumber = OperandResolver.coerceValueToString(veText1);java.util.regex.Matcher m = COMPLEX_NUMBER_PATTERN.matcher(iNumber);boolean result = m.find() && m.group(0).length() > 0;String imaginary = "";if (result) {String imaginaryGroup = m.group(5);boolean hasImaginaryPart = imaginaryGroup.equals("i") || imaginaryGroup.equals("j");if (imaginaryGroup.length() == 0) {return new StringEval(String.valueOf(0));}if (hasImaginaryPart) {String sign = "";String imaginarySign = m.group(GROUP3_IMAGINARY_SIGN);if (imaginarySign.length() != 0 && !imaginarySign.equals("+")) {sign = imaginarySign;}String groupImaginaryNumber = m.group(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE);if (groupImaginaryNumber.length() != 0) {imaginary = sign + groupImaginaryNumber;} else {imaginary = sign + "1";}}} else {return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}
public E pollLast(){java.util.Map.Entry<E, Object> entry = backingMap.pollLastEntry();return (entry == null) ? default(E) : entry.getKey();}
public int readUShort() {int ch1 = readUByte();int ch2 = readUByte();return (ch2 << 8) + (ch1 << 0);}
public ModifySnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute, OperationType operationType) {this.setSnapshotId(snapshotId);this.setAttribute(attribute.toString());this.setOperationType(operationType);}
public ListBonusPaymentsResult listBonusPayments(ListBonusPaymentsRequest request) {request = beforeClientExecution(request);return executeListBonusPayments(request);}
public V get(Object o) {if(o == null) throw new NullPointerException();return null;}
public TokenStream create(TokenStream input) {var commonGrams = (CommonGramsFilter) base.create(input);return new CommonGramsQueryFilter(commonGrams);}
public String getPath() {return path;}
public InitiateMultipartUploadResult initiateMultipartUpload(InitiateMultipartUploadRequest request) {request = beforeClientExecution(request);return executeInitiateMultipartUpload(request);}
public StringBuilder insert(int offset, int i) {insert0(offset, String.valueOf(i));return this;}
public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int) ((block >>> shift) & 3);}}}
public TokenStream create(TokenStream input) {return new ElisionFilter(input, articles);}
public boolean eat(Row in, int[] remap) {int sum = 0;for (Cell c : in.cells.values()) {sum += c.cnt;if (c.ref >= 0) {if (remap[c.ref] == 0) {c.ref = -1;}}}int frame = sum / 10;boolean live = false;for (Cell c : in.cells.values()) {if (c.cnt < frame && c.cmd >= 0) {c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.ref >= 0) {live = true;}}return !live;}
public Token getToken(int index) {Token t = Token.token;for (int i = 0; i < index; i++) {if (t.next != null) t = t.next;else t = t.next = TokenSource.getNextToken();}return t;}
public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append(" [ARRAY]\n");sb.append(" range=").append(getRange().toString()).append("\n");sb.append(" options=").append(HexDump.shortToHex(_options)).append("\n");sb.append(" notUsed=").append(HexDump.intToHex(_field3notUsed)).append("\n");sb.append(" formula:").append("\n");Ptg[] ptgs = _formula.getTokens();for (int i = 0; i < ptgs.length; i++) {Ptg ptg = ptgs[i];sb.append(ptg.toString()).append(ptg.getRVAType()).append("\n");}sb.append("]");return sb.toString();}
public GetFolderResult getFolder(GetFolderRequest request) {request = beforeClientExecution(request);return executeGetFolder(request);}
public void add(int location, E object) throws UnsupportedOperationException {throw new UnsupportedOperationException("This operation is not supported.");}
public PositiveScoresOnlyCollector(Collector c) {this.c = c;}
public CreateRepoBuildRuleRequest() {super("cr", "2016-06-07", "CreateRepoBuildRule", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/rules");setMethod(MethodType.PUT);}
public BaseRef(RefEval re) {_refEval = re;_areaEval = null;_firstRowIndex = re.getRow();_firstColumnIndex = re.getColumn();_height = 1;_width = 1;}
public DrawingManager2(EscherDggRecord dgg) { this.dgg = dgg; }
public void reset() {if (!first) {reset(raw);}}
public java.nio.charset.CharsetDecoder reset() {status = INIT;implReset();return this;}
public BufferedReader(java.io.Reader in, int size) : base(in) {if (size <= 0) {throw new IllegalArgumentException("size <= 0");}this.in = in;buf = new char[size];}
public DescribeCodeRepositoryResult describeCodeRepository(DescribeCodeRepositoryRequest request) {request = beforeClientExecution(request);return executeDescribeCodeRepository(request);}
public DBSubnetGroup createDBSubnetGroup(CreateDBSubnetGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBSubnetGroup(request);}
public RenameBranchCommand setOldName(String oldName) {checkCallable();this.oldName = oldName;return this;}
public DeleteBranchCommand setForce(boolean force) {checkCallable();this.force = force;return this;}
public StopCompilationJobResponse stopCompilationJob(StopCompilationJobRequest request) {request = beforeClientExecution(request);return executeStopCompilationJob(request);}
public void incrementSecondaryProgressBy(int diff) {synchronized (this) {setSecondaryProgress(mSecondaryProgress + diff);}}
public int[] clear() {return bytesStart = null;}
public String getRawPath() {return path;}
public GetUserSourceAccountRequest() {super("cr", "2016-06-07", "GetUserSourceAccount", "cr");setUriPattern("/users/sourceAccount");setMethod(MethodType.GET);}
public CreateExportJobResult createExportJob(CreateExportJobRequest request) {request = beforeClientExecution(request);return executeCreateExportJob(request);}
public CreateDedicatedIpPoolResult createDedicatedIpPool(CreateDedicatedIpPoolRequest request) {request = beforeClientExecution(request);return executeCreateDedicatedIpPool(request);}
public boolean equals(Object obj) {if (this == obj) return true;if (obj == null) return false;if (obj instanceof HSSFCellStyle) {HSSFCellStyle other = (HSSFCellStyle) obj;if (_format == null) {if (other._format != null) return false;} else if (!_format.equals(other._format)) return false;if (index != other.index) return false;return true;}return false;}
public ReleaseHostsResult releaseHosts(ReleaseHostsRequest request) {request = beforeClientExecution(request);return executeReleaseHosts(request);}
public boolean equals(Object obj) {if (this == obj) {return true;}if (obj instanceof Set) {Set<?> s = (Set<?>) obj;try {return size() == s.size() && containsAll(s);} catch (NullPointerException e) {return false;} catch (ClassCastException e) {return false;}}return false;}
public void setRefLogMessage(String msg, boolean appendStatus) {if (msg == null && !appendStatus) {disableRefLog();} else {if (msg == null && appendStatus) {refLogMessage = "";refLogIncludeResult = true;} else {refLogMessage = msg;refLogIncludeResult = appendStatus;}}}
public StreamIDRecord(RecordInputStream in) { idstm = in.readShort(); }
public RecognizeCarRequest() {super("visionai-poc", "2020-04-08", "RecognizeCar");setMethod(MethodType.POST);}
public ByteOrder order() {return ByteOrder.nativeOrder();}
public int getAheadCount() {return aheadCount;}
public boolean isNewFragment() {return false;}
public GetCloudFrontOriginAccessIdentityConfigResult getCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request) {request = beforeClientExecution(request);return executeGetCloudFrontOriginAccessIdentityConfig(request);}
public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return token == symbol;}
public DeleteTransitGatewayResponse deleteTransitGateway(DeleteTransitGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteTransitGateway(request);}
public static double[] grow(double[] array, int minSize) {assert minSize >= 0 : "size must be positive (got " + minSize + "): likely integer overflow?";if (array.length < minSize) {double[] newArray = new double[oversize(minSize, RamUsageEstimator.NUM_BYTES_DOUBLE)];System.arraycopy(array, 0, newArray, 0, array.length);return newArray;} else {return array;}}
public CreateTransactionRequest() {super("CloudPhoto", "2017-07-11", "CreateTransaction", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public BatchRefUpdate setRefLogIdent(PersonIdent pi) {refLogIdent = pi;return this;}
public GetLaunchTemplateDataResponse getLaunchTemplateData(GetLaunchTemplateDataRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetLaunchTemplateDataRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetLaunchTemplateDataResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ParseInfo(ProfilingATNSimulator atnSimulator) {this.atnSimulator = atnSimulator;}
public SimpleQQParser(String[] qqNames, String indexField) {this.qqNames = qqNames;this.indexField = indexField;}
public PromoteReadReplicaDBClusterResponse promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {var options = new InvokeOptions();options.RequestMarshaller = PromoteReadReplicaDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = PromoteReadReplicaDBClusterResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public DescribeCapacityReservationsResult describeCapacityReservations(DescribeCapacityReservationsRequest request) {request = beforeClientExecution(request);return executeDescribeCapacityReservations(request);}
public String toString() {return "IndexSearcher(" + reader + "; executor=" + executor + ")";}
public boolean incrementToken() {return false;}
public void serialize(LittleEndianOutput out) {out.writeShort(main + 1);out.writeShort(subFrom);out.writeShort(subTo);}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new UnsupportedOperationException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i) {final long block = ReadInt64(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}
public boolean isExpectedToken(int symbol) {ATN atn = Interpreter.atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states[State];IntervalSet following = atn.NextTokens(s);if (following.contains(symbol)) {return true;}if (!following.contains(TokenConstants.EPSILON)) {return false;}while (ctx != null && ctx.invokingState >= 0 && following.contains(TokenConstants.EPSILON)) {ATNState invokingState = atn.states[ctx.invokingState];RuleTransition rt = (RuleTransition) invokingState.Transition(0);following = atn.NextTokens(rt.followState);if (following.contains(symbol)) {return true;}ctx = (ParserRuleContext) ctx.getParent();}if (following.contains(TokenConstants.EPSILON) && symbol == TokenConstants.EOF) {return true;}return false;}
public UpdateStreamResult updateStream(UpdateStreamRequest request) {request = beforeClientExecution(request);return executeUpdateStream(request);}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = TranslateErrorCodeToErrorTypeValue(e.getErrorEval().getErrorCode());return new NumberEval(result);}}
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append(_index).append(" ").append(_name);sb.append("]");return sb.toString();}
public ListAssignmentsForHITResponse listAssignmentsForHIT(ListAssignmentsForHITRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public DeleteAccessControlRuleResponse deleteAccessControlRule(DeleteAccessControlRuleRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public FST.Arc<?> getFirstArc(FST.Arc<?> arc) {return fst.getFirstArc(arc);}
public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (int) (((long) ((ulong) block >> shift)) & 65535);}}}
public long skip(long charCount) throws IOException {if (charCount < 0) {throw new IllegalArgumentException("charCount < 0: " + charCount);}synchronized (@lock) {checkNotClosed();if (charCount == 0) {return 0;}long inSkipped;int availableFromBuffer = buf.length - pos;if (availableFromBuffer > 0) {long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0) {pos += (int) charCount;return charCount;}pos += availableFromBuffer;inSkipped = in.skip(requiredFromIn);} else {inSkipped = in.skip(charCount);}return inSkipped + availableFromBuffer;}}
public Map<String, Ref> getRefsMap() {return advertisedRefs;}
public UpdateApiKeyResponse updateApiKey(UpdateApiKeyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateApiKeyRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateApiKeyResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ObjectStream openStream() throws IOException {WindowCursor wc = new WindowCursor(db);InputStream in;try {in = new PackInputStream(pack, objectOffset + headerLength, wc);} catch (IOException e) {return wc.open(GetObjectId(), type).openStream();}in = new BufferedInputStream(new InflaterInputStream(in, wc.inflater(), 8192), 8192);return new ObjectStream.Filter(type, size, in);}
public ArrayList() {array = EmptyArray.OBJECT;}
public UpdateDetectorVersionResult updateDetectorVersion(UpdateDetectorVersionRequest request) {request = beforeClientExecution(request);return executeUpdateDetectorVersion(request);}
public void resize() { resize(Double.MAX_VALUE); }
public RevFlagSet(Collection<RevFlag> s) {this();Collections.addAll(this, s);}
@Override public int size() {return this._enclosing.size();}
public final long getLong() {int newPosition = _position + SizeOf.LONG;if (newPosition > _limit) {throw new BufferUnderflowException();}long result = Memory.peekLong(backingArray, offset + _position, _order);_position = newPosition;return result;}
public StringBuilder insert(int offset, long l) {insert0(offset, Long.toString(l));return this;}
public TurkishLowerCaseFilter(TokenStream in) {super(in);}
public ParseTreeMatch match(ParseTree tree, ParseTreePattern pattern) {MultiMap<String, ParseTree> labels = new MultiMap<>();ParseTree mismatchedNode = matchImpl(tree, pattern.getPatternTree(), labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}
public void addIfNoOverlap(WeightedPhraseInfo wpi) {for (WeightedPhraseInfo existWpi : phraseList) {if (existWpi.isOffsetOverlap(wpi)) {existWpi.termsInfos.addAll(wpi.termsInfos);return;}}phraseList.add(wpi);}
public Merger newMerger(Repository db) {return new StrategySimpleTwoWayInCore.InCoreMerger(db);}
public float docScore(int docId, String field, int numPayloadsSeen, float payloadScore) {return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}
public Collection<ParseTree> evaluate(ParseTree t) {return Trees.findAllRuleNodes(t, ruleIndex);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[CFRULE]\n");buffer.append("    .condition_type   =").append(field_1_condition_type).append("\n");buffer.append("    OPTION FLAGS=0x").append(String.format("%0X",Options)).append("\n");if (ContainsFontFormattingBlock){buffer.append(_fontFormatting.toString()).append("\n");}if (ContainsBorderFormattingBlock){buffer.append(_borderFormatting.toString()).append("\n");}if (ContainsPatternFormattingBlock){buffer.append(_patternFormatting.toString()).append("\n");}buffer.append("    Formula 1 =").append(Arrays.toString(field_17_formula1.Tokens)).append("\n");buffer.append("    Formula 2 =").append(Arrays.toString(field_18_formula2.Tokens)).append("\n");buffer.append("[/CFRULE]\n");return buffer.toString();}
public DescribeServiceUpdatesResponse describeServiceUpdates(DescribeServiceUpdatesRequest request) {request = beforeClientExecution(request);return executeDescribeServiceUpdates(request);}
public String getNameName(int index) {String result = getNameAt(index).nameName;return result;}
public DescribeLocationsResult describeLocations() {return describeLocations(new DescribeLocationsRequest());}
public String toString() {return "<phraseslop value='" + getValueString() + "'>\n" + getChild().toString() + "\n</phraseslop>";}
public DirCacheEntry getDirCacheEntry() {return currentSubtree == null ? currentEntry : null;}
public IntBuffer put(int[] src, int srcOffset, int intCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, intCount);if (intCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + intCount; ++i) {put(src[i]);}return this;}
public void trimToSize() {int s = size;if (s == array.length) {return;}if (s == 0) {array = libcore.util.EmptyArray.OBJECT;} else {Object[] newArray = new Object[s];System.arraycopy(array, 0, newArray, 0, s);array = newArray;}modCount++;}
public DescribeLocalGatewayVirtualInterfacesResult describeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGatewayVirtualInterfaces(request);}
public TokenStream create(TokenStream input) {return new RussianLightStemFilter(input);}
public int[] toArray(int[] a){int[] rval;if (a.length == _limit){System.arraycopy(_array, 0, a, 0, _limit);rval = a;}else{rval = toArray();}return rval;}
public BasicSessionCredentials(String accessKeyId, String accessKeySecret, String sessionToken, long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new IllegalArgumentException("Access key ID cannot be null.");}if (accessKeySecret == null) {throw new IllegalArgumentException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = System.currentTimeMillis();}
public final ShortBuffer get(short[] dst, int dstOffset, int shortCount) {if (shortCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, dstOffset, shortCount);position += shortCount;return this;}
public ActivateEventSourceResponse activateEventSource(ActivateEventSourceRequest request) {request = beforeClientExecution(request);return executeActivateEventSource(request);}
public DescribeReceiptRuleSetResponse describeReceiptRuleSet(DescribeReceiptRuleSetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeReceiptRuleSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeReceiptRuleSetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Filter(String name) {setName(name);}
public DoubleBuffer put(double c) {throw new java.nio.ReadOnlyBufferException();}
public CreateTrafficPolicyInstanceResult createTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request) {request = beforeClientExecution(request);return executeCreateTrafficPolicyInstance(request);}
public JapaneseIterationMarkCharFilter(Reader input, boolean normalizeKanji, boolean normalizeKana) : base(input) {this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;buffer.reset(input);}
public void writeLong(long v) {writeInt((int)(v >> 0));writeInt((int)(v >> 32));}
public FileResolver() {exports = new ConcurrentHashMap<String, Repository>();exportBase = new CopyOnWriteArrayList<FilePath>();}
public ValueEval getRef3DEval(Ref3DPtg rptg) {SheetRangeEvaluator sre = createExternSheetRefEvaluator(rptg.getExternSheetIndex());return new LazyRefEval(rptg.getRow(), rptg.getColumn(), sre);}
public DeleteDatasetResponse deleteDataset(DeleteDatasetRequest request) {request = beforeClientExecution(request);return executeDeleteDataset(request);}
public StartRelationalDatabaseResponse startRelationalDatabase(StartRelationalDatabaseRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(StartRelationalDatabaseRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartRelationalDatabaseResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeReservedCacheNodesOfferingsResult describeReservedCacheNodesOfferings() {return describeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}
public double PMT(double r, int nper, double pv, double fv, int type) {double pmt = -r * (pv * Math.pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.pow(1 + r, nper) - 1));return pmt;}
public DescribeDocumentVersionsResult describeDocumentVersions(DescribeDocumentVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeDocumentVersions(request);}
public ListPublishingDestinationsResult listPublishingDestinations(ListPublishingDestinationsRequest request) {request = beforeClientExecution(request);return executeListPublishingDestinations(request);}
public DeleteAccountAliasRequest(String accountAlias) {this.accountAlias = accountAlias;}
public static double[] grow(double[] array) {return grow(array, 1 + array.length);}
public String outputToString(Object output) {if (!(output instanceof List<?>)) {return outputs.outputToString((T) output);} else {List<?> outputList = (List<?>) output;StringBuilder b = new StringBuilder();b.append('[');for (int i = 0; i < outputList.size(); i++) {if (i > 0) {b.append(", ");}b.append(outputs.outputToString((T) outputList.get(i)));}b.append(']');return b.toString();}}
public void notifyDeleteCell(ICell cell) {_bookEvaluator.notifyDeleteCell(new HSSFEvaluationCell(cell));}
public StringBuilder replace(int start, int end, String str) {replace0(start, end, str == null ? "null" : str);return this;}
public SetIdentityPoolConfigurationResult setIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request) {request = beforeClientExecution(request);return executeSetIdentityPoolConfiguration(request);}
public static double kthSmallest(double[] v, int k) {double r = Double.NaN;k--;if (v != null && v.length > k && k >= 0) {Arrays.sort(v);r = v[k];}return r;}
public void set(int index, long value) {final int o = index >>> 5;final int b = index & 31;final int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}
public String toString() {List<IQueryNode> children = getChildren();if (children == null || children.isEmpty())return "<boolean operation='and'/>";StringBuilder sb = new StringBuilder();sb.append("<boolean operation='and'>");for (IQueryNode child : children) {sb.append("\n");sb.append(child.toString());}sb.append("\n</boolean>");return sb.toString();}
public int sumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i = fromIx; i < toIx; i++) {result += _ptgs[i].getSize();}return result;}
public void setReadonly(boolean readonly) {if (this.readonly && !readonly) {throw new IllegalStateException("can't alter readonly IntervalSet");}this.readonly = readonly;}
public void clearConsumingCell(FormulaCellCacheEntry cce) {if (!_consumingCells.remove(cce)) {throw new InvalidOperationException("Specified formula cell is not consumed by this cell");}}
public synchronized List<E> subList(int start, int end) {return new SynchronizedRandomAccessList<E>(list.subList(start, end), mutex);}
public FileHeader getFileHeader() {return file;}
public AttachLoadBalancersResult attachLoadBalancers(AttachLoadBalancersRequest request) {request = beforeClientExecution(request);return executeAttachLoadBalancers(request);}
public InitiateJobRequest(String accountId, String vaultName, JobParameters jobParameters) {this.accountId = accountId;this.vaultName = vaultName;this.jobParameters = jobParameters;}
public String toString() {return "SPL";}
public ReplaceableAttribute(String name, String value, Boolean replace) {setName(name);setValue(value);setReplace(replace);}
public void add(IIndexableField field) {fields.add(field);}
public DeleteStackSetResult deleteStackSet(DeleteStackSetRequest request) {request = beforeClientExecution(request);return executeDeleteStackSet(request);}
public GetRepoBuildRuleListRequest() {super("cr", "2016-06-07", "GetRepoBuildRuleList", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/rules");setMethod(MethodType.GET);}
public SparseArray(int initialCapacity) {initialCapacity = android.util.internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new Object[initialCapacity];mSize = 0;}
public InvokeServiceRequest() {super("industry-brain", "2018-07-12", "InvokeService");setMethod(MethodType.POST);}
public ListAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public boolean hasPrevious() {return link != list.voidLink;}
public DeleteHsmConfigurationResponse deleteHsmConfiguration(DeleteHsmConfigurationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteHsmConfigurationResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public CreateLoadBalancerRequest(String loadBalancerName) {this.loadBalancerName = loadBalancerName;}
public String getUserInfo() {return decode(userInfo);}
public TagAttendeeResult tagAttendee(TagAttendeeRequest request) {request = beforeClientExecution(request);return executeTagAttendee(request);}
public String getRefName() {return name;}
public abstract WAH8DocIdSet build() {if (this.wordNum != -1) {AddWord(wordNum, (byte) word);}return super.build();}
public boolean isSubTotal(int rowIndex, int columnIndex) {return false;}
public DescribeDBProxiesResult describeDBProxies(DescribeDBProxiesRequest request) {request = beforeClientExecution(request);return executeDescribeDBProxies(request);}
public GetVoiceConnectorProxyResult getVoiceConnectorProxy(GetVoiceConnectorProxyRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorProxy(request);}
public void fromConfig(Config rc) {setPackedGitOpenFiles(rc.getInt("core", null, "packedgitopenfiles", getPackedGitOpenFiles()));setPackedGitLimit(rc.getLong("core", null, "packedgitlimit", getPackedGitLimit()));setPackedGitWindowSize(rc.getInt("core", null, "packedgitwindowsize", getPackedGitWindowSize()));setPackedGitMMAP(rc.getBoolean("core", null, "packedgitmmap", isPackedGitMMAP()));setDeltaBaseCacheLimit(rc.getInt("core", null, "deltabasecachelimit", getDeltaBaseCacheLimit()));long maxMem = Runtime.getRuntime().maxMemory();long sft = rc.getLong("core", null, "streamfilethreshold", getStreamFileThreshold());sft = Math.min(sft, maxMem / 4);sft = Math.min(sft, Integer.MAX_VALUE);setStreamFileThreshold((int) sft);}
public static java.util.Date getJavaDate(double date) {return getJavaDate(date, false);}
public StartPersonTrackingResult startPersonTracking(StartPersonTrackingRequest request) {request = beforeClientExecution(request);return executeStartPersonTracking(request);}
@Override public int size() {return this._enclosing.size();}
public GetRouteResult getRoute(GetRouteRequest request) {request = beforeClientExecution(request);return executeGetRoute(request);}
public DeleteClusterResponse deleteCluster(DeleteClusterRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(DeleteClusterRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteClusterResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[MMS]\n");buffer.append("    .addMenu        = ").append(Integer.toHexString(getAddMenuCount())).append("\n");buffer.append("    .delMenu        = ").append(Integer.toHexString(getDelMenuCount())).append("\n");buffer.append("[/MMS]\n");return buffer.toString();}
public FileBasedConfig(Config base, File cfgLocation, FileSystem fs) {super(base);configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.ZeroId;}
public int following(int pos) {if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {throw new IllegalArgumentException("offset out of bounds");} else if (sentenceStarts.length == 0) {text.setIndex(text.getBeginIndex());return Done;} else if (pos >= sentenceStarts[sentenceStarts.length - 1]) {text.setIndex(text.getEndIndex());currentSentence = sentenceStarts.length - 1;return Done;} else {currentSentence = (sentenceStarts.length - 1) / 2;moveToSentenceAt(pos, 0, sentenceStarts.length - 2);text.setIndex(sentenceStarts[++currentSentence]);return current();}}
public UpdateParameterGroupResult updateParameterGroup(UpdateParameterGroupRequest request) {request = beforeClientExecution(request);return executeUpdateParameterGroup(request);}
public SeriesChartGroupIndexRecord clone() {return copy();}
public static double calcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0.5) {throw new IllegalArgumentException("distErrPct " + distErrPct + " must be between [0 to 0.5]");}if (distErrPct == 0 || shape instanceof IPoint) {return 0;}Rectangle bbox = shape.getBoundingBox();Point ctr = bbox.getCenter();double y = (ctr.getY() >= 0 ? bbox.getMaxY() : bbox.getMinY());double diagonalDist = ctx.getDistCalc().distance(ctr, bbox.getMaxX(), y);return diagonalDist * distErrPct;}
public int codePointAt(int index) {if (index < 0 || index >= count) {throw indexAndLength(index);}return Character.codePointAt(value, index, count);}
public void setPasswordVerifier(int passwordVerifier) { this.passwordVerifier = passwordVerifier; }
public ListVaultsRequest(String accountId) {setAccountId(accountId);}
public SquashMessageFormatter() {dateFormatter = new GitDateFormatter(GitDateFormatter.Format.DEFAULT);}
public GetVideoCoverRequest() {super("CloudPhoto", "2017-07-11", "GetVideoCover", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
@Override public int lastIndexOf(Object object) {int pos = size;Link<E> link = voidLink.previous;if (object != null) {while (link != voidLink) {pos--;if (object.equals(link.data)) {return pos;}} } else {while (link != voidLink) {pos--;if (link.data == null) {return pos;}} }return -1;}
public DescribeSpotFleetRequestsResult describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request) {request = beforeClientExecution(request);return executeDescribeSpotFleetRequests(request);}
public IndexFacesResult indexFaces(IndexFacesRequest request) {request = beforeClientExecution(request);return executeIndexFaces(request);}
public synchronized BreakIterator getBreakIterator(int script) {switch (script) {case UScript.JAPANESE:return (BreakIterator) cjkBreakIterator.clone();case UScript.MYANMAR:if (myanmarAsWords) {return (BreakIterator) defaultBreakIterator.clone();} else {return (BreakIterator) myanmarSyllableIterator.clone();}default:return (BreakIterator) defaultBreakIterator.clone();}}
public String toString() {StringBuilder sb = new StringBuilder();sb.append("[DCONREF]\n");sb.append("    .ref\n");sb.append("        .firstrow   = ").append(getFirstRow()).append("\n");sb.append("        .lastrow    = ").append(getLastRow()).append("\n");sb.append("        .firstcol   = ").append(getFirstCol()).append("\n");sb.append("        .lastcol    = ").append(getLastCol()).append("\n");sb.append("    .cch            = ").append(getCharCount()).append("\n");sb.append("    .stFile\n");sb.append("        .h          = ").append(getCharType()).append("\n");sb.append("        .rgb        = ").append(getReadablePath()).append("\n");sb.append("[/DCONREF]\n");return sb.toString();}
public int getPackedGitOpenFiles() {return packedGitOpenFiles;}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[FEATURE HEADER]\n");buffer.append("[/FEATURE HEADER]\n");return buffer.toString();}
public static byte[] getToUnicodeLE(String string1) {return string1.getBytes(StandardCharsets.UTF_16LE);}
public List<String> getFooterLines(String keyName) {return getFooterLines(new FooterKey(keyName));}
public void refresh() {super.refresh();rescan();}
public float get(int index) {checkIndex(index);return byteBuffer.getFloat(index * SizeOf.FLOAT);}
public DeleteDetectorResult deleteDetector(DeleteDetectorRequest request) {request = beforeClientExecution(request);return executeDeleteDetector(request);}
public int[] grow() {assert bytesStart != null;return bytesStart = ArrayUtil.grow(bytesStart, bytesStart.length + 1);}
public ListExclusionsResponse listExclusions(ListExclusionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListExclusionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListExclusionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static SpatialStrategy getSpatialStrategy(int roundNumber) {SpatialStrategy result;if (!spatialStrategyCache.tryGetValue(roundNumber, out result) || result == null) {throw new InvalidOperationException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}
public RestoreDBClusterToPointInTimeResponse restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request) {var options = new InvokeOptions();options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_categoryDataType);out.writeShort(field_2_valuesDataType);out.writeShort(field_3_numCategories);out.writeShort(field_4_numValues);out.writeShort(field_5_bubbleSeriesType);out.writeShort(field_6_numBubbleValues);}
public PostAgentProfileResponse postAgentProfile(PostAgentProfileRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(PostAgentProfileRequestMarshaller.getInstance());options.setResponseUnmarshaller(PostAgentProfileResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ParseTreePattern CompileParseTreePattern(String pattern, int patternRuleIndex) {if (((ITokenStream) InputStream) != null) {ITokenSource tokenSource = ((ITokenStream) InputStream).getTokenSource();if (tokenSource instanceof Lexer) {Lexer lexer = (Lexer) tokenSource;return CompileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new NotSupportedException("Parser can't discover a lexer to use");}
public BacktrackDBClusterResponse backtrackDBCluster(BacktrackDBClusterRequest request) {var options = new InvokeOptions();options.RequestMarshaller = BacktrackDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = BacktrackDBClusterResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public String getName() {return strategyName;}
public void copyTo(byte[] b, int o) {b[o + 0] = formatHexByte(w1);b[o + 8] = formatHexByte(w2);b[o + 16] = formatHexByte(w3);b[o + 24] = formatHexByte(w4);b[o + 32] = formatHexByte(w5);}
public static IntList lineMap(byte[] buf, int ptr, int end) {IntList map = new IntList((end - ptr) / 36);map.fillTo(1, Integer.MIN_VALUE);for (; ptr < end; ptr = nextLF(buf, ptr)) {map.add(ptr);}map.add(end);return map;}
public Set<ObjectId> getAdditionalHaves() {return Collections.emptySet();}
public long ramBytesUsed() {return TERMS_BASE_RAM_BYTES_USED + (fst != null ? fst.ramBytesUsed() : 0) + RamUsageEstimator.sizeOf(scratch.bytes()) + RamUsageEstimator.sizeOf(scratchUTF16.chars());}
public String toXml(String tab) {StringBuilder builder = new StringBuilder();builder.append(tab).append("<").append(getRecordName()).append(">\n");for (Iterator<?> iterator = getEscherRecords().iterator(); iterator.hasNext();) {EscherRecord escherRecord = (EscherRecord) iterator.next();builder.append(escherRecord.toXml(tab + "\t"));}builder.append(tab).append("</").append(getRecordName()).append(">\n");return builder.toString();}
public TokenStream create(TokenStream input) {return new GalicianMinimalStemFilter(input);}
public String toString() {StringBuilder r = new StringBuilder();r.append("Commit");r.append("={\n");r.append("tree ");r.append(treeId != null ? treeId.name() : "NOT_SET");r.append("\n");for (ObjectId p : parentIds) {r.append("parent ");r.append(p.name());r.append("\n");}r.append("author ");r.append(author != null ? author.toString() : "NOT_SET");r.append("\n");r.append("committer ");r.append(committer != null ? committer.toString() : "NOT_SET");r.append("\n");if (encoding != null && !encoding.name().equals(Constants.CHARSET)) {r.append("encoding ");r.append(encoding.name());r.append("\n");}r.append("\n");r.append(message != null ? message : "");r.append("}");return r.toString();}
public IndicNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public CreateOptionGroupResponse createOptionGroup(CreateOptionGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateOptionGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateOptionGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public AssociateMemberAccountResponse associateMemberAccount(AssociateMemberAccountRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(AssociateMemberAccountRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateMemberAccountResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void run() {this._enclosing.doRefreshProgress(this.mId, this.mProgress, this.mFromUser, true);this._enclosing.mRefreshProgressRunnable = this;}
public SetTerminationProtectionResult setTerminationProtection(SetTerminationProtectionRequest request) {request = beforeClientExecution(request);return executeSetTerminationProtection(request);}
public String getErrorHeader(RecognitionException e) {int line = e.getOffendingToken().getLine();int charPositionInLine = e.getOffendingToken().getCharPositionInLine();return "line " + line + ":" + charPositionInLine;}
public CharBuffer asReadOnlyBuffer() {CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.limit = limit;buf.position = position;buf.mark = mark;buf.byteBuffer.order = byteBuffer.order;return buf;}
public StopSentimentDetectionJobResponse stopSentimentDetectionJob(StopSentimentDetectionJobRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public ObjectIdSubclassMap<ObjectId> getNewObjectIds() {if (newObjectIds != null) {return newObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
protected void clear() {hash = Hash(new byte[0]);super.clear();}
public synchronized void reset() throws IOException {synchronized (@lock) {checkNotClosed();if (_mark == -1) {throw new IOException("Invalid mark");}pos = _mark;}}
public RefErrorPtg(ILittleEndianInput in) {field_1_reserved = in.readInt();}
public SuspendGameServerGroupResponse suspendGameServerGroup(SuspendGameServerGroupRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(SuspendGameServerGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(SuspendGameServerGroupResponseUnmarshaller.getInstance());return invoke(request, options);}
public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 3) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public GetRepoRequest() {super("cr", "2016-06-07", "GetRepo", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]");setMethod(MethodType.GET);}
public void setDate(LocalDateTime date) {if (date != null) {setDate(DateTools.dateToString(date, DateTools.Resolution.SECOND));} else {this.date = null;}}
public TokenStream create(TokenStream input) {return new GermanMinimalStemFilter(input);}
public Object[] toArray() {return (Object[]) a.clone();}
public synchronized void write(char[] buffer, int offset, int len) {Arrays.checkOffsetAndCount(buffer.length, offset, len);lock (lock) {expand(len);System.arraycopy(buffer, offset, this.buf, this.count, len);this.count += len;}}
public static RevFilter after(long ts) {return new After(ts);}
public DeleteGroupPolicyRequest(String groupName, String policyName) {this.groupName = groupName;this.policyName = policyName;}
public DeregisterTransitGatewayMulticastGroupMembersResponse deregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public BatchDeleteScheduledActionResponse batchDeleteScheduledAction(BatchDeleteScheduledActionRequest request) {request = beforeClientExecution(request);return executeBatchDeleteScheduledAction(request);}
public CreateAlgorithmResponse createAlgorithm(CreateAlgorithmRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public int readUByte(){checkPosition(1);return _buf[_readIndex++] & 0xFF;}
public void setLength(int sz) {NB.encodeInt32(info, infoOffset + P_SIZE, sz);}
public DescribeScalingProcessTypesResult describeScalingProcessTypes() {return describeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}
public ListResourceRecordSetsResult listResourceRecordSets(ListResourceRecordSetsRequest request) {request = beforeClientExecution(request);return executeListResourceRecordSets(request);}
public void recoverInline(Parser recognizer) {InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.getContext(); context != null; context = context.getParent()) {context.exception = e;}throw new ParseCancellationException(e);}
public SetTagsForResourceResult setTagsForResource(SetTagsForResourceRequest request) {request = beforeClientExecution(request);return executeSetTagsForResource(request);}
public ModifyStrategyRequest() {super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis");setMethod(MethodType.POST);}
public DescribeVpcEndpointServicesResult describeVpcEndpointServices(DescribeVpcEndpointServicesRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpointServices(request);}
public EnableLoggingResponse enableLogging(EnableLoggingRequest request) {request = beforeClientExecution(request);return executeEnableLogging(request);}
public boolean contains(Object o) {return this._enclosing.containsValue(o);}
public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) {super(bookName, firstSheetIdentifier);_lastSheetIdentifier = lastSheetIdentifier;}
public DomainMetadataRequest(String domainName) {this.domainName = domainName;}
public ParseException(Token currentToken, int[][] expectedTokenSequences, String[] tokenImage) {super(Initialize(currentToken, expectedTokenSequences, tokenImage));this.CurrentToken = currentToken;this.ExpectedTokenSequences = expectedTokenSequences;this.TokenImage = tokenImage;}
public FetchPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public java.io.PrintWriter writer() {return writer;}
public NGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = requireInt(args, "minGramSize");maxGramSize = requireInt(args, "maxGramSize");if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public boolean isDirectoryFileConflict() {return dfConflict != null;}
public IndonesianStemFilter(TokenStream input, boolean stemDerivational) {super(input);this.stemDerivational = stemDerivational;termAtt = AddAttribute<ICharTermAttribute>();keywordAtt = AddAttribute<IKeywordAttribute>();}
public CreateTrafficPolicyResult createTrafficPolicy(CreateTrafficPolicyRequest request) {request = beforeClientExecution(request);return executeCreateTrafficPolicy(request);}
public void serialize(LittleEndianOutput out) {out.writeInt(fSD);out.writeInt(passwordVerifier);StringUtil.writeUnicodeString(out, title);out.write(securityDescriptor);}
public static double floor(double n, double s) {double f;if ((n < 0 && s > 0) || (n > 0 && s < 0) || (s == 0 && n != 0)) {f = Double.NaN;} else {f = (n == 0 || s == 0) ? 0 : Math.floor(n / s) * s;}return f;}
public ByteArrayDataOutput(byte[] bytes, int offset, int len) {reset(bytes, offset, len);}
public static List<? extends ITree> getChildren(ITree t) {List<ITree> kids = new ArrayList<ITree>();for (int i = 0; i < t.getChildCount(); i++) {kids.add(t.getChild(i));}return kids;}
public void clear() {this._enclosing.clear();}
public RefreshAllRecord(boolean refreshAll) {this(0);this.RefreshAll = refreshAll;}
public DeleteNamedQueryResult deleteNamedQuery(DeleteNamedQueryRequest request) {request = beforeClientExecution(request);return executeDeleteNamedQuery(request);}
public GraphvizFormatter(ConnectionCosts costs) {this.costs = costs;this.bestPathMap = new HashMap<>();sb.append(FormatHeader());sb.append("  init [style=invis]\n");sb.append("  init -> 0.0 [label=\"").append(BOS_LABEL).append("\"]\n");}
public CheckMultiagentRequest() {super("visionai-poc", "2020-04-08", "CheckMultiagent");setMethod(MethodType.POST);}
public ListUserProfilesResult listUserProfiles(ListUserProfilesRequest request) {request = beforeClientExecution(request);return executeListUserProfiles(request);}
public CreateRelationalDatabaseFromSnapshotResult createRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateRelationalDatabaseFromSnapshot(request);}
public StartTaskResponse startTask(StartTaskRequest request) {request = beforeClientExecution(request);return executeStartTask(request);}
public Collection<String> getIgnoredPaths() {return ignoredPaths;}
public FeatSmartTag(RecordInputStream in) {data = in.readRemainder();}
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {this.action = action; this.resourceRecordSet = resourceRecordSet;}
public DeleteImageResponse deleteImage(DeleteImageRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteImageRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteImageResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateConfigurationSetResult createConfigurationSet(CreateConfigurationSetRequest request) {request = beforeClientExecution(request);return executeCreateConfigurationSet(request);}
public Iterator<E> iterator() {Object[] snapshot = elements;return new CowIterator<E>(snapshot, 0, snapshot.length);}
public void visitContainedRecords(RecordVisitor rv) {if (_recs.size() == 0) {return;}rv.visitRecord(_bofRec);for (int i = 0; i < _recs.size(); i++) {RecordBase rb = _recs.get(i);if (rb instanceof RecordAggregate) {((RecordAggregate) rb).visitContainedRecords(rv);} else {rv.visitRecord((Record) rb);}}rv.visitRecord(EOFRecord.instance);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[FtCbls ]").append("\n");buffer.append("  size     = ").append(DataSize).append("\n");buffer.append("  reserved = ").append(HexDump.toHex(reserved)).append("\n");buffer.append("[/FtCbls ]").append("\n");return buffer.toString();}
public static BATBlock createEmptyBATBlock(POIFSBigBlockSize bigBlockSize, boolean isXBAT){BATBlock block = new BATBlock(bigBlockSize);if(isXBAT){block.setXBATChain(bigBlockSize, POIFSConstants.END_OF_CHAIN);}return block;}
public void tagResource(TagResourceRequest request) {request = beforeClientExecution(request);executeTagResource(request);}
public DeleteMailboxPermissionsResult deleteMailboxPermissions(DeleteMailboxPermissionsRequest request) {request = beforeClientExecution(request);return executeDeleteMailboxPermissions(request);}
public ListDatasetGroupsResult listDatasetGroups(ListDatasetGroupsRequest request) {request = beforeClientExecution(request);return executeListDatasetGroups(request);}
public ResumeProcessesResult resumeProcesses(ResumeProcessesRequest request) {request = beforeClientExecution(request);return executeResumeProcesses(request);}
public GetPersonTrackingResult getPersonTracking(GetPersonTrackingRequest request) {request = beforeClientExecution(request);return executeGetPersonTracking(request);}
public String toFormulaString(String[] operands) {if (space.isSet(field_1_options)) {return operands[0];} else if (optiIf.isSet(field_1_options)) {return toFormulaString() + "(" + operands[0] + ")";} else if (optiSkip.isSet(field_1_options)) {return toFormulaString() + operands[0];} else {return toFormulaString() + "(" + operands[0] + ")";}}
public <T> T Merge(T first, T second) throws UnsupportedOperationException {throw new UnsupportedOperationException();}
public String toString() {return this.m_message.getKey() + ": " + getLocalizedMessage();}
public XPath(Parser parser, String path) {this.parser = parser;this.path = path;elements = Split(path);}
public CreateAccountAliasRequest(String accountAlias) {setAccountAlias(accountAlias);}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 7) & 1;values[valuesOffset++] = (block >>> 6) & 1;values[valuesOffset++] = (block >>> 5) & 1;values[valuesOffset++] = (block >>> 4) & 1;values[valuesOffset++] = (block >>> 3) & 1;values[valuesOffset++] = (block >>> 2) & 1;values[valuesOffset++] = (block >>> 1) & 1;values[valuesOffset++] = block & 1;}}
public PushConnection openPush() throws NotSupportedException {throw new NotSupportedException(JGitText.get().pushIsNotSupportedForBundleTransport);}
public static void strcpy(char[] dst, int di, char[] src, int si) {while (src[si] != 0) {dst[di++] = src[si++];}dst[di] = 0;}
public K getKey() { return mapEntry.getKey(); }
public static int numNonnull(Object[] data) {int n = 0;if (data == null) {return n;}for (Object o : data) {if (o != null) {n++;}}return n;}
public synchronized void add(int location, E object) {if (location >= 0 && location <= size) {Link<E> link = voidLink;if (location < (size / 2)) {for (int i = 0; i <= location; i++) {link = link.next;}} else {for (int i = size; i > location; i--) {link = link.previous;}}Link<E> previous = link.previous;Link<E> newLink = new Link<>(object, previous, link);previous.next = newLink;link.previous = newLink;size++;modCount++;} else {throw new IndexOutOfBoundsException();}}
public DescribeDomainResponse describeDomain(DescribeDomainRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDomainRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDomainResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void flush() throws IOException {output.flush();}
public PersianCharFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public boolean incrementToken() {if (used) {return false;}clearAttributes();termAttribute.append(value);offsetAttribute.setOffset(0, value.length());used = true;return true;}
public static java.nio.FloatBuffer allocate(int capacity) {if (capacity < 0) {throw new System.ArgumentException();}return new java.nio.ReadWriteFloatArrayBuffer(capacity);}
public final Edit after(Edit cut) {return new Edit(cut.endA, endA, cut.endB, endB);}
public UpdateRuleVersionResponse updateRuleVersion(UpdateRuleVersionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateRuleVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateRuleVersionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListVoiceConnectorTerminationCredentialsResult listVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request) {request = beforeClientExecution(request);return executeListVoiceConnectorTerminationCredentials(request);}
public GetDeploymentTargetResponse getDeploymentTarget(GetDeploymentTargetRequest request) {request = beforeClientExecution(request);return executeGetDeploymentTarget(request);}
public void setNoChildReport() {childReport = false;for (PerfTask task : tasks) {if (task instanceof TaskSequence) {((TaskSequence) task).setNoChildReport();}}}
public E get(int location) {try {return a[location];} catch (IndexOutOfBoundsException e) {throw new java.util.ArrayList<E>.IndexOutOfBoundsException(location, a.length);}}
public DescribeDataSetResponse describeDataSet(DescribeDataSetRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public SkipWorkTreeFilter(int treeIdx) {this.treeIdx = treeIdx;}
public DescribeNetworkInterfacesResult describeNetworkInterfaces() {return describeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}
public boolean contains(int row, int col) {return _firstRow <= row && _lastRow >= row && _firstColumn <= col && _lastColumn >= col;}
public String toString() {return new String(this.chars);}
public PatchType getPatchType() {return patchType;}
public Iterator<K> iterator() {return new KeyIterator(this);}
public CreateScriptResponse createScript(CreateScriptRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateScriptResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public BytesRef next() {termUpto++;if (termUpto >= info.terms.size()) {return null;} else {info.terms.get(info.sortedTerms.get(termUpto), br);return br;}}
public String outputToString(CharsRef output) {return output.toString();}
public AssociateWebsiteAuthorizationProviderResult associateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request) {request = beforeClientExecution(request);return executeAssociateWebsiteAuthorizationProvider(request);}
public void unpop(RevCommit c) {Block b = head;if (b == null) {b = free.newBlock();b.resetToMiddle();b.add(c);head = b;tail = b;return;} else {if (b.canUnpop()) {b.unpop(c);return;}}b = free.newBlock();b.resetToEnd();b.unpop(c);b.next = head;head = b;}
public EdgeNGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = getInt(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);side = get(args, "side", EdgeNGramTokenFilter.Side.FRONT.toString());if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public ModifyDBParameterGroupRequest(String dbParameterGroupName, List<Parameter> parameters) {this.dbParameterGroupName = dbParameterGroupName;this.parameters = parameters;}
public GetHostedZoneLimitResponse getHostedZoneLimit(GetHostedZoneLimitRequest request) {request = beforeClientExecution(request);return executeGetHostedZoneLimit(request);}
public void set(int index, long value) {final int o = index >>> 6;final int b = index & 63;final int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
public CommitterFilter clone() {return new PatternSearch(pattern());}
public String toString() {return "spans(" + term.toString() + ")@" + (doc == -1 ? "START" : (doc == Integer.MAX_VALUE) ? "END" : doc + "-" + position);}
public boolean canAppendMatch() {for (int i = 0; i < heads.size(); i++) {if (heads.get(i) != LastHead.INSTANCE) {return true;}}return false;}
public int lastIndexOf(String subString, int start) {synchronized (this) {return super.lastIndexOf(subString, start);}}
public DeleteNetworkAclEntryResponse deleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNetworkAclEntryResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public AssociateMemberToGroupResult associateMemberToGroup(AssociateMemberToGroupRequest request) {request = beforeClientExecution(request);return executeAssociateMemberToGroup(request);}
public static int committer(byte[] b, int ptr) {int sz = b.length;if (ptr == 0) {ptr += 46;}while (ptr < sz && b[ptr] == 'p') {ptr += 48;}if (ptr < sz && b[ptr] == 'a') {ptr = nextLF(b, ptr);}return match(b, ptr, committer);}
public int getLineNumber() { return row; }
public NGit.Api.SubmoduleUpdateCommand addPath(String path) {paths.addItem(path);return this;}
public GetPushTemplateResult getPushTemplate(GetPushTemplateRequest request) {request = beforeClientExecution(request);return executeGetPushTemplate(request);}
public DescribeVaultResponse describeVault(DescribeVaultRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeVaultRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeVaultResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeVpcPeeringConnectionsResult describeVpcPeeringConnections() {return describeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}
public ByteBuffer putLong(int index, long value) {throw new ReadOnlyBufferException();}
public RegisterDeviceResponse registerDevice(RegisterDeviceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RegisterDeviceRequestMarshaller.getInstance());options.setResponseUnmarshaller(RegisterDeviceResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static Format byId(int id) {for (Format format : Values) {if (format.id == id) {return format;}}throw new IllegalArgumentException("Unknown format id: " + id);}
public DeleteAppResponse deleteApp(DeleteAppRequest request) {request = beforeClientExecution(request);return executeDeleteApp(request);}
public GetBaiduChannelResponse getBaiduChannel(GetBaiduChannelRequest request) {request = beforeClientExecution(request);return executeGetBaiduChannel(request);}
public FST.BytesReader getBytesReader() {return fst.getBytesReader();}
public static boolean isValidSchemeChar(int index, char c) {if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {return true;}return false;}
public ListAppliedSchemaArnsResult listAppliedSchemaArns(ListAppliedSchemaArnsRequest request) {request = beforeClientExecution(request);return executeListAppliedSchemaArns(request);}
public URI baseUri() {return this.baseUri;}
public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length < 1) {return ErrorEval.VALUE_INVALID;}boolean isA1style;String text;try {ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.getRowIndex(), ec.getColumnIndex());text = OperandResolver.CoerceValueToString(ve);switch (args.length) {case 1:isA1style = true;break;case 2:isA1style = evaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}} catch (EvaluationException e) {return e.GetErrorEval();}return evaluateIndirect(ec, text, isA1style);}
public int compareTo(int[] bs, int p) {int cmp;cmp = NB.compareUInt32(w1, bs[p]);if (cmp != 0) {return cmp;}cmp = NB.compareUInt32(w2, bs[p + 1]);if (cmp != 0) {return cmp;}cmp = NB.compareUInt32(w3, bs[p + 2]);if (cmp != 0) {return cmp;}cmp = NB.compareUInt32(w4, bs[p + 3]);if (cmp != 0) {return cmp;}return NB.compareUInt32(w5, bs[p + 4]);}
public void removeName(int index) {names.remove(index);workbook.removeName(index);}
public GetQueueAttributesRequest(String queueUrl, java.util.List<String> attributeNames) {setQueueUrl(queueUrl);setAttributeNames(attributeNames);}
public static boolean[] copyOf(boolean[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}
public static void setEnabled(boolean enabled) {ENABLED = enabled;}
public DeleteLogPatternResponse deleteLogPattern(DeleteLogPatternRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public boolean contains(char[] text, int offset, int length) {return map.containsKey(text, offset, length);}
public int getFirstSheetIndexFromExternSheetIndex(int externSheetNumber) {return linkTable.getFirstInternalSheetIndexForExtIndex(externSheetNumber);}
public boolean handles(String commandLine) {return command.length() + 1 < commandLine.length() && commandLine.charAt(command.length()) == ' ' && commandLine.startsWith(command);}
public static void register(MergeStrategy imp) {register(imp.getName(), imp);}
public long ramBytesUsed() {return (index != null) ? index.getSizeInBytes() : 0;}
public HostedZone(String id, String name, String callerReference) {this.id = id;this.name = name;this.callerReference = callerReference;}
public GetFindingsResponse getFindings(GetFindingsRequest request) {request = beforeClientExecution(request);return executeGetFindings(request);}
public DescribeTopicsDetectionJobResult describeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeTopicsDetectionJob(request);}
public boolean processMatch(ValueEval eval) {if (eval instanceof NumericValueEval) {if (minimumValue == null) {minimumValue = eval;} else {double currentValue = ((NumericValueEval) eval).numberValue;double oldValue = ((NumericValueEval) minimumValue).numberValue;if (currentValue < oldValue) {minimumValue = eval;}}}return true;}
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_len_ref_subexpression);}
public static int main(String[] args) {boolean printTree = false;String path = null;for (int i = 0; i < args.length; i++) {if (args[i].equals("-printTree", StringComparison.Ordinal)) {printTree = true;} else {path = args[i];}}if (args.length != (printTree ? 2 : 1)) {throw new IllegalArgumentException();}try (Store.Directory dir = FSDirectory.open(new File(path).toPath())) {try (var r = new DirectoryTaxonomyReader(dir)) {PrintStats(r, System.out, printTree);}}return 0;}
public void setByteValue(byte value) {if (!(fieldsData instanceof Byte)) {throw new IllegalArgumentException("cannot change value type from " + fieldsData.getClass().getSimpleName() + " to Byte");}fieldsData = new Byte(value);}
public static int initialize() {return initialize(DefaultSeed);}
public CachingDoubleValueSource(ValueSource source) {this.source = source;m_cache = new java.util.HashMap<Integer, Double>();}
public AttributeDefinition(String attributeName, ScalarAttributeType attributeType) {setName(attributeName);setType(attributeType);}
public static String join(Collection<String> parts, String separator) {return StringUtils.join(parts, separator, separator);}
public ListTaskDefinitionFamiliesResult listTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) {request = beforeClientExecution(request);return executeListTaskDefinitionFamilies(request);}
public ListComponentsResponse listComponents(ListComponentsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListComponentsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListComponentsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ActivatePhotosRequest() {super("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public CreateMatchmakingRuleSetResult createMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {request = beforeClientExecution(request);return executeCreateMatchmakingRuleSet(request);}
public ListAvailableManagementCidrRangesResponse listAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public ObjectIdSubclassMap<ObjectId> getBaseObjectIds() {if (baseObjectIds != null) {return baseObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
public DeletePushTemplateResponse deletePushTemplate(DeletePushTemplateRequest request) {request = beforeClientExecution(request);return executeDeletePushTemplate(request);}
public CreateDomainEntryResponse createDomainEntry(CreateDomainEntryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateDomainEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDomainEntryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static int getEncodedSize(Array values) {int result = values.length * 1;for (int i = 0; i < values.length; i++) {result += getEncodedSize(values.get(i));}return result;}
public OpenNLPTokenizerFactory(Map<String,String> args) {super(args);sentenceModelFile = require(args, SENTENCE_MODEL);tokenizerModelFile = require(args, TOKENIZER_MODEL);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public final int getInt(int index){checkIndex(index, SizeOf.INT);return Memory.peekInt(backingArray, offset + index, order);}
public boolean isMatch(char c) {if (Matches(c)) {return newHeads;} else {return FileNameMatcher.EMPTY_HEAD_LIST;}}
public ByteBuffer putShort(short value) { throw new ReadOnlyBufferException(); }
public void writeUnshared(Object object) throws IOException {writeObject(object);}
public int offsetByCodePoints(int index, int codePointOffset) {return Sharpen.CharHelper.offsetByCodePoints(value, 0, count, index, codePointOffset);}
public static int getUniqueAlt(Collection<BitSet> altsets) {BitSet all = getAlts(altsets);if (all.cardinality() == 1) {return all.nextSetBit(0);}return ATN.INVALID_ALT_NUMBER;}
public java.util.Date getWhen() {return Sharpen.Extensions.createDate(when);}
public RuleTagToken(String ruleName, int bypassTokenType, String label) {if (ruleName == null || ruleName.isEmpty()) {throw new IllegalArgumentException("ruleName cannot be null or empty.");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}
public DisableOrganizationAdminAccountResult disableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request) {request = beforeClientExecution(request);return executeDisableOrganizationAdminAccount(request);}
public CreateRoomResponse createRoom(CreateRoomRequest request) {request = beforeClientExecution(request);return executeCreateRoom(request);}
public DeleteReplicationGroupResponse deleteReplicationGroup(DeleteReplicationGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteReplicationGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteReplicationGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public final java.nio.CharBuffer decode(java.nio.ByteBuffer buffer) {try {return newDecoder().onMalformedInput(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).decode(buffer);} catch (java.nio.charset.CharacterCodingException ex) {throw new java.lang.Exception(ex.getMessage(), ex);}}
public Distribution(String id, String status, String domainName) {setId(id);setStatus(status);setDomainName(domainName);}
public final Object array() {return protectedArray();}
public DateWindow1904Record(RecordInputStream in) {field_1_window = in.readShort();}
public DeleteDBSnapshotRequest(String dbSnapshotIdentifier) {setDBSnapshotIdentifier(dbSnapshotIdentifier);}
public ParserExtension getExtension(String key) {if (key == null || !this.extensions.tryGetValue(key, out ParserExtension value))return null;return value;}
public void inform(ResourceLoader loader) throws IOException {try {if (chunkerModelFile != null) {OpenNLPOpsFactory.getChunkerModel(chunkerModelFile, loader);}} catch (IOException e) {throw new IllegalArgumentException(e);}}
public CompleteVaultLockResult completeVaultLock(CompleteVaultLockRequest request) {request = beforeClientExecution(request);return executeCompleteVaultLock(request);}
public int[] getCharIntervals() {return (int[])(int[])_points.clone();}
public long ramBytesUsed() {return RamUsageEstimator.AlignObjectSize(3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF + 2 * RamUsageEstimator.NUM_BYTES_INT32) + RamUsageEstimator.SizeOf(data) + positions.ramBytesUsed() + wordNums.ramBytesUsed();}
public RegisterInstancesWithLoadBalancerResult registerInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request) {request = beforeClientExecution(request);return executeRegisterInstancesWithLoadBalancer(request);}
public DescribeClusterUserKubeconfigRequest() {super("CS", "2015-12-15", "DescribeClusterUserKubeconfig", "cs");setUriPattern("/k8s/[ClusterId]/user_config");setMethod(MethodType.GET);}
public PrecisionRecord(RecordInputStream in) {field_1_precision = in.readShort();}
public void serialize(LittleEndianOutput out) {out.writeShort(getLeftRowGutter());out.writeShort(getTopColGutter());out.writeShort(getRowLevelMax());out.writeShort(getColLevelMax());}
public DeleteVirtualInterfaceResponse deleteVirtualInterface(DeleteVirtualInterfaceRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteVirtualInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVirtualInterfaceResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public Entry getEntry(String name) throws FileNotFoundException {if (excludes.contains(name)) {throw new FileNotFoundException(name);}Entry entry = directory.getEntry(name);return wrapEntry(entry);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[BACKUP]\n");buffer.append("    .backup          = ").append(Integer.toHexString(getBackup())).append("\n");buffer.append("[/BACKUP]\n");return buffer.toString();}
public DeleteVoiceConnectorOriginationResponse deleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnectorOrigination(request);}
public Appendable append(char c) {write(c);return this;}
public static long generationFromSegmentsFileName(String fileName) {if (fileName.equals(IndexFileNames.SEGMENTS)) {return 0;} else if (fileName.startsWith(IndexFileNames.SEGMENTS)) {return Number.parseInt(fileName.substring(1 + IndexFileNames.SEGMENTS.length()), Character.MAX_RADIX);} else {throw new IllegalArgumentException("fileName \"" + fileName + "\" is not a segments file");}}
public static NGit.Transport.TagOpt fromOption(String o) {if (o == null || o.length() == 0) {return AUTO_FOLLOW;}for (NGit.Transport.TagOpt tagopt : Values()) {if (tagopt.option().equals(o)) {return tagopt;}}throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidTagOption, o));}
public StartContentModerationResult startContentModeration(StartContentModerationRequest request) {request = beforeClientExecution(request);return executeStartContentModeration(request);}
public static String quoteReplacement(String s){StringBuilder result = new StringBuilder(s.length());{for (int i = 0; i < s.length(); i++){char c = s.charAt(i);if (c == '\\' || c == '$'){result.append('\\');}result.append(c);}}return result.toString();}
public void set(V newValue) {this.value = newValue;}
public QueryParserTokenManager(ICharStream stream) {initBlock();this.m_input_stream = stream;}
public long valueFor(double elapsed) {double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return (long) Math.round(val);elsereturn (long) val;}
public LongBuffer get(long[] dst, int dstOffset, int longCount) {byteBuffer.limit(limit * SizeOf.LONG);byteBuffer.position(position * SizeOf.LONG);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, longCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, longCount);}this.position += longCount;return this;}
public void removeErrorListeners() {_listeners = new IAntlrErrorListener<Symbol>[0];}
public CommonTokenStream(ITokenSource tokenSource, int channel) {this(tokenSource);this.channel = channel;}
public ListObjectPoliciesResult listObjectPolicies(ListObjectPoliciesRequest request) {request = beforeClientExecution(request);return executeListObjectPolicies(request);}
public ObjectToPack(AnyObjectId src, int type) : base(src) { flags = type << TYPE_SHIFT; }
public int stem(char s[], int len) {int numVowels_Renamed = numVowels(s, len);for (int i = 0; i < affixes.length; i++) {Affix affix = affixes[i];if (numVowels_Renamed > affix.vc && len >= affix.affix.length + 3 && endsWith(s, len, affix.affix)) {len -= affix.affix.length;return affix.palatalizes ? unpalatalize(s, len) : len;}}return len;}
public void recover(Parser recognizer, RecognitionException e) {if (lastErrorIndex == ((ITokenStream) recognizer.getInputStream()).index() && lastErrorStates != null && lastErrorStates.contains(recognizer.getState())) {recognizer.consume();}lastErrorIndex = ((ITokenStream) recognizer.getInputStream()).index();if (lastErrorStates == null) {lastErrorStates = new IntervalSet();}lastErrorStates.add(recognizer.getState());IntervalSet followSet = getErrorRecoverySet(recognizer);consumeUntil(recognizer, followSet);}
public String toFormulaString() {String value = field_3_string;int len = value.length();StringBuilder sb = new StringBuilder(len + 4);sb.append(FORMULA_DELIMITER);for (int i = 0; i < len; i++) {char c = value.charAt(i);if (c == FORMULA_DELIMITER) {sb.append(FORMULA_DELIMITER);}sb.append(c);}sb.append(FORMULA_DELIMITER);return sb.toString();}
public UnlinkFaceRequest() {super("LinkFace", "2018-07-20", "UnlinkFace");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}
public ConfigurationOptionSetting(String awsNamespace, String optionName, String value) {this.awsNamespace = awsNamespace;this.optionName = optionName;this.value = value;}
public String getFully(String key) {StringBuilder result = new StringBuilder(m_tries.size() * 2);for (int i = 0; i < m_tries.size(); i++) {String r = m_tries.get(i).getFully(key);if (r == null || (r.length() == 1 && r.charAt(0) == EOM)) {return result.toString();}result.append(r);}return result.toString();}
public DescribeMountTargetSecurityGroupsResult describeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeMountTargetSecurityGroups(request);}
public GetApiMappingResult getApiMapping(GetApiMappingRequest request) {request = beforeClientExecution(request);return executeGetApiMapping(request);}
public HttpRequest(String strUrl) {this.Url = strUrl;this.Headers = new HashMap<>();}
public MemFuncPtg(int subExprLen) {field_1_len_ref_subexpression = subExprLen;}
public static TermStats[] getHighFreqTerms(IndexReader reader, int numTerms, String field, Comparator<TermStats> comparer) {TermStatsQueue tiq = null;if (field != null) {Fields fields = MultiFields.getFields(reader);if (fields == null) {throw new Exception("field " + field + " not found");}Terms terms = fields.getTerms(field);if (terms != null) {TermsEnum termsEnum = terms.getIterator(null);tiq = new TermStatsQueue(numTerms, comparer);tiq.fill(field, termsEnum);}} else {Fields fields = MultiFields.getFields(reader);if (fields == null) {throw new Exception("no fields found for this index");}tiq = new TermStatsQueue(numTerms, comparer);for (String fieldName : fields) {Terms terms = fields.getTerms(fieldName);if (terms != null) {tiq.fill(fieldName, terms.getIterator(null));}}}TermStats[] result = new TermStats[tiq.count()];int count = tiq.count() - 1;while (tiq.count() != 0) {result[count] = tiq.pop();count--;}return result;}
public DeleteApnsVoipChannelResult deleteApnsVoipChannel(DeleteApnsVoipChannelRequest request) {request = beforeClientExecution(request);return executeDeleteApnsVoipChannel(request);}
public ListFacesResponse listFaces(ListFacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListFacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListFacesResponseUnmarshaller.getInstance());return invoke(request, options);}
public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier) {this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}
public char get(int index) {checkIndex(index);return sequence[index];}
public UpdateConfigurationProfileResponse updateConfigurationProfile(UpdateConfigurationProfileRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateConfigurationProfileRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateConfigurationProfileResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeLifecycleHooksResult describeLifecycleHooks(DescribeLifecycleHooksRequest request) {request = beforeClientExecution(request);return executeDescribeLifecycleHooks(request);}
public DescribeHostReservationsResult describeHostReservations(DescribeHostReservationsRequest request) {request = beforeClientExecution(request);return executeDescribeHostReservations(request);}
public static PredictionContext fromRuleContext(ATN atn, RuleContext outerContext) {if (outerContext == null) outerContext = ParserRuleContext.EMPTY;if (outerContext.getParent() == null || outerContext == ParserRuleContext.EMPTY) return PredictionContext.EMPTY;PredictionContext parent = PredictionContext.fromRuleContext(atn, outerContext.getParent());ATNState state = atn.states[outerContext.getInvokingState()];RuleTransition transition = (RuleTransition) state.transition(0);return parent.getChild(transition.getFollowState().getStateNumber());}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SXVDEX]\n");buffer.append("    .grbit1 =").append(HexDump.intToHex(_grbit1)).append("\n");buffer.append("    .grbit2 =").append(HexDump.byteToHex(_grbit2)).append("\n");buffer.append("    .citmShow =").append(HexDump.byteToHex(_citmShow)).append("\n");buffer.append("    .isxdiSort =").append(HexDump.shortToHex(_isxdiSort)).append("\n");buffer.append("    .isxdiShow =").append(HexDump.shortToHex(_isxdiShow)).append("\n");buffer.append("    .subName =").append(_subName).append("\n");buffer.append("[/SXVDEX]\n");return buffer.toString();}
public String toString() {StringBuilder r = new StringBuilder();r.append("BlameResult: ");r.append(getResultPath());return r.toString();}
public ListChangeSetsResult listChangeSets(ListChangeSetsRequest request) {request = beforeClientExecution(request);return executeListChangeSets(request);}
public boolean isAllowNonFastForwards() {return allowNonFastForwards;}
public FeatRecord() {futureHeader = new FtrHeader();futureHeader.setRecordType(sid);}
public ShortBuffer put(short c) {throw new ReadOnlyBufferException();}
public void setQuery(String query) {this.query = query;this.m_message = new Message(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, "");}
public StashApplyCommand stashApply() {return new StashApplyCommand(repo);}
public Collection<K> nameSet(){return dictionaryNameToID.keySet();}
public static int getEffectivePort(String scheme, int specifiedPort) {if (specifiedPort != -1) {return specifiedPort;}if (scheme.equalsIgnoreCase("http")) {return 80;} else {if (scheme.equalsIgnoreCase("https")) {return 443;} else {return -1;}}}
public ListAssessmentTemplatesResult listAssessmentTemplates(ListAssessmentTemplatesRequest request) {request = beforeClientExecution(request);return executeListAssessmentTemplates(request);}
public ClusterSnapshot restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeRestoreFromClusterSnapshot(request);}
public void addShape(HSSFShape shape) {shape.setPatriarch(this.getPatriarch());shape.setParent(this);shapes.add(shape);}
public boolean equals(Object o) {if (this == o) return true;if (o == null || getClass() != o.getClass()) return false;FacetEntry that = (FacetEntry) o;if (count != that.count) return false;if (!value.equals(that.value)) return false;return true;}
public static int prev(byte[] b, int ptr, char chrA) {if (ptr == b.length) --ptr;while (ptr >= 0) {if (b[ptr--] == chrA) {return ptr;}}return ptr;}
public boolean isDeltaRepresentation() {return deltaBase != null;}
public Token emitEOF() {int cpos = column;int line = line;Token eof = _factory.create(_tokenFactorySourcePair, Token.EOF, null, Token.DefaultChannel, _input.index, _input.index - 1, line, cpos);emit(eof);return eof;}
public UpdateUserRequest(String userName) {this.setUserName(userName);}
public RevFilter negate() {return NotRevFilter.create(this);}
public void setTagger(PersonIdent taggerIdent) {tagger = taggerIdent;}
public static BufferSize automatic() {long max, total, free;try (Process proc = Process.getCurrrentProcess()) {max = proc.getPeakVirtualMemorySize64();total = proc.getVirtualMemorySize64();free = proc.getPrivateMemorySize64();}long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes) {if (totalAvailableBytes / 2 > minBufferSizeBytes) {sortBufferByteSize = totalAvailableBytes / 2;} else {sortBufferByteSize = Math.max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.min((long) Integer.MAX_VALUE, sortBufferByteSize));}
public static int trimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (start <= ptr && isWhitespace(raw[ptr])) {ptr--;}return ptr + 1;}
public TopMarginRecord(RecordInputStream in) {field_1_margin = in.readDouble();}
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {this.infoType = infoType;}
public CreatePlayerSessionsResult createPlayerSessions(CreatePlayerSessionsRequest request) {request = beforeClientExecution(request);return executeCreatePlayerSessions(request);}
public CreateProxySessionResponse createProxySession(CreateProxySessionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateProxySessionRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateProxySessionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public int getObjectType() {return type;}
public String getScheme() {return scheme;}
public void Characters(char[] ch, int start, int length) {contents.append(ch, start, length);}
public FetchAlbumTagPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public DeleteMembersResponse deleteMembers(DeleteMembersRequest request) {request = beforeClientExecution(request);return executeDeleteMembers(request);}
public GetContactReachabilityStatusResult getContactReachabilityStatus(GetContactReachabilityStatusRequest request) {request = beforeClientExecution(request);return executeGetContactReachabilityStatus(request);}
public boolean remove(Object o) {synchronized (this) {int oldSize = this._enclosing._size;this._enclosing.remove(o);return this._enclosing._size != oldSize;}}
public E last() {return backingMap.lastKey();}
public CreateStreamingDistributionResult createStreamingDistribution(CreateStreamingDistributionRequest request) {request = beforeClientExecution(request);return executeCreateStreamingDistribution(request);}
public boolean isAbsolute() {return absolute;}
public DisableAddOnResponse disableAddOn(DisableAddOnRequest request) {request = beforeClientExecution(request);return executeDisableAddOn(request);}
public DescribeAliasResult describeAlias(DescribeAliasRequest request) {request = beforeClientExecution(request);return executeDescribeAlias(request);}
public void next(int delta) {while (--delta >= 0) {if (currentSubtree != null) {ptr += currentSubtree.getEntrySpan();} else {ptr++;}if (eof()) {break;}parseEntry();}}
public HeaderFooterRecord clone() {return new Binary(a.clone(), b.clone());}
public Reader create(Reader input) {return new PersianCharFilter(input);}
public String option() {return option;}
public String toString() {StringBuilder sb = new StringBuilder("[");for (var item : this){if (sb.length() > 1){sb.append(", ");}sb.append(item);}return sb.append(']').toString();}
public DescribeSignalingChannelResponse describeSignalingChannel(DescribeSignalingChannelRequest request) {request = beforeClientExecution(request);return executeDescribeSignalingChannel(request);}
public AttachStaticIpResult attachStaticIp(AttachStaticIpRequest request) {request = beforeClientExecution(request);return executeAttachStaticIp(request);}
public String toString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.append(getClass().getName());sb.append(" [").append(crA.formatAsString()).append(':').append(crB.formatAsString()).append("]");return sb.toString();}
public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat, BloomFilterFactory bloomFilterFactory) {super();this.delegatePostingsFormat = delegatePostingsFormat;this.bloomFilterFactory = bloomFilterFactory;}
public ListTemplatesResult listTemplates(ListTemplatesRequest request) {request = beforeClientExecution(request);return executeListTemplates(request);}
public TimerThread(long resolution, Counter counter) {super(THREAD_NAME);this.resolution = resolution;this.counter = counter;this.IsBackground = true;}
public DrawingRecord() {recordData = EMPTY_BYTE_ARRAY;}
public ListDirectoriesResponse listDirectories(ListDirectoriesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListDirectoriesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListDirectoriesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 7) & 1;values[valuesOffset++] = (block >>> 6) & 1;values[valuesOffset++] = (block >>> 5) & 1;values[valuesOffset++] = (block >>> 4) & 1;values[valuesOffset++] = (block >>> 3) & 1;values[valuesOffset++] = (block >>> 2) & 1;values[valuesOffset++] = (block >>> 1) & 1;values[valuesOffset++] = block & 1;}}
public GroupingSearch disableCaching() {this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}
public static int idealByteArraySize(int need) {for (int i = 4; i < 32; i++) {if (need <= (1 << i) - 12) {return (1 << i) - 12;}}return need;}
public UpdateAssessmentTargetResult updateAssessmentTarget(UpdateAssessmentTargetRequest request) {request = beforeClientExecution(request);return executeUpdateAssessmentTarget(request);}
public ModifyVolumeResponse modifyVolume(ModifyVolumeRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public Cell merge(Cell m, Cell e) {if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {Cell c = new Cell(m);c.cnt += e.cnt;return c;} else {return null;}}
public ByteBuffer read(int length, long position) throws IOException {if (position >= Size) {throw new IllegalArgumentException("Position " + position + " past the end of the file");}ByteBuffer dst;int worked = -1;if (writable) {dst = ByteBuffer.createBuffer(length);worked = 0;} else {fileStream.position(position);dst = ByteBuffer.createBuffer(length);worked = IOUtils.readFully(fileStream, dst.buffer);}if (worked == -1) {throw new IllegalArgumentException("Position " + position + " past the end of the file");}dst.position(0);return dst;}
public RespondActivityTaskCompletedResult respondActivityTaskCompleted(RespondActivityTaskCompletedRequest request) {request = beforeClientExecution(request);return executeRespondActivityTaskCompleted(request);}
public void incrementProgressBy(int diff) {synchronized (this) {setProgress(mProgress + diff);}}
public MetadataDiff compareMetadata(DirCacheEntry entry) {if (entry.isAssumeValid()) {return MetadataDiff.EQUAL;}if (entry.isUpdateNeeded()) {return MetadataDiff.DIFFER_BY_METADATA;}if (!entry.isSmudged() && entry.getLength() != (int) getEntryLength()) {return MetadataDiff.DIFFER_BY_METADATA;}if (isModeDifferent(entry.getRawMode())) {return MetadataDiff.DIFFER_BY_METADATA;}long cacheLastModified = entry.getLastModified();long fileLastModified = getEntryLastModified();if (cacheLastModified % 1000 == 0 || fileLastModified % 1000 == 0) {cacheLastModified = cacheLastModified - cacheLastModified % 1000;fileLastModified = fileLastModified - fileLastModified % 1000;}if (fileLastModified != cacheLastModified) {return MetadataDiff.DIFFER_BY_TIMESTAMP;} else {if (!entry.isSmudged()) {return MetadataDiff.EQUAL;} else {return MetadataDiff.SMUDGED;}}}
public static NumberRecord convertToNumberRecord(RKRecord rk) {NumberRecord num = new NumberRecord();num.setColumn(rk.getColumn());num.setRow(rk.getRow());num.setXFIndex(rk.getXFIndex());num.setValue(rk.getRKNumber());return num;}
public CharBuffer put(char[] src, int srcOffset, int charCount) {byteBuffer.limit(limit * SizeOf.CHAR);byteBuffer.position(position * SizeOf.CHAR);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, charCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, charCount);}this.position += charCount;return this;}
public int getCells(){int size = 0;for (char c : cells.keySet()){Cell e = At(c);if (e.cmd >= 0 || e.@ref >= 0){size++;}}return size;}
public BeiderMorseFilterFactory(Map<String, String> args) {super(args);NameType nameType = NameType.valueOf(get(args, "nameType", NameType.GENERIC.name()).toUpperCase());RuleType ruleType = RuleType.valueOf(get(args, "ruleType", RuleType.APPROX.name()).toUpperCase());boolean concat = getBoolean(args, "concat", true);engine = new PhoneticEngine(nameType, ruleType, concat);Set<String> langs = getSet(args, "languageSet");languageSet = (null == langs || (1 == langs.size() && langs.contains("auto"))) ? null : LanguageSet.from(langs);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public static double varp(double[] v) {double r = Double.NaN;if (v != null && v.length > 1) {r = devsq(v) / v.length;}return r;}
public PersianNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public static WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) {Set<WeightedTerm> terms = new HashSet<>();if (fieldName != null) {fieldName = fieldName.intern();}getTerms(query, terms, prohibited, fieldName);return terms.toArray(new WeightedTerm[terms.size()]);}
public DeleteDocumentationPartResponse deleteDocumentationPart(DeleteDocumentationPartRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[CHART]\n");buffer.append("    .x                    = ").append("0x").append(HexDump.toHex(getX())).append(" (").append(getX()).append(" )\n");buffer.append("    .y                    = ").append("0x").append(HexDump.toHex(getY())).append(" (").append(getY()).append(" )\n");buffer.append("    .width                = ").append("0x").append(HexDump.toHex(getWidth())).append(" (").append(getWidth()).append(" )\n");buffer.append("    .height               = ").append("0x").append(HexDump.toHex(getHeight())).append(" (").append(getHeight()).append(" )\n");buffer.append("[/CHART]\n");return buffer.toString();}
public final short get(int index) {checkIndex(index);return backingArray[offset + index];}
public String toString() {return Image;}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = evaluateRef(arg0);AreaEval reB = evaluateRef(arg1);AreaEval result = resolveRange(reA, reB);if (result == null) {return ErrorEval.NULL_INTERSECTION;}return result;} catch (EvaluationException e) {return e.getErrorEval();}}
public void clear() { weightBySpanQuery.clear(); }
public int findEndOffset(StringBuilder buffer, int start){if (start > buffer.length() || start < 0) return start;bi.setText(buffer.toString(start, buffer.length() - start));return bi.next() + start;}
public SrndQuery PrimaryQuery() throws ParseException {SrndQuery q = null;switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk) {case RegexpToken.LPAREN:Jj_consume_token(RegexpToken.LPAREN);q = FieldsQuery();Jj_consume_token(RegexpToken.RPAREN);break;case RegexpToken.OR:case RegexpToken.AND:case RegexpToken.W:case RegexpToken.N:q = PrefixOperatorQuery();break;case RegexpToken.TRUNCQUOTED:case RegexpToken.QUOTED:case RegexpToken.SUFFIXTERM:case RegexpToken.TRUNCTERM:case RegexpToken.TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;Jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);{if (true) return q;}throw new Exception("Missing return statement in function");}
public DeleteApiKeyResponse deleteApiKey(DeleteApiKeyRequest request) {request = beforeClientExecution(request);return executeDeleteApiKey(request);}
public InsertTagsRequest() {super("Ots", "2016-06-20", "InsertTags", "ots");setMethod(MethodType.POST);}
public DeleteUserByPrincipalIdResponse deleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request) {request = beforeClientExecution(request);return executeDeleteUserByPrincipalId(request);}
public DescribeNetworkInterfacesResponse describeNetworkInterfaces(DescribeNetworkInterfacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeNetworkInterfacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeNetworkInterfacesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );LittleEndian.putInt( data, offset + 4, 8 );LittleEndian.putInt( data, offset + 8, field_1_numShapes );LittleEndian.putInt( data, offset + 12, field_2_lastMSOSPID );listener.afterRecordSerialize( offset + 16, getRecordId(), getRecordSize(), this );return getRecordSize();}
public CreateSecurityConfigurationResponse createSecurityConfiguration(CreateSecurityConfigurationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateSecurityConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateSecurityConfigurationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeClientVpnConnectionsResult describeClientVpnConnections(DescribeClientVpnConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeClientVpnConnections(request);}
public static void fill(double[] array, double value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}
public boolean hasNext() {return pos < maxColumn;}
public PostingsEnum reset(int[] postings) {this.postings = postings;upto = -2;freq_Renamed = 0;return this;}
public boolean hasAll(RevFlagSet set){return (flags & set.mask) == set.mask;}
public ModifyAccountResult modifyAccount(ModifyAccountRequest request) {request = beforeClientExecution(request);return executeModifyAccount(request);}
public Token lt(int k){lazy_init();if (k == 0){return null;}if (k < 0){return lb(-k);}int i = p + k - 1;sync(i);if (i >= tokens.size()){return tokens.get(tokens.size() - 1);}return tokens.get(i);}
public void removeSheet(int sheetIndex) {if (boundsheets.size() > sheetIndex) {records.remove(records.bspos - (boundsheets.size() - 1) + sheetIndex);boundsheets.remove(sheetIndex);fixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for (int i = 0; i < NumNames; i++) {NameRecord nr = getNameRecord(i);if (nr.getSheetNumber() == sheetNum1Based) {nr.setSheetNumber(0);} else if (nr.getSheetNumber() > sheetNum1Based) {nr.setSheetNumber(nr.getSheetNumber() - 1);}}if (linkTable != null) {for (int i = sheetIndex + 1; i < NumSheets + 1; i++) {linkTable.removeSheet(i);}}}
public void removeName(int index) {names.remove(index);workbook.removeName(index);}
public boolean equals(Object o) {if (!(o instanceof Property)) return false;Property p = (Property) o;Object pValue = p.getValue();long pId = p.getID();if (id != pId || (id != 0 && !TypesAreEqual(type, p.getType()))) return false;if (value == null && pValue == null) return true;if (value == null || pValue == null) return false;Type valueClass = value.getClass();Type pValueClass = pValue.getClass();if (!(valueClass.isAssignableFrom(pValueClass)) && !(pValueClass.isAssignableFrom(valueClass))) return false;if (value instanceof byte[]) return Arrays.equals((byte[]) value, (byte[]) pValue);return value.equals(pValue);}
public GetRepoBuildListRequest() {super("cr", "2016-06-07", "GetRepoBuildList", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/build");setMethod(MethodType.GET);}
public MessageWriter() {this.buf = new ByteArrayOutputStream();this.enc = new OutputStreamWriter(getRawStream(), Constants.CHARSET);}
public void append(RecordBase r) {_recs.add(r);}
public void close() throws IOException {if (this.read(this.skipBuffer) != -1 || this.actualSize != this.expectedSize) {throw new CorruptObjectException(MessageFormat.format(JGitText.get().packfileCorruptionDetected, JGitText.get().wrongDecompressedLength));}int used = this._enclosing.bAvail - this.inf.remainingInput();if (0 < used) {this._enclosing.onObjectData(this.src, this._enclosing.buf, this.p, used);this._enclosing.use(used);}this.inf.reset();}
public DescribeModelPackageResult describeModelPackage(DescribeModelPackageRequest request) {request = beforeClientExecution(request);return executeDescribeModelPackage(request);}
public void construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec instanceof FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord) rec;StringRecord cachedText = null;Class<?> nextClass = rs.peekNextClass();if (nextClass == StringRecord.class) {cachedText = (StringRecord) rs.getNext();} else {cachedText = null;}insertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {insertCell(rec);}}
public Object clone() {return new DeflateDecompressor();}
public UpdateS3ResourcesResponse updateS3Resources(UpdateS3ResourcesRequest request) {request = beforeClientExecution(request);return executeUpdateS3Resources(request);}
public GroupQueryNode(QueryNode query) {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}allocate();setLeaf(false);add(query);}
public CharSequence toQueryString(IEscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.append("/").append(getFirstPathElement());for (QueryText pathelement : getPathElements(1)) {String value = escaper.escape(new StringCharSequence(pathelement.getValue()), CultureInfo.getByName("InvariantCulture"), EscapeQuerySyntaxType.STRING).toString();path.append("/\"").append(value).append("\"");}return path.toString();}
public void removeCellComment() {HSSFComment comment2 = _sheet.findCellComment(_record.getRow(), _record.getColumn());comment = null;if (null == comment2) {return;}(_sheet.drawingPatriarch as HSSFPatriarch).removeShape(comment2);}
public void reset() {count = 0;assert forwardCount == 0 : "pos=" + pos + " forwardCount=" + forwardCount;}
public ActivateUserResponse activateUser(ActivateUserRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateUserResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public boolean isCharsetDetected() throws IOException {throw new java.io.UnsupportedOperationException("Charset detection not supported");}
public ModifySnapshotCopyRetentionPeriodResponse modifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request) {var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public DeleteClusterSubnetGroupResult deleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {request = beforeClientExecution(request);return executeDeleteClusterSubnetGroup(request);}
public static String decode(byte[] buffer) {return decode(buffer, 0, buffer.length);}
public int getDefaultPort() {return -1;}
public StopTaskResponse stopTask(StopTaskRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public void seekExact(BytesRef target, TermState otherState) {if (!target.equals(term_Renamed)) {state.copyFrom(otherState);term_Renamed = BytesRef.deepCopyOf(target);seekPending = true;}}
public SeriesToChartGroupRecord(RecordInputStream in) {field_1_chartGroupIndex = in.readShort();}
public static void writeUnicodeStringFlagAndData(LittleEndianOutput out, String value) {boolean is16Bit = hasMultibyte(value);out.writeByte(is16Bit ? 0x01 : 0x00);if (is16Bit) {putUnicodeLE(value, out);} else {putCompressedUnicode(value, out);}}
public AuthorizeSecurityGroupIngressResult authorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeAuthorizeSecurityGroupIngress(request);}
public void addFile(String file) {CheckFileNames(new String[]{ file });setFiles.add(file);}
public void setSize(int width, int height) {mWidth = width;mHeight = height;}
public void setPrecedenceFilterSuppressed(boolean value) {if (value) {this.reachesIntoOuterContext |= SUPPRESS_PRECEDENCE_FILTER;} else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}
public IntervalSet LOOK(ATNState s, RuleContext ctx) {return LOOK(s, null, ctx);}
public void serialize(LittleEndianOutput out) {out.writeShort(getOptionFlags());out.writeShort(getRowHeight());}
public Builder(boolean dedup) {this.dedup = dedup;}
public Hashtable(int capacity, float loadFactor) : this(capacity) {if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException("Load factor: " + loadFactor);}}
public Object get(String key) {int bucket = normalCompletion.getBucket(key);return bucket == -1 ? null : Long.valueOf(bucket);}
public ListHyperParameterTuningJobsResponse listHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(ListHyperParameterTuningJobsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListHyperParameterTuningJobsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeleteTableResult deleteTable(String tableName) {var request = new DeleteTableRequest();request.setTableName(tableName);return deleteTable(request);}
protected boolean lessThan(TextFragment fragA, TextFragment fragB) {if (fragA.getScore() == fragB.getScore()) {return fragA.getFragNum() > fragB.getFragNum();} else {return fragA.getScore() < fragB.getScore();}}
public void freeBefore(int pos) {assert pos >= 0;assert pos <= nextPos;int newCount = nextPos - pos;assert newCount <= count;assert newCount <= buffer.length;count = newCount;}
public UpdateHITTypeOfHITResponse updateHITTypeOfHIT(UpdateHITTypeOfHITRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public UpdateRecommenderConfigurationResult updateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateRecommenderConfiguration(request);}
public int compareTo(Object other) {BytesRef br = (BytesRef) other;Assert.notNull(br);return utf8SortedAsUnicodeSortOrder.compare(this, br);}
public int stem(char s[], int len) {if (len > 4 && s[len - 1] == 's') {len--;}if (len > 5 && (endsWith(s, len, "ene") || (endsWith(s, len, "ane") && useNynorsk))) {return len - 3;}if (len > 4 && (endsWith(s, len, "er") || endsWith(s, len, "en") || endsWith(s, len, "et") || (endsWith(s, len, "ar") && useNynorsk))) {return len - 2;}if (len > 3) {switch (s[len - 1]) {case 'a':case 'e':return len - 1;}}return len;}private boolean endsWith(char[] s, int len, String suffix) {int suffixLength = suffix.length();if (len < suffixLength) {return false;}for (int i = 0; i < suffixLength; i++) {if (s[len - suffixLength + i] != suffix.charAt(i)) {return false;}}return true;}
public DescribeDBSnapshotsResult describeDBSnapshots(DescribeDBSnapshotsRequest request) {request = beforeClientExecution(request);return executeDescribeDBSnapshots(request);}
public SortedSetDocValuesFacetField(String dim, String label) {super("dummy", TYPE);FacetField.verifyLabel(label);FacetField.verifyLabel(dim);this.dim = dim;this.label = label;}
public CreateDocumentationPartResponse createDocumentationPart(CreateDocumentationPartRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public String getValue() {return value;}
public ShortBuffer asReadOnlyBuffer() {return duplicate();}
public UpdateDataSourcePermissionsResult updateDataSourcePermissions(UpdateDataSourcePermissionsRequest request) {request = beforeClientExecution(request);return executeUpdateDataSourcePermissions(request);}
public static org.apache.poi.hssf.record.Record createSingleRecord(RecordInputStream in1) {if (_recordCreatorsById.containsKey(in1.getSid())) {I_RecordCreator constructor = _recordCreatorsById.get(in1.getSid());return constructor.create(in1);} else {return new UnknownRecord(in1);}}
@Override public int getCount() {return this._enclosing.mTabLayout.getChildCount();}
public DeleteApplicationReferenceDataSourceResponse deleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request) {var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public CreateProjectVersionResult createProjectVersion(CreateProjectVersionRequest request) {request = beforeClientExecution(request);return executeCreateProjectVersion(request);}
public IntBuffer slice() {return new ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + position);}
public byte get() throws IOException {throw new java.io.IOException("Not Implemented");}
public LongBuffer put(int index, long c) {checkIndex(index);backingArray[offset + index] = c;return this;}
public StoredField(String name, float value) {super(name, TYPE);fieldsData = value;}
public IntervalSet getExpectedTokensWithinCurrentRule() {ATN atn = Interpreter.atn;ATNState s = atn.getStates()[State];return atn.NextTokens(s);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[FILESHARING]\n");buffer.append("    .Readonly       = ").append(ReadOnly == 1 ? "true" : "false").append("\n");buffer.append("    .password       = ").append(HexDump.toHexString(Password)).append("\n");buffer.append("    .username       = ").append(Username).append("\n");buffer.append("[/FILESHARING]\n");return buffer.toString();}
public SubmoduleInitCommand(Repository repo) {super(repo);paths = new ArrayList<>();}
public void include(String name, AnyObjectId id) {if (!Repository.isValidRefName(name)) {throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidRefName, name));}if (include.containsKey(name)) {throw new IllegalStateException(JGitText.get().duplicateRef + name);}include.put(name, id.toObjectId());}
public EnableSnapshotCopyResult enableSnapshotCopy(EnableSnapshotCopyRequest request) {request = beforeClientExecution(request);return executeEnableSnapshotCopy(request);}
public ValueFiller getValueFiller() {return new ValueFiller() {private final Integer positionIncrementGap = ValueFillerFactory.this.positionIncrementGap;private final Integer offsetGap = ValueFillerFactory.this.offsetGap;@Override
public void serialize(LittleEndianOutput out) {out.writeByte(getPane());out.writeShort(getActiveCellRow());out.writeShort(getActiveCellCol());out.writeShort(getActiveCellRef());int nRefs = getField_6_refs().length;out.writeShort(nRefs);for (int i = 0; i < getField_6_refs().length; i++) {getField_6_refs()[i].serialize(out);}}
public static Counter newCounter() {return newCounter(false);}
public int get(String name, int dflt) {int[] vals;Object temp;if (valByRound.TryGetValue(name, out temp) && temp != null) {vals = (int[]) temp;return vals[roundNumber % vals.length];}String sval;if (!props.TryGetValue(name, out sval)) {sval = String.valueOf(dflt);}if (sval.indexOf(':') < 0) {return Integer.parseInt(sval, java.util.Locale.US);}int k = sval.indexOf(':');String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = PropToInt32Array(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}
public void preSerialize() {if (records.tabpos > 0) {TabIdRecord tir = (TabIdRecord) records.get(records.tabpos);if (tir._tabids.length < boundsheets.size()) {fixTabIdRecord();}}}
public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {super(delegate.Strategy);this.delegate = delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}
public ExternalBookBlock(int numberOfSheets) {_externalBookRecord = SupBookRecord.createInternalReferences((short)numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SCENARIOPROTECT]\n");buffer.append("    .protect         = ").append(Protect).append("\n");buffer.append("[/SCENARIOPROTECT]\n");return buffer.toString();}
public PushCommand setThin(boolean thin) {checkCallable();this.thin = thin;return this;}
public int compareTo(SearcherTracker other){return other.getRecordTimeSec().compareTo(RecordTimeSec);}
public TokenStream create(TokenStream input) {return new ReverseStringFilter(m_luceneMatchVersion, input);}
public BlockList() {directory = NGit.Util.BlockList<T>.NewDirectory(256);directory[0] = NGit.Util.BlockList<T>.NewBlock();tailBlock = directory[0];}
public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new HashMap<>(weightedTerms.length);for (WeightedSpanTerm t : weightedTerms) {if (!fieldWeightedSpanTerms.containsKey(t.Term) ||(fieldWeightedSpanTerms.get(t.Term) == null) ||(fieldWeightedSpanTerms.get(t.Term).Weight < t.Weight)) {fieldWeightedSpanTerms.put(t.Term, t);maxTermWeight = Math.max(maxTermWeight, t.Weight);}}skipInitExtractor = true;}
public boolean equals(Object other) {Debug.Assert(NeverEquals(other));if (other instanceof MergedGroup<T> otherMergedGroup) {if (groupValue == null) {return otherMergedGroup == null;} else {return groupValueIsValueType ? JCG.EqualityComparer<T>.Default.equals(groupValue, otherMergedGroup.groupValue) : J2N.Collections.StructuralEqualityComparer.Default.equals(groupValue, otherMergedGroup.groupValue);}} else {return false;}}
public java.nio.charset.Charset charset() {return cs;}
public DescribeExperimentResponse describeExperiment(DescribeExperimentRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeExperimentRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeExperimentResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Graphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel) {this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font("Arial", 10);this.foreground = forecolor;}
public String pattern() {return patternText;}
public DeleteRouteTableResponse deleteRouteTable(DeleteRouteTableRequest request) {request = beforeClientExecution(request);return executeDeleteRouteTable(request);}
public AssociateVPCWithHostedZoneResult associateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request) {request = beforeClientExecution(request);return executeAssociateVPCWithHostedZone(request);}
public PutIntegrationResponse putIntegration(PutIntegrationRequest request) {var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public SimpleEntry(K theKey, V theValue) {key = theKey;value = theValue;}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final int byte0 = blocks[blocksOffset++] & 0xFF;final int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | (byte1 >>> 4);final int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}
public DisassociateConnectionFromLagResponse disassociateConnectionFromLag(DisassociateConnectionFromLagRequest request) {request = beforeClientExecution(request);return executeDisassociateConnectionFromLag(request);}
public FileMode getOldMode() {return oldMode;}
public String toString() {return mapEntry.toString();}
public StopKeyPhrasesDetectionJobResult stopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopKeyPhrasesDetectionJob(request);}
public String toString() {StringBuilder buffer = new StringBuilder("[Array Formula or Shared Formula]\n");buffer.append("row = ").append(getRow()).append("\n");buffer.append("col = ").append(getColumn()).append("\n");return buffer.toString();}
public ListDominantLanguageDetectionJobsResponse listDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListDominantLanguageDetectionJobsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListDominantLanguageDetectionJobsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString() {return "slice start=" + start + " length=" + length + " readerIndex=" + readerIndex;}
public static int ParseHexInt4(byte digit) {byte r = digits16[digit];if (r < 0){throw new IndexOutOfRangeException();}return r;}
public Attribute(String name, String value) {setName(name);setValue(value);}
public DescribeStackSetOperationResult describeStackSetOperation(DescribeStackSetOperationRequest request) {request = beforeClientExecution(request);return executeDescribeStackSetOperation(request);}
public HSSFCell getCell(short cellnum) {int ushortCellNum = cellnum & 0x0000FFFF;return getCell(ushortCellNum);}
public void write(byte[] b){writeContinueIfRequired(b.length);_ulrOutput.write(b);}
public ResetImageAttributeRequest(String imageId, ResetImageAttributeName attribute) {setImageId(imageId);setAttribute(attribute.toString());}
public void discardResultContents() {resultContents = null;}
public ObjectId getPeeledObjectId() {return getLeaf().getPeeledObjectId();}
public UndeprecateDomainResponse undeprecateDomain(UndeprecateDomainRequest request) {var options = new InvokeOptions();options.RequestMarshaller = UndeprecateDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = UndeprecateDomainResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public void write(LittleEndianOutput out) {out.writeByte(sid + PtgClass);out.writeByte(field_3_string.length());out.writeByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode) {StringUtil.putUnicodeLE(field_3_string, out);} else {StringUtil.putCompressedUnicode(field_3_string, out);}}
public DeleteQueueResponse deleteQueue(String queueUrl) {DeleteQueueRequest request = new DeleteQueueRequest();request.setQueueUrl(queueUrl);return deleteQueue(request);}
public void setCheckEofAfterPackFooter(boolean b) {checkEofAfterPackFooter = b;}
public void swap() {int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}
public int getPackedGitWindowSize() {return packedGitWindowSize;}
public PutMetricDataResponse putMetricData(PutMetricDataRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(PutMetricDataRequestMarshaller.getInstance());options.setResponseUnmarshaller(PutMetricDataResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetCelebrityRecognitionResponse getCelebrityRecognition(GetCelebrityRecognitionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetCelebrityRecognitionRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetCelebrityRecognitionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateQueueRequest(String queueName) {this.queueName = queueName;}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) : base(arearef) {this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.getSheetId().getName();if (sheetName instanceof SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier) sheetName).getLastSheetIdentifier().getName();} else {this.lastSheetName = null;}}
public void setBaseline(long clockTime) {t0 = clockTime;timeout = t0 + ticksAllowed;}
public MoveAddressToVpcResponse moveAddressToVpc(MoveAddressToVpcRequest request) {request = beforeClientExecution(request);return executeMoveAddressToVpc(request);}
public String toString() {String coll = m_collectionModel.getName();if (coll != null){return String.format("LM %s - %s", getName(), coll);}else{return String.format("LM %s", getName());}}
public DescribeLagsResponse describeLags(DescribeLagsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeLagsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLagsResponseUnmarshaller.getInstance());return invoke(request, options);}
public ValueEval offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx) {if (_refEval == null) {return _areaEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}
public ShortBuffer put(short[] src, int srcOffset, int shortCount) {byteBuffer.limit(limit * libcore.io.SizeOf.SHORT);byteBuffer.position(position * libcore.io.SizeOf.SHORT);if (byteBuffer instanceof java.nio.ReadWriteDirectByteBuffer) {((java.nio.ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, shortCount);} else {((java.nio.ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, shortCount);}this._position += shortCount;return this;}
public void initialize(String cat) {this._cat = cat;}
public void write(int oneByte) throws IOException {throw new UnsupportedOperationException("Not supported yet.");}
public DescribeImportImageTasksResponse describeImportImageTasks(DescribeImportImageTasksRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeImportImageTasksRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeImportImageTasksResponseUnmarshaller.getInstance());return invoke(request, options);}
public ColumnInfoRecord(RecordInputStream in) {_first_col = in.readUShort();_last_col = in.readUShort();_col_width = in.readUShort();_xf_index = in.readUShort();_options = in.readUShort();switch (in.Remaining) {case 2:field_6_reserved = in.readUShort();break;case 1:field_6_reserved = in.readByte();break;case 0:field_6_reserved = 0;break;default:throw new Exception("Unusual record size remaining=(" + in.Remaining + ")");}}
public Status(IndexDiff diff) {super();this.diff = diff;clean = diff.GetAdded().IsEmpty() && diff.GetChanged().IsEmpty() && diff.GetRemoved().IsEmpty() && diff.GetMissing().IsEmpty() && diff.GetModified().IsEmpty() && diff.GetUntracked().IsEmpty() && diff.GetConflicting().IsEmpty();}
public CreateExperimentResponse createExperiment(CreateExperimentRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateExperimentRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateExperimentResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Object clone() {return this;}
public FloatBuffer slice() {byteBuffer.limit(limit * SizeOf.FLOAT);byteBuffer.position(position * SizeOf.FLOAT);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());FloatBuffer result = new FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}
public DescribeSnapshotSchedulesResult describeSnapshotSchedules(DescribeSnapshotSchedulesRequest request) {request = beforeClientExecution(request);return executeDescribeSnapshotSchedules(request);}
public ListImagesResponse listImages(ListImagesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListImagesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListImagesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Diff(int ins, int del, int rep, int noop) {INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}
public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[0]);buffer.append(",");buffer.append(operands[1]);return buffer.toString();}
public static void setupEnvironment(String[] workbookNames, ForkedEvaluator[] Evaluators) {WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[Evaluators.length];for (int i = 0; i < wbEvals.length; i++) {wbEvals[i] = Evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.setup(workbookNames, wbEvals);}
public ListPhotoTagsRequest() {super("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public RandomSamplingFacetsCollector(int sampleSize, long seed) {super(false);this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}
public AllocateStaticIpResponse allocateStaticIp(AllocateStaticIpRequest request) {var options = new InvokeOptions();options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public FeatRecord(RecordInputStream in) {futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.readShort();reserved1 = (byte)in.readByte();reserved2 = in.readInt();int cref = in.readUShort();cbFeatData = in.readInt();reserved3 = in.readShort();cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.length; i++) {cellRefs[i] = new CellRangeAddress(in);}switch (isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in);break;default:logger.Log(POILogger.ERROR, "Unknown Shared Feature " + isf_sharedFeatureType + " found!");break;}}
public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[24];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 10; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}}}}for (int i = 0; i < 24; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}
public CreateSnapshotScheduleResponse createSnapshotSchedule(CreateSnapshotScheduleRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke.createSnapshotSchedule(request, options);}
public Record getNext(){if (_nextIndex >= _list.size()){throw new Exception("Attempt to Read past end of record stream");}_countRead++;return _list.get(_nextIndex++);}
public String toString() {return RawParseUtils.decode(buf.toByteArray());}
public ListTablesRequest(String exclusiveStartTableName) {setExclusiveStartTableName(exclusiveStartTableName);}
public EnableAlarmActionsResult enableAlarmActions(EnableAlarmActionsRequest request) {request = beforeClientExecution(request);return executeEnableAlarmActions(request);}
public Builder() {this.lastDocID = -1;this.wordNum = -1;this.word = 0;}
public boolean equals(Object obj) {if (!(obj instanceof State)) {return false;}State other = (State) obj;return is_final == other.is_final && java.util.Arrays.equals(this.labels, other.labels) && this.states == other.states;}
public TokenStream create(TokenStream input) {return new EnglishPossessiveFilter(m_luceneMatchVersion, input);}
public void clearFormatting() {_string = cloneStringIfRequired();_string.clearFormatting();addToSSTIfRequired();}
public int get(int index, long[] arr, int off, int len) {assert len > 0 : "len must be > 0 (got " + len + ")";assert index >= 0 && index < valueCount;len = Math.min(len, valueCount - index);Arrays.fill(arr, off, off + len, 0);return len;}
public DeleteRouteResponseResult deleteRouteResponse(DeleteRouteResponseRequest request) {request = beforeClientExecution(request);return executeDeleteRouteResponse(request);}
public String toPrivateString() {return format(true, false);}
public CreatePresignedDomainUrlResponse createPresignedDomainUrl(CreatePresignedDomainUrlRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreatePresignedDomainUrlRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreatePresignedDomainUrlResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void write(int oneChar) {doWrite(new char[] { (char)oneChar }, 0, 1);}
public SSTRecord getSSTRecord() {return sstRecord;}
public String toString() {return "term=" + term + ",field=" + field + ",value=" + value;}
public boolean isSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) {return bloomFilter.getSaturation() > 0.9f;}
public Builder(boolean ignoreCase) {this.ignoreCase = ignoreCase;}
public String toString() {return getClass().getSimpleName() + "(maxBasicQueries: " + maxBasicQueries + ", queriesMade: " + queriesMade + ")";}
public DeleteDataSourceResult deleteDataSource(DeleteDataSourceRequest request) {request = beforeClientExecution(request);return executeDeleteDataSource(request);}
public RebootNodeResponse rebootNode(RebootNodeRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RebootNodeRequestMarshaller.getInstance());options.setResponseUnmarshaller(RebootNodeResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void processChildRecords() {convertRawBytesToEscherRecords();}
public CreateOrUpdateTagsResponse createOrUpdateTags(CreateOrUpdateTagsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateOrUpdateTagsRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateOrUpdateTagsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public FileSnapshot getSnapShot() {return snapShot;}
public InputStream openResource(String resource) {InputStream stream = this.clazz.getClass().getPackage().getClassLoader().getResourceAsStream(resource);if (stream == null) {throw new IOException("Resource not found: " + resource);}return stream;}
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append("sid=").append(HexDump.shortToHex(_sid));sb.append(" size=").append(_data.length);sb.append(" : ").append(HexDump.toHex(_data));sb.append("]\n");return sb.toString();}
public int nextIndex() {return index;}
public CharSequence toQueryString(EscapeQuerySyntax escaper) {if (isDefaultField(this.m_field)) {return "\"" + getTermEscapeQuoted(escaper) + "\"";} else {return this.m_field + ":" + "\"" + getTermEscapeQuoted(escaper) + "\"";}}
public CalcModeRecord clone() {CalcModeRecord rec = new CalcModeRecord();rec.field_1_calcmode = this.field_1_calcmode;return rec;}
public boolean isOutput() {return output;}
public CreateNetworkInterfaceResult createNetworkInterface(CreateNetworkInterfaceRequest request) {request = beforeClientExecution(request);return executeCreateNetworkInterface(request);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_password);}
public StopDominantLanguageDetectionJobResponse stopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request) {var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public void withConnectionTimeout(int milliseconds) {connectionTimeoutInMilliseconds = milliseconds;}
public GetGatewayGroupResult getGatewayGroup(GetGatewayGroupRequest request) {request = beforeClientExecution(request);return executeGetGatewayGroup(request);}
public FloatBuffer slice() {return new java.nio.ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset + position);}
public static String join(Collection<String> parts, String separator, String lastSeparator) {StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.size() - 1;for (String part : parts) {sb.append(part);if (i == lastIndex - 1) {sb.append(lastSeparator);} else if (i != lastIndex) {sb.append(separator);}i++;}return sb.toString();}
public String toString() {return "(" + a.toString() + " AND " + b.toString() + ")";}
public ListSubscriptionsByTopicRequest(String topicArn, String nextToken) {this.setTopicArn(topicArn);this.setNextToken(nextToken);}
public byte readByte(){return bytes[pos--];}
public TerminateClientVpnConnectionsResponse terminateClientVpnConnections(TerminateClientVpnConnectionsRequest request) {var options = new InvokeOptions();options.setRequestMarshaller(TerminateClientVpnConnectionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(TerminateClientVpnConnectionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ReceiveMessageRequest(String queueUrl) {this.setQueueUrl(queueUrl);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_barSpace);out.writeShort(field_2_categorySpace);out.writeShort(field_3_formatFlags);}
public Object common(Object output1, Object output2) {return outputs.common((T)output1, (T)output2);}
public CreateVariableResponse createVariable(CreateVariableRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateVariableRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateVariableResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static int match(byte[] b, int ptr, byte[] src) {if (ptr + src.length > b.length) {return -1;}for (int i = 0; i < src.length; i++, ptr++) {if (b[ptr] != src[i]) {return -1;}}return ptr;}
public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.getInt(data, pos + size);size += 4;field_2_rectY1 = LittleEndian.getInt(data, pos + size);size += 4;field_3_rectX2 = LittleEndian.getInt(data, pos + size);size += 4;field_4_rectY2 = LittleEndian.getInt(data, pos + size);size += 4;bytesRemaining -= size;if (bytesRemaining != 0) {throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);}return 8 + size + bytesRemaining;}
public CreateCloudFrontOriginAccessIdentityResponse createCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {request = beforeClientExecution(request);return executeCreateCloudFrontOriginAccessIdentity(request);}
public boolean isNamespaceAware() {return getFeature(org.xmlpull.v1.XmlPullParserClass.FEATURE_PROCESS_NAMESPACES);}
public void setOverridable(boolean on) {overridable = on;}
public String getClassName() {return className;}
public synchronized DirectoryReader getIndexReader() {if (indexReader != null) {indexReader.incRef();}return indexReader;}
public int indexOfKey(int key){return binarySearch(mKeys, 0, mSize, key);}
public BlankRecord(RecordInputStream in) {field_1_row = in.readUShort();field_2_col = in.readShort();field_3_xf = in.readShort();}
public long length() {return length_Renamed;}
public PasswordRecord(RecordInputStream in) {field_1_password = in.readShort();}
public HashMap(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException("Load factor: " + loadFactor);}}
public synchronized void run() {long lastReopenStartNS = System.currentTimeMillis() * 100;while (!finish) {boolean hasWaiting;synchronized (this) {hasWaiting = waitingGen > searchingGen;}long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - Time.nanoTime();if (sleepNS > 0) {try {reopenCond.wait(TimeUnit.MILLISECONDS.toMillis(sleepNS / Time.NANOSECONDS_PER_MILLISECOND));} catch (InterruptedException e) {Thread.currentThread().interrupt();return;}}if (finish) {break;}lastReopenStartNS = Time.nanoTime();refreshStartGen = writer.getAndIncrementGeneration();try {manager.maybeRefreshBlocking();} catch (IOException e) {throw new Exception(e.toString(), e);}}refreshDone();}
public DeleteLoginProfileRequest(String userName) {this.userName = userName;}
public E pollFirst() {return (_size == 0) ? default(E) : removeFirstImpl();}
public CreatePhotoRequest() {super("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public String getName() {return "resolve";}
public int findEndOffset(StringBuilder buffer, int start) {if (start > buffer.length() || start < 0) return start;int offset, count = m_maxScan;for (offset = start; offset < buffer.length() && count > 0; count--) {if (m_boundaryChars.contains(buffer.charAt(offset))) return offset;offset++;}return start;}
public void setObjectChecker(ObjectChecker oc) {objCheck = oc;}
public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}
public CreateVpcEndpointResponse createVpcEndpoint(CreateVpcEndpointRequest request) {var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public DeregisterWorkspaceDirectoryResult deregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {request = beforeClientExecution(request);return executeDeregisterWorkspaceDirectory(request);}
public ChartFRTInfoRecord(RecordInputStream in) {rt = in.readShort();grbitFrt = in.readShort();verOriginator = (byte)in1.readByte();verWriter = (byte)in1.readByte();int cFRTID = in.readShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cFRTID; i++) {rgCFRTID[i] = new CFRTID(in);}}
public ThreeWayMerger newMerger(Repository db) {return new OneSide(db, treeIndex);}
public CreateDataSourceFromRedshiftResult createDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request) {request = beforeClientExecution(request);return executeCreateDataSourceFromRedshift(request);}
public void clearDFA() {for (int d = 0; d < decisionToDFA.length; d++) {decisionToDFA[d] = new DFA(atn.getDecisionState(d), d);}}
public void removeName(String name) {int index = getNameIndex(name);removeName(index);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[RightMargin]\n");buffer.append("    .margin               = ").append(" (" + getMargin() + " )\n");buffer.append("[/RightMargin]\n");return buffer.toString();}
public RefreshAllRecord clone() {return new RefreshAllRecord(_options);}
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) : base(queryConfig) {add(new WildcardQueryNodeProcessor());add(new MultiFieldQueryNodeProcessor());add(new FuzzyQueryNodeProcessor());add(new MatchAllDocsQueryNodeProcessor());add(new OpenRangeQueryNodeProcessor());add(new NumericQueryNodeProcessor());add(new NumericRangeQueryNodeProcessor());add(new LowercaseExpandedTermsQueryNodeProcessor());add(new TermRangeQueryNodeProcessor());add(new AllowLeadingWildcardProcessor());add(new AnalyzerQueryNodeProcessor());add(new PhraseSlopQueryNodeProcessor());add(new BooleanQuery2ModifierNodeProcessor());add(new NoChildOptimizationQueryNodeProcessor());add(new RemoveDeletedQueryNodesProcessor());add(new RemoveEmptyNonLeafQueryNodeProcessor());add(new BooleanSingleChildOptimizationQueryNodeProcessor());add(new DefaultPhraseSlopQueryNodeProcessor());add(new BoostQueryNodeProcessor());add(new MultiTermRewriteMethodProcessor());}
public String formatAsString(String sheetName, boolean useAbsoluteAddress) {StringBuilder sb = new StringBuilder();if (sheetName != null) {sb.append(SheetNameFormatter.format(sheetName));sb.append("!");}CellReference cellRefFrom = new CellReference(FirstRow, FirstColumn, useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(LastRow, LastColumn, useAbsoluteAddress, useAbsoluteAddress);sb.append(cellRefFrom.formatAsString());if (!cellRefFrom.equals(cellRefTo) || isFullColumnRange() || isFullRowRange()) {sb.append(':');sb.append(cellRefTo.formatAsString());}return sb.toString();}
public ByteBuffer put(int index, byte value) {throw new ReadOnlyBufferException();}
public void mode(int m) {_mode = m;}
public ShortBuffer slice() {return new ReadWriteShortArrayBuffer(remaining(), backingArray, offset + position);}
public void set(int index, long n) {if (count < index) {throw new IndexOutOfBoundsException("Index " + index + " is out of bounds");} else {if (count == index) {add(n);} else {entries[index] = n;}}}
public ByteBuffer putFloat(float value) { throw new ReadOnlyBufferException(); }
public static double max(double[] values) {double max = Double.NEGATIVE_INFINITY;for (int i = 0, iSize = values.length; i < iSize; i++) {max = Math.max(max, values[i]);}return max;}
public UpdateRepoWebhookRequest() {super("cr", "2016-06-07", "UpdateRepoWebhook", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]");setMethod(MethodType.POST);}
public DeleteAttributesRequest(String domainName, String itemName, java.util.List<Attribute> attributes, UpdateCondition expected) {setDomainName(domainName);setItemName(itemName);setAttributes(attributes);setExpected(expected);}
public String toString() {StringBuilder sb = new StringBuilder();sb.append("[SXPI]\n");for (int i = 0; i < _fieldInfos.length; i++){sb.append("    item[").append(i).append("]= ");_fieldInfos[i].appendDebugInfo(sb);sb.append('\n');}sb.append("[/SXPI]\n");return sb.toString();}
public boolean isSuccessful() {if (mergeResult != null) {return mergeResult.getMergeStatus().isSuccessful();} else {if (rebaseResult != null) {return rebaseResult.getStatus().isSuccessful();}}return true;}
public void setBytesValue(byte[] value) {setBytesValue(new BytesRef(value));}
public DescribeConnectionsResponse describeConnections(DescribeConnectionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeConnectionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeConnectionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeletePhotosRequest() {super("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public void add(E object) {iterator.add(object);subList.sizeChanged(true);end++;}
public static java.nio.ByteBuffer allocate(int capacity) {if (capacity < 0) {throw new java.lang.IllegalArgumentException();}return new java.nio.ReadWriteHeapByteBuffer(capacity);}
public SrndQuery getSubQuery(int qn) { return m_queries[qn]; }
public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {if (numPayloadsSeen == 0) {return currentPayloadScore;} else {return Math.min(currentPayloadScore, currentScore);}}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[BLANK]\n");buffer.append("row       = ").append(HexDump.shortToHex(getRow())).append("\n");buffer.append("col       = ").append(HexDump.shortToHex(getColumn())).append("\n");buffer.append("xf        = ").append(HexDump.shortToHex(getXFIndex())).append("\n");buffer.append("[/BLANK]\n");return buffer.toString();}
public DescribeLogPatternResult describeLogPattern(DescribeLogPatternRequest request) {request = beforeClientExecution(request);return executeDescribeLogPattern(request);}
public RegisterTransitGatewayMulticastGroupMembersResult registerTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request) {request = beforeClientExecution(request);return executeRegisterTransitGatewayMulticastGroupMembers(request);}
public GetPhoneNumberSettingsResponse getPhoneNumberSettings(GetPhoneNumberSettingsRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public ObjectId getData() {return data;}
public boolean isDirect() { return false; }
public DeleteServerCertificateRequest(String serverCertificateName) {_serverCertificateName = serverCertificateName;}
public java.lang.StringBuffer append(boolean b){return append(b ? "true" : "false");}
public GetEvaluationResult getEvaluation(GetEvaluationRequest request) {request = beforeClientExecution(request);return executeGetEvaluation(request);}
public BriaRecord getDataName(){return dataName;}
public boolean find(int start_1) {findPos = start_1;if (findPos < _regionStart) {findPos = _regionStart;} else {if (findPos >= _regionEnd) {matchFound = false;return false;}}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}
public GetLifecyclePolicyPreviewResponse getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) {var options = new InvokeOptions();options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public SinglePositionTokenStream(String word) {termAtt = AddAttribute(ICharTermAttribute.class);posIncrAtt = AddAttribute(IPositionIncrementAttribute.class);this.word = word;returned = true;}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_print_gridlines);}
public String toString() {StringBuilder s = new StringBuilder();s.append(Constants.TypeString(getType()));s.append(' ');s.append(Name);s.append(' ');s.append(commitTime);s.append(' ');AppendCoreFlags(s);return s.toString();}
public LsRemoteCommand setRemote(String remote) {checkCallable();this.remote = remote;return this;}
public void collapseRow(int rowNumber) {int startRow = findStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = getRow(startRow);int lastRow = writeHidden(rowRecord, startRow, true);if (getRow(lastRow + 1) != null) {getRow(lastRow + 1).setCollapsed(true);} else {RowRecord row = createRow(lastRow + 1);row.setCollapsed(true);insertRow(row);}}
public AssociateSkillGroupWithRoomResponse associateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request) {var options = new InvokeOptions();options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;return Invoke.invoke(request, options);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[SERIESLIST]\n");buffer.append("    .seriesNumbers        = ").append(" (").append(getSeriesNumbers()).append(" )");buffer.append(System.getProperty("line.separator"));buffer.append("[/SERIESLIST]\n");return buffer.toString();}
public QueryConfigHandler getQueryConfigHandler() {return this.queryConfig;}
public String getClassArg() {if (null != originalArgs) {String className = originalArgs[CLASS_NAME];if (null != className) {return className;}}return this.getClass().getSimpleName();}
