public void Serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_vcenter);}
public void AddAll(NGit.Util.BlockList<T> src) {if (src.size == 0) {return;}int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++) {AddAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);}if (src.tailBlkIdx != 0) {AddAll(src.tailBlock, 0, src.tailBlkIdx);}}
public void writeByte(byte b) {if (outerInstance.upto == outerInstance.blockSize) {if (outerInstance.currentBlock != null) {outerInstance.blocks.add(outerInstance.currentBlock);outerInstance.blockEnd.add(outerInstance.upto);}outerInstance.currentBlock = new byte[outerInstance.blockSize];outerInstance.upto = 0;}outerInstance.currentBlock[outerInstance.upto++] = b;}
public ObjectId GetObjectId(){ return objectId; }
public DeleteDomainEntryResponse deleteDomainEntry(DeleteDomainEntryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDomainEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDomainEntryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public long ramBytesUsed() {return fst == null ? 0 : fst.getSizeInBytes();}
public String GetFullMessage(){byte[] raw = buffer;int msgB = RawParseUtils.TagMessage(raw, 0);if (msgB < 0){return "";}Encoding enc = RawParseUtils.ParseEncoding(raw);return RawParseUtils.Decode(enc, raw, msgB, raw.length);}
public POIFSFileSystem() {HeaderBlock headerBlock = new HeaderBlock(bigBlockSize);_property_table = new PropertyTable(headerBlock);_documents = new ArrayList();_root = null;}
public void Init(int address) {slice = pool.Buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];assert slice != null;upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;assert upto < slice.length;}
public NGit.Api.SubmoduleAddCommand setPath(String path) {this.path = path;return this;}
public ListIngestionsResponse listIngestions(ListIngestionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListIngestionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListIngestionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public QueryParserTokenManager(ICharStream stream, int lexState) {this(stream);SwitchTo(lexState);}
public GetShardIteratorResponse getShardIterator(GetShardIteratorRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetShardIteratorRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetShardIteratorResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ModifyStrategyRequest() {super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis", "openAPI");setMethod(MethodType.POST);}
public boolean ready() {synchronized (lock) {if (in == null) {throw new java.io.IOException("InputStreamReader is closed");}try {return bytes.hasRemaining() || in.available() > 0;} catch (java.io.IOException e) {return false;}}}
protected EscherOptRecord getOptRecord(){ return _optRecord; }
public int read(byte[] buffer, int offset, int length) {synchronized (this) {if (buffer == null) {throw new IllegalArgumentException("buffer == null");}if (offset < 0 || offset > buffer.length || length < 0 || offset + length > buffer.length) {throw new ArrayIndexOutOfBoundsException("Invalid offset or length");}if (length == 0) {return 0;}int copylen = Math.min(count - pos, length);for (int i = 0; i < copylen; i++) {buffer[offset + i] = this.buffer[pos + i];}pos += copylen;return copylen;}}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}
public void print(String str) {write(str != null ? str : StringHelper.getValueOf(null));}
public NotImplementedFunctionException(String functionName, NotImplementedException cause) {super(functionName, cause);this.functionName = functionName;}
public V next() {return this.nextEntry().value;}
public override sealed void readBytes(byte[] b, int offset, int len, boolean useBuffer) {int available = bufferLength - bufferPosition;if (len <= available) {if (len > 0) {System.arraycopy(m_buffer, bufferPosition, b, offset, len);}bufferPosition += len;} else {if (available > 0) {System.arraycopy(m_buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize) {refill();if (bufferLength < len) {System.arraycopy(m_buffer, 0, b, offset, bufferLength);throw new EndOfStreamException("read past EOF: " + this);} else {System.arraycopy(m_buffer, 0, b, offset, len);bufferPosition = len;}} else {long after = bufferStart + bufferPosition + len;if (after > Length) {throw new EndOfStreamException("read past EOF: " + this);}readInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;}}}
public TagQueueResponse tagQueue(TagQueueRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(TagQueueRequestMarshaller.getInstance());options.setResponseUnmarshaller(TagQueueResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void remove() {throw new UnsupportedOperationException();}
public virtual ModifyCacheSubnetGroupResponse modifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ModifyCacheSubnetGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyCacheSubnetGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public override void SetParams(String params) {super.SetParams(params);culture = "";String ignore;StringTokenizer st = new StringTokenizer(params, ",");if (st.hasMoreTokens()) {culture = st.nextToken();}if (st.hasMoreTokens()) {culture += "-" + st.nextToken();}if (st.hasMoreTokens()) {ignore = st.nextToken();}}
public virtual DeleteDocumentationVersionResponse deleteDocumentationVersion(DeleteDocumentationVersionRequest request){InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDocumentationVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDocumentationVersionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean equals(Object obj) {if (!(obj instanceof FacetLabel)) {return false;}FacetLabel other = (FacetLabel) obj;if (Length != other.Length) {return false;}for (int i = Length - 1; i >= 0; i--) {if (!Components[i].equals(other.Components[i], StringComparison.Ordinal)) {return false;}}return true;}
public virtual GetInstanceAccessDetailsResponse getInstanceAccessDetails(GetInstanceAccessDetailsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetInstanceAccessDetailsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetInstanceAccessDetailsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.setParent(this);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);return shape;}
public String getSheetName(int sheetIndex) {return getBoundSheetRec(sheetIndex).Sheetname();}
public virtual GetDashboardResponse getDashboard(GetDashboardRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetDashboardRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDashboardResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public AssociateSigninDelegateGroupsWithAccountResponse associateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AssociateSigninDelegateGroupsWithAccountRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void AddMultipleBlanks(MulBlankRecord mbr){for (int j = 0; j < mbr.getNumColumns(); j++){BlankRecord br = new BlankRecord();br.setColumn(j + mbr.getFirstColumn());br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));InsertCell(br);}}
public static String quote(String str) {StringBuilder sb = new StringBuilder();sb.append("\\Q");int apos = 0;int k;while ((k = str.indexOf("\\E", apos)) >= 0) {sb.append(str.substring(apos, k + 2)).append("\\\\E\\Q");apos = k + 2;}return sb.append(str.substring(apos)).append("\\E").toString();}
public ByteBuffer putInt(int value) {throw new ReadOnlyBufferException();}
public ArrayPtg(Object[][] values2d) {int nColumns = values2d[0].length;int nRows = values2d.length;_nColumns = (short) nColumns;_nRows = (short) nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++) {Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++) {vv[GetValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public GetIceServerConfigResponse getIceServerConfig(GetIceServerConfigRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetIceServerConfigRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetIceServerConfigResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append(getValueAsString());sb.append("]");return sb.toString();}
public String toString(String field) {return "ToChildBlockJoinQuery (" + _parentQuery + ")";}
public void incRef(){refCount.incrementAndGet();}
public UpdateConfigurationSetSendingEnabledResponse updateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateConfigurationSetSendingEnabledRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateConfigurationSetSendingEnabledResponseUnmarshaller.getInstance());return invoke(request, options);}
public int GetNextXBATChainOffset(){return GetXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}
public void multiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.getInstance(Math.abs(pow10));if (pow10 < 0) {mulShift(tp.getDivisor(), tp.getDivisorShift());} else {mulShift(tp.getMultiplicand(), tp.getMultiplierShift());}}
public override String toString(){StringBuilder builder = new StringBuilder();int length = this.length;builder.append(Path.of(System.getProperty("os.name")).getFileSystem().getSeparator());for (int i = 0; i < length; i++){builder.append(this.getComponent(i));if (i < (length - 1)){builder.append(Path.of(System.getProperty("os.name")).getFileSystem().getSeparator());}}return builder.toString();}
public void withFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.setRoleName(roleName);}
public void setProgressMonitor(ProgressMonitor pm){this.progressMonitor = pm;}
public void reset() {if (!isFirst) {ptr = 0;if (!isEof) {parseEntry();}}}
public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new java.util.NoSuchElementException();}
public String getNewPrefix() {return this.newPrefix;}
public int indexOfValue(int value) {for (int i = 0; i < mSize; i++) {if (mValues[i] == value) {return i;}}return -1;}
public class Stemmer {public List<CharsRef> uniqueStems(char[] word, int length) {List<CharsRef> stems = stem(word, length);if (stems.size() < 2) {return stems;}
public virtual GetGatewayResponsesResponse getGatewayResponses(GetGatewayResponsesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetGatewayResponsesRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetGatewayResponsesResponseUnmarshaller.getInstance());return invoke(request, options);}
public void setPosition(long position) {currentBlockIndex = (int) (position >> outerInstance.blockBits);currentBlock = outerInstance.blocks[currentBlockIndex];currentBlockUpto = (int) (position & outerInstance.blockMask);}
public class MyClass {protected long Skip(long n) {int s = (int)Math.min(Available(), Math.max(0, n));ptr += s;return s;}private long Available() {// Implement the Available methodreturn 0; // Placeholder return value}private long ptr;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {_bootstrapActionConfig = bootstrapActionConfig;}
public void serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_row);out1.writeShort(field_2_col);out1.writeShort(field_3_flags);out1.writeShort(field_4_shapeid);out1.writeShort(field_6_author.length());out1.writeByte(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.putUnicodeLE(field_6_author, out1);} else {StringUtil.putCompressedUnicode(field_6_author, out1);}if (field_7_padding != null) {out1.writeByte(Integer.parseInt(field_7_padding, CultureInfo.InvariantCulture));}}
public int lastIndexOf(String @string){return lastIndexOf(@string, count);}
public boolean add(E object) {return addLastImpl(object);}
public void unsetSection(String section, String subsection) {ConfigSnapshot src;ConfigSnapshot res;do {src = state.get();res = unsetSection(src, section, subsection);} while (!state.compareAndSet(src, res));}
public String getTagName(){return tagName;}
public void addSubRecord(int index, SubRecord element) {subrecords.add(index, element);}
public boolean remove(Object @object) {synchronized (mutex) {return c.remove(@object);}}
public override TokenStream create(TokenStream input) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long length() {return inCoreLength();}
public void setValue(boolean newValue) {this.value = newValue;}
public Pair(ContentSource oldSource, ContentSource newSource) {this.oldSource = oldSource;this.newSource = newSource;}
public int Get(int i) {if (count <= i) {throw new IndexOutOfBoundsException("Index: " + i + ", Count: " + count);}return entries[i];}
public CreateRepoRequest() {super("cr", "2016-06-07", "CreateRepo", "cr", "openAPI");this.uriPattern = "/repos";this.method = MethodType.PUT;}
public boolean isDeltaBaseAsOffset() {return deltaBaseAsOffset;}
public void remove() {if (expectedModCount == list.modCount) {if (lastLink != null) {Link<ET> next_1 = lastLink.next;Link<ET> previous_1 = lastLink.previous;next_1.previous = previous_1;previous_1.next = next_1;if (lastLink == link) {pos--;}link = previous_1;lastLink = null;expectedModCount++;list._size--;list.modCount++;} else {throw new InvalidOperationException();}} else {throw new ConcurrentModificationException();}}
public MergeShardsResponse mergeShards(MergeShardsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(MergeShardsRequestMarshaller.getInstance());options.setResponseUnmarshaller(MergeShardsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual AllocateHostedConnectionResponse allocateHostedConnection(AllocateHostedConnectionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AllocateHostedConnectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(AllocateHostedConnectionResponseUnmarshaller.getInstance());return invoke(request, options);}
public int getBeginIndex(){return start;}
public static WeightedTerm[] GetTerms(Query query) {return GetTerms(query, false);}
public ByteBuffer compact() {throw new ReadOnlyBufferException();}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (int) ((uint) byte0 >> 2);int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | ((int) ((uint) byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | ((int) ((uint) byte2 >> 6));values[valuesOffset++] = byte2 & 63;}}
public String GetHumanishName() {if (GetPath().equals("") || GetPath() == null) {throw new IllegalArgumentException();}String s = GetPath();String[] elements;if ("file".equals(scheme) || LOCAL_FILE.matcher(s).matches()) {elements = s.split("[" + FilePath.separatorChar + "/]");} else {elements = s.split("/");}if (elements.length == 0) {throw new IllegalArgumentException();}String result = elements[elements.length - 1];if (Constants.DOT_GIT.equals(result)) {result = elements[elements.length - 2];} else {if (result.endsWith(Constants.DOT_GIT_EXT)) {result = result.substring(0, result.length() - Constants.DOT_GIT_EXT.length());}}return result;}
public DescribeNotebookInstanceLifecycleConfigResponse describeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeNotebookInstanceLifecycleConfigRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String GetAccessKeySecret() {return AccessSecret;}
public virtual CreateVpnConnectionResponse createVpnConnection(CreateVpnConnectionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateVpnConnectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateVpnConnectionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeVoicesResponse describeVoices(DescribeVoicesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeVoicesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeVoicesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListMonitoringExecutionsResponse listMonitoringExecutions(ListMonitoringExecutionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListMonitoringExecutionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListMonitoringExecutionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeJobRequest(String vaultName, String jobId) {this._vaultName = vaultName;this._jobId = jobId;}
public EscherRecord getEscherRecord(int index) {return escherRecords[index];}
public virtual GetApisResponse getApis(GetApisRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetApisRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetApisResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeleteSmsChannelResponse deleteSmsChannel(DeleteSmsChannelRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteSmsChannelRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteSmsChannelResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public TrackingRefUpdate getTrackingRefUpdate(){return trackingRefUpdate;}
public void print(boolean b) {print(String.valueOf(b));}
public QueryNode getChild() {return getChildren().get(0);}
public NotIgnoredFilter(int workdirTreeIndex) {this.index = workdirTreeIndex;}
public AreaRecord(RecordInputStream in1) {this.field_1_formatFlags = in1.ReadShort();}
public GetThumbnailRequest() {super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public DescribeTransitGatewayVpcAttachmentsResponse describeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeTransitGatewayVpcAttachmentsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual PutVoiceConnectorStreamingConfigurationResponse putVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(PutVoiceConnectorStreamingConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public OrdRange getOrdRange(String dim) {OrdRange result = prefixToOrdRange.get(dim);return result;}
public String toString() {String symbol = "";if (startIndex >= 0 && startIndex < ((CharStream) inputStream).size()) {symbol = ((CharStream) inputStream).getText(new Interval(startIndex, startIndex));symbol = Utils.escapeWhitespace(symbol, false);}return String.format(Locale.getDefault(), "%s('%s')", Antlr4.Runtime.LexerNoViableAltException.class.getName(), symbol);}
public E peek() {return peekFirstImpl();}
public virtual CreateWorkspacesResponse createWorkspaces(CreateWorkspacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateWorkspacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateWorkspacesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Object clone() {NumberFormatIndexRecord rec = new NumberFormatIndexRecord();rec.field_1_formatIndex = this.field_1_formatIndex;return rec;}
public DescribeRepositoriesResponse describeRepositories(DescribeRepositoriesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeRepositoriesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeRepositoriesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public SparseIntArray(int initialCapacity) {initialCapacity = android.util.internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}
public TokenStream create(TokenStream input) {return new HyphenatedWordsFilter(input);}
public virtual CreateDistributionWithTagsResponse createDistributionWithTags(CreateDistributionWithTagsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateDistributionWithTagsRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDistributionWithTagsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public RandomAccessFile(String fileName, String mode) throws FileNotFoundException {this(new java.io.File(fileName), mode);throw new System.NotImplementedException();}
public virtual DeleteWorkspaceImageResponse deleteWorkspaceImage(DeleteWorkspaceImageRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteWorkspaceImageRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteWorkspaceImageResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static String toHex(int value) {return toHex((long) value, 8);}
public UpdateDistributionResponse updateDistribution(UpdateDistributionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateDistributionRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateDistributionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public HSSFColor getColor(short index) {if (index == HSSFColor.Automatic.getIndex()) {return HSSFColor.Automatic.getInstance();} else {byte[] b = palette.getColor(index);if (b != null) {return new CustomColor(index, b);}}return null;}
public ValueEval evaluate(ValueEval[] operands, int srcRow, int srcCol) {throw new NotImplementedFunctionException(_functionName);}
public void serialize(ILittleEndianOutput out1) {out1.writeShort((short) field_1_number_crn_records);out1.writeShort((short) field_2_sheet_table_index);}
public DescribeDBEngineVersionsResponse describeDBEngineVersions(){return describeDBEngineVersions(new DescribeDBEngineVersionsRequest());}
public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}
public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte) (ch >> 8);result[resultIndex++] = (byte) ch;}return result;}
public UploadArchiveResponse uploadArchive(UploadArchiveRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UploadArchiveRequestMarshaller.getInstance());options.setResponseUnmarshaller(UploadArchiveResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public List<IToken> GetHiddenTokensToLeft(int tokenIndex) {return GetHiddenTokensToLeft(tokenIndex, -1);}
public boolean equals(Object obj) {if (this == obj) {return true;}if (!super.equals(obj)) {return false;}if (this.getClass() != obj.getClass()) {return false;}AutomatonQuery other = (AutomatonQuery) obj;if (!m_compiled.equals(other.m_compiled)) {return false;}if (m_term == null) {if (other.m_term != null) {return false;}} else if (!m_term.equals(other.m_term)) {return false;}return true;}
public SpanQuery makeSpanClause(){List<SpanQuery> spanQueries = new ArrayList<>();for (var wsq : weightBySpanQuery.entrySet()) {wsq.getKey().boost = wsq.getValue();spanQueries.add(wsq.getKey());}if (spanQueries.size() == 1)return spanQueries.get(0);elsereturn new SpanOrQuery(spanQueries.toArray(new SpanQuery[0]));}
public StashCreateCommand stashCreate() {return new StashCreateCommand(repo);}
public FieldInfo getFieldInfo(String fieldName) {FieldInfo ret;if (byName.containsKey(fieldName)) {ret = byName.get(fieldName);} else {ret = null;}return ret;}
public DescribeEventSourceResponse describeEventSource(DescribeEventSourceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeEventSourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeEventSourceResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual GetDocumentAnalysisResponse getDocumentAnalysis(GetDocumentAnalysisRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetDocumentAnalysisRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDocumentAnalysisResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CancelUpdateStackResponse cancelUpdateStack(CancelUpdateStackRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CancelUpdateStackRequestMarshaller.getInstance());options.setResponseUnmarshaller(CancelUpdateStackResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual ModifyLoadBalancerAttributesResponse modifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ModifyLoadBalancerAttributesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyLoadBalancerAttributesResponseUnmarshaller.getInstance());return invoke(request, options);}
public SetInstanceProtectionResponse setInstanceProtection(SetInstanceProtectionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(SetInstanceProtectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(SetInstanceProtectionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ModifyDBProxyResponse modifyDBProxy(ModifyDBProxyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ModifyDBProxyRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyDBProxyResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void Add(char[] output, int offset, int len, int endOffset, int posLength) {if (count == outputs.length) {CharsRef[] next = new CharsRef[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];System.arraycopy(outputs, 0, next, 0, count);outputs = next;}if (count == endOffsets.length) {int[] next = new int[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];System.arraycopy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.length) {int[] next = new int[ArrayUtil.oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];System.arraycopy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null) {outputs[count] = new CharsRef();}outputs[count].CopyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}### Explanation of Differences:1. **Virtual Keyword**: In Java, methods are not marked as virtual unless they are declared in an interface or abstract class and overridden in a subclass. Since the provided C# code does not specify a base class or interface, the `virtual` keyword is not applicable here.2. **ArrayCopy Methods**: In Java, the `System.arraycopy` method is used instead of `Array.Copy` in C#. The `ArrayUtil.oversize` method is used similarly to determine the size of the new array.3. **CharsRef**: Assuming `CharsRef` is a class in the Java code, the instantiation and method calls are translated to match Java syntax.4. **Variable Naming**: Java typically uses camelCase for variable naming, unlike C
public FetchLibrariesRequest() {super("CloudPhoto", "2017-07-11", "FetchLibraries", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public boolean exists() {return objects.exists();}
public FilterOutputStream(java.io.OutputStream @out){this.@out = @out;}
public ScaleClusterRequest() {super("CS", "2015-12-15", "ScaleCluster", "cs", "openAPI");this.uriPattern = "/clusters/[ClusterId]";this.method = MethodType.PUT;}
public IDataValidationConstraint createTimeConstraint(int operatorType, String formula1, String formula2){return DVConstraint.createTimeConstraint(operatorType, formula1, formula2);}
public ListObjectParentPathsResponse listObjectParentPaths(ListObjectParentPathsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListObjectParentPathsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListObjectParentPathsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeCacheSubnetGroupsResponse describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeCacheSubnetGroupsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeCacheSubnetGroupsResponseUnmarshaller.getInstance());return invoke(request, options);}
public void setSharedFormula(boolean flag) {field_5_options = sharedFormula.setShortBoolean(field_5_options, flag);}
public boolean isReuseObjects() {return reuseObjects;}
public ErrorNodeImpl addErrorNode(Token badToken) {ErrorNodeImpl t = new ErrorNodeImpl(badToken);addChild(t);t.setParent(this);return t;}
public LatvianStemFilterFactory(Map<String, String> args) {super(args);if (args.size() > 0) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public RemoveSourceIdentifierFromSubscriptionResponse removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RemoveSourceIdentifierFromSubscriptionRequestMarshaller.getInstance());options.setResponseUnmarshaller(RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.getInstance());return invoke(request, options);}
public static TokenFilterFactory forName(String name, Map<String, String> args) {return (TokenFilterFactory) loader.newInstance(name, args);}
public AddAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public GetThreatIntelSetResponse getThreatIntelSet(GetThreatIntelSetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetThreatIntelSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetThreatIntelSetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public TreeFilter clone() {return new AndTreeFilter.Binary(a.clone(), b.clone());}
public boolean equals(Object o) {return o instanceof ArmenianStemmer;}
public boolean hasArray() {return protectedHasArray();}
public virtual UpdateContributorInsightsResponse updateContributorInsights(UpdateContributorInsightsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateContributorInsightsRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateContributorInsightsResponseUnmarshaller.getInstance());return invoke(request, options);}
public void UnwriteProtectWorkbook(){records.remove(fileShare);records.remove(WriteProtect);fileShare = null;writeProtect = null;}
public SolrSynonymParser(boolean dedup, boolean expand, Analyzer analyzer) {super(dedup, analyzer);this.expand = expand;}
public virtual RequestSpotInstancesResponse requestSpotInstances(RequestSpotInstancesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RequestSpotInstancesRequestMarshaller.getInstance());options.setResponseUnmarshaller(RequestSpotInstancesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public byte[] getObjectData() {return findObjectRecord().objectData;}
public GetContactAttributesResponse getContactAttributes(GetContactAttributesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetContactAttributesRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetContactAttributesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString() {return getKey() + ": " + getValue();}
public ListTextTranslationJobsResponse listTextTranslationJobs(ListTextTranslationJobsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListTextTranslationJobsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListTextTranslationJobsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetContactMethodsResponse getContactMethods(GetContactMethodsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetContactMethodsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetContactMethodsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static short LookupIndexByName(String name){FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);if (fd == null){return -1;}return (short)fd.Index;}
public DescribeAnomalyDetectorsResponse describeAnomalyDetectors(DescribeAnomalyDetectorsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeAnomalyDetectorsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeAnomalyDetectorsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static String InsertId(String message, ObjectId changeId) {return InsertId(message, changeId, false);}
public long GetObjectSize(AnyObjectId objectId, int typeHint) {long sz = db.GetObjectSize(this, objectId);if (sz < 0) {if (typeHint == OBJ_ANY) {throw new MissingObjectException(objectId.Copy(), "unknown");}throw new MissingObjectException(objectId.Copy(), typeHint);}return sz;}
public ImportInstallationMediaResponse importInstallationMedia(ImportInstallationMediaRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ImportInstallationMediaRequestMarshaller.getInstance());options.setResponseUnmarshaller(ImportInstallationMediaResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual PutLifecycleEventHookExecutionStatusResponse putLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(PutLifecycleEventHookExecutionStatusRequestMarshaller.getInstance());options.setResponseUnmarshaller(PutLifecycleEventHookExecutionStatusResponseUnmarshaller.getInstance());return invoke(request, options);}
public NumberPtg(ILittleEndianInput in1) {field_1_value = in1.ReadDouble();}
public GetFieldLevelEncryptionConfigResponse getFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetFieldLevelEncryptionConfigRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetFieldLevelEncryptionConfigResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeDetectorResponse describeDetector(DescribeDetectorRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDetectorRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDetectorResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ReportInstanceStatusResponse reportInstanceStatus(ReportInstanceStatusRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ReportInstanceStatusRequestMarshaller.getInstance());options.setResponseUnmarshaller(ReportInstanceStatusResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeleteAlarmResponse deleteAlarm(DeleteAlarmRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteAlarmRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteAlarmResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public TokenStream create(TokenStream input) {return new PortugueseStemFilter(input);}
public FtCblsSubRecord() {reserved = new byte[ENCODED_SIZE];}
public synchronized boolean remove(Object object) {return c.remove(object);}
public GetDedicatedIpResponse getDedicatedIp(GetDedicatedIpRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetDedicatedIpRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDedicatedIpResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString() {return precedence + " >= _p";}
public ListStreamProcessorsResponse listStreamProcessors(ListStreamProcessorsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListStreamProcessorsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListStreamProcessorsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeleteLoadBalancerPolicyRequest(String loadBalancerName, String policyName) {this._loadBalancerName = loadBalancerName;this._policyName = policyName;}
public WindowProtectRecord(int options) {this._options = options;}
public UnbufferedCharStream(int bufferSize) {n = 0;data = new int[bufferSize];}
public GetOperationsResponse getOperations(GetOperationsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetOperationsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetOperationsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void copyRawTo(byte[] b, int o) {NB.encodeInt32(b, o, w1);NB.encodeInt32(b, o + 4, w2);NB.encodeInt32(b, o + 8, w3);NB.encodeInt32(b, o + 12, w4);NB.encodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in1) {field_1_h_hold = in1.ReadShort();field_2_v_hold = in1.ReadShort();field_3_width = in1.ReadShort();field_4_height = in1.ReadShort();field_5_options = in1.ReadShort();field_6_active_sheet = in1.ReadShort();field_7_first_visible_tab = in1.ReadShort();field_8_num_selected_tabs = in1.ReadShort();field_9_tab_width_ratio = in1.ReadShort();}
public StopWorkspacesResponse stopWorkspaces(StopWorkspacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StopWorkspacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopWorkspacesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void close() throws IOException {if (isOpen) {isOpen = false;try {dump();} finally {try {channel.truncate(fileLength);} finally {try {channel.close();} finally {fos.close();}}}}}
public DescribeMatchmakingRuleSetsResponse describeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeMatchmakingRuleSetsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeMatchmakingRuleSetsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String GetPronunciation(int wordId, char[] surface, int off, int len) {return null;}
public String GetPath(){return pathStr;}
public static double devsq(double[] v) {double r = Double.NaN;if (v != null && v.length >= 1) {double m = 0;double s = 0;int n = v.length;for (int i = 0; i < n; i++) {s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++) {s += (v[i] - m) * (v[i] - m);}r = (n == 1) ? 0 : s;}return r;}
public DescribeResizeResponse describeResize(DescribeResizeRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeResizeRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeResizeResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean hasPassedThroughNonGreedyDecision(){return passedThroughNonGreedyDecision;}
public int end(){return end(0);}
public void traverse(ICellHandler handler) {int firstRow = range.getFirstRow();int lastRow = range.getLastRow();int firstColumn = range.getFirstColumn();int lastColumn = range.getLastColumn();int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();IRow currentRow = null;ICell currentCell = null;for (ctx.setRowNumber(firstRow); ctx.getRowNumber() <= lastRow; ctx.incrementRowNumber()) {currentRow = sheet.getRow(ctx.getRowNumber());if (currentRow == null) {continue;}for (ctx.setColNumber(firstColumn); ctx.getColNumber() <= lastColumn; ctx.incrementColNumber()) {currentCell = currentRow.getCell(ctx.getColNumber());if (currentCell == null) {continue;}if (isEmpty(currentCell) && !traverseEmptyCells) {continue;}ctx.setOrdinalNumber((ctx.getRowNumber() - firstRow) * width + (ctx.getColNumber() - firstColumn + 1));handler.onCell(currentCell, ctx);}}}
public int getReadIndex(){return _ReadIndex;}
public int compareTo(ScoreTerm other) {if (this.Term.equals(other.Term)) {return 0;}if (this.Boost.equals(other.Boost)) {return other.Term.compareTo(this.Term);} else {return this.Boost.compareTo(other.Boost);}}
public int normalize(char[] s, int len) {for (int i = 0; i < len; i++) {switch (s[i]) {case FARSI_YEH:case YEH_BARREE:s[i] = YEH;break;case KEHEH:s[i] = KAF;break;case HEH_YEH:case HEH_GOAL:s[i] = HEH;break;case HAMZA_ABOVE:len = StemmerUtil.delete(s, i, len);i--;break;default:break;}}return len;}
public void serialize(ILittleEndianOutput out1) {out1.writeShort(_options);}
public DiagnosticErrorListener(boolean exactOnly){this.exactOnly = exactOnly;}
public KeySchemaElement(String attributeName, KeyType keyType) {_attributeName = attributeName;_keyType = keyType;}
public GetAssignmentResponse getAssignment(GetAssignmentRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetAssignmentRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetAssignmentResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean HasObject(AnyObjectId id) {return FindOffset(id) != -1;}
public class GroupingSearch {private boolean allGroups;public GroupingSearch SetAllGroups(boolean allGroups) {this.allGroups = allGroups;return this;}}
public synchronized void setMultiValued(String dimName, boolean v) {synchronized (this) {if (!fieldTypes.containsKey(dimName)) {DimConfig fieldType = new DimConfig();fieldType.setIsMultiValued(v);fieldTypes.put(dimName, fieldType);} else {DimConfig fieldType = fieldTypes.get(dimName);fieldType.setIsMultiValued(v);}}}
public int getCellsVal(){int size = 0;for (char c : cells.keySet()) {Cell e = At(c);if (e.cmd >= 0) {size++;}}return size;}
public DeleteVoiceConnectorResponse deleteVoiceConnector(DeleteVoiceConnectorRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteVoiceConnectorRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteVoiceConnectorResponseUnmarshaller.getInstance());return invoke(request, options);}
public DeleteLifecyclePolicyResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteLifecyclePolicyRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteLifecyclePolicyResponseUnmarshaller.getInstance());return invoke(request, options);}
public void Write(byte[] b) {int len = b.length;CheckPosition(len);System.arraycopy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}
public RebaseResult getRebaseResult() {return this.rebaseResult;}
public static int GetNearestSetSize(int maxNumberOfValuesExpected, double desiredSaturation) {for (int t : _usableBitSetSizes) {int numSetBitsAtDesiredSaturation = (int) (t * desiredSaturation);int estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(t, numSetBitsAtDesiredSaturation);if (estimatedNumUniqueValues > maxNumberOfValuesExpected) {return t;}}return -1;}
public DescribeDashboardResponse describeDashboard(DescribeDashboardRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDashboardRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDashboardResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateSegmentResponse createSegment(CreateSegmentRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateSegmentRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateSegmentResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public override String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[DBCELL]\n");buffer.append("    .rowoffset       = ").append(StringUtil.toHexString(RowOffset)).append("\n");for (int k = 0; k < field_2_cell_offsets.length; k++) {buffer.append("    .cell_").append(k).append(" = ").append(HexDump.shortToHex(field_2_cell_offsets[k])).append("\n");}buffer.append("[/DBCELL]\n");return buffer.toString();}
public List<String> getUndeletedList(){return undeletedList;}
public String toString() {return "[INTERFACEEND/]\n";}
public Object clone() {return this;}
public PlainTextDictionary(java.io.TextReader reader){this.in = reader;}
public StringBuilder append(CharSequence csq) {if (csq == null) {appendNull();} else {append0(csq, 0, csq.length());}return this;}
public ListAssociatedStacksResponse listAssociatedStacks(ListAssociatedStacksRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListAssociatedStacksRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListAssociatedStacksResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static double avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.length; i < iSize; i++) {s += v[i];}m = s / v.length;s = 0;for (int i = 0, iSize = v.length; i < iSize; i++) {s += Math.abs(v[i] - m);}r = s / v.length;return r;}
public DescribeByoipCidrsResponse describeByoipCidrs(DescribeByoipCidrsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeByoipCidrsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeByoipCidrsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetDiskResponse getDisk(GetDiskRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetDiskRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDiskResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual CreateDBClusterParameterGroupResponse createDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateDBClusterParameterGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDBClusterParameterGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static java.nio.CharBuffer wrap(char[] array_1, int start, int charCount) {java.util.Arrays.checkOffsetAndCount(array_1.length, start, charCount);java.nio.CharBuffer buf = new java.nio.ReadWriteCharArrayBuffer(array_1);buf.position(start);buf.limit(start + charCount);return buf;}
public SubmoduleStatusType getType(){return type;}
public DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeGameServerGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeGameServerGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public java.util.regex.Pattern pattern() {return _pattern;}
public V setValue(V @object) {throw new UnsupportedOperationException();}
public StringBuilder stem(String word) {String cmd = stemmer.getLastOnPath(word);if (cmd == null) {return null;}buffer.length = 0;buffer.append(word);Diff.apply(buffer, cmd);if (buffer.length() > 0) {return buffer;} else {return null;}}
public RenameFaceRequest() {super("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public char requireChar(Map<String, String> args, String name) {return require(args, name).get(0);}
public static String ToStringTree(ITree t) {return ToStringTree(t, (List<String>)null);}
public String toString() {return "<deleted/>";}
public GetRepoWebhookLogListRequest() {super("cr", "2016-06-07", "GetRepoWebhookLogList", "cr", "openAPI");this.uriPattern = "/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs";this.method = MethodType.GET;}
public GetJobUnlockCodeResponse getJobUnlockCode(GetJobUnlockCodeRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetJobUnlockCodeRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetJobUnlockCodeResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public RemoveTagsRequest(String resourceId) {this._resourceId = resourceId;}
public class GB2312Converter {public short getGB2312Id(char ch) {try {byte[] buffer = String.valueOf(ch).getBytes(StandardCharsets.getEncoding("GB2312"));if (buffer.length != 2) {return -1;}int b0 = (buffer[0] & 0x0FF) - 161;int b1 = (buffer[1] & 0x0FF) - 161;return (short) (b0 * 94 + b1);} catch (Exception e) {throw new RuntimeException(e);}}}
public BatchRefUpdate addCommand(Collection<ReceiveCommand> cmd) {commands.addAll(cmd);return this;}
public int CheckExternSheet(int sheetNumber) {return OrCreateLinkTable.CheckExternSheet(sheetNumber);}
public boolean equals(Object obj){return c.equals(obj);}
public BooleanQuery build(QueryNode queryNode) {AnyQueryNode andNode = (AnyQueryNode) queryNode;BooleanQuery bQuery = new BooleanQuery();List<QueryNode> children = andNode.getChildren();if (children != null) {for (QueryNode child : children) {Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null) {Query query = (Query) obj;try {bQuery.add(query, BooleanClause.Occur.SHOULD);} catch (BooleanQuery.TooManyClausesException ex) {throw new QueryNodeException(new Message(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());return bQuery;}
public DescribeStreamProcessorResponse describeStreamProcessor(DescribeStreamProcessorRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeStreamProcessorRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeStreamProcessorResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeDashboardPermissionsResponse describeDashboardPermissions(DescribeDashboardPermissionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDashboardPermissionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDashboardPermissionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Ref peel(Ref ref) {try {return RefDatabase.peel(ref);} catch (IOException e) {return ref;}}
public long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + 2 * RamUsageEstimator.NUM_BYTES_INT32 + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.sizeOf(blocks);}
public GetDomainSuggestionsResponse getDomainSuggestions(GetDomainSuggestionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetDomainSuggestionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDomainSuggestionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeStackEventsResponse describeStackEvents(DescribeStackEventsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeStackEventsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeStackEventsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void setRule(int idx, IConditionalFormattingRule cfRule) {setRule(idx, (HSSFConditionalFormattingRule) cfRule);}
public CreateResolverRuleResponse createResolverRule(CreateResolverRuleRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateResolverRuleRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateResolverRuleResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public SeriesIndexRecord(RecordInputStream in1) {this.field_1_index = in1.readShort();}
public GetStylesRequest() {super("lubancloud", "2018-05-09", "GetStyles", "luban", "openAPI");setMethod(MethodType.POST);}
public void serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_gridset_flag);}
public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (getClass() != obj.getClass()) {return false;}Toffs other = (Toffs) obj;if (StartOffset != other.StartOffset) {return false;}if (EndOffset != other.EndOffset) {return false;}return true;}
public CreateGatewayGroupResponse createGatewayGroup(CreateGatewayGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateGatewayGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateGatewayGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateParticipantConnectionResponse createParticipantConnection(CreateParticipantConnectionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateParticipantConnectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateParticipantConnectionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static double irr(double[] income) {return irr(income, 0.1);}
public RegisterWorkspaceDirectoryResponse registerWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RegisterWorkspaceDirectoryRequestMarshaller.getInstance());options.setResponseUnmarshaller(RegisterWorkspaceDirectoryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public RevertCommand include(Ref commit) {checkCallable();commits.addItem(commit);return this;}
public class ComplexNumberEvaluator {private static final Pattern COMPLEX_NUMBER_PATTERN = Pattern.compile("^\\s*([+-]?\\d*\\.?\\d+)([+-]?\\d*\\.?\\d*)([ij]?)\\s*$");public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String iNumber = OperandResolver.coerceValueToString(veText1);Matcher m = COMPLEX_NUMBER_PATTERN.matcher(iNumber);boolean result = m.find() && m.group(0).length() > 0;String imaginary = "";if (result) {String imaginaryGroup = m.group(5);boolean hasImaginaryPart = imaginaryGroup != null && (imaginaryGroup.equals("i") || imaginaryGroup.equals("j"));if (imaginaryGroup == null || imaginaryGroup.isEmpty()) {return new StringEval(String.valueOf(0));}if (hasImaginaryPart) {String sign = "";String imaginarySign = m.group(3);if (imaginarySign != null && !imaginarySign.equals("+")) {sign = imaginarySign;}String groupImaginaryNumber = m.group(2);if (!groupImaginaryNumber.isEmpty()) {imaginary = sign + groupImaginaryNumber;} else {imaginary = sign + "1";}}} else {return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}}
public E pollLast() {java.util.Map.Entry<E, Object> entry = backingMap.pollLastEntry();return (entry == null) ? null : entry.getKey();}
public int readUShort() {int ch1 = readUByte();int ch2 = readUByte();return (ch2 << 8) + (ch1 << 0);}
public ModifySnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute, OperationType operationType) {this._snapshotId = snapshotId;this._attribute = attribute;this._operationType = operationType;}
public ListBonusPaymentsResponse listBonusPayments(ListBonusPaymentsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListBonusPaymentsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListBonusPaymentsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public V Get(char[] text) {if (text == null) {throw new IllegalArgumentException("text");}return null;}
public TokenStream Create(TokenStream input) {CommonGramsFilter commonGrams = (CommonGramsFilter) super.Create(input);return new CommonGramsQueryFilter(commonGrams);}
public String GetPath(){return path;}
public InitiateMultipartUploadResponse initiateMultipartUpload(InitiateMultipartUploadRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(InitiateMultipartUploadRequestMarshaller.getInstance());options.setResponseUnmarshaller(InitiateMultipartUploadResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public StringBuilder insert(int offset, int i) {insert0(offset, String.valueOf(i));return this;}
public override void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int) ((((long) ((block >> shift)) & 3));}}}
public TokenStream create(TokenStream input) {return new ElisionFilter(input, articles);}
public boolean eat(Row in, int[] remap) {int sum = 0;for (Cell c : in.cells.values()) {sum += c.cnt;if (c.ref >= 0) {if (remap[c.ref] == 0) {c.ref = -1;}}}int frame = sum / 10;boolean live = false;for (Cell c : in.cells.values()) {if (c.cnt < frame && c.cmd >= 0) {c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.ref >= 0) {live = true;}}return !live;}
public Token getToken(int index) {Token t = Token;for (int i = 0; i < index; i++) {if (t.getNext() != null) {t = t.getNext();} else {t = t.setNext(tokenSource.getNextToken());}}return t;}
public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append(" [ARRAY]\n");sb.append(" range=").append(Range.toString()).append("\n");sb.append(" options=").append(HexDump.ShortToHex(_options)).append("\n");sb.append(" notUsed=").append(HexDump.IntToHex(_field3notUsed)).append("\n");sb.append(" formula:").append("\n");Ptg[] ptgs = _formula.Tokens;for (int i = 0; i < ptgs.length; i++) {Ptg ptg = ptgs[i];sb.append(ptg.toString()).append(ptg.RVAType).append("\n");}sb.append("]");return sb.toString();}
public virtual GetFolderResponse getFolder(GetFolderRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetFolderRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetFolderResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void add(int location, E @object) {throw new UnsupportedOperationException();}
public PositiveScoresOnlyCollector(Collector<?, ?, ?> c) {this.c = c;}
public CreateRepoBuildRuleRequest() {super("cr", "2016-06-07", "CreateRepoBuildRule", "cr", "openAPI");this.setUriPattern("/repos/[RepoNamespace]/[RepoName]/rules");this.setMethod(MethodType.PUT);}
public BaseRef(RefEval re) {_refEval = re;_areaEval = null;_firstRowIndex = re.getRow();_firstColumnIndex = re.getColumn();_height = 1;_width = 1;}
public DrawingManager2(EscherDggRecord dgg) {this.dgg = dgg;}
public void reset() {if (!isFirst()) {reset(raw);}}
public java.nio.charset.CharsetDecoder reset() {status = INIT;implReset();return this;}
public BufferedReader(java.io.Reader @in, int size) {super(@in);if (size <= 0) {throw new IllegalArgumentException("size <= 0");}this.@in = @in;buf = new char[size];}
public DescribeCodeRepositoryResponse describeCodeRepository(DescribeCodeRepositoryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeCodeRepositoryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeCodeRepositoryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateDBSubnetGroupResponse createDBSubnetGroup(CreateDBSubnetGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateDBSubnetGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDBSubnetGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public NGit.Api.RenameBranchCommand setOldName(String oldName) {checkCallable();this.oldName = oldName;return this;}
public NGit.Api.DeleteBranchCommand setForce(boolean force) {checkCallable();this.force = force;return this;}
public StopCompilationJobResponse stopCompilationJob(StopCompilationJobRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StopCompilationJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopCompilationJobResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void incrementSecondaryProgressBy(int diff) {synchronized (this) {setSecondaryProgress(mSecondaryProgress + diff);}}
public int[] clear() {return bytesStart = null;}
public String getRawPath(){return path;}
public GetUserSourceAccountRequest() {super("cr", "2016-06-07", "GetUserSourceAccount", "cr", "openAPI");this.UriPattern = "/users/sourceAccount";this.Method = MethodType.GET;}
public CreateExportJobResponse createExportJob(CreateExportJobRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateExportJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateExportJobResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateDedicatedIpPoolResponse createDedicatedIpPool(CreateDedicatedIpPoolRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateDedicatedIpPoolRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDedicatedIpPoolResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public override boolean equals(Object obj) {if (this == obj) return true;if (obj == null) return false;if (obj instanceof HSSFCellStyle) {HSSFCellStyle other = (HSSFCellStyle) obj;if (_format == null) {if (other._format != null) return false;} else if (!_format.equals(other._format)) return false;if (index != other.index) return false;return true;}return false;}
public ReleaseHostsResponse releaseHosts(ReleaseHostsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ReleaseHostsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ReleaseHostsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public override boolean equals(Object obj) {if (this == obj) {return true;}if (obj instanceof java.util.Set<?>) {java.util.Set<?> s = (java.util.Set<?>) obj;try {return size() == s.size() && containsAll(s);} catch (NullPointerException e) {return false;} catch (ClassCastException e) {return false;}}return false;}
public void setRefLogMessage(String msg, boolean appendStatus) {if (msg == null && !appendStatus) {disableRefLog();} else {if (msg == null && appendStatus) {refLogMessage = "";refLogIncludeResult = true;} else {refLogMessage = msg;refLogIncludeResult = appendStatus;}}}
public StreamIDRecord(RecordInputStream in1) {idstm = in1.ReadShort();}
public RecognizeCarRequest() {super("visionai-poc", "2020-04-08", "RecognizeCar");setMethod(MethodType.POST);}
public java.nio.ByteOrder order() {return java.nio.ByteOrder.nativeOrder();}
public int GetAheadCount(){return aheadCount;}
public boolean isNewFragment(){return false;}
public GetCloudFrontOriginAccessIdentityConfigResponse getCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return token == symbol;}
public DeleteTransitGatewayResponse deleteTransitGateway(DeleteTransitGatewayRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteTransitGatewayRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteTransitGatewayResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static double[] Grow(double[] array, int minSize) {assert minSize >= 0 : "size must be positive (got " + minSize + "): likely integer overflow?";if (array.length < minSize) {double[] newArray = new double[Oversize(minSize, RamUsageEstimator.NUM_BYTES_DOUBLE)];System.arraycopy(array, 0, newArray, 0, array.length);return newArray;} else {return array;}}
public CreateTransactionRequest() {super("CloudPhoto", "2017-07-11", "CreateTransaction", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public NGit.BatchRefUpdate setRefLogIdent(PersonIdent pi) {this.refLogIdent = pi;return this;}
public GetLaunchTemplateDataResponse getLaunchTemplateData(GetLaunchTemplateDataRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetLaunchTemplateDataRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetLaunchTemplateDataResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ParseInfo(ProfilingATNSimulator atnSimulator) {this.atnSimulator = atnSimulator;}
public SimpleQQParser(String[] qqNames, String indexField) {this.qqNames = qqNames;this.indexField = indexField;}
public virtual PromoteReadReplicaDBClusterResponse promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(PromoteReadReplicaDBClusterRequestMarshaller.getInstance());options.setResponseUnmarshaller(PromoteReadReplicaDBClusterResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeCapacityReservationsResponse describeCapacityReservations(DescribeCapacityReservationsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeCapacityReservationsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeCapacityReservationsResponseUnmarshaller.getInstance());return invoke(request, options);}
public String toString() {return "IndexSearcher(" + reader + "; executor=" + executor + ")";}
public boolean incrementToken() {return false;}
public void serialize(LittleEndianOutput out1) {out1.writeShort(main + 1);out1.writeShort(subFrom);out1.writeShort(subTo);}
public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new java.lang.UnsupportedOperationException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i) {long block = ReadInt64(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}
public boolean isExpectedToken(int symbol) {ATN atn = Interpreter.atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states[State];IntervalSet following = atn.NextTokens(s);if (following.contains(symbol)) {return true;}if (!following.contains(TokenConstants.EPSILON)) {return false;}while (ctx != null && ctx.invokingState >= 0 && following.contains(TokenConstants.EPSILON)) {ATNState invokingState = atn.states[ctx.invokingState];RuleTransition rt = (RuleTransition) invokingState.Transition(0);following = atn.NextTokens(rt.followState);if (following.contains(symbol)) {return true;}ctx = (ParserRuleContext) ctx.getParent();}if (following.contains(TokenConstants.EPSILON) && symbol == TokenConstants.EOF) {return true;}return false;}
public UpdateStreamResponse updateStream(UpdateStreamRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateStreamRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateStreamResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = TranslateErrorCodeToErrorTypeValue(e.getErrorEval().getErrorCode());return new NumberEval(result);}}
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append(_index).append(" ").append(_name);sb.append("]");return sb.toString();}
public ListAssignmentsForHITResponse listAssignmentsForHIT(ListAssignmentsForHITRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListAssignmentsForHITRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListAssignmentsForHITResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual DeleteAccessControlRuleResponse deleteAccessControlRule(DeleteAccessControlRuleRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteAccessControlRuleRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteAccessControlRuleResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public FST.Arc<Long> getFirstArc(FST.Arc<Long> arc) {return fst.getFirstArc(arc);}
public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (int)(((long)((long)block >> shift)) & 65535);}}}
public class YourClass {private final Object lock = new Object();private int pos = 0;private byte[] buf;private InputStream in;public long skip(long charCount) {if (charCount < 0) {throw new IllegalArgumentException("charCount < 0: " + charCount);}synchronized (lock) {checkNotClosed();if (charCount == 0) {return 0;}long inSkipped;int availableFromBuffer = buf.length - pos;if (availableFromBuffer > 0) {long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0) {pos += (int) charCount;return charCount;}pos += availableFromBuffer;inSkipped = in.skip(requiredFromIn);} else {inSkipped = in.skip(charCount);}return inSkipped + availableFromBuffer;}}private void checkNotClosed() {// Implementation of checkNotClosed}}
public Map<String, Ref> getRefsMap(){return advertisedRefs;}
public UpdateApiKeyResponse updateApiKey(UpdateApiKeyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateApiKeyRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateApiKeyResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ObjectStream OpenStream() {WindowCursor wc = new WindowCursor(db);InputStream in;try {in = new PackInputStream(pack, objectOffset + headerLength, wc);} catch (IOException e) {return wc.Open(GetObjectId(), type).OpenStream();}in = new BufferedInputStream(new InflaterInputStream(in, wc.Inflater(), 8192), 8192);return new ObjectStream.Filter(type, size, in);}
public ArrayList() {array = libcore.util.EmptyArray.OBJECT;}
public virtual UpdateDetectorVersionResponse updateDetectorVersion(UpdateDetectorVersionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateDetectorVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateDetectorVersionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void resize() {resize(Double.MAX_VALUE);}
public RevFlagSet(Collection<RevFlag> s) {this();Sharpen.Collections.addAll(this, s);}
public int size() {return this._enclosing.size();}
public final long getLong() {int newPosition = _position + libcore.io.SizeOf.LONG;if (newPosition > _limit) {throw new java.nio.BufferUnderflowException();}long result = libcore.io.Memory.peekLong(backingArray, offset + _position, _order);_position = newPosition;return result;}
public StringBuilder insert(int offset, long l) {insert0(offset, String.valueOf(l));return this;}
public TurkishLowerCaseFilter(TokenStream in) {super(in);termAtt = addAttribute(CharTermAttribute.class);}
public ParseTreeMatch match(IParseTree tree, ParseTreePattern pattern) {MultiMap<String, IParseTree> labels = new MultiMap<>();IParseTree mismatchedNode = matchImpl(tree, pattern.getPatternTree(), labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}
public void addIfNoOverlap(WeightedPhraseInfo wpi) {for (WeightedPhraseInfo existWpi : PhraseList) {if (existWpi.isOffsetOverlap(wpi)) {existWpi.getTermsInfos().addAll(wpi.getTermsInfos());return;}}PhraseList.add(wpi);}
public class StrategySimpleTwoWayInCore {public Merger newMerger(Repository db) {return new InCoreMerger(db);}public class InCoreMerger extends Merger {public InCoreMerger(Repository db) {super(db);}}}abstract class Merger {private Repository db;public Merger(Repository db) {this.db = db;}}abstract class Repository {// Repository methods}
public float docScore(int docId, String field, int numPayloadsSeen, float payloadScore) {return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}
public Collection<ParseTree> evaluate(ParseTree t) {return Trees.findAllRuleNodes(t, ruleIndex);}
public override String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[CFRULE]\n");buffer.append("    .condition_type   =").append(field_1_condition_type).append("\n");buffer.append("    OPTION FLAGS=0x").append(String.format("%0X", Options)).append("\n");if (ContainsFontFormattingBlock){buffer.append(_fontFormatting.toString()).append("\n");}if (ContainsBorderFormattingBlock){buffer.append(_borderFormatting.toString()).append("\n");}if (ContainsPatternFormattingBlock){buffer.append(_patternFormatting.toString()).append("\n");}buffer.append("    Formula 1 =").append(Arrays.toString(field_17_formula1.Tokens)).append("\n");buffer.append("    Formula 2 =").append(Arrays.toString(field_18_formula2.Tokens)).append("\n");buffer.append("[/CFRULE]\n");return buffer.toString();}
public DescribeServiceUpdatesResponse describeServiceUpdates(DescribeServiceUpdatesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeServiceUpdatesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeServiceUpdatesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String GetNameName(int index) {String result = GetNameAt(index).NameName;return result;}
public DescribeLocationsResponse describeLocations() {return describeLocations(new DescribeLocationsRequest());}
public String toString() {return "<phraseslop value='" + getValueString() + "'>" + "\n" + getChild().toString() + "\n</phraseslop>";}
public DirCacheEntry getDirCacheEntry() {return currentSubtree == null ? currentEntry : null;}
public IntBuffer put(int[] src, int srcOffset, int intCount) {java.util.Arrays.checkOffsetAndCount(src.length, srcOffset, intCount);if (intCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + intCount; ++i) {put(src[i]);}return this;}
public void trimToSize() {int s = size;if (s == array.length) {return;}if (s == 0) {array = libcore.util.EmptyArray.OBJECT;} else {Object[] newArray = new Object[s];System.arraycopy(array, 0, newArray, 0, s);array = newArray;}modCount++;}
public DescribeLocalGatewayVirtualInterfacesResponse describeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeLocalGatewayVirtualInterfacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public TokenStream create(TokenStream input) {return new RussianLightStemFilter(input);}
public int[] ToArray(int[] a) {int[] rval;if (a.length == _limit) {System.arraycopy(_array, 0, a, 0, _limit);rval = a;} else {rval = ToArray();}return rval;}
public class BasicSessionCredentials {private String accessKeyId;private String accessKeySecret;private String sessionToken;private long roleSessionDurationSeconds;private long sessionStartedTimeInMilliSeconds;public BasicSessionCredentials(String accessKeyId, String accessKeySecret, String sessionToken, long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new IllegalArgumentException("Access key ID cannot be null.");}if (accessKeySecret == null) {throw new IllegalArgumentException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = System.currentTimeMillis();}}
public final java.nio.ShortBuffer get(short[] dst, int dstOffset, int shortCount) {if (shortCount > remaining()) {throw new java.nio.BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, dstOffset, shortCount);position += shortCount;return this;}
public ActivateEventSourceResponse activateEventSource(ActivateEventSourceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ActivateEventSourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(ActivateEventSourceResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeReceiptRuleSetResponse describeReceiptRuleSet(DescribeReceiptRuleSetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeReceiptRuleSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeReceiptRuleSetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Filter(String name){_name = name;}
public java.nio.DoubleBuffer put(double c) {throw new java.nio.ReadOnlyBufferException();}
public CreateTrafficPolicyInstanceResponse createTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateTrafficPolicyInstanceRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateTrafficPolicyInstanceResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public class JapaneseIterationMarkCharFilter extends CharFilter {private boolean normalizeKanji;private boolean normalizeKana;private Buffer buffer;public JapaneseIterationMarkCharFilter(TextReader input, boolean normalizeKanji, boolean normalizeKana) {super(input);this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;this.buffer.reset(input);}}
public void WriteLong(long v) {WriteInt((int)(v >> 0));WriteInt((int)(v >> 32));}
public FileResolver() {exports = new ConcurrentHashMap<>();exportBase = new CopyOnWriteArrayList<>();}
public ValueEval GetRef3DEval(Ref3DPtg rptg) {SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.ExternSheetIndex);return new LazyRefEval(rptg.Row, rptg.Column, sre);}
public DeleteDatasetResponse deleteDataset(DeleteDatasetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDatasetRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDatasetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public StartRelationalDatabaseResponse startRelationalDatabase(StartRelationalDatabaseRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StartRelationalDatabaseRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartRelationalDatabaseResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeReservedCacheNodesOfferingsResponse describeReservedCacheNodesOfferings(){return describeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}
public class FinancialCalculator {static public double PMT(double r, int nper, double pv, double fv, int type) {double pmt = -r * (pv * Math.pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.pow(1 + r, nper) - 1));return pmt;}}
public DescribeDocumentVersionsResponse describeDocumentVersions(DescribeDocumentVersionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDocumentVersionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDocumentVersionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListPublishingDestinationsResponse listPublishingDestinations(ListPublishingDestinationsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListPublishingDestinationsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListPublishingDestinationsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeleteAccountAliasRequest(String accountAlias) {this._accountAlias = accountAlias;}
public static float[] grow(float[] array) {return grow(array, 1 + array.length);}
public String OutputToString(Object output) {if (!(output instanceof List)) {return outputs.OutputToString((T) output);} else {List<?> outputList = (List<?>) output;StringBuilder b = new StringBuilder();b.append('[');for (int i = 0; i < outputList.size(); i++) {if (i > 0) {b.append(", ");}b.append(outputs.OutputToString((T) outputList.get(i)));}b.append(']');return b.toString();}}
public void NotifyDeleteCell(ICell cell) {_bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell(cell));}
public StringBuilder replace(int start, int end, String str) {replace0(start, end, str);return this;}
public SetIdentityPoolConfigurationResponse setIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(SetIdentityPoolConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(SetIdentityPoolConfigurationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static double kthSmallest(double[] v, int k) {double r = Double.NaN;k--;if (v != null && v.length > k && k >= 0) {Arrays.sort(v);r = v[k];}return r;}
public void Set(int index, long value) {int o = index >> 5;int b = index & 31;int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}
public override String toString() {List<IQueryNode> children = getChildren();if (children == null || children.isEmpty()) {return "<boolean operation='and'/>";}StringBuilder sb = new StringBuilder();sb.append("<boolean operation='and'>");for (IQueryNode child : children) {sb.append("\n");sb.append(child.toString());}sb.append("\n</boolean>");return sb.toString();}
public int SumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i = fromIx; i < toIx; i++) {result += _ptgs[i].Size;}return result;}
public void setReadonly(boolean readonly) {if (this.readonly && !readonly) {throw new InvalidOperationException("can't alter readonly IntervalSet");}this.readonly = readonly;}
public void ClearConsumingCell(FormulaCellCacheEntry cce) {if (!_consumingCells.remove(cce)) {throw new InvalidOperationException("Specified formula cell is not consumed by this cell");}}
public List<E> subList(int start, int end) {synchronized (mutex) {return new java.util.Collections.SynchronizedRandomAccessList<>(list.subList(start, end), mutex);}}
public FileHeader getFileHeader(){return file;}
public AttachLoadBalancersResponse attachLoadBalancers(AttachLoadBalancersRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AttachLoadBalancersRequestMarshaller.getInstance());options.setResponseUnmarshaller(AttachLoadBalancersResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public InitiateJobRequest(String accountId, String vaultName, JobParameters jobParameters) {this._accountId = accountId;this._vaultName = vaultName;this._jobParameters = jobParameters;}
public String toString() {return "SPL";}
public ReplaceableAttribute(String name, String value, boolean replace) {_name = name;_value = value;_replace = replace;}
public void add(IIndexableField field) {fields.add(field);}
public virtual DeleteStackSetResponse deleteStackSet(DeleteStackSetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteStackSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteStackSetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetRepoBuildRuleListRequest() {super("cr", "2016-06-07", "GetRepoBuildRuleList", "cr", "openAPI");this.UriPattern = "/repos/[RepoNamespace]/[RepoName]/rules";this.Method = MethodType.GET;}
public SparseArray(int initialCapacity) {initialCapacity = android.util.internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new Object[initialCapacity];mSize = 0;}
public InvokeServiceRequest() {super("industry-brain", "2018-07-12", "InvokeService");setMethod(MethodType.POST);}
public ListAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public boolean hasPrevious() {return link != list.voidLink;}
public virtual DeleteHsmConfigurationResponse deleteHsmConfiguration(DeleteHsmConfigurationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteHsmConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteHsmConfigurationResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateLoadBalancerRequest(String loadBalancerName) {this._loadBalancerName = loadBalancerName;}
public String getUserInfo(){return decode(userInfo);}
public TagAttendeeResponse tagAttendee(TagAttendeeRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(TagAttendeeRequestMarshaller.getInstance());options.setResponseUnmarshaller(TagAttendeeResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String GetRefName(){return name;}
public WAH8DocIdSet build() {if (this.wordNum != -1) {addWord(wordNum, (byte) word);}return super.build();}
public boolean isSubTotal(int rowIndex, int columnIndex) {return false;}
public DescribeDBProxiesResponse describeDBProxies(DescribeDBProxiesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDBProxiesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDBProxiesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetVoiceConnectorProxyResponse getVoiceConnectorProxy(GetVoiceConnectorProxyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetVoiceConnectorProxyRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetVoiceConnectorProxyResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void fromConfig(Config rc) {setPackedGitOpenFiles(rc.getInt("core", null, "packedgitopenfiles", getPackedGitOpenFiles()));setPackedGitLimit(rc.getLong("core", null, "packedgitlimit", getPackedGitLimit()));setPackedGitWindowSize(rc.getInt("core", null, "packedgitwindowsize", getPackedGitWindowSize()));setPackedGitMMAP(rc.getBoolean("core", null, "packedgitmmap", isPackedGitMMAP()));setDeltaBaseCacheLimit(rc.getInt("core", null, "deltabasecachelimit", getDeltaBaseCacheLimit()));long maxMem = Runtime.getRuntime().maxMemory();long sft = rc.getLong("core", null, "streamfilethreshold", getStreamFileThreshold());sft = Math.min(sft, maxMem / 4);sft = Math.min(sft, Integer.MAX_VALUE);setStreamFileThreshold((int) sft);}
public static Date GetJavaDate(double date) { return GetJavaDate(date, false); }
public StartPersonTrackingResponse startPersonTracking(StartPersonTrackingRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StartPersonTrackingRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartPersonTrackingResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public override int size(){return this._enclosing.size();}
public GetRouteResponse getRoute(GetRouteRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetRouteRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetRouteResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeleteClusterResponse deleteCluster(DeleteClusterRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteClusterRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteClusterResponseUnmarshaller.getInstance());return (DeleteClusterResponse) invoke(request, options);}
public override String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[MMS]\n");buffer.append("    .addMenu        = ").append(StringUtil.toHexString(AddMenuCount)).append("\n");buffer.append("    .delMenu        = ").append(StringUtil.toHexString(DelMenuCount)).append("\n");buffer.append("[/MMS]\n");return buffer.toString();}
public class FileBasedConfig extends Config {private FilePath configFile;private FS fs;private FileSnapshot snapshot;private ObjectId hash;public FileBasedConfig(Config @base, FilePath cfgLocation, FS fs) {super(@base);this.configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.ZeroId;}}
public int Following(int pos) {if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {throw new IllegalArgumentException("offset out of bounds");} else if (sentenceStarts.length == 0) {text.setIndex(text.getBeginIndex());return Done;} else if (pos >= sentenceStarts[sentenceStarts.length - 1]) {text.setIndex(text.getEndIndex());currentSentence = sentenceStarts.length - 1;return Done;} else {currentSentence = (sentenceStarts.length - 1) / 2;MoveToSentenceAt(pos, 0, sentenceStarts.length - 2);text.setIndex(sentenceStarts[++currentSentence]);return Current;}}
public UpdateParameterGroupResponse updateParameterGroup(UpdateParameterGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateParameterGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateParameterGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Object clone() {SeriesChartGroupIndexRecord rec = new SeriesChartGroupIndexRecord();rec.field_1_chartGroupIndex = field_1_chartGroupIndex;return rec;}
public static double CalcDistanceFromErrPct(IShape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0.5) {throw new IllegalArgumentException("distErrPct " + distErrPct + " must be between [0 to 0.5]");}if (distErrPct == 0 || shape instanceof IPoint) {return 0;}IRectangle bbox = shape.getBoundingBox();IPoint ctr = bbox.getCenter();double y = (ctr.getY() >= 0 ? bbox.getMaxY() : bbox.getMinY());double diagonalDist = ctx.getDistCalc().distance(ctr, bbox.getMaxX(), y);return diagonalDist * distErrPct;}
public int codePointAt(int index) {if (index < 0 || index >= count) {throw new IndexOutOfBoundsException("index and length");}return Sharpen.CharHelper.codePointAt(value, index, count);}
public void setPasswordVerifier(int passwordVerifier){this.passwordVerifier = passwordVerifier;}
public ListVaultsRequest(String accountId) {this._accountId = accountId;}
public SquashMessageFormatter() {dateFormatter = new GitDateFormatter(GitDateFormatter.Format.DEFAULT);}
public GetVideoCoverRequest() {super("CloudPhoto", "2017-07-11", "GetVideoCover", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public int lastIndexOf(Object object) {int pos = size;Link<E> link = voidLink.previous;if (object != null) {while (link != voidLink) {pos--;if (object.equals(link.data)) {return pos;}link = link.previous;}} else {while (link != voidLink) {pos--;if (link.data == null) {return pos;}link = link.previous;}}return -1;}
public DescribeSpotFleetRequestsResponse describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeSpotFleetRequestsRequestMarshaller.instance());options.setResponseUnmarshaller(DescribeSpotFleetRequestsResponseUnmarshaller.instance());return Invoke.invoke(request, options);}
public virtual IndexFacesResponse indexFaces(IndexFacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(IndexFacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(IndexFacesResponseUnmarshaller.getInstance());return invoke(request, options);}
public BreakIterator getBreakIterator(int script) {switch (script) {case UScript.Japanese:return (BreakIterator) cjkBreakIterator.clone();case UScript.Myanmar:if (myanmarAsWords) {return (BreakIterator) defaultBreakIterator.clone();} else {return (BreakIterator) myanmarSyllableIterator.clone();}default:return (BreakIterator) defaultBreakIterator.clone();}}
public override String toString() {StringBuilder b = new StringBuilder();b.append("[DCONREF]\n");b.append("    .ref\n");b.append("        .firstrow   = ").append(firstRow).append("\n");b.append("        .lastrow    = ").append(lastRow).append("\n");b.append("        .firstcol   = ").append(firstCol).append("\n");b.append("        .lastcol    = ").append(lastCol).append("\n");b.append("    .cch            = ").append(charCount).append("\n");b.append("    .stFile\n");b.append("        .h          = ").append(charType).append("\n");b.append("        .rgb        = ").append(ReadablePath).append("\n");b.append("[/DCONREF]\n");return b.toString();}
public int GetPackedGitOpenFiles(){return packedGitOpenFiles;}
public override String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[FEATURE HEADER]\n");buffer.append("[/FEATURE HEADER]\n");return buffer.toString();}
public static byte[] GetToUnicodeLE(String string1) {return string1.getBytes(StandardCharsets.UTF_16LE);}
public List<String> GetFooterLines(String keyName){return GetFooterLines(new FooterKey(keyName));}
public void refresh(){super.refresh();rescan();}
public float get(int index) {checkIndex(index);return byteBuffer.getFloat(index * java.nio.ByteBuffer.SIZE_OF_FLOAT);}
public class DeleteDetectorResponse extends AmazonWebServiceResponse<DeleteDetectorResult> {public DeleteDetectorResponse deleteDetector(DeleteDetectorRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDetectorRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDetectorResponseUnmarshaller.getInstance());return invoke(request, options);}private <T extends AmazonWebServiceResponse<R>, R> T invoke(AmazonWebServiceRequest request, InvokeOptions options) {// Implementation of the invoke method}}
public int[] Grow() {assert bytesStart != null;return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.length + 1);}
public ListExclusionsResponse listExclusions(ListExclusionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListExclusionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListExclusionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static SpatialStrategy getSpatialStrategy(int roundNumber) {SpatialStrategy result;if (!spatialStrategyCache.tryGetValue(roundNumber, out result) || result == null) {throw new InvalidOperationException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}
public RestoreDBClusterToPointInTimeResponse restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RestoreDBClusterToPointInTimeRequestMarshaller.getInstance());options.setResponseUnmarshaller(RestoreDBClusterToPointInTimeResponseUnmarshaller.getInstance());return invoke(request, options);}
public void serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_categoryDataType);out1.writeShort(field_2_valuesDataType);out1.writeShort(field_3_numCategories);out1.writeShort(field_4_numValues);out1.writeShort(field_5_bubbleSeriesType);out1.writeShort(field_6_numBubbleValues);}
public PostAgentProfileResponse postAgentProfile(PostAgentProfileRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(PostAgentProfileRequestMarshaller.getInstance());options.setResponseUnmarshaller(PostAgentProfileResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ParseTreePattern compileParseTreePattern(String pattern, int patternRuleIndex) {if (InputStream != null && InputStream instanceof ITokenStream) {ITokenSource tokenSource = ((ITokenStream) InputStream).getTokenSource();if (tokenSource instanceof Lexer) {Lexer lexer = (Lexer) tokenSource;return compileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new UnsupportedOperationException("Parser can't discover a lexer to use");}
public BacktrackDBClusterResponse backtrackDBCluster(BacktrackDBClusterRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(BacktrackDBClusterRequestMarshaller.getInstance());options.setResponseUnmarshaller(BacktrackDBClusterResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String GetName(){return strategyName;}
public void copyTo(byte[] b, int o) {formatHexByte(b, o + 0, w1);formatHexByte(b, o + 8, w2);formatHexByte(b, o + 16, w3);formatHexByte(b, o + 24, w4);formatHexByte(b, o + 32, w5);}
public static IntList LineMap(byte[] buf, int ptr, int end) {IntList map = new IntList((end - ptr) / 36);map.FillTo(1, Integer.MIN_VALUE);for (; ptr < end; ptr = NextLF(buf, ptr)) {map.Add(ptr);}map.Add(end);return map;}
public List<ObjectId> getAdditionalHaves() {return Collections.emptyList();}
public long ramBytesUsed() {return _termsCache.values().stream().filter(Objects::nonNull).mapToLong(SimpleTextTerms::ramBytesUsed).sum();}
public String toXml(String tab) {StringBuilder builder = new StringBuilder();builder.append(tab).append("<").append(recordName).append(">\n");for (Iterator iterator = escherRecords.iterator(); iterator.hasNext(); ) {EscherRecord escherRecord = (EscherRecord) iterator.next();builder.append(escherRecord.toXml(tab + "\t"));}builder.append(tab).append("</").append(recordName).append(">\n");return builder.toString();}
public class MyTokenStream extends FilterTokenStream {public MyTokenStream(TokenStream input) {super(input);}@Overrideprotected TokenStream createFilteredTokenStream(TokenStream input) {return new GalicianMinimalStemFilter(input);}}
public override String toString() {StringBuilder r = new StringBuilder();r.append("Commit={\n");r.append("tree ");r.append(treeId != null ? treeId.getName() : "NOT_SET");r.append("\n");for (ObjectId p : parentIds) {r.append("parent ");r.append(p.getName());r.append("\n");}r.append("author ");r.append(author != null ? author.toString() : "NOT_SET");r.append("\n");r.append("committer ");r.append(committer != null ? committer.toString() : "NOT_SET");r.append("\n");if (encoding != null && !encoding.equals(Constants.CHARSET)) {r.append("encoding ");r.append(encoding.getName());r.append("\n");}r.append("\n");r.append(message != null ? message : "");r.append("}");return r.toString();}
public IndicNormalizationFilterFactory(Map<String, String> args) {super(args);if (args.size() > 0) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public CreateOptionGroupResponse createOptionGroup(CreateOptionGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateOptionGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateOptionGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public AssociateMemberAccountResponse associateMemberAccount(AssociateMemberAccountRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AssociateMemberAccountRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateMemberAccountResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void run() {this._enclosing.doRefreshProgress(this.mId, this.mProgress, this.mFromUser, true);this._enclosing.mRefreshProgressRunnable = this;}
public SetTerminationProtectionResponse setTerminationProtection(SetTerminationProtectionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(SetTerminationProtectionRequestMarshaller.getInstance());options.setResponseUnmarshaller(SetTerminationProtectionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String getErrorHeader(RecognitionException e) {int line = e.getOffendingToken().getLine();int charPositionInLine = e.getOffendingToken().getCharPositionInLine();return "line " + line + ":" + charPositionInLine;}
public java.nio.CharBuffer asReadOnlyBuffer() {java.nio.CharToByteBufferAdapter buf = new java.nio.CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.setLimit(_limit);buf.setPosition(_position);buf.setMark(_mark);buf.byteBuffer.order(byteBuffer.order());return buf;}
public StopSentimentDetectionJobResponse stopSentimentDetectionJob(StopSentimentDetectionJobRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StopSentimentDetectionJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopSentimentDetectionJobResponseUnmarshaller.getInstance());return invoke(request, options);}
public ObjectIdSubclassMap<ObjectId> getNewObjectIds(){if (newObjectIds != null){return newObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
protected override void Clear() {hash = Hash(new byte[0]);base.Clear();}
public override void reset() {synchronized (@lock) {checkNotClosed();if (_mark == -1) {throw new IOException("Invalid mark");}pos = _mark;}}
public RefErrorPtg(ILittleEndianInput in1) {this.field_1_reserved = in1.ReadInt();}
public virtual SuspendGameServerGroupResponse suspendGameServerGroup(SuspendGameServerGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(SuspendGameServerGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(SuspendGameServerGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 3) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public GetRepoRequest() {super("cr", "2016-06-07", "GetRepo", "cr", "openAPI");this.UriPattern = "/repos/[RepoNamespace]/[RepoName]";this.Method = MethodType.GET;}
public void setDate(LocalDateTime date) {if (date != null) {setDate(DateTools.dateToString(date, DateTools.Resolution.SECOND));} else {this.date = null;}}
public TokenStream create(TokenStream input) {return new GermanMinimalStemFilter(input);}
public Object[] toArray() {return a.clone();}
public override void write(char[] buffer, int offset, int len) {java.util.Arrays.checkOffsetAndCount(buffer.length, offset, len);synchronized (@lock) {expand(len);System.arraycopy(buffer, offset, this.buf, this.count, len);this.count += len;}}
public static RevFilter after(long ts) {return new CommitTimeRevFilterAfter(ts);}
public DeleteGroupPolicyRequest(String groupName, String policyName) {this._groupName = groupName;this._policyName = policyName;}
public virtual DeregisterTransitGatewayMulticastGroupMembersResponse deregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.getInstance());return invoke(request, options);}
public BatchDeleteScheduledActionResponse batchDeleteScheduledAction(BatchDeleteScheduledActionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(BatchDeleteScheduledActionRequestMarshaller.getInstance());options.setResponseUnmarshaller(BatchDeleteScheduledActionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateAlgorithmResponse createAlgorithm(CreateAlgorithmRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateAlgorithmRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateAlgorithmResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public int readUByte(){checkPosition(1);return _buf[_ReadIndex++] & 0xFF;}
public void setLength(int sz) {NB.encodeInt32(info, infoOffset + P_SIZE, sz);}
public virtual DescribeScalingProcessTypesResponse describeScalingProcessTypes(){return describeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}
public ListResourceRecordSetsResponse listResourceRecordSets(ListResourceRecordSetsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListResourceRecordSetsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListResourceRecordSetsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public IToken recoverInline(Parser recognizer) {InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.getContext(); context != null; context = (ParserRuleContext) context.getParent()) {context.setException(e);}throw new ParseCanceledException(e);}
public SetTagsForResourceResponse setTagsForResource(SetTagsForResourceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(SetTagsForResourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(SetTagsForResourceResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ModifyStrategyRequest() {super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis", "openAPI");setMethod(MethodType.POST);}
public DescribeVpcEndpointServicesResponse describeVpcEndpointServices(DescribeVpcEndpointServicesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeVpcEndpointServicesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeVpcEndpointServicesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public EnableLoggingResponse enableLogging(EnableLoggingRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(EnableLoggingRequestMarshaller.getInstance());options.setResponseUnmarshaller(EnableLoggingResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean contains(Object o) {return this._enclosing.containsValue(o);}
public class SheetRangeIdentifier extends BaseIdentifier {private NameIdentifier _lastSheetIdentifier;public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) {super(bookName, firstSheetIdentifier);this._lastSheetIdentifier = lastSheetIdentifier;}}
public DomainMetadataRequest(String domainName) {this._domainName = domainName;}
public class ParseException extends Exception {private Token currentToken;private int[][] expectedTokenSequences;private String[] tokenImage;public ParseException(Token currentToken, int[][] expectedTokenSequences, String[] tokenImage) {super(Initialize(currentToken, expectedTokenSequences, tokenImage));this.currentToken = currentToken;this.expectedTokenSequences = expectedTokenSequences;this.tokenImage = tokenImage;}private static String Initialize(Token currentToken, int[][] expectedTokenSequences, String[] tokenImage) {// Implementation of the initialization logicreturn "Initialization logic";}}
public FetchPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public java.io.PrintWriter writer(){ return _writer; }
public NGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt(args, "minGramSize", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = getInt(args, "maxGramSize", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (args.size() > 0) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public boolean isDirectoryFileConflict(){return dfConflict != null;}
public IndonesianStemFilter(TokenStream input, boolean stemDerivational) {super(input);this.stemDerivational = stemDerivational;termAtt = addAttribute(CharTermAttribute.class);keywordAtt = addAttribute(KeywordAttribute.class);}
public CreateTrafficPolicyResponse createTrafficPolicy(CreateTrafficPolicyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateTrafficPolicyRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateTrafficPolicyResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void serialize(LittleEndianOutput out1) {out1.writeInt(fSD);out1.writeInt(passwordVerifier);StringUtil.writeUnicodeString(out1, title);out1.write(securityDescriptor);}
public static double floor(double n, double s) {double f;if ((n < 0 && s > 0) || (n > 0 && s < 0) || (s == 0 && n != 0)) {f = Double.NaN;} else {f = (n == 0 || s == 0) ? 0 : Math.floor(n / s) * s;}return f;}
public ByteArrayDataOutput(byte[] bytes, int offset, int len) {reset(bytes, offset, len);}
public static List<ITree> getChildren(ITree t) {List<ITree> kids = new ArrayList<>();for (int i = 0; i < t.getChildCount(); i++) {kids.add(t.getChild(i));}return kids;}
public void clear() {this._enclosing.clear();}
public RefreshAllRecord(boolean refreshAll) {this(0);this.refreshAll = refreshAll;}
public DeleteNamedQueryResponse deleteNamedQuery(DeleteNamedQueryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteNamedQueryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteNamedQueryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GraphvizFormatter(ConnectionCosts costs) {this.costs = costs;this.bestPathMap = new HashMap<>();sb.append(FormatHeader());sb.append("  init [style=invis]\n");sb.append("  init -> 0.0 [label=\"" + BOS_LABEL + "\"]\n");}
public CheckMultiagentRequest() {super("visionai-poc", "2020-04-08", "CheckMultiagent");setMethod(MethodType.POST);}
public ListUserProfilesResponse listUserProfiles(ListUserProfilesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListUserProfilesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListUserProfilesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateRelationalDatabaseFromSnapshotResponse createRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateRelationalDatabaseFromSnapshotRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public StartTaskResponse startTask(StartTaskRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StartTaskRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartTaskResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Collection<String> getIgnoredPaths() {return ignoredPaths;}
public FeatSmartTag(RecordInputStream in1) {data = in1.ReadRemainder();}
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {this._action = action;this._resourceRecordSet = resourceRecordSet;}
public DeleteImageResponse deleteImage(DeleteImageRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteImageRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteImageResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateConfigurationSetResponse createConfigurationSet(CreateConfigurationSetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateConfigurationSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateConfigurationSetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public java.util.Iterator<E> iterator() {E[] snapshot = elements;return new java.util.concurrent.CopyOnWriteArrayList.CowIterator<E>(snapshot, 0, snapshot.length);}
public void visitContainedRecords(RecordVisitor rv) {if (_recs.isEmpty()) {return;}rv.visitRecord(_bofRec);for (int i = 0; i < _recs.size(); i++) {RecordBase rb = _recs.get(i);if (rb instanceof RecordAggregate) {((RecordAggregate) rb).visitContainedRecords(rv);} else {rv.visitRecord((Record) rb);}}rv.visitRecord(EOFRecord.instance);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[FtCbls ]").append("\n");buffer.append("  size     = ").append(DataSize).append("\n");buffer.append("  reserved = ").append(String.format("0x%x", reserved)).append("\n");buffer.append("[/FtCbls ]").append("\n");return buffer.toString();}
public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, boolean isXBAT) {BATBlock block = new BATBlock(bigBlockSize);if (isXBAT) {block.SetXBATChain(bigBlockSize, POIFSConstants.END_OF_CHAIN);}return block;}
public TagResourceResponse tagResource(TagResourceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(TagResourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(TagResourceResponseUnmarshaller.getInstance());return invoke(request, options);}
public DeleteMailboxPermissionsResponse deleteMailboxPermissions(DeleteMailboxPermissionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteMailboxPermissionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteMailboxPermissionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListDatasetGroupsResponse listDatasetGroups(ListDatasetGroupsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListDatasetGroupsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListDatasetGroupsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ResumeProcessesResponse resumeProcesses(ResumeProcessesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ResumeProcessesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ResumeProcessesResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetPersonTrackingResponse getPersonTracking(GetPersonTrackingRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetPersonTrackingRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetPersonTrackingResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String ToFormulaString(String[] operands) {if (space.IsSet(field_1_options)) {return operands[0];} else if (optiIf.IsSet(field_1_options)) {return ToFormulaString() + "(" + operands[0] + ")";} else if (optiSkip.IsSet(field_1_options)) {return ToFormulaString() + operands[0];} else {return ToFormulaString() + "(" + operands[0] + ")";}}
public <T> T merge(T first, T second) {throw new UnsupportedOperationException();}
public String toString() {return this.m_message.getKey() + ": " + GetLocalizedMessage();}
public XPath(Parser parser, String path) {this.parser = parser;this.path = path;this.elements = split(path);}
public CreateAccountAliasRequest(String accountAlias) {this._accountAlias = accountAlias;}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {byte block = blocks[blocksOffset++];values[valuesOffset++] = ((int) ((uint) block >> 7)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 6)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 5)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 4)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 3)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 2)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 1)) & 1;values[valuesOffset++] = block & 1;}}
public PushConnection openPush() {throw new NotSupportedException(JGitText.get().pushIsNotSupportedForBundleTransport);}
public static void strCpy(char[] dst, int di, char[] src, int si) {while (src[si] != '\0') {dst[di++] = src[si++];}dst[di] = '\0';}
public K getKey(){return mapEntry.getKey();}
public static int NumNonnull(Object[] data) {int n = 0;if (data == null) {return n;}for (Object o : data) {if (o != null) {n++;}}return n;}
public override void add(int location, E @object) {if (location >= 0 && location <= _size) {java.util.LinkedList.Link<E> link = voidLink;if (location < (_size / 2)) {for (int i = 0; i <= location; i++) {link = link.next;}} else {for (int i = _size; i > location; i--) {link = link.previous;}}java.util.LinkedList.Link<E> previous = link.previous;java.util.LinkedList.Link<E> newLink = new java.util.LinkedList.Link<E>(@object, previous, link);previous.next = newLink;link.previous = newLink;_size++;modCount++;} else {throw new System.IndexOutOfRangeException();}}
public DescribeDomainResponse describeDomain(DescribeDomainRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDomainRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDomainResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void flush() {throw new UnsupportedOperationException("Not implemented");}
public PersianCharFilterFactory(Map<String, String> args) {super(args);if (args.size() > 0) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public boolean IncrementToken() {if (used) {return false;}ClearAttributes();termAttribute.append(value);offsetAttribute.setOffset(0, value.length());used = true;return true;}
public static java.nio.FloatBuffer allocate(int capacity_1) {if (capacity_1 < 0) {throw new IllegalArgumentException();}return new java.nio.ReadWriteFloatArrayBuffer(capacity_1);}
public org.eclipse.jgit.diff.Edit after(org.eclipse.jgit.diff.Edit cut) {return new org.eclipse.jgit.diff.Edit(cut.getEndA(), endA, cut.getEndB(), endB);}
public UpdateRuleVersionResponse updateRuleVersion(UpdateRuleVersionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateRuleVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateRuleVersionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListVoiceConnectorTerminationCredentialsResponse listVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListVoiceConnectorTerminationCredentialsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetDeploymentTargetResponse getDeploymentTarget(GetDeploymentTargetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetDeploymentTargetRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetDeploymentTargetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void setNoChildReport() {this.childReport = false;for (PerfTask task : tasks) {if (task instanceof TaskSequence) {((TaskSequence) task).setNoChildReport();}}}
public E get(int location){try{return a.get(location);} catch (IndexOutOfBoundsException e) {throw new java.util.ArrayList<E>().throwIndexOutOfBoundsException(location);}}
public DescribeDataSetResponse describeDataSet(DescribeDataSetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDataSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDataSetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public SkipWorkTreeFilter(int treeIdx) {this.treeIdx = treeIdx;}
public DescribeNetworkInterfacesResponse describeNetworkInterfaces(){return describeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}
public boolean contains(int row, int col) {return _firstRow <= row && _lastRow >= row && _firstColumn <= col && _lastColumn >= col;}
public String toString() {return new String(this.chars);}
public FileHeader.PatchType getPatchType(){return patchType;}
public override java.util.Iterator<K> iterator() {return new java.util.Hashtable<K, V>.KeyIterator(this._enclosing);}
public virtual CreateScriptResponse CreateScript(CreateScriptRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateScriptRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateScriptResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public BytesRef Next(){termUpto++;if (termUpto >= info.terms.size()){return null;} else {info.terms.get(info.sortedTerms.get(termUpto), br);return br;}}
public class YourClassName {public String outputToString(CharsRef output) {return output.toString();}}
public AssociateWebsiteAuthorizationProviderResponse associateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AssociateWebsiteAuthorizationProviderRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateWebsiteAuthorizationProviderResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void unpop(RevCommit c) {BlockRevQueue.Block b = head;if (b == null) {b = free.newBlock();b.resetToMiddle();b.add(c);head = b;tail = b;return;} else {if (b.canUnpop()) {b.unpop(c);return;}}b = free.newBlock();b.resetToEnd();b.unpop(c);b.next = head;head = b;}
public EdgeNGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = getInt(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);side = get(args, "side", EdgeNGramTokenFilter.Side.FRONT.toString());if (args.size() > 0) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public ModifyDBParameterGroupRequest(String dbParameterGroupName, List<Parameter> parameters) {this._dbParameterGroupName = dbParameterGroupName;this._parameters = parameters;}
public virtual GetHostedZoneLimitResponse getHostedZoneLimit(GetHostedZoneLimitRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetHostedZoneLimitRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetHostedZoneLimitResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public override void Set(int index, long value) {int o = (int) ((uint) index >> 6);int b = index & 63;int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
public RevFilter clone() {return new CommitterRevFilter.PatternSearch(Pattern());}
public String toString() {return "spans(" + m_term.toString() + ")@" + (m_doc == -1 ? "START" : (m_doc == Integer.MAX_VALUE) ? "END" : m_doc + "-" + m_position);}
public boolean canAppendMatch() {for (int i = 0; i < heads.size(); i++) {if (!heads.get(i).equals(LastHead.INSTANCE)) {return true;}}return false;}
public int lastIndexOf(String subString, int start) {synchronized (this) {return super.lastIndexOf(subString, start);}}
public virtual DeleteNetworkAclEntryResponse deleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteNetworkAclEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteNetworkAclEntryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public AssociateMemberToGroupResponse associateMemberToGroup(AssociateMemberToGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AssociateMemberToGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateMemberToGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static int Committer(byte[] b, int ptr) {int sz = b.length;if (ptr == 0) {ptr += 46;}while (ptr < sz && b[ptr] == 'p') {ptr += 48;}if (ptr < sz && b[ptr] == 'a') {ptr = NextLF(b, ptr);}return Match(b, ptr, ObjectChecker.committer);}
public int getLineNumber() {return row;}
public class SubmoduleUpdateCommand {private List<String> paths = new ArrayList<>();public SubmoduleUpdateCommand addPath(String path) {paths.add(path);return this;}}
public GetPushTemplateResponse getPushTemplate(GetPushTemplateRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetPushTemplateRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetPushTemplateResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeVaultResponse describeVault(DescribeVaultRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeVaultRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeVaultResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeVpcPeeringConnectionsResponse describeVpcPeeringConnections(){return describeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}
public class YourClass extends YourSuperClass {@Overridepublic java.nio.ByteBuffer putLong(int index, long value) {throw new UnsupportedOperationException("Not implemented yet.");}}
public RegisterDeviceResponse registerDevice(RegisterDeviceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RegisterDeviceRequestMarshaller.getInstance());options.setResponseUnmarshaller(RegisterDeviceResponseUnmarshaller.getInstance());return invoke(request, options);}
public static Format byId(int id) {for (Format format : Values) {if (format.getId() == id) {return format;}}throw new IllegalArgumentException("Unknown format id: " + id);}
public DeleteAppResponse deleteApp(DeleteAppRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteAppRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteAppResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetBaiduChannelResponse getBaiduChannel(GetBaiduChannelRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetBaiduChannelRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetBaiduChannelResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public FST.BytesReader getBytesReader(){return fst.getBytesReader();}
public static boolean isValidSchemeChar(int index, char c) {if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {return true;}return false;}
public ListAppliedSchemaArnsResponse listAppliedSchemaArns(ListAppliedSchemaArnsRequest request) {Request<ListAppliedSchemaArnsRequest> requestMarshaller = ListAppliedSchemaArnsRequestMarshaller.getInstance();Response<ListAppliedSchemaArnsResponse> responseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.getInstance();return request.invoke(requestMarshaller, responseUnmarshaller);}
public URI baseUri;public URI getBaseUri() {return baseUri;}public void setBaseUri(URI baseUri) {this.baseUri = baseUri;}
public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length < 1) {return ErrorEval.VALUE_INVALID;}boolean isA1style;String text;try {ValueEval ve = OperandResolver.getSingleValue(args[0], ec.getRowIndex(), ec.getColumnIndex());text = OperandResolver.coerceValueToString(ve);switch (args.length) {case 1:isA1style = true;break;case 2:isA1style = evaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}} catch (EvaluationException e) {return e.getErrorEval();}return evaluateIndirect(ec, text, isA1style);}
public int CompareTo(int[] bs, int p) {int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0) {return cmp;}cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0) {return cmp;}return NB.CompareUInt32(w5, bs[p + 4]);}
public void RemoveName(int index) {names.remove(index);workbook.removeName(index);}
public GetQueueAttributesRequest(String queueUrl, List<String> attributeNames) {this._queueUrl = queueUrl;this._attributeNames = attributeNames;}
public static boolean[] copyOf(boolean[] original, int newLength) {if (newLength < 0) {throw new java.lang.NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}
public static void setEnabled(boolean enabled) {ENABLED = enabled;}
public DeleteLogPatternResponse deleteLogPattern(DeleteLogPatternRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteLogPatternRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteLogPatternResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean contains(char[] text, int offset, int length) {return map.containsKey(text, offset, length);}
public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber);}
public boolean handles(String commandLine) {return command.length() + 1 < commandLine.length() && commandLine.charAt(command.length()) == ' ' && commandLine.startsWith(command);}
public static void Register(MergeStrategy imp){Register(imp.GetName(), imp);}
public long ramBytesUsed() {return (index != null) ? index.getSizeInBytes() : 0;}
public HostedZone(String id, String name, String callerReference){this._id = id;this._name = name;this._callerReference = callerReference;}
public GetFindingsResponse getFindings(GetFindingsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetFindingsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetFindingsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeTopicsDetectionJobResponse describeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeTopicsDetectionJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeTopicsDetectionJobResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean ProcessMatch(ValueEval eval){if (eval instanceof NumericValueEval){if (minimumValue == null){minimumValue = eval;} else {double currentValue = ((NumericValueEval)eval).NumberValue;double oldValue = ((NumericValueEval)minimumValue).NumberValue;if (currentValue < oldValue){minimumValue = eval;}}}return true;}
public void write(ILittleEndianOutput out1) {out1.writeByte(sid + PtgClass);out1.writeShort(field_1_len_ref_subexpression);}
public static int main(String[] args) {boolean printTree = false;String path = null;for (int i = 0; i < args.length; i++) {if (args[i].equals("-printTree")) {printTree = true;} else {path = args[i];}}if (args.length != (printTree ? 2 : 1)) {throw new IllegalArgumentException();}try (Store.Directory dir = FSDirectory.open(new File(path).toPath())) {try (var r = new DirectoryTaxonomyReader(dir)) {PrintStats(r, System.out, printTree);}}return 0;}
public void setByteValue(byte value) {if (!(FieldsData instanceof Byte)) {throw new IllegalArgumentException("cannot change value type from " + FieldsData.getClass().getName() + " to Byte");}FieldsData = value;}
public static int Initialize(){return Initialize(DefaultSeed);}
public CachingDoubleValueSource(ValueSource source) {this.m_source = source;m_cache = new java.util.HashMap<>();}
public AttributeDefinition(String attributeName, ScalarAttributeType attributeType) {this._attributeName = attributeName;this._attributeType = attributeType;}
public static String join(Collection<String> parts, String separator) {return NGit.Util.StringUtils.join(parts, separator, separator);}
public ListTaskDefinitionFamiliesResponse listTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListTaskDefinitionFamiliesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListTaskDefinitionFamiliesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListComponentsResponse listComponents(ListComponentsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListComponentsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListComponentsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ActivatePhotosRequest() {super("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public CreateMatchmakingRuleSetResponse createMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateMatchmakingRuleSetRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateMatchmakingRuleSetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListAvailableManagementCidrRangesResponse listAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListAvailableManagementCidrRangesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListAvailableManagementCidrRangesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ObjectIdSubclassMap<ObjectId> getBaseObjectIds(){if (baseObjectIds != null){return baseObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}
public DeletePushTemplateResponse deletePushTemplate(DeletePushTemplateRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeletePushTemplateRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeletePushTemplateResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateDomainEntryResponse createDomainEntry(CreateDomainEntryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateDomainEntryRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDomainEntryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static int GetEncodedSize(Array values) {int result = values.Length * 1;for (int i = 0; i < values.Length; i++) {result += GetEncodedSize(values.GetValue(i));}return result;}
public OpenNLPTokenizerFactory(Map<String, String> args) {super(args);sentenceModelFile = Require(args, SENTENCE_MODEL);tokenizerModelFile = Require(args, TOKENIZER_MODEL);if (args.size() > 0) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public final int getInt(int index) {checkIndex(index, java.nio.ByteOrder.INT);return java.nio.ByteBuffer.wrap(backingArray).getInt(offset + index);}
public List<Head> getNextHeads(char c) {if (matches(c)) {return newHeads;} else {return FileNameMatcher.EMPTY_HEAD_LIST;}}
public ByteBuffer putShort(short value) {throw new UnsupportedOperationException();}
public void writeUnshared(Object object) {throw new UnsupportedOperationException("Not implemented");}
public int offsetByCodePoints(int index, int codePointOffset) {return Sharpen.CharHelper.offsetByCodePoints(value, 0, count, index, codePointOffset);}
public static int getUniqueAlt(List<BitSet> altsets) {BitSet all = getAlts(altsets);if (all.cardinality() == 1) {return all.nextSetBit(0);}return ATN.INVALID_ALT_NUMBER;}
public Date GetWhen() {return Sharpen.Extensions.CreateDate(when);}
public RuleTagToken(String ruleName, int bypassTokenType, String label) {if (ruleName == null || ruleName.isEmpty()) {throw new IllegalArgumentException("ruleName cannot be null or empty.");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}
public DisableOrganizationAdminAccountResponse disableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DisableOrganizationAdminAccountRequestMarshaller.getInstance());options.setResponseUnmarshaller(DisableOrganizationAdminAccountResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual CreateRoomResponse createRoom(CreateRoomRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateRoomRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateRoomResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeleteReplicationGroupResponse deleteReplicationGroup(DeleteReplicationGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteReplicationGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteReplicationGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public java.nio.CharBuffer decode(java.nio.ByteBuffer buffer) {try {return newDecoder().onMalformedInput(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).decode(buffer);} catch (java.nio.charset.CharacterCodingException ex) {throw new Exception(ex.getMessage(), ex);}}
public Distribution(String id, String status, String domainName) {_id = id;_status = status;_domainName = domainName;}
public Object array() {return protectedArray();}
public DateWindow1904Record(RecordInputStream in1) {this.field_1_window = in1.readShort();}
public DeleteDBSnapshotRequest(String dbSnapshotIdentifier) {this._dbSnapshotIdentifier = dbSnapshotIdentifier;}
public ParserExtension getExtension(String key) {if (key == null || !this.extensions.containsKey(key)) {return null;}return this.extensions.get(key);}
public void inform(IResourceLoader loader) {try {if (chunkerModelFile != null) {OpenNLPOpsFactory.getChunkerModel(chunkerModelFile, loader);}} catch (IOException e) {throw new IllegalArgumentException(e.toString(), e);}}
public virtual CompleteVaultLockResponse completeVaultLock(CompleteVaultLockRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CompleteVaultLockRequestMarshaller.getInstance());options.setResponseUnmarshaller(CompleteVaultLockResponseUnmarshaller.getInstance());return invoke(request, options);}
public int[] getCharIntervals(){return _points.clone();}
public long RamBytesUsed() {return RamUsageEstimator.AlignObjectSize(3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF + 2 * RamUsageEstimator.NUM_BYTES_INT32)+ RamUsageEstimator.SizeOf(data)+ positions.RamBytesUsed()+ wordNums.RamBytesUsed();}
public RegisterInstancesWithLoadBalancerResponse registerInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RegisterInstancesWithLoadBalancerRequestMarshaller.getInstance());options.setResponseUnmarshaller(RegisterInstancesWithLoadBalancerResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeClusterUserKubeconfigRequest() {super("CS", "2015-12-15", "DescribeClusterUserKubeconfig", "cs", "openAPI");setUriPattern("/k8s/[ClusterId]/user_config");setMethod(MethodType.GET);}
public PrecisionRecord(RecordInputStream in1) {this.field_1_precision = in1.readShort();}
public void serialize(ILittleEndianOutput out1) {out1.writeShort(LeftRowGutter);out1.writeShort(TopColGutter);out1.writeShort(RowLevelMax);out1.writeShort(ColLevelMax);}
public virtual DeleteVirtualInterfaceResponse deleteVirtualInterface(DeleteVirtualInterfaceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteVirtualInterfaceRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteVirtualInterfaceResponseUnmarshaller.getInstance());return invoke(request, options);}
public Entry getEntry(String name) {if (excludes.contains(name)) {throw new FileNotFoundException(name);}Entry entry = directory.getEntry(name);return wrapEntry(entry);}
public override String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[BACKUP]\n");buffer.append("    .backup          = ").append(StringUtil.toHexString(Backup)).append("\n");buffer.append("[/BACKUP]\n");return buffer.toString();}
public virtual DeleteVoiceConnectorOriginationResponse deleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteVoiceConnectorOriginationRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteVoiceConnectorOriginationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public StringBuilder append(char c) {append(String.valueOf(c));return this;}
public static long GenerationFromSegmentsFileName(String fileName) {if (fileName.equals(IndexFileNames.SEGMENTS)) {return 0;} else if (fileName.startsWith(IndexFileNames.SEGMENTS)) {return Number.parse(fileName.substring(1 + IndexFileNames.SEGMENTS.length()), Character.MAX_RADIX);} else {throw new System.ArgumentException("fileName \"" + fileName + "\" is not a segments file");}}
public static NGit.Transport.TagOpt FromOption(String o){if (o == null || o.length() == 0){return AUTO_FOLLOW;}for (NGit.Transport.TagOpt tagopt : Values()){if (tagopt.Option().equals(o)){return tagopt;}}throw new IllegalArgumentException(String.format(JGitText.Get().invalidTagOption, o));}
public StartContentModerationResponse startContentModeration(StartContentModerationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StartContentModerationRequestMarshaller.getInstance());options.setResponseUnmarshaller(StartContentModerationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static String quoteReplacement(String s) {StringBuilder result = new StringBuilder(s.length());for (int i = 0; i < s.length(); i++) {char c = s.charAt(i);if (c == '\\' || c == '$') {result.append('\\');}result.append(c);}return result.toString();}
public void set(V newValue) {value = newValue;}
public QueryParserTokenManager(ICharStream stream) {initBlock();m_input_stream = stream;}
public long ValueFor(double elapsed) {double val;if (modBy == 0) {val = elapsed / factor;} else {val = elapsed / factor % modBy;}if (type == '0') {return Math.round(val);} else {return (long) val;}}
public java.nio.LongBuffer get(long[] dst, int dstOffset, int longCount) {byteBuffer.limit(_limit * libcore.io.SizeOf.LONG);byteBuffer.position(_position * libcore.io.SizeOf.LONG);if (byteBuffer instanceof java.nio.DirectByteBuffer) {((java.nio.DirectByteBuffer) byteBuffer).get(dst, dstOffset, longCount);} else {((java.nio.HeapByteBuffer) byteBuffer).get(dst, dstOffset, longCount);}this._position += longCount;return this;}
public void removeErrorListeners(){_listeners = new IAntlrErrorListener<Symbol>[0];}
public CommonTokenStream(ITokenSource tokenSource, int channel) {this(tokenSource);this.channel = channel;}
public ListObjectPoliciesResponse listObjectPolicies(ListObjectPoliciesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListObjectPoliciesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListObjectPoliciesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ObjectToPack(AnyObjectId src, int type) {super(src);flags = type << TYPE_SHIFT;}
public int stem(char[] s, int len) {int numVowels_Renamed = numVowels(s, len);for (int i = 0; i < affixes.length; i++) {Affix affix = affixes[i];if (numVowels_Renamed > affix.vc && len >= affix.affix.length + 3 && stemmerUtil.endsWith(s, len, affix.affix)) {len -= affix.affix.length;return affix.palatalizes ? unpalatalize(s, len) : len;}}return len;}
public void recover(Parser recognizer, RecognitionException e) {if (lastErrorIndex == recognizer.getInputStream().index && lastErrorStates != null && lastErrorStates.contains(recognizer.getState())) {recognizer.consume();}lastErrorIndex = recognizer.getInputStream().index;if (lastErrorStates == null) {lastErrorStates = new IntervalSet();}lastErrorStates.add(recognizer.getState());IntervalSet followSet = getErrorRecoverySet(recognizer);consumeUntil(recognizer, followSet);}
public String ToFormulaString(){String value = field_3_string;int len = value.length();StringBuilder sb = new StringBuilder(len + 4);sb.append(FORMULA_DELIMITER);for (int i = 0; i < len; i++){char c = value.charAt(i);if (c == FORMULA_DELIMITER){sb.append(FORMULA_DELIMITER);}sb.append(c);}sb.append(FORMULA_DELIMITER);return sb.toString();}
public UnlinkFaceRequest() {super("LinkFace", "2018-07-20", "UnlinkFace");this.Protocol = ProtocolType.HTTPS;this.Method = MethodType.POST;}
public ConfigurationOptionSetting(String awsNamespace, String optionName, String value) {this._awsNamespace = awsNamespace;this._optionName = optionName;this._value = value;}
public String getFully(String key) {StringBuilder result = new StringBuilder(m_tries.size() * 2);for (int i = 0; i < m_tries.size(); i++) {String r = m_tries.get(i).getFully(key);if (r == null || (r.length() == 1 && r.charAt(0) == EOM)) {return result.toString();}result.append(r);}return result.toString();}
public DescribeMountTargetSecurityGroupsResponse describeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeMountTargetSecurityGroupsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeMountTargetSecurityGroupsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetApiMappingResponse getApiMapping(GetApiMappingRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetApiMappingRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetApiMappingResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public HttpRequest(String strUrl) {Url = strUrl;Headers = new HashMap<>();}
public MemFuncPtg(int subExprLen) {this.field_1_len_ref_subexpression = subExprLen;}
public class LuceneUtils {public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, String field, Comparator<TermStats> comparer) {TermStatsQueue tiq = null;if (field != null) {Fields fields = MultiFields.getFields(reader);if (fields == null) {throw new Exception("field " + field + " not found");}Terms terms = fields.terms(field);if (terms != null) {TermsEnum termsEnum = terms.iterator(null);tiq = new TermStatsQueue(numTerms, comparer);tiq.fill(field, termsEnum);}} else {Fields fields = MultiFields.getFields(reader);if (fields == null) {throw new Exception("no fields found for this index");}tiq = new TermStatsQueue(numTerms, comparer);for (String fieldName : fields.fieldNames()) {Terms terms = fields.terms(fieldName);if (terms != null) {tiq.fill(fieldName, terms.iterator(null));}}}
public DeleteApnsVoipChannelResponse deleteApnsVoipChannel(DeleteApnsVoipChannelRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteApnsVoipChannelRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteApnsVoipChannelResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public List<ListFacesResponse> listFaces(ListFacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListFacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListFacesResponseUnmarshaller.getInstance());return invoke(request, options);}
public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier) {this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}
public char get(int index) {checkIndex(index);return sequence[index];}
public UpdateConfigurationProfileResponse updateConfigurationProfile(UpdateConfigurationProfileRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateConfigurationProfileRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateConfigurationProfileResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeLifecycleHooksResponse describeLifecycleHooks(DescribeLifecycleHooksRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeLifecycleHooksRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLifecycleHooksResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeHostReservationsResponse describeHostReservations(DescribeHostReservationsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeHostReservationsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeHostReservationsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext) {if (outerContext == null) {outerContext = ParserRuleContext.EMPTY;}if (outerContext.getParent() == null || outerContext == ParserRuleContext.EMPTY) {return PredictionContext.EMPTY;}PredictionContext parent = PredictionContext.FromRuleContext(atn, outerContext.getParent());ATNState state = atn.states[outerContext.getInvokingState()];RuleTransition transition = (RuleTransition) state.getTransition(0);return parent.getChild(transition.getFollowState().getStateNumber());}
public override String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SXVDEX]\n");buffer.append("    .grbit1 =").append(HexDump.intToHex(grbit1)).append("\n");buffer.append("    .grbit2 =").append(HexDump.byteToHex(grbit2)).append("\n");buffer.append("    .citmShow =").append(HexDump.byteToHex(citmShow)).append("\n");buffer.append("    .isxdiSort =").append(HexDump.shortToHex(isxdiSort)).append("\n");buffer.append("    .isxdiShow =").append(HexDump.shortToHex(isxdiShow)).append("\n");buffer.append("    .subName =").append(subName).append("\n");buffer.append("[/SXVDEX]\n");return buffer.toString();}
public String toString() {StringBuilder r = new StringBuilder();r.append("BlameResult: ");r.append(getResultPath());return r.toString();}
public ListChangeSetsResponse listChangeSets(ListChangeSetsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListChangeSetsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListChangeSetsResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean isAllowNonFastForwards() {return allowNonFastForwards;}
public FeatRecord() {futureHeader = new FtrHeader();futureHeader.setRecordType((sid));}
public ShortBuffer put(short s) {throw new ReadOnlyBufferException();}
public void setQuery(String query) {this.query = query;this.m_message = new Message(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, "");}
public StashApplyCommand stashApply() {return new StashApplyCommand(repo);}
public Collection<String> nameSet() {return new ArrayList<>(dictionaryNameToID.keySet());}
public static int getEffectivePort(String scheme, int specifiedPort) {if (specifiedPort != -1) {return specifiedPort;}if (Sharpen.StringHelper.equalsIgnoreCase("http", scheme)) {return 80;} else {if (Sharpen.StringHelper.equalsIgnoreCase("https", scheme)) {return 443;} else {return -1;}}}
public ListAssessmentTemplatesResponse listAssessmentTemplates(ListAssessmentTemplatesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListAssessmentTemplatesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListAssessmentTemplatesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public RestoreFromClusterSnapshotResponse restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RestoreFromClusterSnapshotRequestMarshaller.getInstance());options.setResponseUnmarshaller(RestoreFromClusterSnapshotResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void AddShape(HSSFShape shape) {shape.setPatriarch(this.getPatriarch());shape.setParent(this);shapes.add(shape);}
public class FacetEntry {// Assuming the rest of the class definition is similar to the C# code@Overridepublic boolean equals(Object o) {if (this == o) return true;if (o == null || getClass() != o.getClass()) return false;FacetEntry that = (FacetEntry) o;if (count != that.count) return false;return value.equals(that.value);}}
public static int Prev(byte[] b, int ptr, char chrA) {if (ptr == b.length) {--ptr;}while (ptr >= 0) {if (b[ptr--] == chrA) {return ptr;}}return ptr;}
public boolean isDeltaRepresentation(){return deltaBase != null;}
public IToken EmitEOF() {int cpos = getColumn();int line = getLine();IToken eof = _factory.Create(_tokenFactorySourcePair, TokenConstants.EOF, null, TokenConstants.DefaultChannel, _input.getIndex(), _input.getIndex() - 1, line, cpos);Emit(eof);return eof;}
public UpdateUserRequest(String userName) {this._userName = userName;}
public RevFilter negate() {return NotRevFilter.create(this);}
public void setTagger(PersonIdent taggerIdent) {this.tagger = taggerIdent;}
public static BufferSize automatic() {long max, total, free;try (Process proc = Process.getcurrentprocess()) {max = proc.getpeakvirtualmemorysize64();total = proc.getvirtualmemorysize64();free = proc.getprivatememorysize64();}long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes) {if (totalAvailableBytes / 2 > minBufferSizeBytes) {sortBufferByteSize = totalAvailableBytes / 2;} else {sortBufferByteSize = Math.max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.min((long) Integer.MAX_VALUE, sortBufferByteSize));}
public static int TrimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr])) {ptr--;}return ptr + 1;}
public TopMarginRecord(RecordInputStream in1) {this.field_1_margin = in1.ReadDouble();}
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {this._infoType = infoType;}
public CreatePlayerSessionsResponse createPlayerSessions(CreatePlayerSessionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreatePlayerSessionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreatePlayerSessionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateProxySessionResponse createProxySession(CreateProxySessionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateProxySessionRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateProxySessionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public int GetObjectType(){return type;}
public String GetScheme(){return scheme;}
public void characters(char[] ch, int start, int length) {contents.append(ch, start, length);}
public FetchAlbumTagPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public DeleteMembersResponse deleteMembers(DeleteMembersRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteMembersRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteMembersResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetContactReachabilityStatusResponse getContactReachabilityStatus(GetContactReachabilityStatusRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetContactReachabilityStatusRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetContactReachabilityStatusResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean remove(Object o) {synchronized (this._enclosing) {int oldSize = this._enclosing._size;this._enclosing.remove(o);return this._enclosing._size != oldSize;}}
public E last(){return backingMap.lastKey();}
public CreateStreamingDistributionResponse createStreamingDistribution(CreateStreamingDistributionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateStreamingDistributionRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateStreamingDistributionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public boolean isAbsolute(){return absolute;}
public DisableAddOnResponse disableAddOn(DisableAddOnRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DisableAddOnRequestMarshaller.getInstance());options.setResponseUnmarshaller(DisableAddOnResponseUnmarshaller.getInstance());return invoke(request, options);}
public DescribeAliasResponse describeAlias(DescribeAliasRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeAliasRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeAliasResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void next(int delta) {while (delta-- > 0) {if (currentSubtree != null) {ptr += currentSubtree.getEntrySpan();} else {ptr++;}if (eof) {break;}parseEntry();}}
public override RevFilter clone(){return new AndRevFilter.Binary(a.clone(), b.clone());}
public TextReader create(TextReader input) {return new PersianCharFilter(input);}
public String option() {return option;}
public String toString() {StringBuilder sb = new StringBuilder("[");for (T item : this) {if (sb.length() > 1) {sb.append(", ");}sb.append(item);}return sb.append(']').toString();}
public DescribeSignalingChannelResponse describeSignalingChannel(DescribeSignalingChannelRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeSignalingChannelRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeSignalingChannelResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public AttachStaticIpResponse attachStaticIp(AttachStaticIpRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AttachStaticIpRequestMarshaller.getInstance());options.setResponseUnmarshaller(AttachStaticIpResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.append(getClass().getName());sb.append(" [").append(crA.formatAsString()).append(':').append(crB.formatAsString()).append("]");return sb.toString();}
public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat, BloomFilterFactory bloomFilterFactory) {super();this._delegatePostingsFormat = delegatePostingsFormat;this._bloomFilterFactory = bloomFilterFactory;}
public List<ListTemplatesResponse> listTemplates(ListTemplatesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListTemplatesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListTemplatesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public TimerThread(long resolution, Counter counter) {super(THREAD_NAME);this.resolution = resolution;this.counter = counter;this.setBackground(true);}
public DrawingRecord() {recordData = new byte[0];}
public ListDirectoriesResponse listDirectories(ListDirectoriesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListDirectoriesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListDirectoriesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {byte block = blocks[blocksOffset++];values[valuesOffset++] = ((int) ((uint) block >> 7)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 6)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 5)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 4)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 3)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 2)) & 1;values[valuesOffset++] = ((int) ((uint) block >> 1)) & 1;values[valuesOffset++] = block & 1;}}
public GroupingSearch disableCaching() {this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}
public static int idealByteArraySize(int need) {for (int i = 4; i < 32; i++) {if (need <= (1 << i) - 12) {return (1 << i) - 12;}}return need;}
public UpdateAssessmentTargetResponse updateAssessmentTarget(UpdateAssessmentTargetRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateAssessmentTargetRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateAssessmentTargetResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ModifyVolumeResponse modifyVolume(ModifyVolumeRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ModifyVolumeRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyVolumeResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Cell merge(Cell m, Cell e) {if (m.cmd == e.cmd && m.ref.equals(e.ref) && m.skip == e.skip) {Cell c = new Cell(m);c.cnt += e.cnt;return c;} else {return null;}}
public ByteBuffer read(int length, long position) {if (position >= size) {throw new IllegalArgumentException("Position " + position + " past the end of the file");}ByteBuffer dst;int worked = -1;if (writable) {dst = ByteBuffer.createBuffer(length);worked = 0;} else {fileStream.position(position);dst = ByteBuffer.createBuffer(length);worked = IOUtils.readFully(fileStream, dst.getBuffer());}if (worked == -1) {throw new IllegalArgumentException("Position " + position + " past the end of the file");}dst.position(0);return dst;}
public virtual RespondActivityTaskCompletedResponse respondActivityTaskCompleted(RespondActivityTaskCompletedRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RespondActivityTaskCompletedRequestMarshaller.getInstance());options.setResponseUnmarshaller(RespondActivityTaskCompletedResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public synchronized void incrementProgressBy(int diff) {setProgress(mProgress + diff);}
public MetadataDiff compareMetadata(DirCacheEntry entry) {if (entry.isAssumeValid()) {return MetadataDiff.EQUAL;}if (entry.isUpdateNeeded()) {return MetadataDiff.DIFFER_BY_METADATA;}if (!entry.isSmudged() && entry.getLength() != (int) getEntryLength()) {return MetadataDiff.DIFFER_BY_METADATA;}if (isModeDifferent(entry.getRawMode())) {return MetadataDiff.DIFFER_BY_METADATA;}long cacheLastModified = entry.getLastModified();long fileLastModified = getEntryLastModified();if (cacheLastModified % 1000 == 0 || fileLastModified % 1000 == 0) {cacheLastModified = cacheLastModified - cacheLastModified % 1000;fileLastModified = fileLastModified - fileLastModified % 1000;}if (fileLastModified != cacheLastModified) {return MetadataDiff.DIFFER_BY_TIMESTAMP;} else {if (!entry.isSmudged()) {return MetadataDiff.EQUAL;} else {return MetadataDiff.SMUDGED;}}}
public static NumberRecord convertToNumberRecord(RKRecord rk) {NumberRecord num = new NumberRecord();num.setColumn(rk.getColumn());num.setRow(rk.getRow());num.setXFIndex(rk.getXFIndex());num.setValue(rk.getRKNumber());return num;}
public override java.nio.CharBuffer put(char[] src, int srcOffset, int charCount){byteBuffer.limit(_limit * libcore.io.SizeOf.CHAR);byteBuffer.position(_position * libcore.io.SizeOf.CHAR);if (byteBuffer instanceof java.nio.ReadWriteDirectByteBuffer){((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, charCount);} else {((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, charCount);}this._position += charCount;return this;}
public int getCells() {int size = 0;for (char c : cells.keySet()) {Cell e = at(c);if (e.cmd >= 0 || e.ref >= 0) {size++;}}return size;}
public BeiderMorseFilterFactory(Map<String, String> args) {super(args);NameType nameType = NameType.valueOf(Get(args, "nameType", NameType.GENERIC.name()).toUpperCase());RuleType ruleType = RuleType.valueOf(Get(args, "ruleType", RuleType.APPROX.name()).toUpperCase());boolean concat = GetBoolean(args, "concat", true);engine = new PhoneticEngine(nameType, ruleType, concat);Set<String> langs = GetSet(args, "languageSet");languageSet = (langs == null || (langs.size() == 1 && langs.contains("auto"))) ? null : LanguageSet.From(langs);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public static double varp(double[] v) {double r = Double.NaN;if (v != null && v.length > 1) {r = devsq(v) / v.length;}return r;}
public PersianNormalizationFilterFactory(Map<String, String> args) {super(args);if (args.size() > 0) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public static WeightedTerm[] GetTerms(Query query, boolean prohibited, String fieldName) {HashSet<WeightedTerm> terms = new HashSet<>();if (fieldName != null) {fieldName = fieldName.intern();}GetTerms(query, terms, prohibited, fieldName);return terms.toArray(new WeightedTerm[0]);}
public DeleteDocumentationPartResponse deleteDocumentationPart(DeleteDocumentationPartRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDocumentationPartRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDocumentationPartResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[CHART]\n");buffer.append("    .x                    = ").append("0x").append(toHex(x)).append(" (").append(x).append(" )\n");buffer.append("    .y                    = ").append("0x").append(toHex(y)).append(" (").append(y).append(" )\n");buffer.append("    .width                = ").append("0x").append(toHex(width)).append(" (").append(width).append(" )\n");buffer.append("    .height               = ").append("0x").append(toHex(height)).append(" (").append(height).append(" )\n");buffer.append("[/CHART]\n");return buffer.toString();}private String toHex(int value) {return String.format("%08x", value);}
public short get(int index) {checkIndex(index);return backingArray[offset + index];}
public String toString() {return image;}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = evaluateRef(arg0);AreaEval reB = evaluateRef(arg1);AreaEval result = resolveRange(reA, reB);if (result == null) {return ErrorEval.NULL_INTERSECTION;}return result;} catch (EvaluationException e) {return e.getErrorEval();}}
public void clear() { weightBySpanQuery.clear(); }
public int FindEndOffset(StringBuilder buffer, int start) {if (start > buffer.length() || start < 0) return start;String text = buffer.substring(start);bi.setText(text);return bi.next() + start;}
public SrndQuery primaryQuery() {SrndQuery q;int jj_ntk = Jj_ntk();switch (jj_ntk) {case RegexpToken.LPAREN:Jj_consume_token(RegexpToken.LPAREN);q = fieldsQuery();Jj_consume_token(RegexpToken.RPAREN);break;case RegexpToken.OR:case RegexpToken.AND:case RegexpToken.W:case RegexpToken.N:q = prefixOperatorQuery();break;case RegexpToken.TRUNCQUOTED:case RegexpToken.QUOTED:case RegexpToken.SUFFIXTERM:case RegexpToken.TRUNCTERM:case RegexpToken.TERM:q = simpleTerm();break;default:jj_la1[5] = jj_gen;Jj_consume_token(-1);throw new ParseException();}optionalWeights(q);if (true) return q;throw new Exception("Missing return statement in function");}
public DeleteApiKeyResponse deleteApiKey(DeleteApiKeyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteApiKeyRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteApiKeyResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public InsertTagsRequest() {super("Ots", "2016-06-20", "InsertTags", "ots", "openAPI");setMethod(MethodType.POST);}
public DeleteUserByPrincipalIdResponse deleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteUserByPrincipalIdRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteUserByPrincipalIdResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeNetworkInterfacesResponse describeNetworkInterfaces(DescribeNetworkInterfacesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeNetworkInterfacesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeNetworkInterfacesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public int serialize(int offset, byte[] data, EscherSerializationListener listener) {listener.beforeRecordSerialize(offset, recordId, this);LittleEndian.putShort(data, offset, options);LittleEndian.putShort(data, offset + 2, recordId);LittleEndian.putInt(data, offset + 4, 8);LittleEndian.putInt(data, offset + 8, field1NumShapes);LittleEndian.putInt(data, offset + 12, field2LastMSOSPID);listener.afterRecordSerialize(offset + 16, recordId, recordSize, this);return recordSize;}
public CreateSecurityConfigurationResponse createSecurityConfiguration(CreateSecurityConfigurationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateSecurityConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateSecurityConfigurationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DescribeClientVpnConnectionsResponse describeClientVpnConnections(DescribeClientVpnConnectionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeClientVpnConnectionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeClientVpnConnectionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static void fill(double[] array, double value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}
public boolean hasNext() {return pos < maxColumn;}
public DocsEnum reset(int[] postings) {this.postings = postings;upto = -2;freq_Renamed = 0;return this;}
public boolean hasAll(RevFlagSet set) {return (flags & set.mask) == set.mask;}
public ModifyAccountResponse modifyAccount(ModifyAccountRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ModifyAccountRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifyAccountResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Token LT(int k) {lazyInit();if (k == 0) {return null;}if (k < 0) {return lb(-k);}int i = p + k - 1;sync(i);if (i >= tokens.size()) {return tokens.get(tokens.size() - 1);}return tokens.get(i);}
public void RemoveSheet(int sheetIndex) {if (boundsheets.size() > sheetIndex) {records.remove(records.getBspos() - (boundsheets.size() - 1) + sheetIndex);boundsheets.remove(sheetIndex);FixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for (int i = 0; i < NumNames; i++) {NameRecord nr = GetNameRecord(i);if (nr.getSheetNumber() == sheetNum1Based) {nr.setSheetNumber(0);} else if (nr.getSheetNumber() > sheetNum1Based) {nr.setSheetNumber(nr.getSheetNumber() - 1);}}if (linkTable != null) {for (int i = sheetIndex + 1; i < NumSheets + 1; i++) {linkTable.RemoveSheet(i);}}}
public void RemoveName(int index) {names.remove(index);workbook.removeName(index);}
public class Property {private long id;private Object value;private String type;@Overridepublic boolean equals(Object o) {if (!(o instanceof Property)) {return false;}Property p = (Property) o;Object pValue = p.getValue();long pId = p.getId();if (id != pId || (id != 0 && !typesAreEqual(type, p.getType()))) {return false;}if (value == null && pValue == null) {return true;}if (value == null || pValue == null) {return false;}Class<?> valueClass = value.getClass();Class<?> pValueClass = pValue.getClass();if (!(valueClass.isAssignableFrom(pValueClass)) && !(pValueClass.isAssignableFrom(valueClass))) {return false;}if (value instanceof byte[]) {return Arrays.equals((byte[]) value, (byte[]) pValue);}return value.equals(pValue);}private boolean typesAreEqual(String type1, String type2) {// Implement the logic to compare types if neededreturn false;}public long getId() {return id;}public void setId(long id) {this.id = id;}public Object getValue() {return value;}public void setValue(Object value) {this.value = value;}public String getType() {return type;}public void setType(String type) {this.type = type;}}
public GetRepoBuildListRequest() {super("cr", "2016-06-07", "GetRepoBuildList", "cr", "openAPI");this.UriPattern = "/repos/[RepoNamespace]/[RepoName]/build";this.Method = MethodType.GET;}
public MessageWriter() {buf = new ByteArrayOutputStream();enc = new OutputStreamWriter(GetRawStream(), Constants.CHARSET);}
public void append(RecordBase r) {_recs.add(r);}
public override void Close(){if (this.Read(this.skipBuffer) != -1 || this.actualSize != this.expectedSize){throw new CorruptObjectException(String.format(JGitText.get().packfileCorruptionDetected, JGitText.get().wrongDecompressedLength));}int used = this._enclosing.bAvail - this.inf.RemainingInput;if (0 < used){this._enclosing.OnObjectData(this.src, this._enclosing.buf, this.p, used);this._enclosing.Use(used);}this.inf.Reset();}
public DescribeModelPackageResponse describeModelPackage(DescribeModelPackageRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeModelPackageRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeModelPackageResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec instanceof FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord) rec;StringRecord cachedText = null;Class<?> nextClass = rs.PeekNextClass();if (nextClass == StringRecord.class) {cachedText = (StringRecord) rs.GetNext();} else {cachedText = null;}InsertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {InsertCell(rec);}}
public DeflateDecompressor clone() {return new DeflateDecompressor();}
public UpdateS3ResourcesResponse updateS3Resources(UpdateS3ResourcesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateS3ResourcesRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateS3ResourcesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GroupQueryNode(IQueryNode query) {if (query == null) {throw new QueryNodeError(new Message(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}allocate();isLeaf = false;add(query);}
public String toQueryString(IEscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.append("/").append(getFirstPathElement());for (QueryText pathelement : getPathElements(1)) {String value = escaper.escape(new StringCharSequence(pathelement.getValue()), CultureInfo.InvariantCulture, EscapeQuerySyntaxType.STRING).toString();path.append("/\"").append(value).append("\"");}return path.toString();}
public void RemoveCellComment() {HSSFComment comment2 = _sheet.findCellComment(_record.getRow(), _record.getColumn());comment = null;if (comment2 == null) {return;}(_sheet.getDrawingPatriarch() instanceof HSSFPatriarch).removeShape(comment2);}
public void reset() {count = 0;assert forwardCount == 0 : "pos=" + pos + " forwardCount=" + forwardCount;}
public ActivateUserResponse activateUser(ActivateUserRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ActivateUserRequestMarshaller.getInstance());options.setResponseUnmarshaller(ActivateUserResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean isCharsetDetected() {throw new UnsupportedOperationException("Not supported yet.");}
public virtual ModifySnapshotCopyRetentionPeriodResponse modifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ModifySnapshotCopyRetentionPeriodRequestMarshaller.getInstance());options.setResponseUnmarshaller(ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.getInstance());return invoke(request, options);}
public virtual DeleteClusterSubnetGroupResponse deleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteClusterSubnetGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteClusterSubnetGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static String decode(byte[] buffer) {return decode(buffer, 0, buffer.length);}
public int GetDefaultPort(){return -1;}
public StopTaskResponse stopTask(StopTaskRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StopTaskRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopTaskResponseUnmarshaller.getInstance());return invoke(request, options);}
public override void seekExact(BytesRef target, TermState otherState) {if (!target.equals(term)) {state.copyFrom(otherState);term = BytesRef.deepCopyOf(target);seekPending = true;}}
public SeriesToChartGroupRecord(RecordInputStream in1) {field_1_chartGroupIndex = in1.ReadShort();}
public static void writeUnicodeStringFlagAndData(LittleEndianOutput out1, String value) {boolean is16Bit = hasMultibyte(value);out1.writeByte(is16Bit ? 0x01 : 0x00);if (is16Bit) {putUnicodeLE(value, out1);} else {putCompressedUnicode(value, out1);}}
public virtual AuthorizeSecurityGroupIngressResponse authorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AuthorizeSecurityGroupIngressRequestMarshaller.getInstance());options.setResponseUnmarshaller(AuthorizeSecurityGroupIngressResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void addFile(String file) {checkFileNames(new String[]{file});setFiles.add(file);}
public void setSize(int width, int height) {this.mWidth = width;this.mHeight = height;}
public void setPrecedenceFilterSuppressed(boolean value) {if (value) {this.reachesIntoOuterContext |= SUPPRESS_PRECEDENCE_FILTER;} else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}
public IntervalSet look(ATNState s, RuleContext ctx) {return look(s, null, ctx);}
public void serialize(ILittleEndianOutput out1) {out1.writeShort(OptionFlags);out1.writeShort(RowHeight);}
public Builder(boolean dedup){this.dedup = dedup;}
public Hashtable(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException("Load factor: " + loadFactor);}}
public Object Get(String key) {int bucket = normalCompletion.GetBucket(key);return bucket == -1 ? null : bucket;}
public ListHyperParameterTuningJobsResponse listHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListHyperParameterTuningJobsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListHyperParameterTuningJobsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeleteTableResponse deleteTable(String tableName) {DeleteTableRequest request = new DeleteTableRequest();request.setTableName(tableName);return deleteTable(request);}
protected boolean LessThan(TextFragment fragA, TextFragment fragB) {if (fragA.getScore() == fragB.getScore()) {return fragA.getFragNum() > fragB.getFragNum();} else {return fragA.getScore() < fragB.getScore();}}
public void freeBefore(int pos) {Assertions.assertTrue(pos >= 0);Assertions.assertTrue(pos <= nextPos);int newCount = nextPos - pos;Assertions.assertTrue(newCount <= count, "newCount=" + newCount + " count=" + count);Assertions.assertTrue(newCount <= buffer.length, "newCount=" + newCount + " buf.length=" + buffer.length);count = newCount;}
public UpdateHITTypeOfHITResponse updateHITTypeOfHIT(UpdateHITTypeOfHITRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateHITTypeOfHITRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateHITTypeOfHITResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public UpdateRecommenderConfigurationResponse updateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateRecommenderConfigurationRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateRecommenderConfigurationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public int compareTo(Object other) {BytesRef br = (BytesRef) other;assert br != null;return utf8SortedAsUnicodeSortOrder.compare(this, br);}
public int stem(char[] s, int len) {if (len > 4 && s[len - 1] == 's') {len--;}if (len > 5 && (endsWith(s, len, "ene") || (endsWith(s, len, "ane") && useNynorsk))) {return len - 3;}if (len > 4 && (endsWith(s, len, "er") || endsWith(s, len, "en") || endsWith(s, len, "et") || (endsWith(s, len, "ar") && useNynorsk))) {return len - 2;}if (len > 3) {switch (s[len - 1]) {case 'a':case 'e':return len - 1;}}return len;}private boolean endsWith(char[] s, int len, String suffix) {int suffixLen = suffix.length();if (len < suffixLen) {return false;}for (int i = 0; i < suffixLen; i++) {if (s[len - suffixLen + i] != suffix.charAt(i)) {return false;}}return true;}
public DescribeDBSnapshotsResponse describeDBSnapshots(DescribeDBSnapshotsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeDBSnapshotsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeDBSnapshotsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public class SortedSetDocValuesFacetField extends FacetField {private String dim;private String label;public SortedSetDocValuesFacetField(String dim, String label) {super("dummy", TYPE);FacetField.verifyLabel(label);FacetField.verifyLabel(dim);this.dim = dim;this.label = label;}}
public CreateDocumentationPartResponse createDocumentationPart(CreateDocumentationPartRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateDocumentationPartRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDocumentationPartResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String getValue() {return value;}
public java.nio.ShortBuffer asReadOnlyBuffer() {return duplicate();}
public UpdateDataSourcePermissionsResponse updateDataSourcePermissions(UpdateDataSourcePermissionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UpdateDataSourcePermissionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(UpdateDataSourcePermissionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public static Record CreateSingleRecord(RecordInputStream in1) {if (_recordCreatorsById.containsKey(in1.Sid)) {I_RecordCreator constructor = _recordCreatorsById.get(in1.Sid);return constructor.Create(in1);} else {return new UnknownRecord(in1);}}
public int getCount() {return this._enclosing.mTabLayout.getChildCount();}
public virtual DeleteApplicationReferenceDataSourceResponse deleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteApplicationReferenceDataSourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteApplicationReferenceDataSourceResponseUnmarshaller.getInstance());return invoke(request, options);}
public CreateProjectVersionResponse createProjectVersion(CreateProjectVersionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateProjectVersionRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateProjectVersionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public java.nio.IntBuffer slice() {return new java.nio.ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + position());}
public class YourClass implements YourInterface {@Overridepublic byte get() {throw new UnsupportedOperationException("Not implemented");}}
public java.nio.LongBuffer put(int index, long c) {checkIndex(index);backingArray[offset + index] = c;return this;}
public StoredField(String name, float value) {super(name, TYPE);this.fieldsData = new Single(value);}
public IntervalSet getExpectedTokensWithinCurrentRule() {ATN atn = Interpreter.atn;ATNState s = atn.states[State];return atn.NextTokens(s);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[FILESHARING]\n");buffer.append("    .Readonly       = ").append(ReadOnly == 1 ? "true" : "false").append("\n");buffer.append("    .password       = ").append(StringUtil.toHexString(Password)).append("\n");buffer.append("    .username       = ").append(Username).append("\n");buffer.append("[/FILESHARING]\n");return buffer.toString();}
protected SubmoduleInitCommand(Repository repo) {super(repo);paths = new ArrayList<>();}
public void include(String name, AnyObjectId id) {if (!Repository.isValidRefName(name)) {throw new IllegalArgumentException(String.format(JGitText.get().invalidRefName, name));}if (include.containsKey(name)) {throw new InvalidOperationException(JGitText.get().duplicateRef + name);}include.put(name, id.toObjectId());}
public EnableSnapshotCopyResponse enableSnapshotCopy(EnableSnapshotCopyRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(EnableSnapshotCopyRequestMarshaller.getInstance());options.setResponseUnmarshaller(EnableSnapshotCopyResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual ValueFiller getValueFiller() {return new ValueFillerAnonymousInnerClassHelper(this);}
public void serialize(ILittleEndianOutput out1) {out1.writeByte(pane);out1.writeShort(activeCellRow);out1.writeShort(activeCellCol);out1.writeShort(activeCellRef);int nRefs = field_6_refs.length;out1.writeShort(nRefs);for (int i = 0; i < field_6_refs.length; i++) {field_6_refs[i].serialize(out1);}}
public static Counter newCounter() {return newCounter(false);}
public int Get(String name, int dflt) {int[] vals;Object temp;if (valByRound.containsKey(name) && valByRound.get(name) != null) {temp = valByRound.get(name);vals = (int[]) temp;return vals[roundNumber % vals.length];}String sval;if (!props.containsKey(name)) {sval = String.valueOf(dflt);} else {sval = props.get(name);}if (sval.indexOf(':') < 0) {return Integer.parseInt(sval);}int k = sval.indexOf(':');String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = PropToInt32Array(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}
public void preSerialize() {if (records.tabpos > 0) {TabIdRecord tir = (TabIdRecord) records.get(records.tabpos);if (tir.getTabids().length < boundsheets.size()) {fixTabIdRecord();}}}
public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {super(delegate.getStrategy());this.delegate = delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}
public ExternalBookBlock(int numberOfSheets) {_externalBookRecord = SupBookRecord.CreateInternalReferences((short) numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
public override String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SCENARIOPROTECT]\n");buffer.append("    .protect         = ").append(Protect).append("\n");buffer.append("[/SCENARIOPROTECT]\n");return buffer.toString();}
public PushCommand setThin(boolean thin) {checkCallable();this.thin = thin;return this;}
public int compareTo(SearcherTracker other) {return other.getRecordTimeSec().compareTo(getRecordTimeSec());}
public TokenStream create(TokenStream input) {return new ReverseStringFilter(m_luceneMatchVersion, input);}
public BlockList() {directory = NGit.Util.BlockList.newDirectory(256);directory.set(0, NGit.Util.BlockList.newBlock());tailBlock = directory.get(0);}
public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new java.util.HashMap<>(weightedTerms.length);for (WeightedSpanTerm t : weightedTerms) {if (!fieldWeightedSpanTerms.containsKey(t.Term) ||(fieldWeightedSpanTerms.get(t.Term) == null) ||(fieldWeightedSpanTerms.get(t.Term).Weight < t.Weight)) {fieldWeightedSpanTerms.put(t.Term, t);maxTermWeight = Math.max(maxTermWeight, t.Weight);}}skipInitExtractor = true;}
public override boolean equals(Object other) {assert NeverEquals(other);if (other instanceof MergedGroup<T> otherMergedGroup) {if (groupValue == null) {return otherMergedGroup == null;} else {return groupValueIsValueType ? JCG.EqualityComparer<T>.Default.Equals(groupValue, otherMergedGroup.groupValue) : J2N.Collections.StructuralEqualityComparer.Default.Equals(groupValue, otherMergedGroup.groupValue);}} else {return false;}}
public java.nio.charset.Charset charset() {return cs;}
public DescribeExperimentResponse describeExperiment(DescribeExperimentRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeExperimentRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeExperimentResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel) {this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font("Arial", 10);this.foreground = forecolor;}
public String Pattern(){return patternText;}
public DeleteRouteTableResponse deleteRouteTable(DeleteRouteTableRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteRouteTableRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteRouteTableResponseUnmarshaller.getInstance());return invoke(request, options);}
public virtual AssociateVPCWithHostedZoneResponse associateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AssociateVPCWithHostedZoneRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateVPCWithHostedZoneResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public PutIntegrationResponse putIntegration(PutIntegrationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(PutIntegrationRequestMarshaller.getInstance());options.setResponseUnmarshaller(PutIntegrationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public SimpleEntry(K theKey, V theValue) {key = theKey;value = theValue;}
public override void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {int byte0 = blocks[blocksOffset++] & 0xFF;int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | ((int) ((uint) byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}
public virtual DisassociateConnectionFromLagResponse disassociateConnectionFromLag(DisassociateConnectionFromLagRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DisassociateConnectionFromLagRequestMarshaller.getInstance());options.setResponseUnmarshaller(DisassociateConnectionFromLagResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public FileMode getOldMode(){return oldMode;}
public String toString() {return mapEntry.toString();}
public StopKeyPhrasesDetectionJobResponse stopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StopKeyPhrasesDetectionJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopKeyPhrasesDetectionJobResponseUnmarshaller.getInstance());return invoke(request, options);}
public String toString() {StringBuilder buffer = new StringBuilder("[Array Formula or Shared Formula]\n");buffer.append("row = ").append(Row).append("\n");buffer.append("col = ").append(Column).append("\n");return buffer.toString();}
public ListDominantLanguageDetectionJobsResponse listDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListDominantLanguageDetectionJobsRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListDominantLanguageDetectionJobsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString() {return "slice start=" + start + " length=" + length + " readerIndex=" + readerIndex;}
public static int ParseHexInt4(byte digit) {byte r = digits16[digit];if (r < 0) {throw new IndexOutOfRangeException();}return r;}
public Attribute(String name, String value){this._name = name;this._value = value;}
public DescribeStackSetOperationResponse describeStackSetOperation(DescribeStackSetOperationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeStackSetOperationRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeStackSetOperationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ICell getCell(short cellnum) {int ushortCellNum = cellnum & 0x0000FFFF;return getCell(ushortCellNum);}
public void write(byte[] b) {writeContinueIfRequired(b.length);_ulrOutput.write(b);}
public ResetImageAttributeRequest(String imageId, ResetImageAttributeName attribute) {this._imageId = imageId;this._attribute = attribute;}
public void discardResultContents(){resultContents = null;}
public ObjectId getPeeledObjectId() {return getLeaf().getPeeledObjectId();}
public UndeprecateDomainResponse undeprecateDomain(UndeprecateDomainRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(UndeprecateDomainRequestMarshaller.getInstance());options.setResponseUnmarshaller(UndeprecateDomainResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public override void write(ILittleEndianOutput out1) {out1.writeByte(sid + PtgClass);out1.writeByte(field_3_string.length());out1.writeByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode) {StringUtil.putUnicodeLE(field_3_string, out1);} else {StringUtil.putCompressedUnicode(field_3_string, out1);}}
public DeleteQueueResponse deleteQueue(String queueUrl) {DeleteQueueRequest request = new DeleteQueueRequest();request.setQueueUrl(queueUrl);return deleteQueue(request);}
public void setCheckEofAfterPackFooter(boolean b) {this.checkEofAfterPackFooter = b;}
public void swap() {int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}
public int GetPackedGitWindowSize(){return packedGitWindowSize;}
public virtual PutMetricDataResponse putMetricData(PutMetricDataRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(PutMetricDataRequestMarshaller.getInstance());options.setResponseUnmarshaller(PutMetricDataResponseUnmarshaller.getInstance());return invoke(request, options);}
public GetCelebrityRecognitionResponse getCelebrityRecognition(GetCelebrityRecognitionRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetCelebrityRecognitionRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetCelebrityRecognitionResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public CreateQueueRequest(String queueName) {this._queueName = queueName;}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) {super(arearef);this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.getSheetId().getName();if (sheetName instanceof SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier) sheetName).getLastSheetIdentifier().getName();} else {this.lastSheetName = null;}}
public void setBaseline(long clockTime) {t0 = clockTime;timeout = t0 + ticksAllowed;}
public MoveAddressToVpcResponse moveAddressToVpc(MoveAddressToVpcRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(MoveAddressToVpcRequestMarshaller.getInstance());options.setResponseUnmarshaller(MoveAddressToVpcResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString(){String coll = m_collectionModel.GetName();if (coll != null){return String.format("LM %s - %s", GetName(), coll);} else {return String.format("LM %s", GetName());}}
public DescribeLagsResponse describeLags(DescribeLagsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeLagsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLagsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public AreaEval offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx) {if (_refEval == null) {return _areaEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}
public ShortBuffer put(short[] src, int srcOffset, int shortCount) {byteBuffer.limit(_limit * libcore.io.SizeOf.SHORT);byteBuffer.position(_position * libcore.io.SizeOf.SHORT);if (byteBuffer instanceof java.nio.ReadWriteDirectByteBuffer) {((java.nio.ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, shortCount);} else {((java.nio.ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, shortCount);}this._position += shortCount;return this;}
public void initialize(String cat) {this._cat = cat;}
public void write(int oneByte) {throw new UnsupportedOperationException();}
public DescribeImportImageTasksResponse describeImportImageTasks(DescribeImportImageTasksRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeImportImageTasksRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeImportImageTasksResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ColumnInfoRecord(RecordInputStream in1) {_first_col = in1.ReadUShort();_last_col = in1.ReadUShort();_col_width = in1.ReadUShort();_xf_index = in1.ReadUShort();_options = in1.ReadUShort();switch (in1.Remaining) {case 2:field_6_reserved = in1.ReadUShort();break;case 1:field_6_reserved = in1.ReadByte();break;case 0:field_6_reserved = 0;break;default:throw new Exception("Unusual record size remaining=(" + in1.Remaining + ")");}}
public Status(IndexDiff diff) {super();this.diff = diff;clean = diff.getAdded().isEmpty() && diff.getChanged().isEmpty() && diff.getRemoved().isEmpty() && diff.getMissing().isEmpty() && diff.getModified().isEmpty() && diff.getUntracked().isEmpty() && diff.getConflicting().isEmpty();}
public CreateExperimentResponse createExperiment(CreateExperimentRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateExperimentRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateExperimentResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Object clone() {return this;}
public java.nio.FloatBuffer slice() {byteBuffer.limit(_limit * libcore.io.SizeOf.FLOAT);byteBuffer.position(_position * libcore.io.SizeOf.FLOAT);java.nio.ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());java.nio.FloatBuffer result = new java.nio.FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}
public DescribeSnapshotSchedulesResponse describeSnapshotSchedules(DescribeSnapshotSchedulesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeSnapshotSchedulesRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeSnapshotSchedulesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ListImagesResponse listImages(ListImagesRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(ListImagesRequestMarshaller.getInstance());options.setResponseUnmarshaller(ListImagesResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Diff(int ins, int del, int rep, int noop) {INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}
public String ToFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[0]);buffer.append(",");buffer.append(operands[1]);return buffer.toString();}
public static void SetupEnvironment(String[] workbookNames, ForkedEvaluator[] evaluators) {WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.length];for (int i = 0; i < wbEvals.length; i++) {wbEvals[i] = evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.Setup(workbookNames, wbEvals);}
public ListPhotoTagsRequest() {super("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public class RandomSamplingFacetsCollector extends FacetsCollector {private int sampleSize;private XORShift64Random random;private DocIdSet sampledDocs;public RandomSamplingFacetsCollector(int sampleSize, long seed) {super(false);this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}}
public AllocateStaticIpResponse allocateStaticIp(AllocateStaticIpRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AllocateStaticIpRequestMarshaller.getInstance());options.setResponseUnmarshaller(AllocateStaticIpResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public FeatRecord(RecordInputStream in1) {this.futureHeader = new FtrHeader(in1);this.isf_sharedFeatureType = in1.ReadShort();this.reserved1 = (byte) in1.ReadByte();this.reserved2 = in1.ReadInt();int cref = in1.ReadUShort();this.cbFeatData = in1.ReadInt();this.reserved3 = in1.ReadShort();this.cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.length; i++) {this.cellRefs[i] = new CellRangeAddress(in1);}switch (this.isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:this.sharedFeature = new FeatProtection(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:this.sharedFeature = new FeatFormulaErr2(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:this.sharedFeature = new FeatSmartTag(in1);break;default:logger.Log(POILogger.ERROR, "Unknown Shared Feature " + this.isf_sharedFeatureType + " found!");break;}}
public RevCommit tryFastForward(RevCommit newCommit) {Ref head = repo.getRef(Constants.HEAD);if (head == null || head.getObjectId() == null) {throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, Constants.HEAD));}ObjectId headId = head.getObjectId();if (headId == null) {throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, Constants.HEAD));}RevCommit headCommit = walk.lookupCommit(headId);if (walk.isMergedInto(newCommit, headCommit)) {return newCommit;}String headName;if (head.isSymbolic()) {headName = head.getTarget().getName();} else {headName = "detached HEAD";}return tryFastForward(headName, headCommit, newCommit);}
public CreateSnapshotScheduleResponse createSnapshotSchedule(CreateSnapshotScheduleRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateSnapshotScheduleRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateSnapshotScheduleResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Record getNext() throws Exception {if (_nextIndex >= _list.size()) {throw new Exception("Attempt to Read past end of record stream");}_countRead++;return (Record) _list.get(_nextIndex++);}
public String toString() {return RawParseUtils.Decode(buf.toByteArray());}
public ListTablesRequest(String exclusiveStartTableName){this._exclusiveStartTableName = exclusiveStartTableName;}
public EnableAlarmActionsResponse enableAlarmActions(EnableAlarmActionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(EnableAlarmActionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(EnableAlarmActionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public Builder() {super();lastDocID = -1;wordNum = -1;word = 0;}
public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null || getClass() != obj.getClass()) {return false;}State other = (State) obj;return is_final == other.is_final && Arrays.equals(this.labels, other.labels) && this.states == other.states;}
public override TokenStream create(TokenStream input) {return new EnglishPossessiveFilter(m_luceneMatchVersion, input);}
public void ClearFormatting() {_string = CloneStringIfRequired();_string.ClearFormatting();AddToSSTIfRequired();}
public class YourClass extends YourSuperClass {@Overridepublic int Get(int index, long[] arr, int off, int len) {assert len > 0 : "len must be > 0 (got " + len + ")";assert index >= 0 && index < valueCount;len = Math.min(len, valueCount - index);Arrays.fill(arr, off, off + len, 0);return len;}}
public DeleteRouteResponseResponse deleteRouteResponse(DeleteRouteResponseRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteRouteResponseRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteRouteResponseResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toPrivateString(){return format(true, false);}
public CreatePresignedDomainUrlResponse createPresignedDomainUrl(CreatePresignedDomainUrlRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreatePresignedDomainUrlRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreatePresignedDomainUrlResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void write(int oneChar) {doWrite(new char[] { (char) oneChar }, 0, 1);}
public SSTRecord getSSTRecord(){return sstRecord;}
public String toString() {return "term=" + term + ",field=" + field + ",value=" + value;}
public class BloomFilter {// Assuming the method to get saturation is defined elsewherepublic float getSaturation() {return 0.0f; // Placeholder implementation}}public class FieldInfo {// Placeholder class for FieldInfo}public class FuzzySet {// Placeholder class for FuzzySet}public class BloomFilterSaturationChecker {public boolean isSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) {return bloomFilter.getSaturation() > 0.9f;}}
public Builder(boolean ignoreCase) {this.ignoreCase = ignoreCase;}
public String toString() {return this.getClass().getSimpleName() + "(maxBasicQueries: " + maxBasicQueries + ", queriesMade: " + queriesMade + ")";}
public DeleteDataSourceResponse deleteDataSource(DeleteDataSourceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeleteDataSourceRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeleteDataSourceResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public virtual RebootNodeResponse RebootNode(RebootNodeRequest request){InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RebootNodeRequestMarshaller.getInstance());options.setResponseUnmarshaller(RebootNodeResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void ProcessChildRecords(){ConvertRawBytesToEscherRecords();}
public CreateOrUpdateTagsResponse createOrUpdateTags(CreateOrUpdateTagsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateOrUpdateTagsRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateOrUpdateTagsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public FileSnapshot getSnapshot() {return snapShot;}
public InputStream openResource(String resource) {InputStream stream = this.clazz.getClass().getPackage().getResources().findResource(resource);if (stream == null) {throw new IOException("Resource not found: " + resource);}return stream;}
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(" [");sb.append("sid=").append(Integer.toHexString(_sid));sb.append(" size=").append(_data.length);sb.append(" : ").append(bytesToHex(_data));sb.append("]\n");return sb.toString();}private static String bytesToHex(byte[] bytes) {StringBuilder sb = new StringBuilder();for (byte b : bytes) {sb.append(String.format("%02x", b));}return sb.toString();}
public int nextIndex(){return index;}
public String toQueryString(EscapeQuerySyntax escaper) {if (isDefaultField(this.m_field)) {return "\"" + getTermEscapeQuoted(escaper) + "\"";} else {return this.m_field + ":" + "\"" + getTermEscapeQuoted(escaper) + "\"";}}
public Object clone() {CalcModeRecord rec = new CalcModeRecord();rec.field_1_calcmode = this.field_1_calcmode;return rec;}
public boolean isOutput() {return output;}
public CreateNetworkInterfaceResponse createNetworkInterface(CreateNetworkInterfaceRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateNetworkInterfaceRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateNetworkInterfaceResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public class YourClass implements ILittleEndianOutput {private short field_1_password;public void Serialize(ILittleEndianOutput out1) {out1.WriteShort(field_1_password);}}
public StopDominantLanguageDetectionJobResponse stopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(StopDominantLanguageDetectionJobRequestMarshaller.getInstance());options.setResponseUnmarshaller(StopDominantLanguageDetectionJobResponseUnmarshaller.getInstance());return invoke(request, options);}
public void withConnectionTimeout(int milliseconds) {connectionTimeoutInMilliseconds = milliseconds;}
public GetGatewayGroupResponse getGatewayGroup(GetGatewayGroupRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetGatewayGroupRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetGatewayGroupResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public java.nio.FloatBuffer slice() {return new java.nio.ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset + _position);}
public static String join(Collection<String> parts, String separator, String lastSeparator) {StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.size() - 1;for (String part : parts) {sb.append(part);if (i == lastIndex - 1) {sb.append(lastSeparator);} else {if (i != lastIndex) {sb.append(separator);}}i++;}return sb.toString();}
public String toString() {return "(" + a.toString() + " AND " + b.toString() + ")";}
public ListSubscriptionsByTopicRequest(String topicArn, String nextToken) {this._topicArn = topicArn;this._nextToken = nextToken;}
public byte readByte() {return bytes[pos--];}
public TerminateClientVpnConnectionsResponse terminateClientVpnConnections(TerminateClientVpnConnectionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(TerminateClientVpnConnectionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(TerminateClientVpnConnectionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ReceiveMessageRequest(String queueUrl){this._queueUrl = queueUrl;}
public void Serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_barSpace);out1.writeShort(field_2_categorySpace);out1.writeShort(field_3_formatFlags);}
public Object common(Object output1, Object output2) {return outputs.common((T) output1, (T) output2);}
public CreateVariableResponse createVariable(CreateVariableRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateVariableRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateVariableResponseUnmarshaller.getInstance());return invoke(request, options);}
public static int match(byte[] b, int ptr, byte[] src) {if (ptr + src.length > b.length) {return -1;}for (int i = 0; i < src.length; i++, ptr++) {if (b[ptr] != src[i]) {return -1;}}return ptr;}
public int fillFields(byte[] data, int offset, IEscherRecordFactory recordFactory) {int bytesRemaining = readHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.getInt(data, pos + size);size += 4;field_2_rectY1 = LittleEndian.getInt(data, pos + size);size += 4;field_3_rectX2 = LittleEndian.getInt(data, pos + size);size += 4;field_4_rectY2 = LittleEndian.getInt(data, pos + size);size += 4;bytesRemaining -= size;if (bytesRemaining != 0) throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);return 8 + size + bytesRemaining;}
public virtual CreateCloudFrontOriginAccessIdentityResponse createCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateCloudFrontOriginAccessIdentityRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.getInstance());return invoke(request, options);}
public boolean isNamespaceAware() {return getFeature(org.xmlpull.v1.XmlPullParserClass.FEATURE_PROCESS_NAMESPACES);}
public void setOverridable(boolean on) {this.overridable = on;}
public String getClassName(){return className;}
public DirectoryReader getIndexReader(){synchronized(this){if(indexReader != null){indexReader.IncRef();}return indexReader;}}
public int indexOfKey(int key) {return binarySearch(mKeys, 0, mSize, key);}
public BlankRecord(RecordInputStream in1) {field_1_row = in1.ReadUShort();field_2_col = in1.ReadShort();field_3_xf = in1.ReadShort();}
public long length() {return length_Renamed;}
public PasswordRecord(RecordInputStream in1) {this.field_1_password = in1.ReadShort();}
public HashMap(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException("Load factor: " + loadFactor);}}
public override void Run() {long lastReopenStartNS = System.currentTimeMillis() * 100;while (!finish) {boolean hasWaiting;synchronized (this) {hasWaiting = waitingGen > searchingGen;}long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - System.nanoTime();if (sleepNS > 0) {try {reopenCond.await(sleepNS / TimeUnit.MILLISECONDS.toNanos(1), TimeUnit.MILLISECONDS);} catch (InterruptedException ie) {Thread.currentThread().interrupt();return;}}if (finish) {break;}lastReopenStartNS = System.nanoTime();refreshStartGen = writer.getAndIncrementGeneration();try {manager.maybeRefreshBlocking();} catch (IOException ioe) {throw new Exception(ioe.toString(), ioe);}}RefreshDone();}
public DeleteLoginProfileRequest(String userName) {this._userName = userName;}
public E pollFirst() {return (_size == 0) ? null : removeFirstImpl();}
public CreatePhotoRequest() {super("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public String GetName(){return "resolve";}
public int findEndOffset(StringBuilder buffer, int start) {if (start > buffer.length() || start < 0) return start;int offset, count = m_maxScan;for (offset = start; offset < buffer.length() && count > 0; count--) {if (m_boundaryChars.contains(buffer.charAt(offset))) return offset;offset++;}return start;}
public void setObjectChecker(ObjectChecker oc){this.objCheck = oc;}
public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}
public virtual CreateVpcEndpointResponse createVpcEndpoint(CreateVpcEndpointRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateVpcEndpointRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateVpcEndpointResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeregisterWorkspaceDirectoryResponse deregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DeregisterWorkspaceDirectoryRequestMarshaller.getInstance());options.setResponseUnmarshaller(DeregisterWorkspaceDirectoryResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ChartFRTInfoRecord(RecordInputStream in1) {rt = in1.ReadShort();grbitFrt = in1.ReadShort();verOriginator = (byte) in1.ReadByte();verWriter = (byte) in1.ReadByte();int cCFRTID = in1.ReadShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++) {rgCFRTID[i] = new CFRTID(in1);}}
public Merger newMerger(Repository db) {return new StrategyOneSided.OneSide(db, treeIndex);}
public virtual CreateDataSourceFromRedshiftResponse createDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(CreateDataSourceFromRedshiftRequestMarshaller.getInstance());options.setResponseUnmarshaller(CreateDataSourceFromRedshiftResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public void clearDFA() {for (int d = 0; d < decisionToDFA.length; d++) {decisionToDFA[d] = new DFA(atn.getDecisionState(d), d);}}
public void RemoveName(String name) {int index = GetNameIndex(name);RemoveName(index);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[RightMargin]\n");buffer.append("    .margin               = ").append(" (").append(Margin).append(" )\n");buffer.append("[/RightMargin]\n");return buffer.toString();}
public Object clone() {return new RefreshAllRecord(_options);}
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {super(queryConfig);add(new WildcardQueryNodeProcessor());add(new MultiFieldQueryNodeProcessor());add(new FuzzyQueryNodeProcessor());add(new MatchAllDocsQueryNodeProcessor());add(new OpenRangeQueryNodeProcessor());add(new NumericQueryNodeProcessor());add(new NumericRangeQueryNodeProcessor());add(new LowercaseExpandedTermsQueryNodeProcessor());add(new TermRangeQueryNodeProcessor());add(new AllowLeadingWildcardProcessor());add(new AnalyzerQueryNodeProcessor());add(new PhraseSlopQueryNodeProcessor());add(new BooleanQuery2ModifierNodeProcessor());add(new NoChildOptimizationQueryNodeProcessor());add(new RemoveDeletedQueryNodesProcessor());add(new RemoveEmptyNonLeafQueryNodeProcessor());add(new BooleanSingleChildOptimizationQueryNodeProcessor());add(new DefaultPhraseSlopQueryNodeProcessor());add(new BoostQueryNodeProcessor());add(new MultiTermRewriteMethodProcessor());}
public String formatAsString(String sheetName, boolean useAbsoluteAddress) {StringBuilder sb = new StringBuilder();if (sheetName != null) {sb.append(SheetNameFormatter.format(sheetName));sb.append("!");}CellReference cellRefFrom = new CellReference(FirstRow, FirstColumn, useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(LastRow, LastColumn, useAbsoluteAddress, useAbsoluteAddress);sb.append(cellRefFrom.formatAsString());if (!cellRefFrom.equals(cellRefTo) || isFullColumnRange || isFullRowRange) {sb.append(':');sb.append(cellRefTo.formatAsString());}return sb.toString();}
public ByteBuffer put(int index, byte value) {throw new NotImplementedException();}
public void mode(int m) {this._mode = m;}
public java.nio.ShortBuffer slice() {return new java.nio.ReadWriteShortArrayBuffer(remaining(), backingArray, offset + position);}
public void set(int index, long n) {if (count < index) {throw new IndexOutOfBoundsException("Index out of range: " + index);} else {if (count == index) {add(n);} else {entries[index] = n;}}}
public ByteBuffer putFloat(float value) {throw new ReadOnlyBufferException();}
public static double max(double[] values) {double max = Double.NEGATIVE_INFINITY;for (int i = 0, iSize = values.length; i < iSize; i++) {max = Math.max(max, values[i]);}return max;}
public UpdateRepoWebhookRequest() {super("cr", "2016-06-07", "UpdateRepoWebhook", "cr", "openAPI");this.UriPattern = "/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]";this.Method = MethodType.POST;}
public class DeleteAttributesRequest {private String _domainName;private String _itemName;private List<Attribute> _attributes;private UpdateCondition _expected;public DeleteAttributesRequest(String domainName, String itemName, List<Attribute> attributes, UpdateCondition expected) {_domainName = domainName;_itemName = itemName;_attributes = attributes;_expected = expected;}}
public String toString() {StringBuilder sb = new StringBuilder();sb.append("[SXPI]\n");for (int i = 0; i < _fieldInfos.length; i++) {sb.append("    item[").append(i).append("]=");_fieldInfos[i].appendDebugInfo(sb);sb.append('\n');}sb.append("[/SXPI]\n");return sb.toString();}
public boolean isSuccessful() {if (mergeResult != null) {return mergeResult.getMergeStatus().isSuccessful();} else {if (rebaseResult != null) {return rebaseResult.getStatus().isSuccessful();}}return true;}
public void setBytesValue(byte[] value) {setBytesValue(new BytesRef(value));}
public DescribeConnectionsResponse describeConnections(DescribeConnectionsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeConnectionsRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeConnectionsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public DeletePhotosRequest() {super("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto", "openAPI");setProtocol(ProtocolType.HTTPS);}
public void add(E @object) {iterator.add(@object);subList.sizeChanged(true);end++;}
public static java.nio.ByteBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new IllegalArgumentException();}return new java.nio.ReadWriteHeapByteBuffer(capacity_1);}
public SrndQuery getSubQuery(int qn) { return m_queries[qn]; }
public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {if (numPayloadsSeen == 0) {return currentPayloadScore;} else {return Math.min(currentPayloadScore, currentScore);}}
public override String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[BLANK]\n");buffer.append("row       = ").append(HexDump.ShortToHex(Row)).append("\n");buffer.append("col       = ").append(HexDump.ShortToHex(Column)).append("\n");buffer.append("xf        = ").append(HexDump.ShortToHex(XFIndex)).append("\n");buffer.append("[/BLANK]\n");return buffer.toString();}
public DescribeLogPatternResponse describeLogPattern(DescribeLogPatternRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(DescribeLogPatternRequestMarshaller.getInstance());options.setResponseUnmarshaller(DescribeLogPatternResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public RegisterTransitGatewayMulticastGroupMembersResponse registerTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.getInstance());options.setResponseUnmarshaller(RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public GetPhoneNumberSettingsResponse getPhoneNumberSettings(GetPhoneNumberSettingsRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetPhoneNumberSettingsRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetPhoneNumberSettingsResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public ObjectId getData(){ return data; }
public boolean isDirect(){return false;}
public DeleteServerCertificateRequest(String serverCertificateName) {this._serverCertificateName = serverCertificateName;}
public StringBuffer append(boolean b) {return append(b ? "true" : "false");}
public virtual GetEvaluationResponse getEvaluation(GetEvaluationRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetEvaluationRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetEvaluationResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public BRAIRecord getDataName() {return dataName;}
public boolean find(int start_1) {findPos = start_1;if (findPos < _regionStart) {findPos = _regionStart;} else {if (findPos >= _regionEnd) {matchFound = false;return false;}}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}
public GetLifecyclePolicyPreviewResponse getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(GetLifecyclePolicyPreviewRequestMarshaller.getInstance());options.setResponseUnmarshaller(GetLifecyclePolicyPreviewResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public SinglePositionTokenStream(String word) {termAtt = AddAttribute(ICharTermAttribute.class);posIncrAtt = AddAttribute(IPositionIncrementAttribute.class);this.word = word;returned = true;}
public void serialize(ILittleEndianOutput out1) {out1.writeShort(field_1_print_gridlines);}
public String toString() {StringBuilder s = new StringBuilder();s.append(Constants.TypeString(getType()));s.append(' ');s.append(Name);s.append(' ');s.append(commitTime);s.append(' ');appendCoreFlags(s);return s.toString();}
public NGit.Api.LsRemoteCommand setRemote(String remote) {checkCallable();this.remote = remote;return this;}
public void CollapseRow(int rowNumber) {int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int lastRow = WriteHidden(rowRecord, startRow, true);if (GetRow(lastRow + 1) != null) {GetRow(lastRow + 1).setColapsed(true);} else {RowRecord row = CreateRow(lastRow + 1);row.setColapsed(true);InsertRow(row);}}
public virtual AssociateSkillGroupWithRoomResponse associateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request) {InvokeOptions options = new InvokeOptions();options.setRequestMarshaller(AssociateSkillGroupWithRoomRequestMarshaller.getInstance());options.setResponseUnmarshaller(AssociateSkillGroupWithRoomResponseUnmarshaller.getInstance());return Invoke.invoke(request, options);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SERIESLIST]\n");buffer.append("    .seriesNumbers        = ").append("(").append(SeriesNumbers).append(")");buffer.append(System.lineSeparator());buffer.append("[/SERIESLIST]\n");return buffer.toString();}
public QueryConfigHandler getQueryConfigHandler(){return this.queryConfig;}
public String getClassName() {if (originalArgs != null) {String className = originalArgs[CLASS_NAME];if (className != null) {return className;}}return this.getClass().getName();}
