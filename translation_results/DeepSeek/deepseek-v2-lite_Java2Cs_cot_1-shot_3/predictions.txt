public void serialize(LittleEndianOutput out){out.writeShort(field_1_vcenter);}
public void addAll(BlockList<T> src){if (src.size == 0) return;int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++) addAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);if (src.tailBlkIdx != 0) addAll(src.tailBlock, 0, src.tailBlkIdx);}
public void writeByte(byte b){if (upto == blockSize){if (currentBlock != null){addBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}currentBlock[upto++] = b;}
public ObjectId GetObjectId() { return objectId; }
public virtual DeleteDomainEntryResult DeleteDomainEntry(DeleteDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDomainEntryResultUnmarshaller.Instance;return Invoke<DeleteDomainEntryResult>(request, options);}
public long ramBytesUsed() {return ((termOffsets != null) ? termOffsets.ramBytesUsed() : 0) + ((termsDictOffsets != null) ? termsDictOffsets.ramBytesUsed() : 0);}
public final string GetFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.TagMessage(raw, 0);if (msgB < 0) {return ""; }return RawParseUtils.Decode(GuessEncoding(), raw, msgB, raw.Length);}
public POIFSFileSystem() { this(true); _header.SetBatCount(1); _header.SetBatArray(new int[] { 1 }); BATBlock bb = BATBlock.CreateEmptyBatBlock(bigBlockSize, false); bb.SetOurBlockIndex(1); _bat_blocks.Add(bb); SetNextBlock(0, POIFSConstants.END_OF_CHAIN); SetNextBlock(1, POIFSConstants.FAT_SECTOR_BLOCK); _property_table.SetStartBlock(0); }
public void Init(int address){slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];System.Diagnostics.Debug.Assert(slice != null);upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;System.Diagnostics.Debug.Assert(upto < slice.Length);}
public SubmoduleAddCommand SetPath(string path) { this.path = path; return this; }
public virtual ListIngestionsResponse ListIngestions(ListIngestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;return Invoke<ListIngestionsResponse>(request, options);}
public QueryParserTokenManager(CharStream stream, int lexState){this(stream); SwitchTo(lexState);}
public virtual GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetShardIteratorRequestMarshaller.Instance;options.ResponseUnmarshaller = GetShardIteratorResponseUnmarshaller.Instance;return Invoke<GetShardIteratorResponse>(request, options);}
public ModifyStrategyRequest() : base("aegis", "2016-11-11", "ModifyStrategy", "vipaegis"){SetMethod(MethodType.POST);}
public bool Ready(){lock (lock){if (in == null){throw new IOException("InputStreamReader is closed");}try{return bytes.HasRemaining() || in.Available() > 0;}catch (IOException e){return false;}}}
public EscherOptRecord GetOptRecord() { return _optRecord; }
public int Read(byte[] buffer, int offset, int length){if (buffer == null){throw new ArgumentNullException(nameof(buffer), "buffer == null");}if (offset < 0 || length < 0 || offset + length > buffer.Length){throw new ArgumentOutOfRangeException(nameof(length), "Invalid offset or length");}if (length == 0){return 0;}int copylen = this.count - this.pos < length ? this.count - this.pos : length;for (int i = 0; i < copylen; i++){buffer[offset + i] = (byte)this.buffer[this.pos + i];}this.pos += copylen;return copylen;}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp){this.sentenceOp = sentenceOp;}
public void print(string str) {write(str != null ? str : string.IsNullOrEmpty(str) ? null : str);}
public NotImplementedFunctionException(string functionName, NotImplementedException cause) : base(functionName, cause) { this.functionName = functionName; }
public V Next() { return base.NextEntry().Value; }
public final void ReadBytes(byte[] b, int offset, int len, bool useBuffer){int available = bufferLength - bufferPosition;if (len <= available){if (len > 0) System.arraycopy(buffer, bufferPosition, b, offset, len);bufferPosition += len;}else{if (available > 0){System.arraycopy(buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize){Refill();if (bufferLength < len){System.arraycopy(buffer, 0, b, offset, bufferLength);throw new EOFException("read past EOF: " + this);}else{System.arraycopy(buffer, 0, b, offset, len);bufferPosition = len;}}else{long after = bufferStart + bufferPosition + len;if (after > length()) throw new EOFException("read past EOF: " + this);ReadInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;}}}
public virtual TagQueueResult TagQueue(TagQueueRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance;return Invoke<TagQueueResult>(request, options);}
public void Remove() { throw new System.NotSupportedException(); }
public virtual ModifyCacheSubnetGroupResponse ModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyCacheSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyCacheSubnetGroupResponseUnmarshaller.Instance;return Invoke<ModifyCacheSubnetGroupResponse>(request, options);}
public void SetParams(string params) {base.SetParams(params);language = country = variant = "";StringTokenizer st = new StringTokenizer(params, ",");if (st.HasMoreTokens()) language = st.NextToken();if (st.HasMoreTokens()) country = st.NextToken();if (st.HasMoreTokens()) variant = st.NextToken();}
public virtual DeleteDocumentationVersionResult DeleteDocumentationVersion(DeleteDocumentationVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationVersionResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationVersionResult>(request, options);}
public override bool Equals(object obj) {if (!(obj is FacetLabel)) {return false;}FacetLabel other = (FacetLabel)obj;if (length != other.length) {return false;}for (int i = length - 1; i >= 0; i--) {if (!components[i].Equals(other.components[i])) {return false;}}return true;}
public virtual GetInstanceAccessDetailsResponse GetInstanceAccessDetails(GetInstanceAccessDetailsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetInstanceAccessDetailsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetInstanceAccessDetailsResponseUnmarshaller.Instance;return Invoke<GetInstanceAccessDetailsResponse>(request, options);}
public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.Parent = this;shape.Anchor = anchor;shapes.Add(shape);OnCreate(shape);return shape;}
public string GetSheetName(int sheetIndex){return GetBoundSheetRec(sheetIndex).Sheetname;}
public virtual GetDashboardResponse GetDashboard(GetDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDashboardResponseUnmarshaller.Instance;return Invoke<GetDashboardResponse>(request, options);}
public virtual AssociateSigninDelegateGroupsWithAccountResult AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return Invoke<AssociateSigninDelegateGroupsWithAccountResult>(request, options);}
public void addMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.setColumn((short)(j + mbr.getFirstColumn()));br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));insertCell(br);}}
public static string Quote(string string) { StringBuilder sb = new StringBuilder(); sb.Append("\\Q"); int apos = 0; int k; while ((k = string.IndexOf("\\E", apos)) >= 0) { sb.Append(string.Substring(apos, k + 2)).Append("\\\\E\\Q"); apos = k + 2; } return sb.Append(string.Substring(apos)).Append("\\E").ToString(); }
public byte[] PutInt(int value) { throw new ReadOnlyBufferException(); }
public ArrayPtg(Object[][] values2d) {int nColumns = values2d[0].Length;int nRows = values2d.Length;_nColumns = (short)nColumns;_nRows = (short)nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++) {Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++) {vv[GetValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}
public virtual GetIceServerConfigResult GetIceServerConfig(GetIceServerConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetIceServerConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIceServerConfigResponseUnmarshaller.Instance;return Invoke<GetIceServerConfigResult>(request, options);}
public string ToString() { return GetType().Name + " [" + GetValueAsString() + "]"; }
public string ToString(string field) {return "ToChildBlockJoinQuery (" + parentQuery.ToString() + ")";}
public final void IncRef() { refCount.IncrementAndGet(); }
public virtual UpdateConfigurationSetSendingEnabledResult UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationSetSendingEnabledResult>(request, options);}
public int GetNextXBATChainOffset(){return GetXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}
public void MultiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.GetInstance(Math.Abs(pow10));if (pow10 < 0) {MulShift(tp._divisor, tp._divisorShift);} else {MulShift(tp._multiplicand, tp._multiplierShift);}}
public string ToString(){var b = new StringBuilder();var l = Length();b.Append(Path.DirectorySeparatorChar);for (int i = 0; i < l; i++){b.Append(GetComponent(i));if (i < l - 1){b.Append(Path.DirectorySeparatorChar);}}return b.ToString();}
public InstanceProfileCredentialsProvider WithFetcher(ECSMetadataServiceCredentialsFetcher fetcher){this.fetcher = fetcher;this.fetcher.SetRoleName(roleName);return this;}
public void SetProgressMonitor(ProgressMonitor pm) { progressMonitor = pm; }
public void Reset() {if (!First()) {ptr = 0;if (!Eof()) ParseEntry();}}
public E Previous() {if (iterator.PreviousIndex() >= start) {return iterator.Previous();}throw new NoSuchElementException();}
public string GetNewPrefix() { return this.newPrefix; }
public int IndexOfValue(int value) {for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;return -1;}
public List<CharsRef> UniqueStems(char[] word, int length) {List<CharsRef> stems = Stem(word, length);if (stems.Count < 2) {return stems;}CharArraySet terms = new CharArraySet(8, dictionary.IgnoreCase);List<CharsRef> deduped = new ArrayList<CharsRef>();foreach (CharsRef s in stems) {if (!terms.Contains(s)) {deduped.Add(s);terms.Add(s);}}return deduped;}
public virtual GetGatewayResponsesResult GetGatewayResponses(GetGatewayResponsesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance;return Invoke<GetGatewayResponsesResult>(request, options);}
public void SetPosition(long pos) {currentBlockIndex = (int)(pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int)(pos & blockMask);}
public long skip(long n) {int s = (int)Math.Min(available(), Math.Max(0, n)); ptr += s; return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig){SetBootstrapActionConfig(bootstrapActionConfig);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_row);out.writeShort(field_2_col);out.writeShort(field_3_flags);out.writeShort(field_4_shapeid);out.writeShort(field_6_author.Length);out.writeByte(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.putUnicodeLE(field_6_author, out);} else {StringUtil.putCompressedUnicode(field_6_author, out);}if (field_7_padding != null) {out.writeByte(field_7_padding.Value);}}
public int LastIndexOf(string string) { return LastIndexOf(string, Count); }
public bool Add(E object){return AddLastImpl(object);}
public void unsetSection(string section, string subsection){var src = state.get();var res = unsetSection(src, section, subsection);while (!state.compareAndSet(src, res)){src = state.get();res = unsetSection(src, section, subsection);}}Thought steps:# Step 1: The method is named 'unsetSection' and follows Java's lowerCamelCase convention.# Step 2: In C#, method names use PascalCase, so rename it to 'UnsetSection'.# Step 3: The parameter types 'String section' and 'String subsection' remain unchanged.# Step 4: Java uses 'state' for maintaining a reference to the current state, which can be represented by a variable in C#.# Step 5: The 'do-while' loop in Java is equivalent to a 'while' loop in C#.# Step 6: The 'compareAndSet' method in Java's atomic reference is equivalent to the 'compareAndSet' method in C# for maintaining thread safety.# Step 7: The final summary: Convert the Java loop and atomic reference to their C# equivalents, adjusting for naming conventions only.
public final string GetTagName() { return tagName; }
public void AddSubRecord(int index, SubRecord element){subrecords.Insert(index, element);}
public bool Remove(object o) {lock (mutex) {return delegate().Remove(o);}}
public DoubleMetaphoneFilter Create(TokenStream input){return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long Length() { return InCoreLength(); }
public void SetValue(bool newValue) { value = newValue; }
public Pair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}
public int Get(int i) { if (count <= i) throw new ArgumentOutOfRangeException(nameof(i), $"Index {i} is out of bounds."); return entries[i]; }
public CreateRepoRequest() : base("cr", "2016-06-07", "CreateRepo", "cr"){UriPattern = "/repos";Method = MethodType.PUT;}
public bool isDeltaBaseAsOffset(){return deltaBaseAsOffset;}
public void remove(){if (expectedModCount == list.modCount){if (lastLink != null){Link<ET> next = lastLink.next;Link<ET> previous = lastLink.previous;next.previous = previous;previous.next = next;if (lastLink == link){pos--;}link = previous;lastLink = null;expectedModCount++;list.size--;list.modCount++;}else{throw new InvalidOperationException();}}else{throw new ConcurrentModificationException();}}
public virtual MergeShardsResponse MergeShards(MergeShardsRequest request){var options = new InvokeOptions();options.RequestMarshaller = MergeShardsRequestMarshaller.Instance;options.ResponseUnmarshaller = MergeShardsResponseUnmarshaller.Instance;return Invoke<MergeShardsResponse>(request, options);}
public virtual AllocateHostedConnectionResponse AllocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;return Invoke<AllocateHostedConnectionResponse>(request, options);}
public int GetBeginIndex(){return start;}
public static final WeightedTerm[] GetTerms(Query query){return GetTerms(query,false);}
public MemoryStream Compact() { throw new ReadOnlyCollectionException(); }
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final int byte0 = blocks[blocksOffset++];values[valuesOffset++] = byte0 >> 2;final int byte1 = blocks[blocksOffset++];values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >> 4);values[valuesOffset++] = ((byte1 & 15) << 2) | (blocks[blocksOffset++] >> 6);values[valuesOffset++] = blocks[blocksOffset++] & 63;}}
public string GetHumanishName(){string s = GetPath();if (s == "/" || s == "")s = GetHost();if (s == null)throw new ArgumentException();string[] elements;if (scheme == "file" || LOCAL_FILE.IsMatch(s))elements = s.Split(new[] { Path.DirectorySeparatorChar, '/' }, StringSplitOptions.RemoveEmptyEntries);elseelements = s.Split(new[] { "/" }, StringSplitOptions.RemoveEmptyEntries);if (elements.Length == 0)throw new ArgumentException();string result = elements[elements.Length - 1];if (Constants.DOT_GIT.Equals(result))result = elements[elements.length - 2];else if (result.EndsWith(Constants.DOT_GIT_EXT))result = result.Substring(0, result.Length - Constants.DOT_GIT_EXT.Length);return result;}
public virtual DescribeNotebookInstanceLifecycleConfigResult DescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance;return Invoke<DescribeNotebookInstanceLifecycleConfigResult>(request, options);}
public string GetAccessKeySecret() { return this.accessKeySecret; }
public virtual CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpnConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnConnectionResponseUnmarshaller.Instance;return Invoke<CreateVpnConnectionResponse>(request, options);}
public virtual DescribeVoicesResult DescribeVoices(DescribeVoicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVoicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVoicesResponseUnmarshaller.Instance;return Invoke<DescribeVoicesResult>(request, options);}
public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance;return Invoke<ListMonitoringExecutionsResponse>(request, options);}
public DescribeJobRequest(string vaultName, string jobId) {SetVaultName(vaultName);SetJobId(jobId);}
public EscherRecord GetEscherRecord(int index){return escherRecords[index];}
public virtual GetApisResponse GetApis(GetApisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApisResponseUnmarshaller.Instance;return Invoke<GetApisResponse>(request, options);}
public virtual DeleteSmsChannelResult DeleteSmsChannel(DeleteSmsChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteSmsChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteSmsChannelResponseUnmarshaller.Instance;return Invoke<DeleteSmsChannelResult>(request, options);}
public TrackingRefUpdate GetTrackingRefUpdate(){return trackingRefUpdate;}
public void print(bool b) { print(Convert.ToString(b)); }
public QueryNode GetChild(){return GetChildren().First();}
public NotIgnoredFilter(int workdirTreeIndex) { this.index = workdirTreeIndex; }
public AreaRecord(RecordInputStream in) {Field_1_FormatFlags = in.ReadShort();}
public GetThumbnailRequest() : base("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
public virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTransitGatewayVpcAttachmentsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.Instance;return Invoke<DescribeTransitGatewayVpcAttachmentsResponse>(request, options);}
public virtual PutVoiceConnectorStreamingConfigurationResult PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;return Invoke<PutVoiceConnectorStreamingConfigurationResult>(request, options);}
public OrdRange GetOrdRange(string dim) { return prefixToOrdRange.get(dim); }
public override string ToString() {var symbol = "";if (startIndex >= 0 && startIndex < getInputStream().size()) {symbol = getInputStream().getText(Interval.of(startIndex, startIndex));symbol = Utils.escapeWhitespace(symbol, false);}return string.Format(System.Globalization.CultureInfo.InvariantCulture, "%s('%s')", typeof(LexerNoViableAltException).Name, symbol);}
public E Peek() { return PeekFirstImpl(); }
public virtual CreateWorkspacesResult CreateWorkspaces(CreateWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance;return Invoke<CreateWorkspacesResult>(request, options);}
public NumberFormatIndexRecord Clone() { return Copy(); }
public virtual DescribeRepositoriesResponse DescribeRepositories(DescribeRepositoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.Instance;return Invoke<DescribeRepositoriesResponse>(request, options);}
public SparseIntArray(int initialCapacity){initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}
public HyphenatedWordsFilter Create(TokenStream input) { return new HyphenatedWordsFilter(input); }
public virtual CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateDistributionWithTagsResponse>(request, options);}
public RandomAccessFile(string fileName, string mode) : this(new File(fileName), mode){}
public virtual DeleteWorkspaceImageResult DeleteWorkspaceImage(DeleteWorkspaceImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteWorkspaceImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteWorkspaceImageResponseUnmarshaller.Instance;return Invoke<DeleteWorkspaceImageResult>(request, options);}
public static string ToHex(long value) { StringBuilder sb = new StringBuilder(16); writeHex(sb, value, 16, ""); return sb.toString(); }
public virtual UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDistributionResponseUnmarshaller.Instance;return Invoke<UpdateDistributionResponse>(request, options);}
public CustomColor GetColor(short index){if (index == HSSFColorPredefined.AUTOMATIC.GetIndex()) {return HSSFColorPredefined.AUTOMATIC.GetColor();}byte[] b = _palette.GetColor(index);return (b == null) ? null : new CustomColor(index, b);}
public ValueEval Evaluate(ValueEval[] operands, int srcRow, int srcCol) { throw new NotImplementedFunctionException(_functionName); }
public void Serialize(LittleEndianOutput out) {out.WriteShort((short)Field_1_Number_CRN_Records);out.WriteShort((short)Field_2_Sheet_Table_Index);}
public DescribeDBEngineVersionsResponse DescribeDBEngineVersions(){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBEngineVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBEngineVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDBEngineVersionsResponse>(new DescribeDBEngineVersionsRequest(), options);}
public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}
public static byte[] ToBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte) (ch >> 8);result[resultIndex++] = (byte) ch;}return result;}
public virtual UploadArchiveResponse UploadArchive(UploadArchiveRequest request){var options = new InvokeOptions();options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;return Invoke<UploadArchiveResponse>(request, options);}
public List<Token> GetHiddenTokensToLeft(int tokenIndex){return GetHiddenTokensToLeft(tokenIndex, -1);}
public override bool Equals(object obj){if (this == obj) return true;if (!base.Equals(obj)) return false;if (this.GetType() != obj.GetType()) return false;AutomatonQuery other = (AutomatonQuery)obj;if (!this.compiled.Equals(other.compiled)) return false;if (this.term == null){if (other.term != null) return false;}else if (!this.term.Equals(other.term)) return false;return true;}
public Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Abstractions.SpanQuery MakeSpanClause() {Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Abstractions.SpanQuery[] spanQueries = new Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Abstractions.SpanQuery[this.Size()];System.Collections.Generic.Iterator<Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Abstractions.SpanQuery> sqi = this.weightBySpanQuery.Keys.GetEnumerator();int i = 0;while (sqi.MoveNext()) {Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Abstractions.SpanQuery sq = sqi.Current;float boost = this.weightBySpanQuery[sq];if (boost != 1f) {sq = new Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Queries.SpanBoostQuery(sq, boost);}spanQueries[i++] = sq;}if (spanQueries.Length == 1)return spanQueries[0];elsereturn new Microsoft.Azure.WebJobs.Extensions.OpenApi.Core.Queries.SpanOrQuery(spanQueries);}
public StashCreateCommand StashCreate() {return new StashCreateCommand(repo);}
public FieldInfo FieldInfo(string fieldName){return byName.Get(fieldName);}
public virtual DescribeEventSourceResult DescribeEventSource(DescribeEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeEventSourceResponseUnmarshaller.Instance;return Invoke<DescribeEventSourceResult>(request, options);}
public virtual GetDocumentAnalysisResult GetDocumentAnalysis(GetDocumentAnalysisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentAnalysisResponseUnmarshaller.Instance;return Invoke<GetDocumentAnalysisResult>(request, options);}
public virtual CancelUpdateStackResponse CancelUpdateStack(CancelUpdateStackRequest request){var options = new InvokeOptions();options.RequestMarshaller = CancelUpdateStackRequestMarshaller.Instance;options.ResponseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;return Invoke<CancelUpdateStackResponse>(request, options);}
public virtual ModifyLoadBalancerAttributesResult ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;return Invoke<ModifyLoadBalancerAttributesResult>(request, options);}
public virtual SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetInstanceProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetInstanceProtectionResponseUnmarshaller.Instance;return Invoke<SetInstanceProtectionResponse>(request, options);}
public virtual ModifyDBProxyResult ModifyDBProxy(ModifyDBProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBProxyResultUnmarshaller.Instance;return Invoke<ModifyDBProxyResult>(request, options);}
public void Add(char[] output, int offset, int len, int endOffset, int posLength){if (count == outputs.Length){outputs = ArrayUtil.Grow(outputs, count + 1);}if (count == endOffsets.Length){int[] next = new int[ArrayUtil.Oversize(1 + count, sizeof(int))];System.arraycopy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.Length){int[] next = new int[ArrayUtil.Oversize(1 + count, sizeof(int))];System.arraycopy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null){outputs[count] = new CharsRefBuilder();}outputs[count].CopyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}
public FetchLibrariesRequest() : base("CloudPhoto", "2017-07-11", "FetchLibraries", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public bool exists() { return fs.Exists(objects); }
public FilterOutputStream(System.IO.Stream out) { this.out = out; }
public ScaleClusterRequest() : base("CS", "2015-12-15", "ScaleCluster", "csk"){UriPattern = "/clusters/[ClusterId]";Method = MethodType.PUT;}
public DataValidationConstraint CreateTimeConstraint(int operatorType, string formula1, string formula2){return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2);}
public virtual ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectParentPathsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectParentPathsResponseUnmarshaller.Instance;return Invoke<ListObjectParentPathsResponse>(request, options);}
public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeCacheSubnetGroupsResponse>(request, options);}
public void SetSharedFormula(bool flag){field_5_options = sharedFormula.SetShortBoolean(field_5_options, flag);}
public bool IsReuseObjects() { return reuseObjects; }
public ErrorNodeImpl AddErrorNode(Token badToken){var t = new ErrorNodeImpl(badToken);AddAnyChild(t);t.SetParent(this);return t;}
public LatvianStemFilterFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){if (!args.IsEmpty) {throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual RemoveSourceIdentifierFromSubscriptionResponse RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){var options = new InvokeOptions();options.RequestMarshaller = RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance;options.ResponseUnmarshaller = RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance;return Invoke<RemoveSourceIdentifierFromSubscriptionResponse>(request, options);}
public static TokenFilterFactory ForName(string name, System.Collections.Generic.IDictionary<string, string> args){return loader.NewInstance(name, args);}
public AddAlbumPhotosRequest(){Protocol = "HTTPS";ServiceName = "CloudPhoto";DateFormat = "2017-07-11";EndpointPrefix = "cloudphoto";}
public virtual GetThreatIntelSetResult GetThreatIntelSet(GetThreatIntelSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;return Invoke<GetThreatIntelSetResult>(request, options);}
public RevFilter Clone() {return new Binary((a as Binary).Clone(), (b as Binary).Clone());}
public bool Equals(Object o) { return o is ArmenianStemmer; }
public final bool hasArray(){return protectedHasArray();}
public virtual UpdateContributorInsightsResult UpdateContributorInsights(UpdateContributorInsightsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContributorInsightsResultUnmarshaller.Instance;return Invoke<UpdateContributorInsightsResult>(request, options);}
public void UnwriteProtectWorkbook(){records.Remove(fileShare);records.Remove(writeProtect);fileShare = null;writeProtect = null;}
public SolrSynonymParser(bool dedup, bool expand, Analyzer analyzer) : base(dedup, analyzer){this.expand = expand;}
public virtual RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return Invoke<RequestSpotInstancesResponse>(request, options);}
public byte[] GetObjectData(){return FindObjectRecord().GetObjectData();}
public virtual GetContactAttributesResponse GetContactAttributes(GetContactAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;return Invoke<GetContactAttributesResponse>(request, options);}
public override string ToString() { return GetKey() + ": " + GetValue(); }
public virtual ListTextTranslationJobsResponse listTextTranslationJobs(ListTextTranslationJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTextTranslationJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTextTranslationJobsResponseUnmarshaller.Instance;return Invoke<ListTextTranslationJobsResponse>(request, options);}
public virtual GetContactMethodsResponse GetContactMethods(GetContactMethodsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactMethodsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactMethodsResponseUnmarshaller.Instance;return Invoke<GetContactMethodsResponse>(request, options);}
public static short LookupIndexByName(string name) {FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);if (fd == null) {fd = GetInstanceCetab().GetFunctionByNameInternal(name);if (fd == null) {return -1;}}return (short) fd.GetIndex();}
public virtual DescribeAnomalyDetectorsResult DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAnomalyDetectorsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAnomalyDetectorsResponseUnmarshaller.Instance;return Invoke<DescribeAnomalyDetectorsResult>(request, options);}
public static string InsertId(string message, ObjectId changeId){return InsertId(message, changeId, false);}
public long GetObjectSize(AnyObjectId objectId, int typeHint){long sz = db.GetObjectSize(this, objectId);if (sz < 0){if (typeHint == OBJ_ANY)throw new MissingObjectException(objectId.Copy(), JGitText.Get().unknownObjectType2);throw new MissingObjectException(objectId.Copy(), typeHint);}return sz;}
public virtual ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request){var options = new InvokeOptions();options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance;options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance;return Invoke<ImportInstallationMediaResponse>(request, options);}
public virtual PutLifecycleEventHookExecutionStatusResult PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResponseUnmarshaller.Instance;return Invoke<PutLifecycleEventHookExecutionStatusResult>(request, options);}
public NumberPtg(LittleEndianInput in)  {this(in.ReadDouble());}
public virtual GetFieldLevelEncryptionConfigResult GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFieldLevelEncryptionConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFieldLevelEncryptionConfigResponseUnmarshaller.Instance;return Invoke<GetFieldLevelEncryptionConfigResult>(request, options);}
public virtual DescribeDetectorResult DescribeDetector(DescribeDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDetectorResponseUnmarshaller.Instance;return Invoke<DescribeDetectorResult>(request, options);}
public virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance;return Invoke<ReportInstanceStatusResponse>(request, options);}
public virtual DeleteAlarmResult DeleteAlarm(DeleteAlarmRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAlarmRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAlarmResultUnmarshaller.Instance;return Invoke<DeleteAlarmResult>(request, options);}
public TokenStream Create(TokenStream input){return new PortugueseStemFilter(input);}
public FtCblsSubRecord() { reserved = new byte[ENCODED_SIZE]; }
[System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0040:Add accessibility modifiers", Justification = "Java-like syntax")]public override bool Remove(object obj){lock (mutex){return c.Remove(obj);}}
public virtual GetDedicatedIpResult GetDedicatedIp(GetDedicatedIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDedicatedIpRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDedicatedIpResponseUnmarshaller.Instance;return Invoke<GetDedicatedIpResult>(request, options);}
public override string ToString() { return precedence + " >= _p"; }
public virtual ListStreamProcessorsResponse ListStreamProcessors(ListStreamProcessorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListStreamProcessorsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.Instance;return Invoke<ListStreamProcessorsResponse>(request, options);}
public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName){SetLoadBalancerName(loadBalancerName);SetPolicyName(policyName);}
public WindowProtectRecord(int options) { _options = options; }
public UnbufferedCharStream(int bufferSize){n = 0;data = new int[bufferSize];}
public virtual GetOperationsResponse GetOperations(GetOperationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOperationsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationsResponseUnmarshaller.Instance;return Invoke<GetOperationsResponse>(request, options);}
public void copyRawTo(byte[] b, int o) {NB.encodeInt32(b, o, w1);NB.encodeInt32(b, o + 4, w2);NB.encodeInt32(b, o + 8, w3);NB.encodeInt32(b, o + 12, w4);NB.encodeInt32(b, o + 16, w5);}
public WindowOneRecord(RecordInputStream in) {Field_1_h_hold = in.ReadShort();Field_2_v_hold = in.ReadShort();Field_3_width = in.ReadShort();Field_4_height = in.ReadShort();Field_5_options = in.ReadShort();Field_6_active_sheet = in.ReadShort();Field_7_first_visible_tab = in.ReadShort();Field_8_num_selected_tabs = in.ReadShort();Field_9_tab_width_ratio = in.ReadShort();}
public virtual StopWorkspacesResult StopWorkspaces(StopWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;return Invoke<StopWorkspacesResult>(request, options);}
public void close() throws IOException {if (isOpen) {isOpen = false;try {dump();} finally {try {channel.truncate(fileLength);} finally {try {channel.close();} finally {fos.close();}}}}}
public virtual DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);}
public string GetPronunciation(int wordId, char[] surface, int off, int len) {return null;}
public string GetPath() {return pathStr;}
public static double Devsq(double[] v) {double r = double.NaN;if (v != null && v.Length >= 1) {double m = 0;double s = 0;int n = v.Length;for (int i = 0; i < n; i++) {s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++) {s += (v[i] - m) * (v[i] - m);}r = (n == 1) ? 0 : s;}return r;}
public virtual DescribeResizeResponse DescribeResize(DescribeResizeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResizeRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResizeResponseUnmarshaller.Instance;return Invoke<DescribeResizeResponse>(request, options);}
public final bool HasPassedThroughNonGreedyDecision(){return passedThroughNonGreedyDecision;}
public int End() { return End(0); }
public void traverse(CellHandler handler) {int firstRow = range.getFirstRow();int lastRow = range.getLastRow();int firstColumn = range.getFirstColumn();int lastColumn = range.getLastColumn();final int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();Row currentRow = null;Cell currentCell = null;for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber) {currentRow = sheet.getRow(ctx.rowNumber);if (currentRow == null) {continue;}for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber) {currentCell = currentRow.getCell(ctx.colNumber);if (currentCell == null) {continue;}if (isEmpty(currentCell) && !traverseEmptyCells) {continue;}long rowSize = ArithmeticUtils.mulAndCheck((long)ArithmeticUtils.subAndCheck(ctx.rowNumber, firstRow), (long)width);ctx.ordinalNumber = ArithmeticUtils.addAndCheck(rowSize, (ctx.colNumber - firstColumn + 1));handler.onCell(currentCell, ctx);}}}
public int GetReadIndex() { return pos; }
public int CompareTo(ScoreTerm other){if (this.Boost == other.Boost)return other.Bytes.Get().CompareTo(this.Bytes.Get());elsereturn float.Compare(this.Boost, other.Boost);}
public int Normalize(char[] s, int len) {for (int i = 0; i < len; i++) {switch (s[i]) {case 'ف':case 'ی':s[i] = 'ی';break;case 'ک':s[i] = 'ك';break;case 'ه':if (i + 1 < len && s[i + 1] == 'ی') {i++;}s[i] = 'ه';break;case 'أ':len = Delete(s, i, len);i--;break;default:break;}}return len;}
public void serialize(LittleEndianOutput out){out.writeShort(_options);}
public DiagnosticErrorListener(bool exactOnly) { this.exactOnly = exactOnly; }
public KeySchemaElement(string attributeName, KeyType keyType) { SetAttributeName(attributeName); SetKeyType(keyType.ToString()); }
public virtual GetAssignmentResponse GetAssignment(GetAssignmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;return Invoke<GetAssignmentResponse>(request, options);}
public bool hasObject(AnyObjectId id){return findOffset(id) != -1;}
public GroupingSearch SetAllGroups(bool allGroups) { this.allGroups = allGroups; return this; }
public virtual void SetMultiValued(string dimName, bool v){var ft = fieldTypes.GetOrDefault(dimName, new DimConfig());ft.multiValued = v;}
public int GetCellsVal() {var i = cells.Keys.GetEnumerator();int size = 0;while (i.MoveNext()) {char c = i.Current;Cell e = at(c);if (e.cmd >= 0) {size++;}}return size;}
public virtual DeleteVoiceConnectorResponse DeleteVoiceConnector(DeleteVoiceConnectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorResponse>(request, options);}
public virtual DeleteLifecyclePolicyResult DeleteLifecyclePolicy(DeleteLifecyclePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLifecyclePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLifecyclePolicyResultUnmarshaller.Instance;return Invoke<DeleteLifecyclePolicyResult>(request, options);}
public void Write(byte[] b) {int len = b.Length;CheckPosition(len);System.Array.Copy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}
public RebaseResult GetRebaseResult(){return this.rebaseResult;}
public static int GetNearestSetSize(int maxNumberOfValuesExpected, float desiredSaturation) { for (int i = 0; i < usableBitSetSizes.Length; i++) { int numSetBitsAtDesiredSaturation = (int)(usableBitSetSizes[i] * desiredSaturation); int estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(usableBitSetSizes[i], numSetBitsAtDesiredSaturation); if (estimatedNumUniqueValues > maxNumberOfValuesExpected) { return usableBitSetSizes[i]; } } return -1; }
public virtual DescribeDashboardResult DescribeDashboard(DescribeDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return Invoke<DescribeDashboardResult>(request, options);}
public virtual CreateSegmentResponse CreateSegment(CreateSegmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSegmentResponseUnmarshaller.Instance;return Invoke<CreateSegmentResponse>(request, options);}
public string ToString() {var buffer = new StringBuilder();buffer.AppendLine("[DBCELL]");buffer.Append("    .rowoffset = ").Append(HexDump.IntToHex(field_1_row_offset)).AppendLine();for (int k = 0; k < field_2_cell_offsets.Length; k++) {buffer.Append("    .cell_").Append(k).Append(" = ").Append(HexDump.ShortToHex(field_2_cell_offsets[k])).AppendLine();}buffer.AppendLine("[/DBCELL]");return buffer.ToString();}
public List<string> GetUndeletedList() { return undeletedList; }
public override string ToString() { return "[INTERFACEEND/]\n"; }
public MergeScheduler Clone() {return this;}
public PlainTextDictionary(System.IO.TextReader reader){in = new System.IO.StreamReader(reader);}
public StringBuilder Append(char[] csq) {if (csq == null) {AppendNull();} else {Append0(csq, 0, csq.Length);}return this;}
public virtual ListAssociatedStacksResponse listAssociatedStacks(ListAssociatedStacksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance;return Invoke<ListAssociatedStacksResponse>(request, options);}
public static double Avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++) {s += v[i];}m = s / v.Length;s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++) {s += Math.Abs(v[i] - m);}r = s / v.Length;return r;}
public virtual DescribeByoipCidrsResult DescribeByoipCidrs(DescribeByoipCidrsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeByoipCidrsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.Instance;return Invoke<DescribeByoipCidrsResult>(request, options);}
public virtual GetDiskResponse GetDisk(GetDiskRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDiskRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDiskResponseUnmarshaller.Instance;return Invoke<GetDiskResponse>(request, options);}
public virtual CreateDBClusterParameterGroupResponse CreateDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBClusterParameterGroupResponseUnmarshaller.Instance;return Invoke<CreateDBClusterParameterGroupResponse>(request, options);}
public static CharBuffer Wrap(char[] array, int start, int charCount) {System.Array.InternalGetOffsetAndLength(array.Length, start, charCount);CharBuffer buf = new ReadWriteCharArrayBuffer(array);buf.Position = start;buf.Limit = start + charCount;return buf;}
public SubmoduleStatusTypeType() { return type; }
public virtual DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;return Invoke<DescribeGameServerGroupResponse>(request, options);}
public Regex Pattern() { return pattern; }
public V setValue(V object){throw new NotImplementedException();}
public StringBuilder Stem(string word) {string cmd = stemmer.GetLastOnPath(word);if (cmd == null)return null;buffer.Length = 0;buffer.Append(word);Diff.Apply(buffer, cmd);if (buffer.Length > 0)return buffer;elsereturn null;}
public RenameFaceRequest() : base("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
public char RequireChar(System.Collections.Generic.IDictionary<string, string> args, string name) {return Require(args, name)[0];}
public static string ToStringTree(Tree t) {return ToStringTree(t, (List<string>)null);}
public override string ToString(){return "<deleted/>";}
public GetRepoWebhookLogListRequest() : base("cr", "2016-06-07", "GetRepoWebhookLogList", "cr"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs";Method = MethodType.GET;}
public virtual GetJobUnlockCodeResult GetJobUnlockCode(GetJobUnlockCodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobUnlockCodeRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobUnlockCodeResponseUnmarshaller.Instance;return Invoke<GetJobUnlockCodeResult>(request, options);}
public RemoveTagsRequest(string resourceId){this.ResourceId = resourceId;}
public short GetGB2312Id(char ch) {try {byte[] buffer = System.Text.Encoding.GetEncoding("GB2312").GetBytes(ch.ToString());if (buffer.Length != 2) {return -1;}int b0 = (buffer[0] & 0xFF) - 161;int b1 = (buffer[1] & 0xFF) - 161;return (short)(b0 * 94 + b1);} catch (System.Text.EncoderFallbackException e) {throw new System.Exception(e.Message);}}
public BatchRefUpdate AddCommand(Collection<ReceiveCommand> cmd) {commands.AddRange(cmd);return this;}
public short CheckExternSheet(int sheetNumber){return (short)GetOrCreateLinkTable().CheckExternSheet(sheetNumber);}
override public bool Equals(object? object) { return c.Equals(object); }
public bool Build(QueryNode queryNode){var andNode = (AnyQueryNode)queryNode;var bQuery = new BooleanQuery.Builder();var children = andNode.GetChildren();if (children != null){foreach (QueryNode child in children){var obj = child.GetTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null){var query = (Query)obj;try{bQuery.Add(query, BooleanClause.Occur.SHOULD);}catch (TooManyClauses ex){throw new QueryNodeException(new MessageImpl(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.SetMinimumNumberShouldMatch(andNode.GetMinimumMatchingElements());return bQuery.Build();}
public virtual DescribeStreamProcessorResponse DescribeStreamProcessor(DescribeStreamProcessorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStreamProcessorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.Instance;return Invoke<DescribeStreamProcessorResponse>(request, options);}
public virtual DescribeDashboardPermissionsResponse DescribeDashboardPermissions(DescribeDashboardPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardPermissionsResponseUnmarshaller.Instance;return Invoke<DescribeDashboardPermissionsResponse>(request, options);}
public Ref Peel(Ref ref){try{return GetRefDatabase().Peel(ref);}catch(IOException e){return ref;}}
public long RamBytesUsed() {return RamUsageEstimator.AlignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + 2 * Integer.BYTES + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.SizeOf(blocks);}
public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDomainSuggestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDomainSuggestionsResponseUnmarshaller.Instance;return Invoke<GetDomainSuggestionsResponse>(request, options);}
public virtual DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance;return Invoke<DescribeStackEventsResponse>(request, options);}
public void setRule(int idx, ConditionalFormattingRule cfRule){setRule(idx, (HSSFConditionalFormattingRule)cfRule);}
public virtual CreateResolverRuleResult CreateResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverRuleResponseUnmarshaller.Instance;return Invoke<CreateResolverRuleResult>(request, options);}
public SeriesIndexRecord(RecordInputStream in) {this.Field_1_Index = in.ReadShort();}
public GetStylesRequest() : base("lubancloud", "2018-05-09", "GetStyles", "luban"){Method = MethodType.POST;}
public void serialize(System.IO.EndianWriter out) {out.WriteInt16(field_1_gridset_flag);}
public bool Equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (GetType() != obj.GetType()) {return false;}Toffs other = (Toffs)obj;if (GetStartOffset() != other.GetStartOffset()) {return false;}if (GetEndOffset() != other.GetEndOffset()) {return false;}return true;}
public virtual CreateGatewayGroupResponse CreateGatewayGroup(CreateGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateGatewayGroupResponseUnmarshaller.Instance;return Invoke<CreateGatewayGroupResponse>(request, options);}
public virtual CreateParticipantConnectionResponse CreateParticipantConnection(CreateParticipantConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance;return Invoke<CreateParticipantConnectionResponse>(request, options);}
public static double irr(double[] income){return irr(income, 0.1d);}
public virtual RegisterWorkspaceDirectoryResponse RegisterWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<RegisterWorkspaceDirectoryResponse>(request, options);}
public RevertCommand Include(AnyObjectId commit) {return Include(commit.getName(), commit);}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.GetErrorEval();}string iNumber = OperandResolver.CoerceValueToString(veText1);Match m = COMPLEX_NUMBER_PATTERN.Match(iNumber);bool result = m.Success;string imaginary = "";if (result) {string imaginaryGroup = m.Groups[5].Value;bool hasImaginaryPart = imaginaryGroup.Equals("i") || imaginaryGroup.Equals("j");if (imaginaryGroup.Length == 0) {return new StringEval("0");}if (hasImaginaryPart) {string sign = "";string imaginarySign = m.Groups[GROUP3_IMAGINARY_SIGN].Value;if (imaginarySign.Length != 0 && !(imaginarySign.Equals("+"))) {sign = imaginarySign;}string groupImaginaryNumber = m.Groups[GROUP4_IMAGINARY_INTEGER_OR_DOUBLE].Value;if (groupImaginaryNumber.Length != 0) {imaginary = sign + groupImaginaryNumber;} else {imaginary = sign + "1";}}} else {return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}
public E PollLast() {var entry = backingMap.PollLastEntry();return (entry == null) ? null : entry.Key;}
public int readUShort(){int ch1 = readUByte();int ch2 = readUByte();return (ch2 << 8) + (ch1 << 0);}
public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType) {SetSnapshotId(snapshotId);SetAttribute(attribute.ToString());SetOperationType(operationType.ToString());}
public virtual ListBonusPaymentsResponse listBonusPayments(ListBonusPaymentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListBonusPaymentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListBonusPaymentsResponseUnmarshaller.Instance;return Invoke<ListBonusPaymentsResponse>(request, options);}
public V Get(string cs) {if (cs == null)throw new ArgumentNullException(nameof(cs));return null;}
public CommonGramsQueryFilter Create(TokenStream input){var commonGrams = (CommonGramsFilter) base.Create(input);return new CommonGramsQueryFilter(commonGrams);}
public string GetPath() { return path; }
public virtual InitiateMultipartUploadResult InitiateMultipartUpload(InitiateMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = InitiateMultipartUploadResponseUnmarshaller.Instance;return Invoke<InitiateMultipartUploadResult>(request, options);}
public StringBuilder Insert(int offset, int i) {insert0(offset, i.ToString());return this;}
public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int) ((block >> shift) & 3);}}}
public TokenStream Create(TokenStream input) { return new ElisionFilter(input, articles); }
public bool Eat(Row in, int[] remap) {int sum = 0;foreach (var c in in.cells.Values) {sum += c.cnt;if (c.ref >= 0) {if (remap[c.ref] == 0) {c.ref = -1;}}}int frame = sum / 10;bool live = false;foreach (var c in in.cells.Values) {if (c.cnt < frame && c.cmd >= 0) {c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.ref >= 0) {live |= true;}}return !live;}
public virtual Token GetToken(int index){Token t = jj_lookingAhead ? jj_scanpos : token;for (int i = 0; i < index; i++){if (t.Next != null) t = t.Next;else t = t.Next = token_source.GetNextToken();}return t;}
public string ToString() {var sb = new StringBuilder();sb.Append(GetType().Name).Append(" [ARRAY]\n");sb.Append(" range=").Append(GetRange()).Append("\n");sb.Append(" options=").Append(HexDump.ShortToHex(_options)).Append("\n");sb.Append(" notUsed=").Append(HexDump.IntToHex(_field3notUsed)).Append("\n");sb.Append(" formula:").Append("\n");var ptgs = _formula.GetTokens();for (int i = 0; i < ptgs.Length; i++) {var ptg = ptgs[i];sb.Append(ptg).Append(ptg.GetRVAType()).Append("\n");}sb.Append("]");return sb.ToString();}
public virtual GetFolderResult GetFolder(GetFolderRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFolderRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance;return Invoke<GetFolderResult>(request, options);}
public override void Add(int location, E object){throw new System.NotSupportedException();}
public PositiveScoresOnlyCollector(Collector<object> in) : base(in) {}
public CreateRepoBuildRuleRequest() : base("cr", "2016-06-07", "CreateRepoBuildRule", "cr"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/rules";Method = MethodType.PUT;}
public BaseRef(AreaEval ae){_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}
public DrawingManager2(EscherDggRecord dgg) { this.dgg = dgg; }
public void Reset(){if (!First()) Reset(raw);}
public final CharsetDecoder reset() { status = INIT; implReset(); return this; }
public BufferedReader(Reader in, int size) : base(in){if (size <= 0){throw new ArgumentException("size <= 0");}this.in = in;buf = new char[size];}
public virtual DescribeCodeRepositoryResult DescribeCodeRepository(DescribeCodeRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance;return Invoke<DescribeCodeRepositoryResult>(request, options);}
public virtual CreateDBSubnetGroupResponse CreateDBSubnetGroup(CreateDBSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBSubnetGroupResponseUnmarshaller.Instance;return Invoke<CreateDBSubnetGroupResponse>(request, options);}
public RenameBranchCommand SetOldName(string oldName) { CheckCallable(); this.oldName = oldName; return this; }
public DeleteBranchCommand SetForce(bool force){CheckCallable();this.force = force;return this;}
public virtual StopCompilationJobResponse StopCompilationJob(StopCompilationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopCompilationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopCompilationJobResponseUnmarshaller.Instance;return Invoke<StopCompilationJobResponse>(request, options);}
public virtual final void IncrementSecondaryProgressBy(int diff) {setSecondaryProgress(mSecondaryProgress + diff);}
public int[] Clear(){return bytesStart = null;}
public string GetRawPath(){return path;}
public GetUserSourceAccountRequest() : base("cr", "2016-06-07", "GetUserSourceAccount", "cr"){UriPattern = "/users/sourceAccount";Method = MethodType.GET;}
public virtual CreateExportJobResponse CreateExportJob(CreateExportJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExportJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.Instance;return Invoke<CreateExportJobResponse>(request, options);}
public virtual CreateDedicatedIpPoolResult CreateDedicatedIpPool(CreateDedicatedIpPoolRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;return Invoke<CreateDedicatedIpPoolResult>(request, options);}
public bool Equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (obj is HSSFCellStyle) {var other = (HSSFCellStyle)obj;if (_format == null) {if (other._format != null) {return false;}} else if (!_format.Equals(other._format)) {return false;}if (_index != other._index) {return false;}return true;}return false;}
public virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReleaseHostsRequestMarshaller.Instance;options.ResponseUnmarshaller = ReleaseHostsResponseUnmarshaller.Instance;return Invoke<ReleaseHostsResponse>(request, options);}
public bool Equals(Object object) {if (this == object) {return true;}if (object is Set) {Set<?> s = (Set<?>) object;try {return Size() == s.Size() && ContainsAll(s);} catch (NullPointerException) {return false;} catch (ClassCastException) {return false;}}return false;}
public void SetRefLogMessage(string msg, bool appendStatus){customRefLog = true;if (msg == null && !appendStatus){DisableRefLog();}else if (msg == null && appendStatus){refLogMessage = "";refLogIncludeResult = true;}else{refLogMessage = msg;refLogIncludeResult = appendStatus;}}
public StreamIDRecord(RecordInputStream in) { idstm = in.ReadInt16(); }
public RecognizeCarRequest() : base("visionai-poc", "2020-04-08", "RecognizeCar"){ Method = MethodType.POST;}
public final System.ByteOrder order(){return System.ByteOrder.Native;}
public int GetAheadCount(){return aheadCount;}
public bool isNewFragment() { return false; }
public virtual GetCloudFrontOriginAccessIdentityConfigResult GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.Instance;return Invoke<GetCloudFrontOriginAccessIdentityConfigResult>(request, options);}
public bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol){return label == symbol;}
public virtual DeleteTransitGatewayResult DeleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayResultUnmarshaller.Instance;return Invoke<DeleteTransitGatewayResult>(request, options);}
public static byte[] Grow(byte[] array, int minSize) {System.Diagnostics.Contracts.Contract.Requires(minSize >= 0, "size must be positive (got " + minSize + "): likely integer overflow?");if (array.Length < minSize) {return GrowExact(array, Oversize(minSize, sizeof(byte)));} else {return array;}}
public CreateTransactionRequest(){Protocol = "HTTPS";ServiceName = "CloudPhoto";ServiceVersion = "2017-07-11";OperationName = "CreateTransaction";}
public BatchRefUpdate SetRefLogIdent(PersonIdent pi) {refLogIdent = pi;return this;}
public virtual GetLaunchTemplateDataResult GetLaunchTemplateData(GetLaunchTemplateDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLaunchTemplateDataRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLaunchTemplateDataResponseUnmarshaller.Instance;return Invoke<GetLaunchTemplateDataResult>(request, options);}
public ParseInfo(ProfilingATNSimulator atnSimulator){this.atnSimulator = atnSimulator;}
public SimpleQQParser(string[] qqNames, string indexField) {this.qqNames = qqNames;this.indexField = indexField;}
public virtual PromoteReadReplicaDBClusterResponse PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = PromoteReadReplicaDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = PromoteReadReplicaDBClusterResponseUnmarshaller.Instance;return Invoke<PromoteReadReplicaDBClusterResponse>(request, options);}
public virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCapacityReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCapacityReservationsResponseUnmarshaller.Instance;return Invoke<DescribeCapacityReservationsResponse>(request, options);}
public string ToString() {return $"IndexSearcher({reader}; executor={executor}; sliceExecutionControlPlane {sliceExecutor})";}
public final bool IncrementToken() { return false; }
public void serialize(LittleEndianOutput out) {out.writeShort(main + 1);out.writeShort(subFrom);out.writeShort(subTo);}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new System.NotSupportedException("Cannot decode " + bitsPerValue + "-bits values into an int[]");}for (int i = 0; i < iterations; ++i) {long block = readLong(blocks, blocksOffset);blocksOffset += 8;valuesOffset = decode(block, values, valuesOffset);}}
public bool IsExpectedToken(int symbol) {ATN atn = GetInterpreter().Atn;ParserRuleContext ctx = _ctx;ATNState s = atn.States[getState()];IntervalSet following = atn.NextTokens(s);if (following.Contains(symbol)) {return true;}if (!following.Contains(Token.EPSILON)) return false;while (ctx != null && ctx.InvokingState >= 0 && following.Contains(Token.EPSILON)) {ATNState invokingState = atn.States[ctx.InvokingState];RuleTransition rt = (RuleTransition)invokingState.Transition(0);following = atn.NextTokens(rt.FollowState);if (following.Contains(symbol)) {return true;}ctx = (ParserRuleContext)ctx.Parent;}if (following.Contains(Token.EPSILON) && symbol == Token.EOF) {return true;}return false;}
public virtual UpdateStreamResponse UpdateStream(UpdateStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateStreamResponseUnmarshaller.Instance;return Invoke<UpdateStreamResponse>(request, options);}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = TranslateErrorCodeToErrorTypeValue(e.ErrorEval.ErrorCode);return new NumberEval(result);}}
public override string ToString() {return GetType().Name + " [" + _index + " " + _name + "]";}
public virtual ListAssignmentsForHITResponse listAssignmentsForHIT(ListAssignmentsForHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<ListAssignmentsForHITResponse>(request, options);}
public virtual DeleteAccessControlRuleResult DeleteAccessControlRule(DeleteAccessControlRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccessControlRuleResultUnmarshaller.Instance;return Invoke<DeleteAccessControlRuleResult>(request, options);}
public Arc<long> GetFirstArc(FST.Arc<long> arc){return fst.GetFirstArc(arc);}
public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (int) ((block >>> shift) & 65535);}}}
public long skip(long charCount) throws IOException {if (charCount < 0) {throw new ArgumentException("charCount < 0: " + charCount);}lock (lock) {checkNotClosed();if (charCount == 0) {return 0;}long inSkipped;int availableFromBuffer = buf.Length - pos;if (availableFromBuffer > 0) {long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0) {pos += charCount;return charCount;}pos += availableFromBuffer;inSkipped = in.Skip(requiredFromIn);} else {inSkipped = in.Skip(charCount);}return inSkipped + availableFromBuffer;}}
public Dictionary<string, Ref> GetRefsMap() { return advertisedRefs; }
public virtual UpdateApiKeyResult UpdateApiKey(UpdateApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateApiKeyResponseUnmarshaller.Instance;return Invoke<UpdateApiKeyResult>(request, options);}
public ObjectStream OpenStream(){PackInputStream packIn;DfsReader ctx = db.NewReader();try {try {packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);ctx = null;} catch (IOException packGone) {ObjectId obj = pack.GetReverseIdx(ctx).FindObject(objectOffset);return ctx.Open(obj, type).OpenStream();}} finally {if (ctx != null) {ctx.Close();}}int bufsz = 8192;InputStream in = new BufferedInputStream(new InflaterInputStream(packIn, packIn.Ctx.Inflater(), bufsz), bufsz);return new ObjectStream.Filter(type, size, in);}
public ArrayList() {array = System.Array.Empty<object>();}
public virtual UpdateDetectorVersionResult UpdateDetectorVersion(UpdateDetectorVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDetectorVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.Instance;return Invoke<UpdateDetectorVersionResult>(request, options);}
public void Resize(){Resize(double.MaxValue);}
public RevFlagSet(System.Collections.Generic.IEnumerable<RevFlag> s) {this();AddRange(s);}
public int Size() { return size; }
public long GetLong() {int newPosition = position + SizeOf.LONG;if (newPosition > limit) {throw new BufferUnderflowException();}long result = Memory.peekLong(backingArray, offset + position, order);position = newPosition;return result;}
public StringBuilder Insert(int offset, long l){Insert0(offset, Long.ToString(l));return this;}
public TurkishLowerCaseFilter(TokenStream in) : base(in) { }
public ParseTreeMatch Match(ParseTree tree, ParseTreePattern pattern){var labels = new MultiMap<string, ParseTree>();ParseTree mismatchedNode = MatchImpl(tree, pattern.GetPatternTree(), labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}
public void AddIfNoOverlap(WeightedPhraseInfo wpi){foreach(WeightedPhraseInfo existWpi in GetPhraseList()){if(existWpi.IsOffsetOverlap(wpi)){existWpi.GetTermsInfos().AddRange(wpi.GetTermsInfos());return;}}GetPhraseList().Add(wpi);}
public ThreeWayMerger NewMerger(Repository db){return new InCoreMerger(db);}
public float DocScore(int docId, string field, int numPayloadsSeen, float payloadScore) {return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}
public System.Collections.Generic.IEnumerable<ParseTree> Evaluate(ParseTree t){return Trees.FindAllRuleNodes(t, ruleIndex);}
public string ToString() {var buffer = new StringBuilder();buffer.AppendLine("[CFRULE]");buffer.Append("    .condition_type   =").Append(GetConditionType()).AppendLine();buffer.Append("    OPTION FLAGS=0x").Append(Convert.ToString(GetOptions(), 16)).AppendLine();if (ContainsFontFormattingBlock()) {buffer.Append(_fontFormatting).AppendLine();}if (ContainsBorderFormattingBlock()) {buffer.Append(_borderFormatting).AppendLine();}if (ContainsPatternFormattingBlock()) {buffer.Append(_patternFormatting).AppendLine();}buffer.Append("    Formula 1 =").Append(string.Join(", ", GetFormula1().GetTokens())).AppendLine();buffer.Append("    Formula 2 =").Append(string.Join(", ", GetFormula2().GetTokens())).AppendLine();buffer.Append("[/CFRULE]");return buffer.ToString();}
public virtual DescribeServiceUpdatesResult DescribeServiceUpdates(DescribeServiceUpdatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance;return Invoke<DescribeServiceUpdatesResult>(request, options);}
public string GetNameName(int index){return GetNameAt(index).GetNameName();}
public virtual DescribeLocationsResponse DescribeLocations(){return DescribeLocations(new DescribeLocationsRequest());}
public override string ToString() {return $"<phraseslop value='{GetValueString()}'>\n{GetChild().ToString()}\n</phraseslop>";}
public DirCacheEntry GetDirCacheEntry(){return currentSubtree == null ? currentEntry : (DirCacheEntry)null;}
public Microsoft.Azure.CosmosDB.Buffers.IntBuffer Put(int[] src, int srcOffset, int intCount) {System.Collections.Generic.IEnumerable<int> arg_24_0 = System.Linq.Enumerable.Range(srcOffset, intCount);foreach (int i in arg_24_0) {this.Put(src[i]);}return this;}
public void TrimToSize(){int s = size;if (s == array.Length){return;}if (s == 0){array = EmptyArray.Object;}else{Object[] newArray = new Object[s];System.Array.Copy(array, 0, newArray, 0, s);array = newArray;}modCount++;}
public virtual DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLocalGatewayVirtualInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeLocalGatewayVirtualInterfacesResponse>(request, options);}
public TokenStream Create(TokenStream input){return new RussianLightStemFilter(input);}
public int[] toArray(final int[] a){int[] rval;if (a.Length == _limit){System.Array.Copy(_array, 0, a, 0, _limit);rval = a;}else{rval = toArray();}return rval;}
public BasicSessionCredentials(string accessKeyId, string accessKeySecret, string sessionToken, long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new ArgumentException("Access key ID cannot be null.");}if (accessKeySecret == null) {throw new ArgumentException("Access key secret cannot be null.");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = DateTimeOffset.UtcNow.ToUnixTimeMilliseconds();}
public final ShortBuffer get(short[] dst, int dstOffset, int shortCount){if (shortCount > remaining()){throw new System.BufferUnderflowException();}System.Array.Copy(backingArray, offset + position, dst, dstOffset, shortCount);position += shortCount;return this;}
public virtual ActivateEventSourceResult ActivateEventSource(ActivateEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateEventSourceResponseUnmarshaller.Instance;return Invoke<ActivateEventSourceResult>(request, options);}
public virtual DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReceiptRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReceiptRuleSetResponseUnmarshaller.Instance;return Invoke<DescribeReceiptRuleSetResponse>(request, options);}
public Filter(string name) { SetName(name); }
public DoubleBuffer Put(double c) { throw new ReadOnlyBufferException(); }
public virtual CreateTrafficPolicyInstanceResponse CreateTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyInstanceResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyInstanceResponse>(request, options);}
public JapaneseIterationMarkCharFilter(Reader input, bool normalizeKanji, bool normalizeKana) : base(input) {this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;buffer.reset(input);}
public void writeLong(long v) {writeInt((int)(v >> 0));writeInt((int)(v >> 32));}
public FileResolver() {exports = new ConcurrentDictionary<object, object>();exportBase = new List<object>();}
public ValueEval GetRef3DEval(Ref3DPxg rptg){SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.SheetName, rptg.LastSheetName, rptg.ExternalWorkbookNumber);return new LazyRefEval(rptg.Row, rptg.Column, sre);}
public virtual DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDatasetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDatasetResponseUnmarshaller.Instance;return Invoke<DeleteDatasetResponse>(request, options);}
public virtual StartRelationalDatabaseResult StartRelationalDatabase(StartRelationalDatabaseRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartRelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = StartRelationalDatabaseResultUnmarshaller.Instance;return Invoke<StartRelationalDatabaseResult>(request, options);}
public DescribeReservedCacheNodesOfferingsResponse DescribeReservedCacheNodesOfferings(){var options = new InvokeOptions();options.RequestMarshaller = DescribeReservedCacheNodesOfferingsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReservedCacheNodesOfferingsResponseUnmarshaller.Instance;return Invoke<DescribeReservedCacheNodesOfferingsResponse>(new DescribeReservedCacheNodesOfferingsRequest(), options);}
static public double Pmt(double r, int nper, double pv, double fv, int type) {return -r * (pv * Math.Pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.Pow(1 + r, nper) - 1));}
public virtual DescribeDocumentVersionsResult DescribeDocumentVersions(DescribeDocumentVersionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDocumentVersionsResult>(request, options);}
public virtual ListPublishingDestinationsResponse ListPublishingDestinations(ListPublishingDestinationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListPublishingDestinationsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListPublishingDestinationsResponseUnmarshaller.Instance;return Invoke<ListPublishingDestinationsResponse>(request, options);}
public DeleteAccountAliasRequest(string accountAlias) { this.AccountAlias = accountAlias; }
public static long[] Grow(long[] array) {return Grow(array, 1 + array.Length);}
public string OutputToString<T>(object output) {if (!(output is List<T>)) {return outputs.OutputToString((T)output);} else {List<T> outputList = (List<T>)output;StringBuilder b = new StringBuilder();b.Append('[');for (int i = 0; i < outputList.Count; i++) {if (i > 0) {b.Append(", ");}b.Append(outputs.OutputToString(outputList[i]));}b.Append(']');return b.ToString();}}
public void NotifyDeleteCell(Cell cell) {_bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell((HSSFCell)cell));}
public StringBuilder Replace(int start, int end, String str){Replace0(start, end, str);return this;}
public virtual SetIdentityPoolConfigurationResult SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;return Invoke<SetIdentityPoolConfigurationResult>(request, options);}
public static double KthSmallest(double[] v, int k) {double r = double.NaN;int index = k - 1;if (v != null && v.Length > index && index >= 0) {Array.Sort(v);r = v[index];}return r;}
public void set(int index, long value){final int o = index >> 5;final int b = index & 31;final int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}
public string ToString() {if (GetChildren() == null || GetChildren().Count == 0)return "<boolean operation='and'/>";var sb = new StringBuilder();sb.Append("<boolean operation='and'>");foreach (var child in GetChildren()) {sb.Append("\n");sb.Append(child.ToString());}sb.Append("\n</boolean>");return sb.ToString();}
public int SumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i = fromIx; i < toIx; i++) {result += _ptgs[i].GetSize();}return result;}
public void SetReadonly(bool readonly){if(this.readonly && !readonly) throw new InvalidOperationException("can't alter readonly IntervalSet");this.readonly = readonly;}
public final void ClearConsumingCell(FormulaCellCacheEntry cce) {if (!_consumingCells.Remove(cce)) {throw new InvalidOperationException("Specified formula cell is not consumed by this cell");}}
override public List<E> SubList(int start, int end) {lock (mutex) {return new SynchronizedRandomAccessList<E>(list.SubList(start, end), mutex);}}
public FileHeader getFileHeader(){return file;}
public virtual AttachLoadBalancersResult AttachLoadBalancers(AttachLoadBalancersRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachLoadBalancersResultUnmarshaller.Instance;return Invoke<AttachLoadBalancersResult>(request, options);}
public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters){SetAccountId(accountId);SetVaultName(vaultName);SetJobParameters(jobParameters);}
public override string ToString() { return "SPL"; }
public ReplaceableAttribute(string name, string value, bool replace){this.Name = name;this.Value = value;this.Replace = replace;}
public final void Add(IndexableField field) { fields.Add(field); }
public virtual DeleteStackSetResult DeleteStackSet(DeleteStackSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteStackSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteStackSetResultUnmarshaller.Instance;return Invoke<DeleteStackSetResult>(request, options);}
public GetRepoBuildRuleListRequest() : base("cr", "2016-06-07", "GetRepoBuildRuleList", "cr"){SetUriPattern("/repos/[RepoNamespace]/[RepoName]/rules");SetMethod(MethodType.GET);}
public SparseArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new Object[initialCapacity];mSize = 0;}
public InvokeServiceRequest() : base("industry-brain", "2018-07-12", "InvokeService"){SetMethod(MethodType.POST);}
public ListAlbumPhotosRequest() : base("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public bool hasPrevious(){return link != list.voidLink;}
public virtual DeleteHsmConfigurationResult DeleteHsmConfiguration(DeleteHsmConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteHsmConfigurationResultUnmarshaller.Instance;return Invoke<DeleteHsmConfigurationResult>(request, options);}
public CreateLoadBalancerRequest(string loadBalancerName){SetLoadBalancerName(loadBalancerName);}
public string GetUserInfo(){return Decode(userInfo);}
public virtual TagAttendeeResponse TagAttendee(TagAttendeeRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance;options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance;return Invoke<TagAttendeeResponse>(request, options);}
public string GetRefName() {return name;}
public SpanNearQuery Build(){return new SpanNearQuery(clauses.ToArray(new SpanQuery[clauses.Count]), slop, ordered);}
public bool isSubTotal(int rowIndex, int columnIndex) {return false;}
public virtual DescribeDBProxiesResponse DescribeDBProxies(DescribeDBProxiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBProxiesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBProxiesResponseUnmarshaller.Instance;return Invoke<DescribeDBProxiesResponse>(request, options);}
public virtual GetVoiceConnectorProxyResponse GetVoiceConnectorProxy(GetVoiceConnectorProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance;return Invoke<GetVoiceConnectorProxyResponse>(request, options);}
public WindowCacheConfig fromConfig(Config rc){setPackedGitUseStrongRefs(rc.getBoolean(CONFIG_CORE_SECTION,CONFIG_KEY_PACKED_GIT_USE_STRONGREFS,isPackedGitUseStrongRefs()));setPackedGitOpenFiles(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_OPENFILES, getPackedGitOpenFiles()));setPackedGitLimit(rc.getLong(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_LIMIT, getPackedGitLimit()));setPackedGitWindowSize(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_WINDOWSIZE, getPackedGitWindowSize()));setPackedGitMMAP(rc.getBoolean(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_MMAP, isPackedGitMMAP()));setDeltaBaseCacheLimit(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_DELTA_BASE_CACHE_LIMIT, getDeltaBaseCacheLimit()));long maxMem = Runtime.getRuntime().maxMemory();long sft = rc.getLong(CONFIG_CORE_SECTION, null,CONFIG_KEY_STREAM_FILE_TRESHOLD, getStreamFileThreshold());sft = Math.min(sft, maxMem / 4);sft = Math.min(sft, Integer.MAX_VALUE);setStreamFileThreshold((int) sft);return this;}
public static DateTime GetJavaDate(double date){return GetJavaDate(date, false, null, false);}
public virtual StartPersonTrackingResponse StartPersonTracking(StartPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = StartPersonTrackingResponseUnmarshaller.Instance;return Invoke<StartPersonTrackingResponse>(request, options);}
public override int Size(){return totalSize;}
public virtual GetRouteResponse GetRoute(GetRouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRouteResponseUnmarshaller.Instance;return Invoke<GetRouteResponse>(request, options);}
public virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance;return Invoke<DeleteClusterResponse>(request, options);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[MMS]\n");buffer.Append("    .addMenu        = ").Append(Convert.ToHexString(GetAddMenuCount())).Append("\n");buffer.Append("    .delMenu        = ").Append(Convert.ToHexString(GetDelMenuCount())).Append("\n");buffer.Append("[/MMS]\n");return buffer.ToString();}
public FileBasedConfig(Config base, File cfgLocation, FS fs) : base(base){configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.zeroId();}
public int Following(int pos){if(pos < text.GetBeginIndex() || pos > text.GetEndIndex()){throw new ArgumentOutOfRangeException("offset out of bounds");}else if(sentenceStarts.Length == 0){text.SetIndex(text.GetBeginIndex());return DONE;}else if(pos >= sentenceStarts[sentenceStarts.Length - 1]){text.SetIndex(text.GetEndIndex());currentSentence = sentenceStarts.Length - 1;return DONE;}else{currentSentence = (sentenceStarts.Length - 1) / 2; MoveToSentenceAt(pos, 0, sentenceStarts.Length - 2);text.SetIndex(sentenceStarts[++currentSentence]);return Current();}}
public virtual UpdateParameterGroupResult UpdateParameterGroup(UpdateParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.Instance;return Invoke<UpdateParameterGroupResult>(request, options);}
public SeriesChartGroupIndexRecord Clone() {return Copy();}
public static double CalcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0.5) {throw new ArgumentException("distErrPct " + distErrPct + " must be between [0 to 0.5]");}if (distErrPct == 0 || shape is Point) {return 0;}Rectangle bbox = shape.GetBoundingBox();Point ctr = bbox.GetCenter();double y = (ctr.Y >= 0 ? bbox.MaxY : bbox.MinY);double diagonalDist = ctx.GetDistCalc().Distance(ctr, bbox.MaxX, y);return diagonalDist * distErrPct;}
public int codePointAt(int index){if (index < 0 || index >= count){throw indexAndLength(index);}return Character.codePointAt(value, index, count);}
public void SetPasswordVerifier(int passwordVerifier) { this.passwordVerifier = passwordVerifier; }
public ListVaultsRequest(string accountId) { SetAccountId(accountId); }
public SquashMessageFormatter() { dateFormatter = new GitDateFormatter(Format.DEFAULT); }
public GetVideoCoverRequest() : base("CloudPhoto", "2017-07-11", "GetVideoCover", "cloudphoto"){Protocol = ProtocolType.HTTPS;}
public int LastIndexOf(object obj) {int pos = size;Link<E> link = voidLink.previous;if (obj != null) {while (link != voidLink) {pos--;if (obj.Equals(link.data)) {return pos;}link = link.previous;}} else {while (link != voidLink) {pos--;if (link.data == null) {return pos;}link = link.previous;}}return -1;}
public virtual DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSpotFleetRequestsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSpotFleetRequestsResponseUnmarshaller.Instance;return Invoke<DescribeSpotFleetRequestsResponse>(request, options);}
public virtual IndexFacesResult IndexFaces(IndexFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = IndexFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;return Invoke<IndexFacesResult>(request, options);}
public RuleBasedBreakIterator GetBreakIterator(int script) {switch (script) {case UScript.JAPANESE:return (RuleBasedBreakIterator)cjkBreakIterator.Clone();case UScript.MYANMAR:if (myanmarAsWords) {return (RuleBasedBreakIterator)defaultBreakIterator.Clone();} else {return (RuleBasedBreakIterator)myanmarSyllableIterator.Clone();}default:return (RuleBasedBreakIterator)defaultBreakIterator.Clone();}}
public override string ToString(){StringBuilder b = new StringBuilder();b.AppendLine("[DCONREF]");b.AppendLine("    .ref");b.AppendLine("        .firstrow   = " + firstRow);b.AppendLine("        .lastrow    = " + lastRow);b.AppendLine("        .firstcol   = " + firstCol);b.AppendLine("        .lastcol    = " + lastCol);b.AppendLine("    .cch            = " + charCount);b.AppendLine("    .stFile");b.AppendLine("        .h          = " + charType);b.AppendLine("        .rgb        = " + getReadablePath());b.AppendLine("[/DCONREF]");return b.ToString();}
public int GetPackedGitOpenFiles(){return packedGitOpenFiles;}
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.AppendLine("[FEATURE HEADER]");buffer.AppendLine("[/FEATURE HEADER]");return buffer.ToString();}
public static byte[] GetToUnicodeLE(string string) {return Encoding.Unicode.GetBytes(string);}
public final List<string> GetFooterLines(string keyName){return GetFooterLines(new FooterKey(keyName));}
public void Refresh(){base.Refresh();ClearReferences();}
public float Get(int index) { CheckIndex(index); return byteBuffer.GetFloat(index * SizeOf.FLOAT); }
public virtual DeleteDetectorResult DeleteDetector(DeleteDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDetectorResultUnmarshaller.Instance;return Invoke<DeleteDetectorResult>(request, options);}
public int[] Grow() {System.Diagnostics.Contracts.Assert(bytesStart != null);return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.Length + 1);}
public virtual ListExclusionsResponse ListExclusions(ListExclusionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListExclusionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListExclusionsResponseUnmarshaller.Instance;return Invoke<ListExclusionsResponse>(request, options);}
public static SpatialStrategy GetSpatialStrategy(int roundNumber){SpatialStrategy result = spatialStrategyCache.Get(roundNumber);if (result == null){throw new InvalidOperationException("Strategy should have been init'ed by SpatialDocMaker by now");}return result;}
public virtual RestoreDBClusterToPointInTimeResponse RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance;return Invoke<RestoreDBClusterToPointInTimeResponse>(request, options);}
public void Serialize(LittleEndianOutput out) {out.WriteShort(field_1_categoryDataType);out.WriteShort(field_2_valuesDataType);out.WriteShort(field_3_numCategories);out.WriteShort(field_4_numValues);out.WriteShort(field_5_bubbleSeriesType);out.WriteShort(field_6_numBubbleValues);}
public virtual PostAgentProfileResponse PostAgentProfile(PostAgentProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = PostAgentProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = PostAgentProfileResponseUnmarshaller.Instance;return Invoke<PostAgentProfileResponse>(request, options);}
public ParseTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex){if (GetTokenStream() != null){TokenSource tokenSource = GetTokenStream().GetTokenSource();if (tokenSource is Lexer){Lexer lexer = (Lexer)tokenSource;return CompileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new InvalidOperationException("Parser can't discover a lexer to use");}
public virtual BacktrackDBClusterResponse BacktrackDBCluster(BacktrackDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = BacktrackDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = BacktrackDBClusterResponseUnmarshaller.Instance;return Invoke<BacktrackDBClusterResponse>(request, options);}
public string GetName(){return strategyName;}
public void copyTo(byte[] b, int o) {formatHexByte(b, o + 0, w1);formatHexByte(b, o + 8, w2);formatHexByte(b, o + 16, w3);formatHexByte(b, o + 24, w4);formatHexByte(b, o + 32, w5);}
public static IntList LineMap(byte[] buf, int ptr, int end) {IntList map = new IntList((end - ptr) / 36);map.FillTo(1, int.MinValue);for (; ptr < end; ptr = NextLF(buf, ptr)) {map.Add(ptr);}map.Add(end);return map;}
public HashSet<ObjectId> getAdditionalHaves() {return new HashSet<ObjectId>();}
public virtual long RamBytesUsed() {long sizeInBytes = BASE_RAM_BYTES_USED + fields.size() * 2 * RamUsageEstimator.NUM_BYTES_OBJECT_REF;foreach (SimpleTextTerms simpleTextTerms in termsCache.Values) {sizeInBytes += (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0;}return sizeInBytes;}
public string ToXml(string tab) {var builder = new StringBuilder();builder.Append(tab).Append("<").Append(GetRecordName()).Append(">\n");foreach (var escherRecord in GetEscherRecords()) {builder.Append(escherRecord.ToXml(tab + "\t"));}builder.Append(tab).Append("</").Append(GetRecordName()).Append(">\n");return builder.ToString();}
public TokenStream Create(TokenStream input){return new GalicianMinimalStemFilter(input);}
public string ToString() { StringBuilder r = new StringBuilder(); r.Append("Commit"); r.Append("={\n"); r.Append("tree "); r.Append(treeId != null ? treeId.Name() : "NOT_SET"); r.Append("\n"); foreach (ObjectId p in parentIds) { r.Append("parent "); r.Append(p.Name()); r.Append("\n"); } r.Append("author "); r.Append(author != null ? author.ToString() : "NOT_SET"); r.Append("\n"); r.Append("committer "); r.Append(committer != null ? committer.ToString() : "NOT_SET"); r.Append("\n"); r.Append("gpgSignature "); r.Append(gpgSignature != null ? gpgSignature.ToString() : "NOT_SET"); r.Append("\n"); if (encoding != null && !References.IsSameObject(encoding, UTF_8)) { r.Append("encoding "); r.Append(encoding.Name()); r.Append("\n"); } r.Append("\n"); r.Append(message != null ? message : ""); r.Append("}"); return r.ToString(); }
public IndicNormalizationFilterFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){if (!args.IsEmpty){throw new System.ArgumentException("Unknown parameters: " + args);}}
public virtual CreateOptionGroupResponse CreateOptionGroup(CreateOptionGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOptionGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOptionGroupResponseUnmarshaller.Instance;return Invoke<CreateOptionGroupResponse>(request, options);}
public virtual AssociateMemberAccountResponse AssociateMemberAccount(AssociateMemberAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.Instance;return Invoke<AssociateMemberAccountResponse>(request, options);}
public void Run() { doRefreshProgress(mId, mProgress, mFromUser, true); mRefreshProgressRunnable = this; }
public virtual SetTerminationProtectionResponse SetTerminationProtection(SetTerminationProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTerminationProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTerminationProtectionResponseUnmarshaller.Instance;return Invoke<SetTerminationProtectionResponse>(request, options);}
public string GetErrorHeader(RecognitionException e) {int line = e.OffendingToken.Line;int charPositionInLine = e.OffendingToken.CharPositionInLine;return "line " + line + ":" + charPositionInLine;}
public CharBuffer AsReadOnlyBuffer() {CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.AsReadOnlyBuffer());buf.Limit = limit;buf.Position = position;buf.Mark = mark;buf.ByteBuffer.Order = byteBuffer.Order;return buf;}
public virtual StopSentimentDetectionJobResponse StopSentimentDetectionJob(StopSentimentDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke<StopSentimentDetectionJobResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> GetNewObjectIds(){if (newObjectIds != null)return newObjectIds;return new ObjectIdSubclassMap<ObjectId>();}
public void Clear() {hash = Hash(new byte[0]);base.Clear();}
public void reset() throws IOException {lock (lock) {checkNotClosed();if (mark == -1) {throw new IOException("Invalid mark");}pos = mark;}}
public RefErrorPtg(LittleEndianInput in) {field_1_reserved = in.ReadInt();}
public virtual SuspendGameServerGroupResult SuspendGameServerGroup(SuspendGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = SuspendGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = SuspendGameServerGroupResponseUnmarshaller.Instance;return Invoke<SuspendGameServerGroupResult>(request, options);}
public final ValueEval Evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex){if (args.Length != 3){return ErrorEval.VALUE_INVALID;}return Evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}
public GetRepoRequest() : base("cr", "2016-06-07", "GetRepo", "cr"){UriPattern = "/repos/[RepoNamespace]/[RepoName]";Method = MethodType.GET;}
public void SetDate(DateTime date) {if (date != null) {SetDate(DateTools.DateToString(date, DateTools.Resolution.SECOND));} else {this.date = null;}}
public TokenStream Create(TokenStream input){return new GermanMinimalStemFilter(input);}
public object[] ToArray(){return a.Clone();}
public void Write(char[] buffer, int offset, int len) {Arrays.CheckOffsetAndCount(buffer.Length, offset, len);lock (lock) {Expand(len);System.ArrayCopy(buffer, offset, this.buf, this.count, len);this.count += len;}}
public static readonly RevFilter After(DateTime ts) { return After(ts.ToUniversalTime().Ticks); }
public DeleteGroupPolicyRequest(string groupName, string policyName) { SetGroupName(groupName); SetPolicyName(policyName); }
public virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual BatchDeleteScheduledActionResponse batchDeleteScheduledAction(BatchDeleteScheduledActionRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchDeleteScheduledActionRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDeleteScheduledActionResponseUnmarshaller.Instance;return Invoke<BatchDeleteScheduledActionResponse>(request, options);}
public virtual CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;return Invoke<CreateAlgorithmResponse>(request, options);}
public int readUByte(){return readByte() & 0x00FF;}
public void setLength(int sz){NB.encodeInt32(info, infoOffset + P_SIZE, sz);}
public virtual DescribeScalingProcessTypesResponse DescribeScalingProcessTypes(){return DescribeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}
public virtual ListResourceRecordSetsResponse ListResourceRecordSets(ListResourceRecordSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListResourceRecordSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.Instance;return Invoke<ListResourceRecordSetsResponse>(request, options);}
public Exception RecoverInline(Parser recognizer){InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.getContext(); context != null; context = context.getParent()){context.exception = e;}throw new ParseCancellationException(e);}
public virtual SetTagsForResourceResult SetTagsForResource(SetTagsForResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance;return Invoke<SetTagsForResourceResult>(request, options);}
public ModifyStrategyRequest() : base("CloudCallCenter", "2017-07-05", "ModifyStrategy", "CloudCallCenter", "innerAPI") {}
public virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcEndpointServicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcEndpointServicesResponseUnmarshaller.Instance;return Invoke<DescribeVpcEndpointServicesResponse>(request, options);}
public virtual EnableLoggingResponse EnableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableLoggingRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableLoggingResponseUnmarshaller.Instance;return Invoke<EnableLoggingResponse>(request, options);}
public bool Contains(object o){return ConcurrentHashMap.this.ContainsValue(o);}
public SheetRangeIdentifier(string bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) : base(bookName, firstSheetIdentifier){_lastSheetIdentifier = lastSheetIdentifier;}
public DomainMetadataRequest(string domainName) { this.DomainName = domainName; }
public ParseException(Token currentTokenVal, int[][] expectedTokenSequencesVal, string[] tokenImageVal) : base(new MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal))){this.currentToken = currentTokenVal;this.expectedTokenSequences = expectedTokenSequencesVal;this.tokenImage = tokenImageVal;}
public FetchPhotosRequest() : base("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public System.IO.StreamWriter Writer() { return writer; }
public NGramTokenizerFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){minGramSize = GetInt(args, "minGramSize", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = GetInt(args, "maxGramSize", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (args.Count > 0) {throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public bool IsDirectoryFileConflict(){return dfConflict != null;}
public IndonesianStemFilter(TokenStream input, bool stemDerivational) : base(input){this.stemDerivational = stemDerivational;}
public virtual CreateTrafficPolicyResult CreateTrafficPolicy(CreateTrafficPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyResultUnmarshaller.Instance;return Invoke<CreateTrafficPolicyResult>(request, options);}
public void serialize(LittleEndianOutput out) {out.writeInt(fSD);out.writeInt(passwordVerifier);StringUtil.writeUnicodeString(out, title);out.write(securityDescriptor);}
public static double Floor(double n, double s) {if (s == 0 && n != 0) {return double.NaN;} else {return (n == 0 || s == 0) ? 0 : Math.Floor(n / s) * s;}}
public ByteArrayDataOutput(byte[] bytes, int offset, int len){reset(bytes, offset, len);}
public static List<Tree> GetChildren(Tree t) {List<Tree> kids = new List<Tree>();for (int i = 0; i < t.GetChildCount(); i++) {kids.Add(t.GetChild(i));}return kids;}
public void clear() { Hashtable.this.Clear(); }
public RefreshAllRecord(bool refreshAll) : base(0){SetRefreshAll(refreshAll);}
public virtual DeleteNamedQueryResult DeleteNamedQuery(DeleteNamedQueryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNamedQueryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNamedQueryResponseUnmarshaller.Instance;return Invoke<DeleteNamedQueryResult>(request, options);}
public GraphvizFormatter(ConnectionCosts costs) {this.costs = costs;this.bestPathMap = new Dictionary<int, double>();sb.Append(formatHeader());sb.Append("  init [style=invis]\n");sb.Append("  init -> 0.0 [label=\"" + BOS_LABEL + "\"]\n");}
public CheckMultiagentRequest() : base("visionai-poc", "2020-04-08", "CheckMultiagent"){SetMethod(MethodType.POST);}
public virtual ListUserProfilesResponse ListUserProfiles(ListUserProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListUserProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListUserProfilesResponseUnmarshaller.Instance;return Invoke<ListUserProfilesResponse>(request, options);}
public virtual CreateRelationalDatabaseFromSnapshotResult CreateRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance;return Invoke<CreateRelationalDatabaseFromSnapshotResult>(request, options);}
public virtual StartTaskResponse StartTask(StartTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StartTaskResponseUnmarshaller.Instance;return Invoke<StartTaskResponse>(request, options);}
public HashSet<string> GetIgnoredPaths() { return ignoredPaths; }
public FeatSmartTag(RecordInputStream in){data = in.ReadRemainder();}
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {SetAction(action.ToString());SetResourceRecordSet(resourceRecordSet);}
public virtual DeleteImageResult DeleteImage(DeleteImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteImageResultUnmarshaller.Instance;return Invoke<DeleteImageResult>(request, options);}
public virtual CreateConfigurationSetResult CreateConfigurationSet(CreateConfigurationSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateConfigurationSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateConfigurationSetResponseUnmarshaller.Instance;return Invoke<CreateConfigurationSetResult>(request, options);}
public System.Collections.Generic.IEnumerator<E> GetEnumerator() {E[] snapshot = elements;return new CowIterator<E>(snapshot, 0, snapshot.length);}
public void VisitContainedRecords(RecordVisitor rv){if (_recs.IsEmpty()){return;}rv.VisitRecord(_bofRec);for (int i = 0; i < _recs.Count; i++){RecordBase rb = _recs[i];if (rb is RecordAggregate){((RecordAggregate) rb).VisitContainedRecords(rv);} else {rv.VisitRecord((org.apache.poi.hssf.record.Record) rb);}}rv.VisitRecord(EOFRecord.Instance);}
public string ToString(){var buffer = new StringBuilder();buffer.Append("[FtCbls ]").Append("\n");buffer.Append("  size     = ").Append(GetDataSize()).Append("\n");buffer.Append("  reserved = ").Append(HexDump.ToHex(Reserved)).Append("\n");buffer.Append("[/FtCbls ]").Append("\n");return buffer.ToString();}
public static BATBlock createEmptyBATBlock(final POIFSBigBlockSize bigBlockSize, bool isXBAT) {BATBlock block = new BATBlock(bigBlockSize);if (isXBAT) {final int _entries_per_xbat_block = bigBlockSize.getXBATEntriesPerBlock();block._values[_entries_per_xbat_block] = POIFSConstants.END_OF_CHAIN;}return block;}
public virtual TagResourceResult TagResource(TagResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = TagResourceResponseUnmarshaller.Instance;return Invoke<TagResourceResult>(request, options);}
public virtual DeleteMailboxPermissionsResult DeleteMailboxPermissions(DeleteMailboxPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMailboxPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMailboxPermissionsResponseUnmarshaller.Instance;return Invoke<DeleteMailboxPermissionsResult>(request, options);}
public virtual ListDatasetGroupsResponse ListDatasetGroups(ListDatasetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;return Invoke<ListDatasetGroupsResponse>(request, options);}
public virtual ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResumeProcessesRequestMarshaller.Instance;options.ResponseUnmarshaller = ResumeProcessesResponseUnmarshaller.Instance;return Invoke<ResumeProcessesResponse>(request, options);}
public virtual GetPersonTrackingResult GetPersonTracking(GetPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;return Invoke<GetPersonTrackingResult>(request, options);}
public string ToFormulaString(string[] operands) {if (space.IsSet(_options)) {return operands[0];} else if (optiIf.IsSet(_options)) {return ToFormulaString() + "(" + operands[0] + ")";} else if (optiSkip.IsSet(_options)) {return ToFormulaString() + operands[0];} else {return ToFormulaString() + "(" + operands[0] + ")";}}
public T merge(T first, T second) { throw new NotImplementedException(); }
public string ToString() { return this.message.Key + ": " + GetLocalizedMessage(); }
public XPath(Parser parser, string path) {this.parser = parser;this.path = path;elements = split(path);}
public CreateAccountAliasRequest(string accountAlias) { SetAccountAlias(accountAlias); }
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >> 7) & 1;values[valuesOffset++] = (block >> 6) & 1;values[valuesOffset++] = (block >> 5) & 1;values[valuesOffset++] = (block >> 4) & 1;values[valuesOffset++] = (block >> 3) & 1;values[valuesOffset++] = (block >> 2) & 1;values[valuesOffset++] = (block >> 1) & 1;values[valuesOffset++] = block & 1;}}
public TcpPushConnection OpenPush(){return new TcpPushConnection();}
public static void Strcpy(char[] dst, int di, char[] src, int si) {while (src[si] != '\0') {dst[di++] = src[si++];}dst[di] = '\0';}
public override object GetKey(){return mapEntry.Key;}
public static int NumNonnull(object[] data) {int n = 0;if (data == null) return n;foreach (var o in data){if (o != null) n++;}return n;}
public void Add(int location, E object) {if (location >= 0 && location <= size) {Link<E> link = voidLink;if (location < (size / 2)) {for (int i = 0; i <= location; i++) {link = link.next;}} else {for (int i = size; i > location; i--) {link = link.previous;}}Link<E> previous = link.previous;Link<E> newLink = new Link<E>(object, previous, link);previous.next = newLink;link.previous = newLink;size++;modCount++;} else {throw new IndexOutOfBoundsException();}}
public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}
public void flush() throws IOException { super.flush(); }
public PersianCharFilterFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){if (!args.IsEmpty) {throw new System.ArgumentException("Unknown parameters: " + args);}}
public bool IncrementToken() {if (used) {return false;}ClearAttributes();termAttribute.Append(value);offsetAttribute.SetOffset(0, length);used = true;return true;}
public static FloatBuffer Allocate(int capacity){if (capacity < 0){throw new ArgumentException();}return new ReadWriteFloatArrayBuffer(capacity);}
public final Edit After(Edit cut) {return new Edit(cut.EndA, EndA, cut.EndB, EndB);}
public virtual UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;return Invoke<UpdateRuleVersionResponse>(request, options);}
public virtual ListVoiceConnectorTerminationCredentialsResponse ListVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return Invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);}
public virtual GetDeploymentTargetResult GetDeploymentTarget(GetDeploymentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDeploymentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDeploymentTargetResponseUnmarshaller.Instance;return Invoke<GetDeploymentTargetResult>(request, options);}
public void SetNoChildReport(){letChildReport = false;foreach (var task in tasks){if (task is TaskSequence){((TaskSequence)task).SetNoChildReport();}}}
public T E get(int location){try{return a[location];}catch(IndexOutOfBoundsException e){throw new java.util.ArrayList.throwIndexOutOfBoundsException(location, a.Length);}}
public virtual DescribeDataSetResponse DescribeDataSet(DescribeDataSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance;return Invoke<DescribeDataSetResponse>(request, options);}
public SkipWorkTreeFilter(int treeIdx){this.treeIdx = treeIdx;}
public DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResponse>(new DescribeNetworkInterfacesRequest(), options);}
public final bool Contains(int row, int col) {return _firstRow <= row && _lastRow >= row && _firstColumn <= col && _lastColumn >= col;}
public override string ToString() {return new string(this.chars);}
public PatchType GetPatchType() { return patchType; }
public System.Collections.Generic.IEnumerable<K> iterator() {return new KeyIterator();}
public virtual CreateScriptResult CreateScript(CreateScriptRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateScriptResponseUnmarshaller.Instance;return Invoke<CreateScriptResult>(request, options);}
public BytesRef Next() {termUpto++;if (termUpto >= info.terms.Count) {return null;} else {info.terms[info.sortedTerms[termUpto], br];return br;}}
public string OutputToString(CharsRef output) { return output.ToString(); }
public virtual AssociateWebsiteAuthorizationProviderResult AssociateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateWebsiteAuthorizationProviderRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateWebsiteAuthorizationProviderResponseUnmarshaller.Instance;return Invoke<AssociateWebsiteAuthorizationProviderResult>(request, options);}
public void Unpop(RevCommit c){Block b = head;if(b == null){b = free.NewBlock();b.ResetToMiddle();b.Add(c);head = b;tail = b;return;}else if(b.CanUnpop()){b.Unpop(c);return;}b = free.NewBlock();b.ResetToEnd();b.Unpop(c);b.Next = head;head = b;}
public EdgeNGramTokenizerFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){minGramSize = GetInt(args, "minGramSize", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = GetInt(args, "maxGramSize", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public ModifyDBParameterGroupRequest(string dBParameterGroupName, System.Collections.Generic.List<Parameter> parameters) {SetDBParameterGroupName(dBParameterGroupName);SetParameters(parameters);}
public virtual GetHostedZoneLimitResult GetHostedZoneLimit(GetHostedZoneLimitRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;return Invoke<GetHostedZoneLimitResult>(request, options);}
public void set(int index, long value) {final int o = index >>> 6;final int b = index & 63;final int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}
public RevFilter Clone() {return new PatternSearch(pattern());}
public override string ToString() {return "spans(" + term.ToString() + ")@"+ (doc == -1 ? "START" : (doc == NO_MORE_DOCS) ? "ENDDOC" : doc + " - "+ (position == NO_MORE_POSITIONS ? "ENDPOS" : position));}
public bool CanAppendMatch() {foreach (var head in heads) {if (head != LastHead.INSTANCE) {return true;}}return false;}
public int LastIndexOf(string subString, int start) { return base.LastIndexOf(subString, start); }
public virtual DeleteNetworkAclEntryResult DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNetworkAclEntryResultUnmarshaller.Instance;return Invoke<DeleteNetworkAclEntryResult>(request, options);}
public virtual AssociateMemberToGroupResponse AssociateMemberToGroup(AssociateMemberToGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberToGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.Instance;return Invoke<AssociateMemberToGroupResponse>(request, options);}
public static int committer(byte[] b, int ptr) {int sz = b.Length;if (ptr == 0) ptr += 46;while (ptr < sz && b[ptr] == 'p') ptr += 48;if (ptr < sz && b[ptr] == 'a') ptr = nextLF(b, ptr);return match(b, ptr, "committer");}
public int GetLineNumber() { return row; }
public SubmoduleUpdateCommand AddPath(string path) {paths.Add(path);return this;}
public virtual GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance;return Invoke<GetPushTemplateResponse>(request, options);}
public virtual DescribeVaultResponse DescribeVault(DescribeVaultRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;return Invoke<DescribeVaultResponse>(request, options);}
public DescribeVpcPeeringConnectionsResult DescribeVpcPeeringConnections(){return DescribeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}
public ReadOnlySpan<byte> PutLong(int index, long value) { throw new NotSupportedException(); }
public virtual RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterDeviceRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterDeviceResponseUnmarshaller.Instance;return Invoke<RegisterDeviceResponse>(request, options);}
public static Format ById(int id){foreach (Format format in Format.values()){if (format.Id == id){return format;}}throw new ArgumentException("Unknown format id: " + id);}
public virtual DeleteAppResponse DeleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;return Invoke<DeleteAppResponse>(request, options);}
public virtual GetBaiduChannelResponse GetBaiduChannel(GetBaiduChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBaiduChannelResponseUnmarshaller.Instance;return Invoke<GetBaiduChannelResponse>(request, options);}
public FST.BytesReader GetBytesReader(){return fst.GetBytesReader();}
public static bool isValidSchemeChar(int index, char c) {if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {return true;}return false;}
public virtual ListAppliedSchemaArnsResponse ListAppliedSchemaArns(ListAppliedSchemaArnsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAppliedSchemaArnsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.Instance;return Invoke<ListAppliedSchemaArnsResponse>(request, options);}
public string Name() { return this.Name; }
public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.Length < 1) {return ErrorEval.VALUE_INVALID;}bool isA1style;string text;try {ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.GetRowIndex(), ec.GetColumnIndex());text = OperandResolver.CoerceValueToString(ve);switch (args.Length) {case 1:isA1style = true;break;case 2:isA1style = EvaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}} catch (EvaluationException e) {return e.GetErrorEval();}return EvaluateIndirect(ec, text, isA1style);}
public final int CompareTo(int[] bs, int p) {int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0) return cmp;cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0) return cmp;cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0) return cmp;cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0) return cmp;return NB.CompareUInt32(w5, bs[p + 4]);}
public void RemoveName(int index){names.RemoveAt(index);workbook.RemoveName(index);}
public GetQueueAttributesRequest(string queueUrl, System.Collections.Generic.List<string> attributeNames) { SetQueueUrl(queueUrl); SetAttributeNames(attributeNames); }
public static bool[] CopyOf(bool[] original, int newLength) { if (newLength < 0) { throw new ArgumentOutOfRangeException("newLength"); } return CopyOfRange(original, 0, newLength); }
public static void SetEnabled(bool enabled){ENABLED = enabled;}
public virtual DeleteLogPatternResult DeleteLogPattern(DeleteLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResultUnmarshaller.Instance;return Invoke<DeleteLogPatternResult>(request, options);}
public bool Contains(char[] text, int off, int len) {return map.ContainsKey(text, off, len);}
public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber);}
public bool handles(string commandLine) {return commandLine.Length > command.Length && commandLine[command.Length] == ' ' && commandLine.StartsWith(command);}
public static void register(MergeStrategy imp){register(imp.getName(), imp);}
public long RamBytesUsed() {return BASE_RAM_BYTES_USED + ((Index != null) ? Index.RamBytesUsed() : 0);}
public HostedZone(string id, string name, string callerReference){SetId(id);SetName(name);SetCallerReference(callerReference);}
public virtual GetFindingsResult GetFindings(GetFindingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFindingsResponseUnmarshaller.Instance;return Invoke<GetFindingsResult>(request, options);}
public virtual DescribeTopicsDetectionJobResponse DescribeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;return Invoke<DescribeTopicsDetectionJobResponse>(request, options);}
public bool ProcessMatch(ValueEval eval){if(eval is NumericValueEval){if(minimumValue == null){minimumValue = eval;}else{double currentValue = ((NumericValueEval)eval).NumberValue;double oldValue = ((NumericValueEval)minimumValue).NumberValue;if(currentValue < oldValue){minimumValue = eval;}}}return true;}
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_len_ref_subexpression);}
using System;using System.IO;using System.Linq;using org.apache.lucene.facet.util;using org.apache.lucene.store;using org.apache.lucene.facet;using org.apache.lucene.index;public class Program{public static void Main(string[] args){bool printTree = false;string path = null;for (int i = 0; i < args.Length; i++){if (args[i].Equals("-printTree")){printTree = true;}else{path = args[i];}}if (args.Length != (printTree ? 2 : 1)){Console.WriteLine("\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\n");System.exit(1);}var dir = FSDirectory.Open(new DirectoryInfo(path));var r = new DirectoryTaxonomyReader(dir);PrintTaxonomyStats.printStats(r, Console.Out, printTree);r.Close();dir.Close();}}
public void SetByteValue(byte value){if (!(fieldsData is Byte)) {throw new ArgumentException("cannot change value type from " + fieldsData.GetType().Name + " to Byte");}fieldsData = Byte.ValueOf(value);}
public static int Initialize(){return Initialize(DEFAULT_SEED);}
public CachingDoubleValueSource(DoubleValuesSource source) { this.source = source; cache = new Dictionary<string, double>(); }
public AttributeDefinition(string attributeName, ScalarAttributeType attributeType){SetAttributeName(attributeName);SetAttributeType(attributeType.ToString());}
public static string Join(System.Collections.Generic.IEnumerable<string> parts, string separator){return System.String.Join(separator, parts);}
public virtual ListTaskDefinitionFamiliesResponse ListTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance;return Invoke<ListTaskDefinitionFamiliesResponse>(request, options);}
public virtual ListComponentsResponse ListComponents(ListComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;return Invoke<ListComponentsResponse>(request, options);}
public ActivatePhotosRequest() : base("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public virtual CreateMatchmakingRuleSetResult CreateMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;return Invoke<CreateMatchmakingRuleSetResult>(request, options);}
public virtual ListAvailableManagementCidrRangesResponse ListAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;return Invoke<ListAvailableManagementCidrRangesResponse>(request, options);}
public ObjectIdSubclassMap<ObjectId> GetBaseObjectIds(){if (baseObjectIds != null)return baseObjectIds;return new ObjectIdSubclassMap<ObjectId>();}
public virtual DeletePushTemplateResult DeletePushTemplate(DeletePushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;return Invoke<DeletePushTemplateResult>(request, options);}
public virtual CreateDomainEntryResponse CreateDomainEntry(CreateDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDomainEntryResponseUnmarshaller.Instance;return Invoke<CreateDomainEntryResponse>(request, options);}
public static int GetEncodedSize(object[] values) {int result = values.Length * 1;for (var value in values) {result += GetEncodedSize(value);}return result;}
public OpenNLPTokenizerFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){sentenceModelFile = require(args, Constants.SENTENCE_MODEL);tokenizerModelFile = require(args, Constants.TOKENIZER_MODEL);if (args.Count > 0){throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public final int GetInt(int index) { checkIndex(index, SizeOf.INT); return Memory.peekInt(backingArray, offset + index, order); }
public List<Head> GetNextHeads(char c) {if (Matches(c)) {return newHeads;}return FileNameMatcher.EMPTY_HEAD_LIST;}
public MemoryStream PutShort(short value) { throw new ReadOnlyCollectionException(); }
public void WriteUnshared(object object){WriteObject(object, true);}
public int OffsetByCodePoints(int index, int codePointOffset){return Character.OffsetByCodePoints(value, 0, count, index, codePointOffset);}
public static int GetUniqueAlt(System.Collections.Generic.IEnumerable<System.Collections.BitArray> altsets) {var all = GetAlts(altsets);if (all.Count == 1) return all.NextSetBit(0);return ATN.INVALID_ALT_NUMBER;}
public DateTime GetWhen() { return new DateTime(when); }
public RuleTagToken(string ruleName, int bypassTokenType, string label) {if (ruleName == null || ruleName.Length == 0) {throw new ArgumentException("ruleName cannot be null or empty.");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}
public virtual DisableOrganizationAdminAccountResult DisableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableOrganizationAdminAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableOrganizationAdminAccountResponseUnmarshaller.Instance;return Invoke<DisableOrganizationAdminAccountResult>(request, options);}
public virtual CreateRoomResponse CreateRoom(CreateRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;return Invoke<CreateRoomResponse>(request, options);}
public virtual DeleteReplicationGroupResponse DeleteReplicationGroup(DeleteReplicationGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;return Invoke<DeleteReplicationGroupResponse>(request, options);}
public final CharBuffer Decode(ByteBuffer buffer){try{return newDecoder().OnMalformedInput(CodingErrorAction.REPLACE).OnUnmappableCharacter(CodingErrorAction.REPLACE).Decode(buffer);}catch(CharacterCodingException ex){throw new Error(ex.Message, ex);}}
public Distribution(string id, string status, string domainName){this.Id = id;this.Status = status;this.DomainName = domainName;}
public final double[] array(){return protectedArray();}
public DateWindow1904Record(RecordInputStream in) { field_1_window = in.ReadInt16(); }
public DeleteDBSnapshotRequest(string dBSnapshotIdentifier){SetDBSnapshotIdentifier(dBSnapshotIdentifier);}
public T GetExtension(string key){return this.extensions.get(key);}
public void Inform(ResourceLoader loader) {try {if (chunkerModelFile != null) {OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);}} catch (IOException e) {throw new ArgumentException(e);}}
public virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteVaultLockRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteVaultLockResponseUnmarshaller.Instance;return Invoke<CompleteVaultLockResponse>(request, options);}
public final int[] GetCharIntervals(){return points.Clone();}
public long RamBytesUsed(){return Values.RamBytesUsed() + base.RamBytesUsed() + long.Size + RamUsageEstimator.NumBytesObjectRef;}
public virtual RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.Instance;return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options);}
public DescribeClusterUserKubeconfigRequest() : base("CS", "2015-12-15", "DescribeClusterUserKubeconfig", "csk") {UriPattern = "/k8s/[ClusterId]/user_config"; Method = MethodType.GET;}
public PrecisionRecord(RecordInputStream in) {Field_1_Precision = in.ReadShort();}
public void serialize(LittleEndianOutput out){out.writeShort(getLeftRowGutter());out.writeShort(getTopColGutter());out.writeShort(getRowLevelMax());out.writeShort(getColLevelMax());}
public virtual DeleteVirtualInterfaceResult DeleteVirtualInterface(DeleteVirtualInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVirtualInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVirtualInterfaceResponseUnmarshaller.Instance;return Invoke<DeleteVirtualInterfaceResult>(request, options);}
public Entry getEntry(string name){if (excludes.Contains(name)){throw new FileNotFoundException(name);}Entry entry = directory.getEntry(name);return wrapEntry(entry);}
public string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append("[BACKUP]\n");buffer.Append("    .backup          = ").Append(Convert.ToString(getBackup(), 16)).Append("\n");buffer.Append("[/BACKUP]\n");return buffer.ToString();}
public virtual DeleteVoiceConnectorOriginationResult DeleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorOriginationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorOriginationResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorOriginationResult>(request, options);}
public Appendable append(char c) {Write(c); return this;}
public static long GenerationFromSegmentsFileName(string fileName) { if (fileName == OLD_SEGMENTS_GEN) { throw new ArgumentException("\"\" + OLD_SEGMENTS_GEN + \"\" is not a valid segment file name since 4.0"); } else if (fileName == IndexFileNames.SEGMENTS) { return 0; } else if (fileName.StartsWith(IndexFileNames.SEGMENTS)) { return long.Parse(fileName.Substring(1 + IndexFileNames.SEGMENTS.Length()), System.Globalization.NumberStyles.HexNumber); } else { throw new ArgumentException("fileName \"" + fileName + "\" is not a segments file"); } }
public static TagOpt FromOption(string o) {if (o == null || o.Length == 0)return AUTO_FOLLOW;foreach (TagOpt tagopt in Enum.GetValues(typeof(TagOpt))) {if (tagopt.Option().Equals(o))return tagopt;}throw new ArgumentException($"Invalid tag option: {o}");}
public virtual StartContentModerationResult StartContentModeration(StartContentModerationRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartContentModerationRequestMarshaller.Instance;options.ResponseUnmarshaller = StartContentModerationResultUnmarshaller.Instance;return Invoke<StartContentModerationResult>(request, options);}
public static string QuoteReplacement(string s) {var result = new StringBuilder(s.Length);for (int i = 0; i < s.Length; i++) {char c = s.charAt(i);if (c == '\\' || c == '$') {result.Append('\\');}result.Append(c);}return result.ToString();}
public final void Set(V newValue) { value = newValue; }
public QueryParserTokenManager(CharStream stream){this.input_stream = stream;}
public long valueFor(double elapsed) {double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return (long) Math.Round(val);elsereturn (long) val;}
public LongBuffer Get(long[] dst, int dstOffset, int longCount) {byteBuffer.Limit(limit * SizeOf.LONG);byteBuffer.Position(position * SizeOf.LONG);if (byteBuffer is DirectByteBuffer) {((DirectByteBuffer)byteBuffer).Get(dst, dstOffset, longCount);} else {((HeapByteBuffer)byteBuffer).Get(dst, dstOffset, longCount);}this.position += longCount;return this;}
public void RemoveErrorListeners(){_listeners.Clear();}
public CommonTokenStream(TokenSource tokenSource, int channel) : this(tokenSource){this.channel = channel;}
public virtual ListObjectPoliciesResponse ListObjectPolicies(ListObjectPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectPoliciesResponseUnmarshaller.Instance;return Invoke<ListObjectPoliciesResponse>(request, options);}
public ObjectToPack(AnyObjectId src, int type) : base(src){Flags = type << TYPE_SHIFT;}
public int stem(char s[], int len) {int numVowels = numVowels(s, len);for (int i = 0; i < affixes.length; i++) {Affix affix = affixes[i];if (numVowels > affix.vc && len >= affix.affix.length + 3 && endsWith(s, len, affix.affix)) {len -= affix.affix.length;return affix.palatalizes ? unpalatalize(s, len) : len;}}return len;}
public void Recover(Parser recognizer, RecognitionException e){if ( lastErrorIndex == recognizer.InputStream.index && lastErrorStates != null && lastErrorStates.Contains(recognizer.State) ){recognizer.consume();}lastErrorIndex = recognizer.InputStream.index;if ( lastErrorStates == null ) lastErrorStates = new IntervalSet();lastErrorStates.Add(recognizer.State);IntervalSet followSet = GetErrorRecoverySet(recognizer);ConsumeUntil(recognizer, followSet);}
public string ToFormulaString() {string value = field_3_string;int len = value.Length;StringBuilder sb = new StringBuilder(len + 4);sb.Append(FORMULA_DELIMITER);for (int i = 0; i < len; i++) {char c = value[i];if (c == FORMULA_DELIMITER) {sb.Append(FORMULA_DELIMITER);}sb.Append(c);}sb.Append(FORMULA_DELIMITER);return sb.ToString();}
public UnlinkFaceRequest() : base("LinkFace", "2018-07-20", "UnlinkFace"){Protocol = ProtocolType.HTTPS;Method = MethodType.POST;}
public ConfigurationOptionSetting(string namespace, string optionName, string value){SetNamespace(namespace);SetOptionName(optionName);SetValue(value);}
public System.Text.StringBuilder getFully(System.Object key) {System.Text.StringBuilder result = new System.Text.StringBuilder(tries.size() * 2);for (int i = 0; i < tries.size(); i++) {System.Object r = tries.get(i).getFully(key);if (r == null || (r.ToString().Length == 1 && r.ToString()[0] == EOM)) {return result;}result.Append(r.ToString());}return result;}
public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);}
public virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApiMappingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApiMappingResponseUnmarshaller.Instance;return Invoke<GetApiMappingResponse>(request, options);}
public HttpRequest(string strUrl) : base(strUrl) {}
public MemFuncPtg(int subExprLen) { this.field_1_len_ref_subexpression = subExprLen; }
public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, string field, Comparator<TermStats> comparator){TermStatsQueue tiq = null;if (field != null){Terms terms = MultiTerms.GetTerms(reader, field);if (terms == null){throw new RuntimeException("field " + field + " not found");}TermsEnum termsEnum = terms.GetEnumerator();tiq = new TermStatsQueue(numTerms, comparator);tiq.Fill(field, termsEnum);}else{var fields = FieldInfos.GetIndexedFields(reader);if (fields.Count == 0){throw new RuntimeException("no fields found for this index");}tiq = new TermStatsQueue(numTerms, comparator);foreach (var fieldName in fields){Terms terms = MultiTerms.GetTerms(reader, fieldName);if (terms != null){tiq.Fill(fieldName, terms.GetEnumerator());}}}var result = new TermStats[tiq.Size()];int count = tiq.Size() - 1;while (tiq.Size() != 0){result[count] = tiq.Pop();count--;}return result;}
public virtual DeleteApnsVoipChannelResponse DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;return Invoke<DeleteApnsVoipChannelResponse>(request, options);}
public virtual ListFacesResult ListFaces(ListFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListFacesResultUnmarshaller.Instance;return Invoke<ListFacesResult>(request, options);}
public ShapeFieldCacheDistanceValueSource(SpatialContext ctx, ShapeFieldCacheProvider<Point> provider, Point from, double multiplier){this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}
public char Get(int index) { CheckIndex(index); return sequence.Chars[index]; }
public virtual UpdateConfigurationProfileResponse UpdateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationProfileResponse>(request, options);}
public virtual DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLifecycleHooksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLifecycleHooksResponseUnmarshaller.Instance;return Invoke<DescribeLifecycleHooksResponse>(request, options);}
public virtual DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHostReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.Instance;return Invoke<DescribeHostReservationsResponse>(request, options);}
public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext){if (outerContext == null) outerContext = RuleContext.Empty;if (outerContext.Parent == null || outerContext == RuleContext.Empty){return PredictionContext.Empty;}PredictionContext parent = null;parent = PredictionContext.FromRuleContext(atn, outerContext.Parent);ATNState state = atn.States[outerContext.InvokingState];RuleTransition transition = (RuleTransition)state.Transition(0);return SingletonPredictionContext.Create(parent, transition.FollowState.StateNumber);}
public string ToString() { var buffer = new System.Text.StringBuilder(); buffer.AppendLine("[SXVDEX]"); buffer.AppendLine($"    .grbit1 ={HexDump.IntToHex(_grbit1)}"); buffer.AppendLine($"    .grbit2 ={HexDump.ByteToHex(_grbit2)}"); buffer.AppendLine($"    .citmShow ={HexDump.ByteToHex(_citmShow)}"); buffer.AppendLine($"    .isxdiSort ={HexDump.ShortToHex(_isxdiSort)}"); buffer.AppendLine($"    .isxdiShow ={HexDump.ShortToHex(_isxdiShow)}"); buffer.AppendLine($"    .subtotalName ={_subtotalName}"); buffer.AppendLine("[/SXVDEX]"); return buffer.ToString(); }
public string ToString() {StringBuilder r = new StringBuilder();r.Append("BlameResult: ");r.Append(ResultPath);return r.ToString();}
public virtual ListChangeSetsResponse listChangeSets(ListChangeSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance;return Invoke<ListChangeSetsResponse>(request, options);}
public bool isAllowNonFastForwards() {return allowNonFastForwards;}
public FeatRecord() {futureHeader = new FtrHeader(); futureHeader.SetRecordType(sid);}
public CSharpBuffer Put(short c) { throw new ReadOnlyBufferException(); }
public void SetQuery(string query) { this.query = query; this.message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, ""); }
public StashApplyCommand StashApply() { return new StashApplyCommand(repo); }
public HashSet<string> NameSet() {var dictionaryValues = dictionary.Values;return new HashSet<string>(dictionaryValues);}
public static int GetEffectivePort(string scheme, int specifiedPort){if (specifiedPort != -1){return specifiedPort;}if (scheme.Equals("http", StringComparison.OrdinalIgnoreCase)){return 80;}else if (scheme.Equals("https", StringComparison.OrdinalIgnoreCase)){return 443;}else{return -1;}}
public virtual ListAssessmentTemplatesResponse ListAssessmentTemplates(ListAssessmentTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssessmentTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssessmentTemplatesResponseUnmarshaller.Instance;return Invoke<ListAssessmentTemplatesResponse>(request, options);}
public virtual RestoreFromClusterSnapshotResponse RestoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreFromClusterSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreFromClusterSnapshotResponseUnmarshaller.Instance;return Invoke<RestoreFromClusterSnapshotResponse>(request, options);}
public void AddShape(HSSFShape shape){shape.Patriarch = this.GetPatriarch();shape.Parent = this;shapes.Add(shape);}
public bool Equals(Object o) {if (this == o) return true;if (o == null || GetType() != o.GetType()) return false;FacetEntry that = (FacetEntry)o;if (count != that.count) return false;if (!value.Equals(that.value)) return false;return true;}
public static int prev(byte[] b, int ptr, char chrA) {if (ptr == b.length)--ptr;while (ptr >= 0) {if (b[ptr--] == chrA)return ptr;}return ptr;}
public final bool IsDeltaRepresentation(){return deltaBase != null;}
public Token EmitEOF() {int cpos = GetCharPositionInLine();int line = GetLine();Token eof = _factory.Create(_tokenFactorySourcePair, Token.EOF, null, Token.DEFAULT_CHANNEL, _input.Index(), _input.Index() - 1, line, cpos);Emit(eof);return eof;}
public UpdateUserRequest(string userName) { SetUserName(userName); }
public RevFilter Negate() { return NotRevFilter.Create(this); }
public void SetTagger(PersonIdent taggerIdent) {tagger = taggerIdent;}
public static BufferSize Automatic() {Runtime rt = Runtime.getRuntime();final long max = rt.MaxMemory;final long total = rt.TotalMemory;final long free = rt.FreeMemory;final long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;final long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes) {if (totalAvailableBytes / 2 > minBufferSizeBytes) {sortBufferByteSize = totalAvailableBytes / 2;} else {sortBufferByteSize = Math.Max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.Min((long)int.MaxValue, sortBufferByteSize));}
public static int TrimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr])) ptr--;return ptr + 1;}
public TopMarginRecord(RecordInputStream in) { field_1_margin = in.readDouble(); }
public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType){InfoType = infoType.ToString();}
public virtual CreatePlayerSessionsResult CreatePlayerSessions(CreatePlayerSessionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePlayerSessionsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePlayerSessionsResponseUnmarshaller.Instance;return Invoke<CreatePlayerSessionsResult>(request, options);}
public virtual CreateProxySessionResult CreateProxySession(CreateProxySessionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProxySessionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProxySessionResponseUnmarshaller.Instance;return Invoke<CreateProxySessionResult>(request, options);}
public int GetObjectType() {return type;}
public string GetScheme() { return scheme; }
public void Characters(char[] ch, int start, int length){contents.Append(ch, start, length);}
public FetchAlbumTagPhotosRequest() : base("CloudPhoto", "2017-07-11", "FetchAlbumTagPhotos", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public virtual DeleteMembersResponse DeleteMembers(DeleteMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMembersResponseUnmarshaller.Instance;return Invoke<DeleteMembersResponse>(request, options);}
public virtual GetContactReachabilityStatusResult GetContactReachabilityStatus(GetContactReachabilityStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactReachabilityStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactReachabilityStatusResponseUnmarshaller.Instance;return Invoke<GetContactReachabilityStatusResult>(request, options);}
public override bool Remove(object o){return Impl.this.Remove(o) != null;}
public K last() {return backingMap.LastKey();}
public virtual CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamingDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.Instance;return Invoke<CreateStreamingDistributionResponse>(request, options);}
public bool IsAbsolute() { return absolute; }
public virtual DisableAddOnResult DisableAddOn(DisableAddOnRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableAddOnResultUnmarshaller.Instance;return Invoke<DisableAddOnResult>(request, options);}
public virtual DescribeAliasResult DescribeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;return Invoke<DescribeAliasResult>(request, options);}
public void next(int delta){while (--delta >= 0){if (currentSubtree != null)ptr += currentSubtree.getEntrySpan();elseptr++;if (eof())break;parseEntry();}}
public RevFilter Clone() {return new Binary((a as Binary).Clone(), (b as Binary).Clone());}
public Reader Create(Reader input) { return new PersianCharFilter(input); }
public string Option() { return option; }
public string ToString() {StringBuilder sb = new StringBuilder("[");foreach (object item in this) {if (sb.Length > 1) sb.Append(", ");if (item is char[]) {sb.Append((char[])item);} else {sb.Append(item);}}return sb.Append(']').ToString();}
public virtual DescribeSignalingChannelResponse DescribeSignalingChannel(DescribeSignalingChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSignalingChannelResponseUnmarshaller.Instance;return Invoke<DescribeSignalingChannelResponse>(request, options);}
public virtual AttachStaticIpResult AttachStaticIp(AttachStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachStaticIpResultUnmarshaller.Instance;return Invoke<AttachStaticIpResult>(request, options);}
public string ToString() { StringBuilder sb = new StringBuilder(64); CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false); CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false); sb.Append(GetType().Name); sb.Append(" [").Append(crA.FormatAsString()).Append(':').Append(crB.FormatAsString()).Append("]"); return sb.ToString(); }
public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat, BloomFilterFactory bloomFilterFactory) : base(BLOOM_CODEC_NAME) {this.delegatePostingsFormat = delegatePostingsFormat;this.bloomFilterFactory = bloomFilterFactory;}
public virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;return Invoke<ListTemplatesResponse>(request, options);}
public TimerThread(long resolution, Counter counter) : base(THREAD_NAME){this.resolution = resolution;this.counter = counter;this.setDaemon(true);}
public DrawingRecord() {recordData = new byte[0];}
public virtual ListDirectoriesResult ListDirectories(ListDirectoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDirectoriesResultUnmarshaller.Instance;return Invoke<ListDirectoriesResult>(request, options);}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >> 7) & 1;values[valuesOffset++] = (block >> 6) & 1;values[valuesOffset++] = (block >> 5) & 1;values[valuesOffset++] = (block >> 4) & 1;values[valuesOffset++] = (block >> 3) & 1;values[valuesOffset++] = (block >> 2) & 1;values[valuesOffset++] = (block >> 1) & 1;values[valuesOffset++] = block & 1;}}
public GroupingSearch DisableCaching() { this.maxCacheRAMMB = null; this.maxDocsToCache = null; return this; }
public static int IdealByteArraySize(int need) {for (int i = 4; i < 32; i++)if (need <= (1 << i) - 12)return (1 << i) - 12;return need;}
public virtual UpdateAssessmentTargetResult UpdateAssessmentTarget(UpdateAssessmentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;return Invoke<UpdateAssessmentTargetResult>(request, options);}
public virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;return Invoke<ModifyVolumeResponse>(request, options);}
public Cell merge(Cell m, Cell e) {if (m.Cmd == e.Cmd && m.Ref == e.Ref && m.Skip == e.Skip) {Cell c = new Cell(m);c.Cnt += e.Cnt;return c;} else {return null;}}
public MemoryStream Read(int length, long position){if (position >= Size()){throw new IndexOutOfBoundsException($"Position {position} past the end of the file");}MemoryStream dst;if (Writable){dst = new MemoryStream(channel.Map(FileChannel.MapMode.Read, position, length));buffersToClean.Add(dst);}else{channel.Position = position;dst = new MemoryStream(length);int worked = IOUtils.ReadFully(channel, dst);if (worked == -1){throw new IndexOutOfBoundsException($"Position {position} past the end of the file");}}dst.Position = 0;return dst;}
public void RespondActivityTaskCompleted(RespondActivityTaskCompletedRequest request){var options = new InvokeOptions();options.RequestMarshaller = RespondActivityTaskCompletedRequestMarshaller.Instance;options.ResponseUnmarshaller = RespondActivityTaskCompletedResponseUnmarshaller.Instance;ExecuteRespondActivityTaskCompleted(request, options);}
public virtual final void IncrementProgressBy(int diff){SetProgress(mProgress + diff);}
public MetadataDiff CompareMetadata(DirCacheEntry entry){if (entry.isAssumeValid()){return MetadataDiff.EQUAL;}if (entry.isUpdateNeeded()){return MetadataDiff.DIFFER_BY_METADATA;}if (isModeDifferent(entry.getRawMode())){return MetadataDiff.DIFFER_BY_METADATA;}int type = entry.getRawMode() & FileMode.TYPE_MASK;if (type == FileMode.TYPE_TREE || type == FileMode.TYPE_GITLINK){return MetadataDiff.EQUAL;}if (!entry.isSmudged() && entry.getLength() != (int) GetEntryLength()){return MetadataDiff.DIFFER_BY_METADATA;}Instant cacheLastModified = entry.getLastModifiedInstant();Instant fileLastModified = GetEntryLastModifiedInstant();if (timestampComparator.Compare(cacheLastModified, fileLastModified,GetOptions().getCheckStat() == CheckStat.MINIMAL) != 0){return MetadataDiff.DIFFER_BY_TIMESTAMP;}if (entry.isSmudged()){return MetadataDiff.SMUDGED;}return MetadataDiff.EQUAL;}
public static NumberRecord ConvertToNumberRecord(RKRecord rk){NumberRecord num = new NumberRecord();num.Column = rk.Column;num.Row = rk.Row;num.XFIndex = rk.XFIndex;num.Value = rk.RKNumber;return num;}
public CharBuffer Put(char[] src, int srcOffset, int charCount) { byteBuffer.Limit(limit * SizeOf.CHAR); byteBuffer.Position(position * SizeOf.CHAR); if (byteBuffer is ReadWriteDirectByteBuffer) { ((ReadWriteDirectByteBuffer)byteBuffer).Put(src, srcOffset, charCount); } else { ((ReadWriteHeapByteBuffer)byteBuffer).Put(src, srcOffset, charCount); } this.position += charCount; return this; }
public int GetCells() {var i = cells.Keys.GetEnumerator();int size = 0;while (i.MoveNext()) {char c = i.Current;Cell e = at(c);if (e.cmd >= 0 || e.ref >= 0) {size++;}}return size;}
public BeiderMorseFilterFactory(System.Collections.Generic.Dictionary<string, string> args) : base(args){NameType nameType = NameType.valueOf(get(args, "nameType", NameType.GENERIC.ToString()));RuleType ruleType = RuleType.valueOf(get(args, "ruleType", RuleType.APPROX.ToString()));bool concat = getBoolean(args, "concat", true);engine = new PhoneticEngine(nameType, ruleType, concat);System.Collections.Generic.HashSet<string> langs = getSet(args, "languageSet");languageSet = (langs == null || (langs.Count == 1 && langs.Contains("auto"))) ? null : LanguageSet.from(langs);if (!args.Any()){throw new System.ArgumentException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public static double Varp(double[] v) {double r = double.NaN;if (v != null && v.Length > 1) {r = Devsq(v) / v.Length;}return r;}
public PersianNormalizationFilterFactory(System.Collections.Generic.IDictionary<string, string> args) : base(args){if (!args.Any()) {throw new System.InvalidOperationException("Unknown parameters: " + string.Join(", ", args.Keys));}}
public static WeightedTerm[] getTerms(Query query, bool prohibited, string fieldName) {HashSet<WeightedTerm> terms = new HashSet<WeightedTerm>();Predicate<string> fieldSelector = fieldName == null ? f => true : fieldName.Equals;query.Visit(new BoostedTermExtractor(1, terms, prohibited, fieldSelector));return terms.ToArray(new WeightedTerm[0]);}
public virtual DeleteDocumentationPartResult DeleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResultUnmarshaller.Instance;return Invoke<DeleteDocumentationPartResult>(request, options);}
public string ToString() {var sb = new StringBuilder();sb.AppendLine("[CHART]");sb.Append("    .x     = ").Append(GetX()).Append('\n');sb.Append("    .y     = ").Append(GetY()).Append('\n');sb.Append("    .width = ").Append(GetWidth()).Append('\n');sb.Append("    .height= ").Append(GetHeight()).Append('\n');sb.AppendLine("[/CHART]");return sb.ToString();}
public virtual short Get(int index){CheckIndex(index);return backingArray[offset + index];}
public override string ToString(){return image;}
public ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1){try{AreaEval reA = EvaluateRef(arg0);AreaEval reB = EvaluateRef(arg1);AreaEval result = ResolveRange(reA, reB);if (result == null){return ErrorEval.NULL_INTERSECTION;}return result;}catch (EvaluationException e){return e.GetErrorEval();}}
public void Clear() { weightBySpanQuery.Clear(); }
public int FindEndOffset(StringBuilder buffer, int start) {if (start > buffer.Length || start < 0) return start;bi.Text = buffer.ToString().Substring(start);return bi.Next() + start;}
final public SrndQuery PrimaryQuery(){SrndQuery q;switch ((jj_ntk==-1)?jj_ntk():jj_ntk){case LPAREN:jj_consume_token(LPAREN);q = FieldsQuery();jj_consume_token(RPAREN);break;case OR:case AND:case W:case N:q = PrefixOperatorQuery();break;case TRUNCQUOTED:case QUOTED:case SUFFIXTERM:case TRUNCTERM:case TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;jj_consume_token(-1);throw new Exception("Parse error");}OptionalWeights(q);return q;}
public virtual DeleteApiKeyResult DeleteApiKey(DeleteApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApiKeyResultUnmarshaller.Instance;return Invoke<DeleteApiKeyResult>(request, options);}
public InsertTagsRequest() : base("Ots", "2016-06-20", "InsertTags", "ots"){SetMethod(MethodType.POST);}
public virtual DeleteUserByPrincipalIdResponse DeleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteUserByPrincipalIdRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteUserByPrincipalIdResponseUnmarshaller.Instance;return Invoke<DeleteUserByPrincipalIdResponse>(request, options);}
public virtual DescribeNetworkInterfacesResult DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResult>(request, options);}
public int Serialize(int offset, byte[] data, EscherSerializationListener listener){listener.BeforeRecordSerialize(offset, GetRecordId(), this);LittleEndian.PutShort(data, offset, GetOptions());LittleEndian.PutShort(data, offset + 2, GetRecordId());LittleEndian.PutInt(data, offset + 4, 8);LittleEndian.PutInt(data, offset + 8, Field_1_NumShapes);LittleEndian.PutInt(data, offset + 12, Field_2_LastMSOSPID);listener.AfterRecordSerialize(offset + 16, GetRecordId(), GetRecordSize(), this);return GetRecordSize();}
public virtual CreateSecurityConfigurationResult CreateSecurityConfiguration(CreateSecurityConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSecurityConfigurationResponseUnmarshaller.Instance;return Invoke<CreateSecurityConfigurationResult>(request, options);}
public virtual DescribeClientVpnConnectionsResponse DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeClientVpnConnectionsResponse>(request, options);}
public static void Fill(double[] array, double value) {for (int i = 0; i < array.Length; i++) {array[i] = value;}}
public bool hasNext(){return nextId < cells.Length;}
public PostingsEnum Reset(int[] postings) { this.postings = postings; upto = -2; freq = 0; return this; }
public final bool hasAll(RevFlagSet set) {return (flags & set.mask) == set.mask;}
public virtual ModifyAccountResponse ModifyAccount(ModifyAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.Instance;return Invoke<ModifyAccountResponse>(request, options);}
public Token LT(int k){lazyInit();if (k == 0) return null;if (k < 0) return LB(-k);int i = p + k - 1;sync(i);if (i >= tokens.size()) { return tokens[tokens.Count - 1];}return tokens[i];}
public void RemoveSheet(int sheetIndex){if (boundsheets.Count > sheetIndex){records.Remove(records.GetBspos() - (boundsheets.Count - 1) + sheetIndex);boundsheets.Remove(sheetIndex);FixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for(int i=0; i<GetNumNames(); i++){NameRecord nr = GetNameRecord(i);if(nr.GetSheetNumber() == sheetNum1Based){nr.SetSheetNumber(0);} else if(nr.GetSheetNumber() > sheetNum1Based){nr.SetSheetNumber(nr.GetSheetNumber()-1);}}if (linkTable != null){linkTable.RemoveSheet(sheetIndex);}}
public void RemoveName(string name) {int index = GetNameIndex(name);RemoveName(index);}
public bool Equals(object o){if (!(o is Property)){return false;}var p = (Property)o;var pValue = p.GetValue();var pId = p.GetID();if (id != pId || (id != 0 && !TypesAreEqual(type, p.GetType()))){return false;}if (value == null && pValue == null){return true;}if (value == null || pValue == null){return false;}var valueClass = value.GetType();var pValueClass = pValue.GetType();if (!(valueClass.IsAssignableFrom(pValueClass)) && !(pValueClass.IsAssignableFrom(valueClass))){return false;}if (value is byte[]){var thisVal = (byte[])value;var otherVal = (byte[])pValue;int len = UnpaddedLength(thisVal);if (len != UnpaddedLength(otherVal)){return false;}for (int i = 0; i < len; i++){if (thisVal[i] != otherVal[i]){return false;}}return true;}return value.Equals(pValue);}
public GetRepoBuildListRequest() : base("cr", "2016-06-07", "GetRepoBuildList", "cr"){UriPattern = "/repos/[RepoNamespace]/[RepoName]/build";Method = MethodType.GET;}
public MessageWriter() { buf = new System.IO.MemoryStream(); enc = new System.IO.StreamWriter(getRawStream(), System.Text.Encoding.UTF8); }
public void Append(RecordBase r){_recs.Add(r);}
public void close() throws IOException {if (read(skipBuffer) != -1 || actualSize != expectedSize) {throw new CorruptObjectException(MessageFormat.format(JGitText.get().packfileCorruptionDetected, JGitText.get().wrongDecompressedLength));}int used = bAvail - inf.getRemaining();if (0 < used) {onObjectData(src, buf, p, used);use(used);}inf.reset();}
public virtual DescribeModelPackageResponse DescribeModelPackage(DescribeModelPackageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeModelPackageRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeModelPackageResponseUnmarshaller.Instance;return Invoke<DescribeModelPackageResponse>(request, options);}
public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec is FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText;Class<? extends Record> nextClass = rs.PeekNextClass();if (nextClass == typeof(StringRecord)) {cachedText = (StringRecord)rs.GetNext();} else {cachedText = null;}InsertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {InsertCell(rec);}}
public Decompressor Clone() { return new DeflateDecompressor(); }
public virtual UpdateS3ResourcesResult UpdateS3Resources(UpdateS3ResourcesRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateS3ResourcesRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateS3ResourcesResponseUnmarshaller.Instance;return Invoke<UpdateS3ResourcesResult>(request, options);}
public GroupQueryNode(QueryNode query){if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, "query", "null"));}allocate();setLeaf(false);add(query);}
public string toQueryString(EscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.Append("/").Append(getFirstPathElement());for (QueryText pathelement : getPathElements(1)) {string value = escaper.escape(pathelement.value, CultureInfo.CurrentCulture, Type.STRING);path.Append("/\"").Append(value).Append("\"");}return path.ToString();}
public void RemoveCellComment(){HSSFComment comment = _sheet.FindCellComment(_record.GetRow(), _record.GetColumn());_comment = null;if (null == comment){return;}_sheet.GetDrawingPatriarch().RemoveShape(comment);}
public void reset(){arriving = -1;leaving = -1;}
public virtual ActivateUserResponse ActivateUser(ActivateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateUserResponseUnmarshaller.Instance;return Invoke<ActivateUserResponse>(request, options);}
public bool isCharsetDetected() {throw new NotSupportedException();}
public virtual ModifySnapshotCopyRetentionPeriodResponse ModifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;return Invoke<ModifySnapshotCopyRetentionPeriodResponse>(request, options);}
public virtual DeleteClusterSubnetGroupResult DeleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterSubnetGroupResultUnmarshaller.Instance;return Invoke<DeleteClusterSubnetGroupResult>(request, options);}
public static string Decode(byte[] buffer){return Decode(buffer, 0, buffer.Length);}
public int getDefaultPort() { return -1; }
public virtual StopTaskResponse StopTask(StopTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke<StopTaskResponse>(request, options);}
public void SeekExact(BytesRef target, TermState otherState){assert otherState != null && otherState is BlockTermState;assert !doOrd || ((BlockTermState) otherState).ord < numTerms;state.CopyFrom(otherState);seekPending = true;indexIsCurrent = false;term.CopyBytes(target);}
public SeriesToChartGroupRecord(RecordInputStream in) { this.field_1_chartGroupIndex = in.ReadInt16(); }
public static void writeUnicodeStringFlagAndData(LittleEndianOutput out, string value){bool is16Bit = hasMultibyte(value);out.writeByte(is16Bit ? 0x01 : 0x00);if (is16Bit){putUnicodeLE(value, out);}else{putCompressedUnicode(value, out);}}
public virtual AuthorizeSecurityGroupIngressResult AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request){var options = new InvokeOptions();options.RequestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.Instance;return Invoke<AuthorizeSecurityGroupIngressResult>(request, options);}
public void AddFile(string file){CheckFileNames(new List<string>{file});SetFiles.Add(NamedForThisSegment(file));}
public void SetSize(int width, int height){mWidth = width;mHeight = height;}
public final void SetPrecedenceFilterSuppressed(bool value) {if (value) {this.reachesIntoOuterContext |= 0x40000000;} else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}
public IntervalSet LOOK(ATNState s, RuleContext ctx){return LOOK(s, null, ctx);}
public void serialize(LittleEndianOutput out){out.writeShort(getOptionFlags());out.writeShort(getRowHeight());}
public Builder(bool dedup) { this.dedup = dedup; }
public Hashtable(int capacity, float loadFactor) : this(capacity) {if (loadFactor <= 0 || float.IsNaN(loadFactor)) {throw new ArgumentException("Load factor: " + loadFactor);}}
public object Get(string key) {var bucket = normalCompletion.GetBucket(key);return bucket == -1 ? null : (object)bucket;}
public virtual ListHyperParameterTuningJobsResponse listHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;return Invoke<ListHyperParameterTuningJobsResponse>(request, options);}
public DeleteTableResult DeleteTable(string tableName){return DeleteTable(new DeleteTableRequest().WithTableName(tableName));}
public final bool LessThan(TextFragment fragA, TextFragment fragB){if (fragA.GetScore() == fragB.GetScore())return fragA.FragNum > fragB.FragNum;elsereturn fragA.GetScore() < fragB.GetScore();}
public void freeBefore(int pos){System.Diagnostics.Contracts.Contract.Requires(pos >= 0);System.Diagnostics.Contracts.Contract.Requires(pos <= nextPos);int newCount = nextPos - pos;System.Diagnostics.Contracts.Contract.Assert(newCount <= count, "newCount=" + newCount + " count=" + count);System.Diagnostics.Contracts.Contract.Assert(newCount <= buffer.length, "newCount=" + newCount + " buf.length=" + buffer.length);count = newCount;}
public virtual UpdateHITTypeOfHITResponse UpdateHITTypeOfHIT(UpdateHITTypeOfHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;return Invoke<UpdateHITTypeOfHITResponse>(request, options);}
public virtual UpdateRecommenderConfigurationResult UpdateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRecommenderConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRecommenderConfigurationResponseUnmarshaller.Instance;return Invoke<UpdateRecommenderConfigurationResult>(request, options);}
public int compareTo(BytesRef other) {return Arrays.CompareUnsigned(this.bytes, this.offset, this.offset + this.length, other.bytes, other.offset, other.offset + other.length);}
public int stem(char[] s, int len) {if (len > 4 && s[len - 1] == 's') len--;if (len > 5 && (endsWith(s, len, "ene") || (endsWith(s, len, "ane") && useNynorsk)))return len - 3;if (len > 4 && (endsWith(s, len, "er") || endsWith(s, len, "en") || endsWith(s, len, "et") || (endsWith(s, len, "ar") && useNynorsk)))return len - 2;if (len > 3)switch (s[len - 1]) {case 'a':case 'e':return len - 1;}return len;}
public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}
public SortedSetDocValuesFacetField(string dim, string label) : base("dummy", TYPE){FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.dim = dim;this.label = label;}
public virtual CreateDocumentationPartResult CreateDocumentationPart(CreateDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResultUnmarshaller.Instance;return Invoke<CreateDocumentationPartResult>(request, options);}
public string GetValue() { return value; }
public ReadOnlyMemoryBuffer AsReadOnlyBuffer() { return Duplicate(); }
public virtual UpdateDataSourcePermissionsResult UpdateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDataSourcePermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDataSourcePermissionsResponseUnmarshaller.Instance;return Invoke<UpdateDataSourcePermissionsResult>(request, options);}
public static org.apache.poi.hssf.record.Record CreateSingleRecord(RecordInputStream in) {I_RecordCreator constructor = _recordCreatorsById.get(Integer.valueOf(in.getSid()));if (constructor == null) {return new UnknownRecord(in);}return constructor.Create(in);}
public int GetCount(){return mTabs.Count;}
public virtual DeleteApplicationReferenceDataSourceResult DeleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResultUnmarshaller.Instance;return Invoke<DeleteApplicationReferenceDataSourceResult>(request, options);}
public virtual CreateProjectVersionResult CreateProjectVersion(CreateProjectVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProjectVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProjectVersionResponseUnmarshaller.Instance;return Invoke<CreateProjectVersionResult>(request, options);}
public IntBuffer Slice(){return new ReadOnlyIntArrayBuffer(Remaining(), BackingArray, Offset + Position);}
public final byte Get() {if (position == limit) {throw new BufferUnderflowException();}return this.block.PeekByte(offset + position++);}
public Int64Buffer Put(int index, long c){CheckIndex(index);BackingArray[Offset + index] = c;return this;}
public StoredField(string name, float value) : base(name, TYPE) { this.fieldsData = value; }
public IntervalSet GetExpectedTokensWithinCurrentRule(){ATN atn = GetInterpreter().Atn;ATNState s = atn.States.get(GetState());return atn.NextTokens(s);}
public override string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[FILESHARING]\n");buffer.Append("    .readonly       = ").Append(GetReadOnly() == 1 ? "true" : "false").Append("\n");buffer.Append("    .password       = ").Append(GetPassword().ToString("X")).Append("\n");buffer.Append("    .username       = ").Append(GetUsername()).Append("\n");buffer.Append("[/FILESHARING]\n");return buffer.ToString();}
public SubmoduleInitCommand(Repository repo) : base(repo){paths = new List<string>();}
public void Include(string name, AnyObjectId id) {bool validRefName = Repository.IsValidRefName(name) || Constants.HEAD.Equals(name);if (!validRefName)throw new ArgumentException(string.Format(JGitText.Get().invalidRefName, name));if (include.ContainsKey(name))throw new InvalidOperationException(JGitText.Get().duplicateRef + name);include.Add(name, id.ToObjectId());}
public virtual EnableSnapshotCopyResponse EnableSnapshotCopy(EnableSnapshotCopyRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableSnapshotCopyRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableSnapshotCopyResponseUnmarshaller.Instance;return Invoke<EnableSnapshotCopyResponse>(request, options);}
public ValueFiller getValueFiller() {return new ValueFiller() {private final MutableValueFloat mval = new MutableValueFloat();@Override};
public void serialize(LittleEndianOutput out) {out.writeByte(getPane());out.writeShort(getActiveCellRow());out.writeShort(getActiveCellCol());out.writeShort(getActiveCellRef());int nRefs = field_6_refs.length;out.writeShort(nRefs);foreach (CellRangeAddress8Bit field_6_ref in field_6_refs) {field_6_ref.serialize(out);}}
public static Counter NewCounter(){return newCounter(false);}
public bool Get(string name, bool dflt){bool[] vals = (bool[])valByRound.Get(name);if (vals != null){return vals[roundNumber % vals.Length];}string sval = props.GetProperty(name, dflt.ToString());if (sval.IndexOf(":") < 0){return bool.Parse(sval);}int k = sval.IndexOf(":");string colName = sval.Substring(0, k);sval = sval.Substring(k + 1);colForValByRound.Add(name, colName);vals = PropToBooleanArray(sval);valByRound.Add(name, vals);return vals[roundNumber % vals.Length];}
public void preSerialize(){if(records.getTabpos() > 0) {TabIdRecord tir = (TabIdRecord)records.get(records.getTabpos());if(tir._tabids.Length < boundsheets.size()) {fixTabIdRecord();}}}
public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, bool consumeAllTokens) : base(delegate.getReuseStrategy()){this.delegate = delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}
public ExternalBookBlock(int numberOfSheets){_externalBookRecord = SupBookRecord.CreateInternalReferences((short) numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}
public string ToString(){var buffer = new StringBuilder();buffer.Append("[SCENARIOPROTECT]\n");buffer.Append("    .protect         = ").Append(GetProtect()).Append("\n");buffer.Append("[/SCENARIOPROTECT]\n");return buffer.ToString();}
public PushCommand SetThin(bool thin) { CheckCallable(); this.thin = thin; return this; }
public int compareTo(SearcherTracker other){return Double.compare(other.recordTimeSec, recordTimeSec);}
public ReverseStringFilter Create(TokenStream in) { return new ReverseStringFilter(in); }
public BlockList() {directory = BlockList<T>.NewDirectory(256);directory[0] = BlockList<T>.NewBlock();tailBlock = directory[0];}
public QueryScorer(WeightedSpanTerm[] weightedTerms){this.fieldWeightedSpanTerms = new Dictionary<string, WeightedSpanTerm>(weightedTerms.Length);for (int i = 0; i < weightedTerms.Length; i++){WeightedSpanTerm existingTerm = null;if (fieldWeightedSpanTerms.TryGetValue(weightedTerms[i].term, out existingTerm)){if ((existingTerm == null) || (existingTerm.weight < weightedTerms[i].weight)){fieldWeightedSpanTerms[weightedTerms[i].term] = weightedTerms[i];}maxTermWeight = Math.Max(maxTermWeight, weightedTerms[i].getWeight());}}skipInitExtractor = true;}
public bool Equals(Object _other) {assert neverEquals(_other);if (_other is MergedGroup otherGroup) {if (groupValue == null) {return otherGroup == null;} else {return groupValue.Equals(otherGroup);}} else {return false;}}
public final System.Text.Encoding charset() {return cs;}
public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;return Invoke<DescribeExperimentResponse>(request, options);}
public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font("Arial", 0, 10);this.foreground = forecolor;}
public string Pattern() { return patternText; }
public virtual DeleteRouteTableResult DeleteRouteTable(DeleteRouteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;return Invoke<DeleteRouteTableResult>(request, options);}
public virtual AssociateVPCWithHostedZoneResult AssociateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateVPCWithHostedZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateVPCWithHostedZoneResultUnmarshaller.Instance;return Invoke<AssociateVPCWithHostedZoneResult>(request, options);}
public virtual PutIntegrationResponse PutIntegration(PutIntegrationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke<PutIntegrationResponse>(request, options);}
public SimpleEntry(K theKey, V theValue) {key = theKey;value = theValue;}
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | (byte1 >>> 4);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}
public virtual DisassociateConnectionFromLagResult DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;return Invoke<DisassociateConnectionFromLagResult>(request, options);}
public FileMode getOldMode() { return oldMode; }
public override string ToString() {return m.ToString();}
public virtual StopKeyPhrasesDetectionJobResponse StopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopKeyPhrasesDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopKeyPhrasesDetectionJobResponseUnmarshaller.Instance;return Invoke<StopKeyPhrasesDetectionJobResponse>(request, options);}
public override string ToString() { return "[Array Formula or Shared Formula]\n" + "row = " + GetRow() + "\n" + "col = " + GetColumn() + "\n"; }
public virtual ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);}
public override string ToString(){return $"slice start={start} length={length} readerIndex={readerIndex}";}
public static int ParseHexInt4(byte digit) {byte r = digits16[digit];if (r < 0)throw new IndexOutOfRangeException();return r;}
public Attribute(string name, string value) {SetName(name);SetValue(value);}
public virtual DescribeStackSetOperationResponse DescribeStackSetOperation(DescribeStackSetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;return Invoke<DescribeStackSetOperationResponse>(request, options);}
public HSSFCell getCell(int cellnum){return getCell(cellnum, book.getMissingCellPolicy());}
public void write(byte[] b) { writeContinueIfRequired(b.Length); _ulrOutput.Write(b); }
public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute){SetImageId(imageId);SetAttribute(attribute.ToString());}
public void DiscardResultContents() { resultContents = null; }
public ObjectId GetPeeledObjectId(){return GetLeaf().GetPeeledObjectId();}
public void UndeprecateDomain(UndeprecateDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = UndeprecateDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = UndeprecateDomainResponseUnmarshaller.Instance;return Invoke<UndeprecateDomainResponse>(request, options);}
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeByte(field_3_string.Length); out.writeByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode) {StringUtil.putUnicodeLE(field_3_string, out);} else {StringUtil.putCompressedUnicode(field_3_string, out);}}
public DeleteQueueResponse DeleteQueue(string queueUrl){return DeleteQueue(new DeleteQueueRequest().WithQueueUrl(queueUrl));}
public void SetCheckEofAfterPackFooter(bool b){checkEofAfterPackFooter = b;}
public void swap(){int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}
public int GetPackedGitWindowSize(){return packedGitWindowSize;}
public virtual PutMetricDataResult PutMetricData(PutMetricDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = PutMetricDataResultUnmarshaller.Instance;return Invoke<PutMetricDataResult>(request, options);}
public virtual GetCelebrityRecognitionResult GetCelebrityRecognition(GetCelebrityRecognitionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCelebrityRecognitionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCelebrityRecognitionResponseUnmarshaller.Instance;return Invoke<GetCelebrityRecognitionResult>(request, options);}
public CreateQueueRequest(string queueName){SetQueueName(queueName);}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) : base(arearef) {this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.getSheetIdentifier().getName();if (sheetName instanceof SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier)sheetName).getLastSheetIdentifier().getName();} else {this.lastSheetName = null;}}
public void SetBaseline(long clockTime){t0 = clockTime;timeout = t0 + ticksAllowed;}
public virtual MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = MoveAddressToVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.Instance;return Invoke<MoveAddressToVpcResponse>(request, options);}
public override string ToString() {var coll = collectionModel.Name;if (coll != null) {return string.Format(System.Globalization.CultureInfo.InvariantCulture, "LM {0} - {1}", GetName(), coll);} else {return string.Format(System.Globalization.CultureInfo.InvariantCulture, "LM {0}", GetName());}}
public virtual DescribeLagsResponse DescribeLags(DescribeLagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance;return Invoke<DescribeLagsResponse>(request, options);}
public AreaEval Offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx) {if (_refEval == null) {return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}
public ShortBuffer put(short[] src, int srcOffset, int shortCount) {byteBuffer.Limit(limit * SizeOf.SHORT);byteBuffer.Position(position * SizeOf.SHORT);if (byteBuffer is ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer)byteBuffer).Put(src, srcOffset, shortCount);} else {((ReadWriteHeapByteBuffer)byteBuffer).Put(src, srcOffset, shortCount);}this.position += shortCount;return this;}
public void Initialize(string cat) { this._cat = cat; }
public void write(int oneByte) throws IOException {out.write(oneByte); written++;}
public virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeImportImageTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeImportImageTasksResponseUnmarshaller.Instance;return Invoke<DescribeImportImageTasksResponse>(request, options);}
public ColumnInfoRecord(RecordInputStream in) {_firstCol = in.readUShort();_lastCol  = in.readUShort();_colWidth = in.readUShort();_xfIndex  = in.readUShort();_options   = in.readUShort();switch(in.remaining()) {case 2: field_6_reserved  = in.readUShort();break;case 1:field_6_reserved  = in.readByte();break;case 0:field_6_reserved  = 0;break;default:throw new RuntimeException("Unusual record size remaining=(" + in.remaining() + ")");}}
public Status(IndexDiff diff) : base(){this.diff = diff;hasUncommittedChanges = !diff.getAdded().IsEmpty() || !diff.getChanged().IsEmpty() || !diff.getRemoved().IsEmpty() || !diff.getMissing().IsEmpty() || !diff.getModified().IsEmpty() || !diff.getConflicting().IsEmpty();clean = !hasUncommittedChanges && diff.getUntracked().IsEmpty();}
public virtual CreateExperimentResult CreateExperiment(CreateExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExperimentResponseUnmarshaller.Instance;return Invoke<CreateExperimentResult>(request, options);}
public UnknownRecord Clone() {return Copy();}
public System.Collections.Generic.IList<float> Slice() {byteBuffer.Limit(limit * SizeOf.FLOAT);byteBuffer.Position(position * SizeOf.FLOAT);ByteBuffer bb = byteBuffer.Slice().Order(byteBuffer.Order());FloatBuffer result = new FloatToByteBufferAdapter(bb);byteBuffer.Clear();return result;}
public virtual DescribeSnapshotSchedulesResult DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSnapshotSchedulesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSnapshotSchedulesResponseUnmarshaller.Instance;return Invoke<DescribeSnapshotSchedulesResult>(request, options);}
public virtual ListImagesResponse ListImages(ListImagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListImagesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;return Invoke<ListImagesResponse>(request, options);}
public Diff(int ins, int del, int rep, int noop) {INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}
public string toFormulaString(string[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[0]);buffer.Append(",");buffer.Append(operands[1]);return buffer.ToString();}
public static void setupEnvironment(string[] workbookNames, ForkedEvaluator[] evaluators){WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.Length];for (int i = 0; i < wbEvals.Length; i++){wbEvals[i] = evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.setup(workbookNames, wbEvals);}
public ListPhotoTagsRequest() : base("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public RandomSamplingFacetsCollector(int sampleSize, long seed) : base(false) {this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}
public virtual AllocateStaticIpResponse AllocateStaticIp(AllocateStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;return Invoke<AllocateStaticIpResponse>(request, options);}
public FeatRecord(RecordInputStream in) {futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.readShort();reserved1 = in.readByte();reserved2 = in.readInt();int cref = in.readUShort();cbFeatData = in.readInt();reserved3 = in.readShort();cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.Length; i++) {cellRefs[i] = new CellRangeAddress(in);}switch (isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in);break;default:logger.Log(POILogger.ERROR, "Unknown Shared Feature " + isf_sharedFeatureType + " found!");break;}}
public RevCommit TryFastForward(RevCommit newCommit) throws IOException, GitAPIException {Ref head = GetHead();ObjectId headId = head.GetObjectId();if (headId == null)throw new RefNotFoundException(string.Format(JGitText.get().refNotResolved, Constants.HEAD));RevCommit headCommit = walk.LookupCommit(headId);if (walk.IsMergedInto(newCommit, headCommit))return newCommit;string headName = GetHeadName(head);return TryFastForward(headName, headCommit, newCommit);}
public virtual CreateSnapshotScheduleResponse CreateSnapshotSchedule(CreateSnapshotScheduleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke<CreateSnapshotScheduleResponse>(request, options);}
public Record GetNext(){if(!HasNext()){throw new Exception("Attempt to read past end of record stream");}_countRead ++;return _list.Get(_nextIndex++);}
public override string ToString() { return RawParseUtils.Decode(buf.ToByteArray()); }
public ListTablesRequest(string exclusiveStartTableName){SetExclusiveStartTableName(exclusiveStartTableName);}
public virtual EnableAlarmActionsResult EnableAlarmActions(EnableAlarmActionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableAlarmActionsRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableAlarmActionsResultUnmarshaller.Instance;return Invoke<EnableAlarmActionsResult>(request, options);}
public Builder() { this.Initialize(true); }
public bool Equals(object obj) {var other = (State)obj;return this.is_final == other.is_final && this.labels.SequenceEqual(other.labels) && ReferenceEquals(this.states, other.states);}
public TokenStream Create(TokenStream input){return new EnglishPossessiveFilter(input);}
public void ClearFormatting() {_string = CloneStringIfRequired();_string.ClearFormatting();AddToSSTIfRequired();}
public int Get(int index, long[] arr, int off, int len) {if (len <= 0) {throw new ArgumentException("len must be > 0 (got " + len + ")");}if (index < 0 || index >= valueCount) {throw new ArgumentOutOfRangeException(nameof(index), "Index out of range");}len = Math.Min(len, valueCount - index);Array.Fill(arr, off, off + len, 0);return len;}
public virtual DeleteRouteResponseResult DeleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseResultUnmarshaller.Instance;return Invoke<DeleteRouteResponseResult>(request, options);}
public string ToPrivateString(){return format(true, false);}
public virtual CreatePresignedDomainUrlResult CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance;return Invoke<CreatePresignedDomainUrlResult>(request, options);}
public void Write(int oneChar){doWrite(new char[] { (char) oneChar }, 0, 1);}
public SSTRecord GetSSTRecord(){return sstRecord;}
public string ToString() { return $"term={term},field={field},value={ValueToString()},docIDUpto={docIDUpto}"; }
public bool isSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo){return bloomFilter.getSaturation() > 0.9f;}
public Builder(bool ignoreCase) { this.ignoreCase = ignoreCase; }
public override string ToString() {return $"{GetType().Name} (maxBasicQueries: {maxBasicQueries}, queriesMade: {queriesMade})";}
public virtual DeleteDataSourceResult DeleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteDataSourceResult>(request, options);}
public virtual RebootNodeResponse RebootNode(RebootNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootNodeResponseUnmarshaller.Instance;return Invoke<RebootNodeResponse>(request, options);}
public void ProcessChildRecords(){ConvertRawBytesToEscherRecords();}
public virtual CreateOrUpdateTagsResult CreateOrUpdateTags(CreateOrUpdateTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance;return Invoke<CreateOrUpdateTagsResult>(request, options);}
public FileSnapshot GetSnapShot(){return snapShot;}
public System.IO.Stream OpenResource(string resource){var stream = (clazz != null) ? clazz.GetResourceAsStream(resource) : loader.GetResourceAsStream(resource);if (stream == null)throw new System.IO.IOException("Resource not found: " + resource);return stream;}
public override string ToString() { var sb = new StringBuilder(64); sb.Append(GetType().Name).Append(" ["); sb.Append("sid=").Append(HexDump.ShortToHex(_sid)); sb.Append(" size=").Append(_data.Length); sb.Append(" : ").Append(HexDump.ToHex(_data)); sb.Append("]\n"); return sb.ToString(); }
public int NextIndex() { return index; }
public string toQueryString(EscapeQuerySyntax escaper) {if (isDefaultField(this.field)) {return "\"" + getTermEscapeQuoted(escaper) + "\"";} else {return this.field + ":" + "\"" + getTermEscapeQuoted(escaper) + "\"";}}
public CalcModeRecord Clone() {return Copy();}
public bool isOutput() { return output; }
public virtual CreateNetworkInterfaceResult CreateNetworkInterface(CreateNetworkInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkInterfaceResultUnmarshaller.Instance;return Invoke<CreateNetworkInterfaceResult>(request, options);}
public void Serialize(LittleEndianOutput out) {out.WriteShort(field_1_password);}
public virtual StopDominantLanguageDetectionJobResponse StopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);}
public ECSMetadataServiceCredentialsFetcher WithConnectionTimeout(int milliseconds) { this.connectionTimeoutInMilliseconds = milliseconds; return this; }
public virtual GetGatewayGroupResult GetGatewayGroup(GetGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayGroupResponseUnmarshaller.Instance;return Invoke<GetGatewayGroupResult>(request, options);}
public FloatBuffer Slice() {return new ReadOnlyFloatArrayBuffer(Remaining(), BackingArray, Offset + Position);}
public static string Join(System.Collections.Generic.IEnumerable<string> parts, string separator, string lastSeparator) {var sb = new System.Text.StringBuilder();int i = 0;int lastIndex = parts.Count() - 1;foreach (string part in parts) {sb.Append(part);if (i == lastIndex - 1) {sb.Append(lastSeparator);} else if (i != lastIndex) {sb.Append(separator);}i++;}return sb.ToString();}
public override string ToString() { return "(" + a.ToString() + " AND " + b.ToString() + ")"; }
public ListSubscriptionsByTopicRequest(string topicArn, string nextToken){SetTopicArn(topicArn);SetNextToken(nextToken);}
public byte ReadByte() {return bytes[pos--];}
public virtual TerminateClientVpnConnectionsResult TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<TerminateClientVpnConnectionsResult>(request, options);}
public ReceiveMessageRequest(string queueUrl) { QueueUrl = queueUrl; }
public void serialize(LittleEndianOutput out) {out.WriteShort(field_1_barSpace);out.WriteShort(field_2_categorySpace);out.WriteShort(field_3_formatFlags);}
public Object common(Object output1, Object output2) {return outputs.common((T) output1, (T) output2);}
public virtual CreateVariableResponse CreateVariable(CreateVariableRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;return Invoke<CreateVariableResponse>(request, options);}
public static int Match(byte[] b, int ptr, byte[] src) {if (ptr + src.Length > b.Length)return -1;for (int i = 0; i < src.Length; i++, ptr++)if (b[ptr] != src[i])return -1;return ptr;}
public int FillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;Field_1_RectX1 = LittleEndian.GetInt32(data, pos + size);size += 4;Field_2_RectY1 = LittleEndian.GetInt32(data, pos + size);size += 4;Field_3_RectX2 = LittleEndian.GetInt32(data, pos + size);size += 4;Field_4_RectY2 = LittleEndian.GetInt32(data, pos + size);size += 4;bytesRemaining -= size;if (bytesRemaining != 0) {throw new RecordFormatException("Expected no remaining bytes but got " + bytesRemaining);}return 8 + size + bytesRemaining;}
public virtual CreateCloudFrontOriginAccessIdentityResult CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.Instance;return Invoke<CreateCloudFrontOriginAccessIdentityResult>(request, options);}
public bool isNamespaceAware() {return getFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES);}
public void SetOverridable(bool on){overridable = on;}
public string GetClassName() {return className;}
public virtual DirectoryReader GetIndexReader(){if (indexReader != null){indexReader.IncRef();}return indexReader;}
public int IndexOfKey(int key) {return BinarySearch(mKeys, 0, mSize, key);}
public BlankRecord(RecordInputStream in) {field_1_row = in.ReadUShort();field_2_col = in.ReadShort();field_3_xf  = in.ReadShort();}
public long Length() {return length;}
public PasswordRecord(RecordInputStream in) {this.field_1_password = in.ReadInt16();}
public Dictionary(int capacity, float loadFactor){this(capacity);if (loadFactor <= 0 || float.IsNaN(loadFactor)){throw new ArgumentException("Load factor: " + loadFactor);}}
public void Run(){long lastReopenStartNS = System.nanoTime();while (!finish){while (!finish){reopenLock.Lock();try{bool hasWaiting = waitingGen > searchingGen;final long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);final long sleepNS = nextReopenStartNS - System.nanoTime();if (sleepNS > 0){reopenCond.awaitNanos(sleepNS);} else {break;}} catch (InterruptedException ie) {Thread.currentThread().Interrupt();return;} finally {reopenLock.Unlock();}}if (finish){break;}lastReopenStartNS = System.nanoTime();refreshStartGen = writer.getMaxCompletedSequenceNumber();try {manager.maybeRefreshBlocking();} catch (IOException ioe) {throw new RuntimeException(ioe);}}}
public DeleteLoginProfileRequest(string userName){SetUserName(userName);}
public E PollFirst(){return (size == 0) ? null : RemoveFirstImpl();}
public CreatePhotoRequest() : base("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto") {Protocol = ProtocolType.HTTPS;}
public string GetName() { return "resolve"; }
public int findEndOffset(StringBuilder buffer, int start) {if (start > buffer.Length || start < 0)return start;int offset, count = maxScan;for (offset = start; offset < buffer.Length && count > 0; count--) {if (boundaryChars.Contains(buffer.charAt(offset)))return offset;offset++;}return start;}
public void SetObjectChecker(ObjectChecker oc) { objCheck = oc; }
public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}
public virtual CreateVpcEndpointResult CreateVpcEndpoint(CreateVpcEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return Invoke<CreateVpcEndpointResult>(request, options);}
public virtual DeregisterWorkspaceDirectoryResult DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterWorkspaceDirectoryResultUnmarshaller.Instance;return Invoke<DeregisterWorkspaceDirectoryResult>(request, options);}
public ChartFRTInfoRecord(RecordInputStream in) {rt = in.ReadInt16();grbitFrt = in.ReadInt16();verOriginator = in.ReadByte();verWriter = in.ReadByte();int cCFRTID = in.ReadInt16();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++) {rgCFRTID[i] = new CFRTID(in);}}
public Merger NewMerger(Repository db) {return new OneSide(db, treeIndex);}
public virtual CreateDataSourceFromRedshiftResult CreateDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDataSourceFromRedshiftRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDataSourceFromRedshiftResponseUnmarshaller.Instance;return Invoke<CreateDataSourceFromRedshiftResult>(request, options);}
public void ClearDFA(){for(int d = 0; d < decisionToDFA.Length; d++){decisionToDFA[d] = new DFA(atn.GetDecisionState(d), d);}}
public void RemoveName(string name) {int index = GetNameIndex(name);RemoveName(index);}
public override string ToString(){var buffer = new StringBuilder();buffer.AppendLine("[RightMargin]");buffer.AppendLine($"    .margin               = {getMargin()}");buffer.AppendLine("[/RightMargin]");return buffer.ToString();}
public RefreshAllRecord Clone() {return Copy();}
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) : base(queryConfig) {Add(new WildcardQueryNodeProcessor());Add(new MultiFieldQueryNodeProcessor());Add(new FuzzyQueryNodeProcessor());Add(new RegexpQueryNodeProcessor());Add(new MatchAllDocsQueryNodeProcessor());Add(new OpenRangeQueryNodeProcessor());Add(new PointQueryNodeProcessor());Add(new PointRangeQueryNodeProcessor());Add(new TermRangeQueryNodeProcessor());Add(new AllowLeadingWildcardProcessor());Add(new AnalyzerQueryNodeProcessor());Add(new PhraseSlopQueryNodeProcessor());Add(new BooleanQuery2ModifierNodeProcessor());Add(new NoChildOptimizationQueryNodeProcessor());Add(new RemoveDeletedQueryNodesProcessor());Add(new RemoveEmptyNonLeafQueryNodeProcessor());Add(new BooleanSingleChildOptimizationQueryNodeProcessor());Add(new DefaultPhraseSlopQueryNodeProcessor());Add(new BoostQueryNodeProcessor());Add(new MultiTermRewriteMethodProcessor());}
public string FormatAsString(string sheetName, bool useAbsoluteAddress) {StringBuilder sb = new StringBuilder();if (sheetName != null) {sb.Append(SheetNameFormatter.Format(sheetName));sb.Append("!");}CellReference cellRefFrom = new CellReference(GetFirstRow(), GetFirstColumn(), useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(GetLastRow(), GetLastColumn(), useAbsoluteAddress, useAbsoluteAddress);sb.Append(cellRefFrom.FormatAsString());if (!cellRefFrom.Equals(cellRefTo) || IsFullColumnRange() || IsFullRowRange()) {sb.Append(':');sb.Append(cellRefTo.FormatAsString());}return sb.ToString();}
public byte this[int index] { get { throw new ReadOnlyBufferException(); } }
public void Mode(int m){_mode = m;}
public short[] slice(){return new ReadWriteShortArrayBuffer(remaining(), backingArray, offset + position);}
public void set(int index, long n) { if (count < index) throw new System.ArgumentOutOfRangeException(nameof(index), "Index is out of range."); else if (count == index) add(n); else entries[index] = n; }
public MemoryStream PutFloat(float value){throw new ReadOnlyCollectionException();}
public static double Max(double[] values) {double max = double.NegativeInfinity;foreach (double value in values) {max = Math.Max(max, value);}return max;}
public UpdateRepoWebhookRequest(){base("cr", "2016-06-07", "UpdateRepoWebhook", "cr");withUriPattern("/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]");withMethod(MethodType.POST);}
public DeleteAttributesRequest(String domainName, String itemName, List<Attribute> attributes, UpdateCondition expected) {SetDomainName(domainName);SetItemName(itemName);SetAttributes(attributes);SetExpected(expected);}
public string ToString() {var sb = new StringBuilder();sb.Append("[SXPI]\n");for (int i = 0; i < _fieldInfos.Length; i++) {sb.Append("    item[").Append(i).Append("]=");_fieldInfos[i].AppendDebugInfo(sb);sb.Append('\n');}sb.Append("[/SXPI]\n");return sb.ToString();}
public bool IsSuccessful() {if (mergeResult != null)return mergeResult.GetMergeStatus().IsSuccessful();else if (rebaseResult != null)return rebaseResult.GetStatus().IsSuccessful();return true;}
public void SetBytesValue(byte[] value){SetBytesValue(new BytesRef(value));}
public virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeConnectionsResponse>(request, options);}
public DeletePhotosRequest() : base("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto"){SetProtocol(ProtocolType.HTTPS);}
public void Add(E object) { iterator.Add(object); subList.SizeChanged(true); end++; }
public static ByteBuffer Allocate(int capacity){if (capacity < 0){throw new ArgumentException();}return new ReadWriteHeapByteBuffer(capacity);}
public SrndQuery GetSubQuery(int qn) { return queries[qn]; }
public float CurrentScore(int docId, string field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {if (numPayloadsSeen == 0) {return currentPayloadScore;} else {return Math.Min(currentPayloadScore, currentScore);}}
public string ToString(){StringBuilder sb = new StringBuilder();sb.Append("[BLANK]\n");sb.Append("    row= ").Append(HexDump.ShortToHex(GetRow())).Append("\n");sb.Append("    col= ").Append(HexDump.ShortToHex(GetColumn())).Append("\n");sb.Append("    xf = ").Append(HexDump.ShortToHex(GetXFIndex())).Append("\n");sb.Append("[/BLANK]\n");return sb.ToString();}
public virtual DescribeLogPatternResult DescribeLogPattern(DescribeLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;return Invoke<DescribeLogPatternResult>(request, options);}
public virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);}
public virtual GetPhoneNumberSettingsResult GetPhoneNumberSettings(GetPhoneNumberSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;return Invoke<GetPhoneNumberSettingsResult>(request, options);}
public Object Data { get { return data; } }
public bool isDirect(){return false;}
public DeleteServerCertificateRequest(string serverCertificateName){SetServerCertificateName(serverCertificateName);}
public StringBuilder Append(double d){RealToString.GetInstance().AppendDouble(this, d);return this;}
public virtual GetEvaluationResult GetEvaluation(GetEvaluationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEvaluationResultUnmarshaller.Instance;return Invoke<GetEvaluationResult>(request, options);}
public LinkedDataRecord GetDataName(){return dataName;}
public bool Find(int start) {findPos = start;if (findPos < regionStart) {findPos = regionStart;} else if (findPos >= regionEnd) {matchFound = false;return false;}matchFound = FindImpl(address, input, findPos, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}
public virtual GetLifecyclePolicyPreviewResponse GetLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance;return Invoke<GetLifecyclePolicyPreviewResponse>(request, options);}
public SinglePositionTokenStream(string word) {termAtt = addAttribute<CharTermAttribute>();posIncrAtt = addAttribute<PositionIncrementAttribute>();this.word = word;returned = true;}
public void serialize(LittleEndianOutput out) {out.writeShort(this.field_1_print_gridlines);}
public string ToString() {StringBuilder s = new StringBuilder();s.Append(Constants.TypeString(GetType()));s.Append(' ');s.Append(Name());s.Append(' ');s.Append(CommitTime);s.Append(' ');AppendCoreFlags(s);return s.ToString();}
public LsRemoteCommand SetRemote(string remote) { CheckCallable(); this.remote = remote; return this; }
public void CollapseRow(int rowNumber) {int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int nextRowIx = WriteHidden(rowRecord, startRow);RowRecord row = GetRow(nextRowIx);if (row == null) {row = CreateRow(nextRowIx);InsertRow(row);}row.SetCollapsed(true);}
public virtual AssociateSkillGroupWithRoomResponse AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;return Invoke<AssociateSkillGroupWithRoomResponse>(request, options);}
public string ToString() {StringBuilder buffer = new StringBuilder();buffer.Append("[SERIESLIST]\n");buffer.Append("    .seriesNumbers= ").Append(" (").Append( string.Join(", ", getSeriesNumbers()) ).Append(" )");buffer.Append("\n");buffer.Append("[/SERIESLIST]\n");return buffer.ToString();}
public QueryConfigHandler GetQueryConfigHandler(){return this.queryConfig;}
public string GetClassArg() {if (originalArgs != null) {string className = originalArgs.Get(CLASS_NAME);if (className != null) {return className;}}return this.GetType().Name;}
